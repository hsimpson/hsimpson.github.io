{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@fortawesome/fontawesome-svg-core/index.js","thirdparty.js","node_modules/@fortawesome/free-solid-svg-icons/index.js","node_modules/three/examples/js/lines/Line2.js","node_modules/three/examples/js/lines/LineGeometry.js","node_modules/three/examples/js/lines/LineMaterial.js","node_modules/three/examples/js/lines/LineSegments2.js","node_modules/three/examples/js/lines/LineSegmentsGeometry.js","node_modules/three/examples/js/controls/TrackballControls.js","node_modules/three/examples/js/lines/WireframeGeometry2.js","node_modules/three/examples/js/lines/Wireframe.js","node_modules/jquery/dist/jquery.min.js","libs/three.js","node_modules/vanilla-picker/dist/vanilla-picker.js"],"names":["require","r","e","n","t","o","i","f","c","u","a","Error","code","p","exports","call","length","@fortawesome/fontawesome-svg-core","module","global","factory","define","amd","this","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_defineProperty","value","_objectSpread","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","_iterableToArrayLimit","TypeError","_nonIterableRest","_toConsumableArray","arr2","_arrayWithoutHoles","iter","toString","from","_iterableToArray","_nonIterableSpread","noop","_WINDOW","_DOCUMENT","_MUTATION_OBSERVER","_PERFORMANCE","mark","measure","window","document","MutationObserver","performance","_ref$userAgent","navigator","userAgent","WINDOW","DOCUMENT","MUTATION_OBSERVER","PERFORMANCE","IS_DOM","documentElement","head","addEventListener","createElement","IS_IE","indexOf","UNITS_IN_GRID","DEFAULT_FAMILY_PREFIX","DEFAULT_REPLACEMENT_CLASS","DATA_FA_I2SVG","DATA_FA_PSEUDO_ELEMENT","DATA_FA_PSEUDO_ELEMENT_PENDING","DATA_PREFIX","DATA_ICON","HTML_CLASS_I2SVG_BASE_CLASS","MUTATION_APPROACH_ASYNC","TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS","PRODUCTION","process","env","NODE_ENV","PREFIX_TO_STYLE","fas","far","fal","fab","fa","STYLE_TO_PREFIX","solid","regular","light","brands","LAYERS_TEXT_CLASSNAME","FONT_FAMILY_PATTERN","FONT_WEIGHT_TO_PREFIX","900","400","normal","300","oneToTen","oneToTwenty","ATTRIBUTES_WATCHED_FOR_MUTATION","RESERVED_CLASSES","map","initial","FontAwesomeConfig","querySelector","_ref","_ref2","attr","val","coerce","element","getAttribute","getAttrConfig","_config","familyPrefix","replacementClass","autoReplaceSvg","autoAddCss","autoA11y","searchPseudoElements","observeMutations","mutateApproach","keepOriginalSource","measurePerformance","showMissingIcons","config","w","styles","hooks","shims","namespace","functions","loaded","doScroll","test","readyState","listener","removeEventListener","fn","asyncTimer","PENDING","SETTLED","FULFILLED","REJECTED","NOOP","isNode","emit","asyncSetTimer","setImmediate","setTimeout","asyncQueue","asyncFlush","asyncCall","callback","arg","invokeCallback","subscriber","owner","settled","_state","_data","promise","then","reject","handleThenable","resolve","resolved","fulfill","reason","publishFulfillment","publishRejection","publish","_then","_handled","notifyRejectionHandled","P","resolver","rejectPromise","invokeResolver","onFulfillment","onRejection","fulfilled","rejected","catch","all","promises","results","remaining","index","race","picked","Promise","d","meaninglessTransform","size","x","y","rotate","flipX","flipY","insertCss","css","style","setAttribute","innerHTML","headChildren","childNodes","beforeChild","child","tagName","toUpperCase","insertBefore","idPool","nextUniqueId","id","Math","random","toArray","array","classArray","node","classList","split","getIconName","cls","name","parts","prefix","iconName","slice","join","htmlEscape","str","replace","joinStyles","reduce","acc","styleName","transformIsMeaningful","transform","transformForSvg","containerWidth","iconWidth","outer","innerTranslate","innerScale","innerRotate","inner","path","ALL_SPACE","width","height","makeInlineSvgAbstract","params","_params$icons","icons","main","mask","symbol","title","extra","_params$watchable","watchable","found","widthClass","ceil","attrClass","classes","content","children","attributes","data-prefix","data-icon","class","role","xmlns","viewBox","tag","args","mainWidth","mainPath","icon","maskWidth","maskPath","trans","maskRect","fill","maskInnerGroup","maskOuterGroup","maskId","clipId","defs","maskUnits","maskContentUnits","clip-path","makeIconMasking","styleString","makeIconStandard","asSymbol","offset","transform-origin","asIcon","makeLayersTextAbstract","_params$watchable2","_ref2$width","_ref2$height","_ref2$startCentered","startCentered","transformForCss","noop$1","end","perf","begin","subject","initialValue","thisContext","result","func","b","bindInternal4","_byUnicode","_byLigature","_byOldName","build","lookup","reducer","ligatures","ligature","hasRegular","shim","oldName","byUnicode","unicode","styles$1","emptyCanonicalIcon","rest","getCanonicalIcon","values","autoFetchSvg","iconFromMapping","mapping","toHtml","abstractNodes","_abstractNodes$attrib","_abstractNodes$childr","attributeName","trim","joinAttributes","noop$2","isWatched","mutators","mutation","newOuterHTML","parentNode","outerHTML","toLowerCase","newNode","replaceChild","nest","abstract","forSvg","RegExp","splitClasses","match","toSvg","toNode","newInnerHTML","performOperationSync","op","perform","mutations","callbackFunction","frame","requestAnimationFrame","mutator","disabled","enableObservation","mo","toHex","charCodeAt","classParser","existingPrefix","existingIconName","innerText","parseTransformString","transformString","first","parseFloat","isNaN","parseMeta","_classParser","extraClasses","extraStyles","prop","styleParser","transformParser","symbolParser","extraAttributes","attributesParser","maskParser","MissingIcon","error","message","stack","create","FILL","ANIMATION_BASE","attributeType","repeatCount","dur","RING","OPACITY_ANIMATE","missing","cx","cy","opacity","styles$2","findIcon","styles$3","generateMutation","nodeMeta","computedFontSize","parseInt","getComputedStyle","fontSize","boundingClientRect","getBoundingClientRect","generateLayersText","generateSvgReplacementMutation","onTree","root","htmlClassList","hclAdd","suffix","add","hclRemove","remove","prefixes","prefixesDomQuery","candidates","querySelectorAll","console","resolvedMutations","onNode","replaceForPosition","position","pendingAttribute","alreadyProcessedPseudoElement","fontFamily","getPropertyValue","fontWeight","removeChild","substr","meta","firstChild","appendChild","removeAttribute","processable","operations","baseStyles","dfp","drc","fp","rc","s","dPatt","rPatt","prepIcon","ensureCss","_cssInserted","apiObject","abstractCreator","get","container","html","findIconDefinition","iconLookup","_iconLookup$prefix","library","definitions","Library","instance","Constructor","_classCallCheck","protoProps","staticProps","_this","_len","_key","additions","_pullDefinitions","defineIcons","_params$skipHooks","skipHooks","normalized","addPack","definition","0","_normalized$key","noAuto","disconnect","dom","i2svg","_params$node","_params$callback","watch","autoReplaceSvgRoot","observeMutationsRoot","autoReplace","options","treeCallback","nodeCallback","pseudoElementsCallback","_options$observeMutat","objects","mutationRecord","type","addedNodes","_getCanonicalIcon","observe","childList","characterData","subtree","parse","iconDefinition","_params$transform","_params$symbol","_params$mask","_params$title","_params$classes","_params$attributes","_params$styles","maybeIconDefinition","text","_params$transform2","_params$title2","_params$classes2","_params$attributes2","_params$styles2","counter","_params$title3","_params$classes3","_params$attributes3","_params$styles3","makeLayersCounterAbstract","layer","assembler","api","_params$autoReplaceSv","@fortawesome/free-solid-svg-icons","faAd","faAddressBook","faAddressCard","faAdjust","faAirFreshener","faAlignCenter","faAlignJustify","faAlignLeft","faAlignRight","faAllergies","faAmbulance","faAmericanSignLanguageInterpreting","faAnchor","faAngleDoubleDown","faAngleDoubleLeft","faAngleDoubleRight","faAngleDoubleUp","faAngleDown","faAngleLeft","faAngleRight","faAngleUp","faAngry","faAnkh","faAppleAlt","faArchive","faArchway","faArrowAltCircleDown","faArrowAltCircleLeft","faArrowAltCircleRight","faArrowAltCircleUp","faArrowCircleDown","faArrowCircleLeft","faArrowCircleRight","faArrowCircleUp","faArrowDown","faArrowLeft","faArrowRight","faArrowUp","faArrowsAlt","faArrowsAltH","faArrowsAltV","faAssistiveListeningSystems","faAsterisk","faAt","faAtlas","faAtom","faAudioDescription","faAward","faBaby","faBabyCarriage","faBackspace","faBackward","faBacon","faBalanceScale","faBan","faBandAid","faBarcode","faBars","faBaseballBall","faBasketballBall","faBath","faBatteryEmpty","faBatteryFull","faBatteryHalf","faBatteryQuarter","faBatteryThreeQuarters","faBed","faBeer","faBell","faBellSlash","faBezierCurve","faBible","faBicycle","faBinoculars","faBiohazard","faBirthdayCake","faBlender","faBlenderPhone","faBlind","faBlog","faBold","faBolt","faBomb","faBone","faBong","faBook","faBookDead","faBookMedical","faBookOpen","faBookReader","faBookmark","faBowlingBall","faBox","faBoxOpen","faBoxes","faBraille","faBrain","faBreadSlice","faBriefcase","faBriefcaseMedical","faBroadcastTower","faBroom","faBrush","faBug","faBuilding","faBullhorn","faBullseye","faBurn","faBus","faBusAlt","faBusinessTime","faCalculator","faCalendar","faCalendarAlt","faCalendarCheck","faCalendarDay","faCalendarMinus","faCalendarPlus","faCalendarTimes","faCalendarWeek","faCamera","faCameraRetro","faCampground","faCandyCane","faCannabis","faCapsules","faCar","faCarAlt","faCarBattery","faCarCrash","faCarSide","faCaretDown","faCaretLeft","faCaretRight","faCaretSquareDown","faCaretSquareLeft","faCaretSquareRight","faCaretSquareUp","faCaretUp","faCarrot","faCartArrowDown","faCartPlus","faCashRegister","faCat","faCertificate","faChair","faChalkboard","faChalkboardTeacher","faChargingStation","faChartArea","faChartBar","faChartLine","faChartPie","faCheck","faCheckCircle","faCheckDouble","faCheckSquare","faCheese","faChess","faChessBishop","faChessBoard","faChessKing","faChessKnight","faChessPawn","faChessQueen","faChessRook","faChevronCircleDown","faChevronCircleLeft","faChevronCircleRight","faChevronCircleUp","faChevronDown","faChevronLeft","faChevronRight","faChevronUp","faChild","faChurch","faCircle","faCircleNotch","faCity","faClinicMedical","faClipboard","faClipboardCheck","faClipboardList","faClock","faClone","faClosedCaptioning","faCloud","faCloudDownloadAlt","faCloudMeatball","faCloudMoon","faCloudMoonRain","faCloudRain","faCloudShowersHeavy","faCloudSun","faCloudSunRain","faCloudUploadAlt","faCocktail","faCode","faCodeBranch","faCoffee","faCog","faCogs","faCoins","faColumns","faComment","faCommentAlt","faCommentDollar","faCommentDots","faCommentMedical","faCommentSlash","faComments","faCommentsDollar","faCompactDisc","faCompass","faCompress","faCompressArrowsAlt","faConciergeBell","faCookie","faCookieBite","faCopy","faCopyright","faCouch","faCreditCard","faCrop","faCropAlt","faCross","faCrosshairs","faCrow","faCrown","faCrutch","faCube","faCubes","faCut","faDatabase","faDeaf","faDemocrat","faDesktop","faDharmachakra","faDiagnoses","faDice","faDiceD20","faDiceD6","faDiceFive","faDiceFour","faDiceOne","faDiceSix","faDiceThree","faDiceTwo","faDigitalTachograph","faDirections","faDivide","faDizzy","faDna","faDog","faDollarSign","faDolly","faDollyFlatbed","faDonate","faDoorClosed","faDoorOpen","faDotCircle","faDove","faDownload","faDraftingCompass","faDragon","faDrawPolygon","faDrum","faDrumSteelpan","faDrumstickBite","faDumbbell","faDumpster","faDumpsterFire","faDungeon","faEdit","faEgg","faEject","faEllipsisH","faEllipsisV","faEnvelope","faEnvelopeOpen","faEnvelopeOpenText","faEnvelopeSquare","faEquals","faEraser","faEthernet","faEuroSign","faExchangeAlt","faExclamation","faExclamationCircle","faExclamationTriangle","faExpand","faExpandArrowsAlt","faExternalLinkAlt","faExternalLinkSquareAlt","faEye","faEyeDropper","faEyeSlash","faFastBackward","faFastForward","faFax","faFeather","faFeatherAlt","faFemale","faFighterJet","faFile","faFileAlt","faFileArchive","faFileAudio","faFileCode","faFileContract","faFileCsv","faFileDownload","faFileExcel","faFileExport","faFileImage","faFileImport","faFileInvoice","faFileInvoiceDollar","faFileMedical","faFileMedicalAlt","faFilePdf","faFilePowerpoint","faFilePrescription","faFileSignature","faFileUpload","faFileVideo","faFileWord","faFill","faFillDrip","faFilm","faFilter","faFingerprint","faFire","faFireAlt","faFireExtinguisher","faFirstAid","faFish","faFistRaised","faFlag","faFlagCheckered","faFlagUsa","faFlask","faFlushed","faFolder","faFolderMinus","faFolderOpen","faFolderPlus","faFont","faFontAwesomeLogoFull","faFootballBall","faForward","faFrog","faFrown","faFrownOpen","faFunnelDollar","faFutbol","faGamepad","faGasPump","faGavel","faGem","faGenderless","faGhost","faGift","faGifts","faGlassCheers","faGlassMartini","faGlassMartiniAlt","faGlassWhiskey","faGlasses","faGlobe","faGlobeAfrica","faGlobeAmericas","faGlobeAsia","faGlobeEurope","faGolfBall","faGopuram","faGraduationCap","faGreaterThan","faGreaterThanEqual","faGrimace","faGrin","faGrinAlt","faGrinBeam","faGrinBeamSweat","faGrinHearts","faGrinSquint","faGrinSquintTears","faGrinStars","faGrinTears","faGrinTongue","faGrinTongueSquint","faGrinTongueWink","faGrinWink","faGripHorizontal","faGripLines","faGripLinesVertical","faGripVertical","faGuitar","faHSquare","faHamburger","faHammer","faHamsa","faHandHolding","faHandHoldingHeart","faHandHoldingUsd","faHandLizard","faHandMiddleFinger","faHandPaper","faHandPeace","faHandPointDown","faHandPointLeft","faHandPointRight","faHandPointUp","faHandPointer","faHandRock","faHandScissors","faHandSpock","faHands","faHandsHelping","faHandshake","faHanukiah","faHardHat","faHashtag","faHatWizard","faHaykal","faHdd","faHeading","faHeadphones","faHeadphonesAlt","faHeadset","faHeart","faHeartBroken","faHeartbeat","faHelicopter","faHighlighter","faHiking","faHippo","faHistory","faHockeyPuck","faHollyBerry","faHome","faHorse","faHorseHead","faHospital","faHospitalAlt","faHospitalSymbol","faHotTub","faHotdog","faHotel","faHourglass","faHourglassEnd","faHourglassHalf","faHourglassStart","faHouseDamage","faHryvnia","faICursor","faIceCream","faIcicles","faIdBadge","faIdCard","faIdCardAlt","faIgloo","faImage","faImages","faInbox","faIndent","faIndustry","faInfinity","faInfo","faInfoCircle","faItalic","faJedi","faJoint","faJournalWhills","faKaaba","faKey","faKeyboard","faKhanda","faKiss","faKissBeam","faKissWinkHeart","faKiwiBird","faLandmark","faLanguage","faLaptop","faLaptopCode","faLaptopMedical","faLaugh","faLaughBeam","faLaughSquint","faLaughWink","faLayerGroup","faLeaf","faLemon","faLessThan","faLessThanEqual","faLevelDownAlt","faLevelUpAlt","faLifeRing","faLightbulb","faLink","faLiraSign","faList","faListAlt","faListOl","faListUl","faLocationArrow","faLock","faLockOpen","faLongArrowAltDown","faLongArrowAltLeft","faLongArrowAltRight","faLongArrowAltUp","faLowVision","faLuggageCart","faMagic","faMagnet","faMailBulk","faMale","faMap","faMapMarked","faMapMarkedAlt","faMapMarker","faMapMarkerAlt","faMapPin","faMapSigns","faMarker","faMars","faMarsDouble","faMarsStroke","faMarsStrokeH","faMarsStrokeV","faMask","faMedal","faMedkit","faMeh","faMehBlank","faMehRollingEyes","faMemory","faMenorah","faMercury","faMeteor","faMicrochip","faMicrophone","faMicrophoneAlt","faMicrophoneAltSlash","faMicrophoneSlash","faMicroscope","faMinus","faMinusCircle","faMinusSquare","faMitten","faMobile","faMobileAlt","faMoneyBill","faMoneyBillAlt","faMoneyBillWave","faMoneyBillWaveAlt","faMoneyCheck","faMoneyCheckAlt","faMonument","faMoon","faMortarPestle","faMosque","faMotorcycle","faMountain","faMousePointer","faMugHot","faMusic","faNetworkWired","faNeuter","faNewspaper","faNotEqual","faNotesMedical","faObjectGroup","faObjectUngroup","faOilCan","faOm","faOtter","faOutdent","faPager","faPaintBrush","faPaintRoller","faPalette","faPallet","faPaperPlane","faPaperclip","faParachuteBox","faParagraph","faParking","faPassport","faPastafarianism","faPaste","faPause","faPauseCircle","faPaw","faPeace","faPen","faPenAlt","faPenFancy","faPenNib","faPenSquare","faPencilAlt","faPencilRuler","faPeopleCarry","faPepperHot","faPercent","faPercentage","faPersonBooth","faPhone","faPhoneSlash","faPhoneSquare","faPhoneVolume","faPiggyBank","faPills","faPizzaSlice","faPlaceOfWorship","faPlane","faPlaneArrival","faPlaneDeparture","faPlay","faPlayCircle","faPlug","faPlus","faPlusCircle","faPlusSquare","faPodcast","faPoll","faPollH","faPoo","faPooStorm","faPoop","faPortrait","faPoundSign","faPowerOff","faPray","faPrayingHands","faPrescription","faPrescriptionBottle","faPrescriptionBottleAlt","faPrint","faProcedures","faProjectDiagram","faPuzzlePiece","faQrcode","faQuestion","faQuestionCircle","faQuidditch","faQuoteLeft","faQuoteRight","faQuran","faRadiation","faRadiationAlt","faRainbow","faRandom","faReceipt","faRecycle","faRedo","faRedoAlt","faRegistered","faReply","faReplyAll","faRepublican","faRestroom","faRetweet","faRibbon","faRing","faRoad","faRobot","faRocket","faRoute","faRss","faRssSquare","faRubleSign","faRuler","faRulerCombined","faRulerHorizontal","faRulerVertical","faRunning","faRupeeSign","faSadCry","faSadTear","faSatellite","faSatelliteDish","faSave","faSchool","faScrewdriver","faScroll","faSdCard","faSearch","faSearchDollar","faSearchLocation","faSearchMinus","faSearchPlus","faSeedling","faServer","faShapes","faShare","faShareAlt","faShareAltSquare","faShareSquare","faShekelSign","faShieldAlt","faShip","faShippingFast","faShoePrints","faShoppingBag","faShoppingBasket","faShoppingCart","faShower","faShuttleVan","faSign","faSignInAlt","faSignLanguage","faSignOutAlt","faSignal","faSignature","faSimCard","faSitemap","faSkating","faSkiing","faSkiingNordic","faSkull","faSkullCrossbones","faSlash","faSleigh","faSlidersH","faSmile","faSmileBeam","faSmileWink","faSmog","faSmoking","faSmokingBan","faSms","faSnowboarding","faSnowflake","faSnowman","faSnowplow","faSocks","faSolarPanel","faSort","faSortAlphaDown","faSortAlphaUp","faSortAmountDown","faSortAmountUp","faSortDown","faSortNumericDown","faSortNumericUp","faSortUp","faSpa","faSpaceShuttle","faSpider","faSpinner","faSplotch","faSprayCan","faSquare","faSquareFull","faSquareRootAlt","faStamp","faStar","faStarAndCrescent","faStarHalf","faStarHalfAlt","faStarOfDavid","faStarOfLife","faStepBackward","faStepForward","faStethoscope","faStickyNote","faStop","faStopCircle","faStopwatch","faStore","faStoreAlt","faStream","faStreetView","faStrikethrough","faStroopwafel","faSubscript","faSubway","faSuitcase","faSuitcaseRolling","faSun","faSuperscript","faSurprise","faSwatchbook","faSwimmer","faSwimmingPool","faSynagogue","faSync","faSyncAlt","faSyringe","faTable","faTableTennis","faTablet","faTabletAlt","faTablets","faTachometerAlt","faTag","faTags","faTape","faTasks","faTaxi","faTeeth","faTeethOpen","faTemperatureHigh","faTemperatureLow","faTenge","faTerminal","faTextHeight","faTextWidth","faTh","faThLarge","faThList","faTheaterMasks","faThermometer","faThermometerEmpty","faThermometerFull","faThermometerHalf","faThermometerQuarter","faThermometerThreeQuarters","faThumbsDown","faThumbsUp","faThumbtack","faTicketAlt","faTimes","faTimesCircle","faTint","faTintSlash","faTired","faToggleOff","faToggleOn","faToilet","faToiletPaper","faToolbox","faTools","faTooth","faTorah","faToriiGate","faTractor","faTrademark","faTrafficLight","faTrain","faTram","faTransgender","faTransgenderAlt","faTrash","faTrashAlt","faTrashRestore","faTrashRestoreAlt","faTree","faTrophy","faTruck","faTruckLoading","faTruckMonster","faTruckMoving","faTruckPickup","faTshirt","faTty","faTv","faUmbrella","faUmbrellaBeach","faUnderline","faUndo","faUndoAlt","faUniversalAccess","faUniversity","faUnlink","faUnlock","faUnlockAlt","faUpload","faUser","faUserAlt","faUserAltSlash","faUserAstronaut","faUserCheck","faUserCircle","faUserClock","faUserCog","faUserEdit","faUserFriends","faUserGraduate","faUserInjured","faUserLock","faUserMd","faUserMinus","faUserNinja","faUserNurse","faUserPlus","faUserSecret","faUserShield","faUserSlash","faUserTag","faUserTie","faUserTimes","faUsers","faUsersCog","faUtensilSpoon","faUtensils","faVectorSquare","faVenus","faVenusDouble","faVenusMars","faVial","faVials","faVideo","faVideoSlash","faVihara","faVolleyballBall","faVolumeDown","faVolumeMute","faVolumeOff","faVolumeUp","faVoteYea","faVrCardboard","faWalking","faWallet","faWarehouse","faWater","faWaveSquare","faWeight","faWeightHanging","faWheelchair","faWifi","faWind","faWindowClose","faWindowMaximize","faWindowMinimize","faWindowRestore","faWineBottle","faWineGlass","faWineGlassAlt","faWonSign","faWrench","faXRay","faYenSign","faYinYang","_iconsCache","THREE.Line2","THREE","Line2","geometry","material","LineSegments2","LineGeometry","LineMaterial","color","assign","isLine2","copy","THREE.LineGeometry","LineSegmentsGeometry","isLineGeometry","setPositions","points","Float32Array","setColors","colors","fromLine","line","isGeometry","vertices","isBufferGeometry","THREE.LineMaterial","UniformsLib","linewidth","resolution","Vector2","dashScale","dashSize","gapSize","ShaderLib","uniforms","UniformsUtils","merge","common","fog","vertexShader","fragmentShader","parameters","ShaderMaterial","clone","dashed","defineProperties","diffuse","set","setValues","isLineMaterial","THREE.LineSegments2","start","Mesh","isLineSegments2","computeLineDistances","Vector3","instanceStart","instanceEnd","lineDistances","data","count","j","l","fromBufferAttribute","distanceTo","instanceDistanceBuffer","InstancedInterleavedBuffer","addAttribute","InterleavedBufferAttribute","THREE.LineSegmentsGeometry","vector","box","InstancedBufferGeometry","BufferGeometry","setIndex","Float32BufferAttribute","isLineSegmentsGeometry","applyMatrix","matrix","applyToBufferAttribute","needsUpdate","boundingBox","computeBoundingBox","boundingSphere","computeBoundingSphere","lineSegments","instanceBuffer","instanceColorBuffer","fromWireframeGeometry","fromEdgesGeometry","fromMesh","mesh","WireframeGeometry","fromLineSegements","Box3","setFromBufferAttribute","union","Sphere","center","getCenter","maxRadiusSq","il","max","distanceToSquared","radius","sqrt","toJSON","THREE.TrackballControls","TrackballControls","object","domElement","STATE","NONE","ROTATE","ZOOM","PAN","TOUCH_ROTATE","TOUCH_ZOOM_PAN","enabled","screen","left","top","rotateSpeed","zoomSpeed","panSpeed","noRotate","noZoom","noPan","staticMoving","dynamicDampingFactor","minDistance","maxDistance","Infinity","lastPosition","_prevState","_eye","_movePrev","_moveCurr","_lastAxis","_lastAngle","_zoomStart","_zoomEnd","_touchZoomDistanceStart","_touchZoomDistanceEnd","_panStart","_panEnd","target0","position0","up0","up","changeEvent","startEvent","endEvent","handleResize","innerWidth","innerHeight","ownerDocument","pageXOffset","clientLeft","pageYOffset","clientTop","angle","axis","quaternion","eyeDirection","objectUpDirection","objectSidewaysDirection","moveDirection","mouseChange","objectUp","pan","getMouseOnScreen","pageX","pageY","getMouseOnCircle","keydown","event","keyCode","keyup","mousedown","preventDefault","stopPropagation","button","mousemove","mouseup","dispatchEvent","mousewheel","deltaMode","deltaY","touchstart","touches","dx","dy","touchmove","touchend","contextmenu","rotateCamera","Quaternion","sub","normalize","crossVectors","setLength","setFromAxisAngle","applyQuaternion","zoomCamera","factor","multiplyScalar","panCamera","lengthSq","cross","subVectors","checkDistances","addVectors","update","lookAt","reset","dispose","EventDispatcher","THREE.WireframeGeometry2","WireframeGeometry2","isWireframeGeometry2","THREE.Wireframe","Wireframe","isWireframe","jquery","C","E","getPrototypeOf","g","v","hasOwnProperty","m","nodeType","src","nonce","noModule","k","init","pushStack","prevObject","each","apply","eq","last","sort","splice","extend","isPlainObject","expando","isReady","isEmptyObject","globalEval","makeArray","inArray","grep","guid","support","h","T","Date","S","ue","A","N","D","q","pop","L","H","O","R","M","I","W","$","F","B","_","z","U","X","V","G","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","Y","Q","J","K","Z","ee","te","ne","String","fromCharCode","re","ie","oe","ae","be","nodeName","dir","se","exec","getElementById","getElementsByTagName","getElementsByClassName","qsa","xe","ye","cacheLength","shift","le","ce","fe","attrHandle","pe","sourceIndex","nextSibling","de","he","ge","isDisabled","ve","isXML","namespaceURI","setDocument","defaultView","attachEvent","className","createComment","getById","getElementsByName","find","getAttributeNode","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","contains","sortDetached","unshift","specified","escape","uniqueSort","detectDuplicates","sortStable","getText","textContent","nodeValue","selectors","createPseudo","relative",">"," ","+","~","preFilter","lastChild","uniqueID","pseudos","setFilters","not","has","lang","location","hash","focus","activeElement","hasFocus","href","tabIndex","checked","selected","selectedIndex","empty","parent","header","input","even","odd","lt","gt","nth","radio","checkbox","file","password","image","submit","me","we","Te","Ce","Ee","filters","tokenize","compile","selector","select","defaultValue","expr","unique","isXMLDoc","escapeSelector","is","parseHTML","ready","contents","prev","closest","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","siblings","contentDocument","reverse","fail","Callbacks","once","stopOnFalse","memory","disable","lock","locked","fireWith","fire","fired","Deferred","state","always","pipe","progress","notify","notifyWith","resolveWith","exceptionHook","stackTrace","rejectWith","getStackHook","when","warn","readyException","readyWait","uid","cache","access","hasData","JSON","removeData","_removeData","queue","dequeue","_queueHooks","stop","clearQueue","composed","attachShadow","getRootNode","display","cur","cssNumber","unit","body","show","hide","toggle","option","thead","col","tr","td","_default","optgroup","tbody","tfoot","colgroup","caption","th","createDocumentFragment","htmlPrefilter","createTextNode","checkClone","cloneNode","noCloneChecked","ke","Se","Ae","Ne","off","De","handler","isTrigger","special","delegateType","stopImmediatePropagation","trigger","Event","events","handle","triggered","dispatch","bindType","origType","delegateCount","setup","teardown","removeEvent","fix","delegateTarget","preDispatch","handlers","isPropagationStopped","currentTarget","elem","isImmediatePropagationStopped","rnamespace","handleObj","postDispatch","addProp","originalEvent","load","noBubble","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","now","isSimulated","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","shiftKey","view","char","charCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","which","blur","mouseenter","mouseleave","pointerenter","pointerleave","on","one","je","qe","Le","He","Oe","Pe","Re","Me","Ie","_evalUrl","We","cleanData","detach","append","prepend","before","after","replaceWith","appendTo","prependTo","insertAfter","replaceAll","$e","Fe","opener","Be","pixelBoxStyles","minWidth","maxWidth","ze","cssText","marginLeft","right","offsetWidth","round","backgroundClip","clearCloneStyle","boxSizingReliable","pixelPosition","reliableMarginLeft","scrollboxSize","Ue","Xe","Ve","Ge","cssProps","Ye","Qe","Je","visibility","Ke","letterSpacing","Ze","et","tt","getClientRects","nt","cssHooks","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","gridArea","gridColumn","gridColumnEnd","gridColumnStart","gridRow","gridRowEnd","gridRowStart","lineHeight","order","orphans","widows","zIndex","zoom","setProperty","isFinite","margin","padding","border","expand","Tween","easing","propHooks","run","duration","pos","step","fx","scrollTop","scrollLeft","linear","swing","cos","PI","rt","it","ot","at","st","ut","hidden","interval","tick","ct","ft","pt","dt","tweeners","prefilters","startTime","tweens","opts","specialEasing","originalProperties","originalOptions","createTween","bind","complete","timer","anim","Animation","*","tweener","unqueued","overflow","overflowX","overflowY","prefilter","speed","speeds","old","fadeTo","animate","finish","timers","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","clearTimeout","checkOn","optSelected","radioValue","ht","removeAttr","attrHooks","vt","yt","mt","xt","bt","removeProp","propFix","for","addClass","removeClass","toggleClass","hasClass","wt","valHooks","focusin","Tt","Ct","parentWindow","simulate","triggerHandler","Et","kt","St","parseXML","DOMParser","parseFromString","At","Nt","Dt","jt","qt","param","encodeURIComponent","serialize","serializeArray","Lt","Ht","Ot","Pt","Rt","Mt","It","Wt","$t","Ft","Bt","_t","dataTypes","zt","ajaxSettings","flatOptions","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","xml","json","responseFields","converters","* text","text html","text json","text xml","context","ajaxSetup","ajaxPrefilter","ajaxTransport","ajax","statusCode","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","mimeType","status","abort","method","dataType","crossDomain","host","traditional","hasContent","ifModified","headers","beforeSend","success","timeout","send","dataFilter","statusText","getJSON","getScript","text script","wrapAll","firstElementChild","wrapInner","wrap","unwrap","visible","offsetHeight","xhr","XMLHttpRequest","Ut","1223","Xt","cors","open","username","xhrFields","onload","onerror","onabort","ontimeout","onreadystatechange","responseType","responseText","binary","response","script","scriptAttrs","charset","scriptCharset","Vt","Gt","Yt","jsonp","jsonpCallback","createHTMLDocument","implementation","animated","setOffset","using","offsetParent","scrollTo","Height","Width","","hover","unbind","delegate","undelegate","proxy","holdReady","parseJSON","isFunction","isWindow","camelCase","isNumeric","Qt","jQuery","Jt","noConflict","three","Number","EPSILON","pow","isInteger","floor","sign","Function","output","nextKey","_listeners","listeners","hasEventListener","listenerArray","min","v1","_canvas","REVISION","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","ACESFilmicToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopRepeat","ZeroCurvatureEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","_Math","DEG2RAD","RAD2DEG","generateUUID","lut","d0","d1","d2","d3","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","log","LN2","floorPowerOfTwo","_x","_y","_z","_w","Matrix3","elements","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","addScalar","addScaledVector","subScalar","multiply","divide","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","manhattanLength","abs","atan2","manhattanDistanceTo","alpha","lerpVectors","v2","equals","fromArray","attribute","getX","getY","rotateAround","sin","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","sqrSin","len","tDir","onChangeCallback","isQuaternion","setFromEuler","euler","isEuler","c1","c2","c3","s1","s2","s3","halfAngle","setFromRotationMatrix","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","angleTo","acos","rotateTowards","inverse","conjugate","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","isVector3","setZ","multiplyVectors","applyEuler","applyAxisAngle","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","theta","dz","setFromSpherical","setFromSphericalCoords","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","getZ","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","setFromMatrix4","setXYZ","multiplyMatrices","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","getInverse","throwOnDegenerate","isMatrix4","t11","t12","t13","det","msg","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","rotation","scale","translate","closestPoint","sphere","zero","ImageUtils","getDataURL","canvas","HTMLCanvasElement","createElementNS","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","uuid","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","unpackAlignment","version","onUpdate","Vector4","WebGLRenderTarget","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLMultisampleRenderTarget","samples","WebGLRenderTargetCube","DataTexture","Plane","constant","Frustum","p0","p1","p2","p3","p4","p5","planes","Matrix4","isTexture","updateMatrix","isRootObject","textures","metadata","generator","images","transformUv","uv","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","xx","yy","zz","xy","xz","yz","getW","isWebGLRenderTarget","setSize","isWebGLMultisampleRenderTarget","isWebGLRenderTargetCube","isDataTexture","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromPoints","makeEmpty","expandByPoint","setFromCenterAndSize","halfSize","setFromObject","expandByObject","isEmpty","getSize","point","expandByVector","expandByScalar","scope","traverse","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","clampPoint","intersectsPlane","plane","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","triangle","distanceToPoint","getBoundingSphere","intersect","optionalCenter","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","direction","delta","denominator","intersectsLine","startSign","endSign","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","af","bf","cf","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","eye","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","x2","y2","z2","wx","wy","wz","decompose","invSX","invSY","invSZ","makePerspective","bottom","near","makeOrthographic","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","cloneUniforms","property","isColor","mergeUniforms","merged","hslA","hslB","hsl","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","handleAlpha","string","components","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpHSL","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","basic","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","matcap","totalSize","depth","background","t2D","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","isInterleavedBufferAttribute","deleteBuffer","buffer","delete","bufferType","usage","dynamic","createBuffer","bindBuffer","bufferData","onUploadCallback","Float64Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Int8Array","Uint8Array","bytesPerElement","BYTES_PER_ELEMENT","updateRange","bufferSubData","subarray","updateBuffer","Face3","materialIndex","vertexNormals","vertexColors","Euler","_order","DefaultOrder","Layers","physical","clearCoat","clearCoatRoughness","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","layers","q1","object3DId","Object3D","DefaultUp","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","isObject3D","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","updateWorldMatrix","isCamera","isLight","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","updateParents","updateChildren","geometries","materials","shapes","stringify","isMesh","drawMode","isLine","isPoints","shape","uuids","extractFromCache","recursive","geometryId","Geometry","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","BufferAttribute","itemSize","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float64BufferAttribute","DirectGeometry","normals","uvs","uvs2","groups","arrayMax","face","jl","fromBufferGeometry","indices","positions","uv2","addFace","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mergeVertices","verticesMap","changes","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","newUvs1","newUvs2","vertex","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","bufferGeometryId","morphAttributes","drawRange","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","getIndex","clearGroups","setDrawRange","tangent","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","morphAttributesPosition","morphAttribute","boxMorphTargets","pA","pB","pC","normalizeNormals","attributeArray1","attribute2","attributeArray2","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","attributeData","hasMorphAttributes","attributeArray","materialId","Material","blending","side","flatShading","vertexTangents","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","isMaterial","onBeforeCompile","newValue","currentValue","isRoot","emissiveIntensity","normalMapType","combine","sizeAttenuation","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","srcPlanes","dstPlanes","segCenter","segDir","barycoord","vab","vac","vbc","vap","vbp","vcp","default_vertex","default_fragment","defines","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","Ray","origin","Triangle","MeshBasicMaterial","updateMorphTargets","WebGLBackground","renderer","planeMesh","boxMesh","clearColor","clearAlpha","currentBackground","currentBackgroundVersion","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","render","renderList","scene","forceClear","vr","session","getSession","environmentBlendMode","autoClear","clear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","WebGLBufferRenderer","info","capabilities","mode","setMode","drawArrays","renderInstances","extension","isWebGL2","maxInstancedCount","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","_bufferGeometry","geometryAttributes","getWireframeAttribute","geometryIndex","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","programs","autoReset","instanceCount","absNumericalSort","WebGLMorphtargets","influencesList","morphInfluences","program","objectInfluences","morphTargetInfluences","influences","influence","getUniforms","setValue","WebGLObjects","updateList","CubeTexture","DataTexture2DArray","wrapR","DataTexture3D","isShaderMaterial","ray","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","uv1","uv3","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","d4","vc","d5","d6","vb","va","isMeshBasicMaterial","setDrawMode","morphTargetDictionary","ml","inverseMatrix","tempA","tempB","tempC","morphA","morphB","morphC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","checkIntersection","raycaster","checkBufferGeometryIntersection","morphPosition","intersection","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","uvs_f","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2f","uniform2fv","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4f","uniform4fv","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","updateCache","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","RePathPart","addUniform","uniformObject","parseUniform","pathLength","lastIndex","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","getShaderInfoLog","addLineNumbers","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getToneMappingFunction","toneMapping","toneMappingName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","rendererExtensions","envMapCubeUV","objectSpaceNormalMap","generateExtensions","customDefines","chunks","generateDefines","createProgram","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","outputEncoding","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","getError","diagnostics","deleteShader","getAttributes","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","bones","skeleton","nVertexUniforms","nVertexMatrices","allocateBones","currentRenderTarget","getRenderTarget","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","WebGLRenderLists","lists","onSceneDispose","list","cameras","UniformsCache","halfWidth","halfHeight","WebGLLights","stateID","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","shadowsLength","ambient","vector3","matrix42","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","WebGLShadowMap","_renderer","_objects","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","1","2","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","renderBufferDirect","autoUpdate","faceCount","setBlending","setTest","setScissorTest","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMatrix","setRenderTarget","vpDimensions","WebGLState","utils","colorBuffer","currentColorMask","currentColorClear","setMask","colorMask","setLocked","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","enabledCapabilities","compressedTextureFormats","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","blendEquationSeparate","convert","blendFuncSeparate","blendFunc","setFlipSided","frontFace","setCullFace","cullFace","setPolygonOffset","activeTexture","webglSlot","initAttributes","enableAttribute","disableUnusedAttributes","disableVertexAttribArray","getCompressedTextureFormats","formats","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","webglTexture","boundTexture","compressedTexImage2D","texImage3D","WebGLTextures","_gl","_videoTextures","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","HTMLImageElement","ImageBitmap","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","internalFormat","filterFallback","onTextureDispose","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","glInternalFormat","setTextureParameters","mipmap","setTextureCubeDynamic","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","createFramebuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","Group","Camera","PerspectiveCamera","fov","aspect","filmGauge","filmOffset","ArrayCamera","isMeshDepthMaterial","isGroup","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","clearViewOffset","skew","isArrayCamera","matrixPosition","offsetMatrix","identityMatrix","cameraLPos","cameraRPos","setProjectionFromUnion","cameraL","cameraR","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","WebVRManager","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","framebufferScaleFactor","frameOfReferenceType","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","bounds","cameraVR","isPresenting","currentPixelRatio","currentSize","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","animation","triggers","findGamepad","gamepads","getGamepads","gamepad","startsWith","getController","controller","getDevice","setDevice","setFramebufferScaleFactor","setFrameOfReferenceType","setPoseTarget","getCamera","userHeight","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","pose","poseObject","orientation","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","leftBounds","rightBounds","hasPosition","buttonId","pressed","updateControllers","getStandingMatrix","submitFrame","WebXRManager","frameOfReference","inputSources","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","updateCamera","XRDevice","setCompatibleXRDevice","setSession","baseLayer","XRWebGLLayer","requestFrameOfReference","getInputSources","onAnimationFrameCallback","getDevicePose","views","getViewport","getViewMatrix","inputPose","getInputPose","targetRay","transformMatrix","pointerMatrix","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","sortObjects","toneMappingExposure","toneMappingWhitePoint","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","_isContextLost","_framebuffer","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","rangeMin","rangeMax","initGLContext","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","vertexAttribPointer","normalArray","uvArray","colorArray","setProgram","updateBuffers","rangeFactor","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","initMaterial","renderObjects","overrideMaterial","camera2","isImmediateRenderObject","renderObjectImmediate","materialProperties","lightsHash","lightsStateHash","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","isFog","density","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsPhong","refreshUniformsToon","isMeshPhysicalMaterial","refreshUniformsStandard","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","projectObject","opaqueObjects","transparentObjects","activeCubeFace","activeMipMapLevel","readRenderTargetPixels","restore","textureFormat","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","Scene","InterleavedBuffer","interleavedBuffer","Sprite","LOD","levels","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","Skeleton","boneInverses","calculateInverses","Bone","linecap","linejoin","Line","LineSegments","LineLoop","Points","VideoTexture","video","CompressedTexture","CanvasTexture","DepthTexture","ol","edge","edges","ParametricGeometry","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","appplyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","generateSegment","getPointAt","generateIndices","generateBufferData","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","isScene","isInterleavedBuffer","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","isLOD","addLevel","getObjectForDistance","normalizeSkinWeights","skinWeight","bone","isBone","getBoneByName","positionAttribute","linePrecision","localPrecision","localPrecisionSq","vStart","vEnd","interSegment","interRay","nbVertices","threshold","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","sum","signedArea","insertNode","removeNode","again","area","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","q2","Node","an","bp","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","ahole","hl","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","scalePt2","vec","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","uOffset","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","toJSON$1","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","STANDARD","PHYSICAL","TOON","MATCAP","Materials","AnimationUtils","arraySlice","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","tracks","resetDuration","parseKeyframeTrack","trackType","typeName","getTrackTypeForValueTypeName","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","track","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","timeOffset","timeScale","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","Cache","files","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","DefaultLoadingManager","loading","FileLoader","manager","AnimationLoader","CompressedTextureLoader","_parser","DataTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","cached","dataUriRegexResult","isBase64","decodeURIComponent","atob","Blob","parser","request","callbacks","withCredentials","requestHeader","setPath","setResponseType","setWithCredentials","setMimeType","loader","loadTexture","texDatas","mipmapCount","isCubemap","texData","crossOrigin","onImageLoad","onImageError","setCrossOrigin","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","mat","MAX_VALUE","tz","fromJSON","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","v3","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","weight","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","Path","currentPoint","Shape","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","OrthographicCamera","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","MaterialLoader","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","isOrthographicCamera","zoomW","zoomH","scaleW","scaleH","getTexture","shading","setTextures","LoaderUtils","decodeText","TextDecoder","decode","extractUrlBase","lastIndexOf","BufferGeometryLoader","typedArray","TYPED_ARRAYS","bufferAttribute","drawcalls","offsets","ObjectLoader","resourcePath","setResourcePath","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseAnimations","bufferGeometryLoader","details","geometryShapes","LegacyJSONLoader","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","BlendingMode","textureLoader","materialLoader","UVMapping","ImageBitmapLoader","createImageBitmap","fetch","ShapePath","subPaths","currentPath","Font","createPath","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","FontLoader","Loader","setOptions","res","blob","imageBitmap","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","ret","createPaths","substring","Handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","AudioContext","webkitAudioContext","AudioLoader","StereoCamera","eyeSep","bufferCopy","decodeAudioData","audioBuffer","eyeRight","eyeLeft","xmin","xmax","eyeSepOnProjection","ymax","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","reservedRe","startP","startEnd","lineGeometry","coneGeometry","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","Clock","autoStart","oldTime","elapsedTime","running","AudioListener","gain","createGain","connect","destination","timeDelta","Audio","getInput","autoplay","detune","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","AnimationObjectGroup","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","Spherical","Cylindrical","Box2","Line3","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","SpotLightHelper","cone","SkeletonHelper","getBoneList","boneList","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","PositionalAudioHelper","divisionsInnerAngle","divisionsOuterAngle","materialInnerAngle","materialOuterAngle","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","BoxHelper","Box3Helper","PlaneHelper","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","ClosedSplineCurve3","SplineCurve3","Spline","getElapsedTime","getDelta","newTime","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","clock","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","getDetune","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","firstValidIndex","bindings","isAnimationObjectGroup","sanitizeNodeName","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","_scheduleFading","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","setFromCamera","coords","intersectObjects","other","makeSafe","setFromCartesianCoords","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","halfConeInnerAngle","halfConeOuterAngle","setPoint","setColor","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setTexturePath","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","clearTarget","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","getData","updateCubeMap","GeometryUtils","geometry1","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","SceneUtils","createMultiMaterialObject","attach","CubeGeometry","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","FlatShading","SmoothShading","LoopOnce","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroSlopeEnding","WrapAroundEnding","LogLuvEncoding","Face4","LineStrip","LinePieces","MeshFaceMaterial","MultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","AxisHelper","BoundingBoxHelper","EdgesHelper","WireframeHelper","XHRLoader","BinaryTextureLoader","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","JSONLoader","LensFlare","self","vanilla-picker","classCallCheck","createClass","slicedToArray","sliceIterator","needle","padStart","pad","colorNames","printNum","num","decs","toFixed","that","rgba","_input$match$map","_input$match$map2","_a","hsla","_input$match$map3","_input$match$map4","_r","_g","_b","_a2","hexToRgb","nameToRgb","parseString","vals","mults","suff","_rgba","_hsla","hslToRgb","rgb","printRGB","rgbToHsl","printHSL","_ref3","_ref4","dragTracker","ep","Element","parentElement","callbackStart","callbackDragStart","callbackEnd","callbackDragEnd","callbackClick","propagate","propagateEvents","roundCoords","dragOutside","handleOffset","offsetToCenter","dragState","getMousePos","elm","stayWithin","respectBounds","stopEvent","onDown","mouseOffset","startPos","actuallyDragged","onMove","onEnd","cancelled","isClick","onTouchEnd","tweakTouch","addEvent","isLeftButton","relayTouch","touch","EVENT_KEY","onKey","_style","Picker","popup","layout","editor","editorFormat","_openProxy","openHandler","onDone","onOpen","onClose","HTMLElement","_popupInited","skipKeys","transfer","colour","_setColor","pointerEvents","toFocus","_domEdit","doHide","closeHandler","silent","flags","ex","failSilently","_setHSLA","toggled","_toggleDOM","_setPosition","htmlString","div","template","wrapper","_domH","_domSL","_domA","_domSample","_domOkay","_ifPopup","_updateUI","_bindEvents","_this2","createDragConfig","callbackRelative","relayDrag","relX","clientWidth","relY","clientHeight","editInput","fromEditor","selectionStart","selectionEnd","onDoneProxy","popupCloseProxy","cssClass","cssHue","cssHSL","hslString","cssHSLA","hslaString","uiH","uiSL","uiA","thumbH","thumbSL","thumbA","posX","backgroundColor","posY","transp","bg","backgroundImage","printHex","actionIf","actionElse","toVisible","displayStyle"],"mappings":"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","file":"thirdparty.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global['fontawesome-svg-core'] = {})));\n}(this, (function (exports) { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    }\n\n    return target;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n\n  var noop = function noop() {};\n\n  var _WINDOW = {};\n  var _DOCUMENT = {};\n  var _MUTATION_OBSERVER = null;\n  var _PERFORMANCE = {\n    mark: noop,\n    measure: noop\n  };\n\n  try {\n    if (typeof window !== 'undefined') _WINDOW = window;\n    if (typeof document !== 'undefined') _DOCUMENT = document;\n    if (typeof MutationObserver !== 'undefined') _MUTATION_OBSERVER = MutationObserver;\n    if (typeof performance !== 'undefined') _PERFORMANCE = performance;\n  } catch (e) {}\n\n  var _ref = _WINDOW.navigator || {},\n      _ref$userAgent = _ref.userAgent,\n      userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;\n\n  var WINDOW = _WINDOW;\n  var DOCUMENT = _DOCUMENT;\n  var MUTATION_OBSERVER = _MUTATION_OBSERVER;\n  var PERFORMANCE = _PERFORMANCE;\n  var IS_BROWSER = !!WINDOW.document;\n  var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';\n  var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');\n\n  var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';\n  var UNITS_IN_GRID = 16;\n  var DEFAULT_FAMILY_PREFIX = 'fa';\n  var DEFAULT_REPLACEMENT_CLASS = 'svg-inline--fa';\n  var DATA_FA_I2SVG = 'data-fa-i2svg';\n  var DATA_FA_PSEUDO_ELEMENT = 'data-fa-pseudo-element';\n  var DATA_FA_PSEUDO_ELEMENT_PENDING = 'data-fa-pseudo-element-pending';\n  var DATA_PREFIX = 'data-prefix';\n  var DATA_ICON = 'data-icon';\n  var HTML_CLASS_I2SVG_BASE_CLASS = 'fontawesome-i2svg';\n  var MUTATION_APPROACH_ASYNC = 'async';\n  var TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS = ['HTML', 'HEAD', 'STYLE', 'SCRIPT'];\n  var PRODUCTION = function () {\n    try {\n      return process.env.NODE_ENV === 'production';\n    } catch (e) {\n      return false;\n    }\n  }();\n  var PREFIX_TO_STYLE = {\n    'fas': 'solid',\n    'far': 'regular',\n    'fal': 'light',\n    'fab': 'brands',\n    'fa': 'solid'\n  };\n  var STYLE_TO_PREFIX = {\n    'solid': 'fas',\n    'regular': 'far',\n    'light': 'fal',\n    'brands': 'fab'\n  };\n  var LAYERS_TEXT_CLASSNAME = 'fa-layers-text';\n  var FONT_FAMILY_PATTERN = /Font Awesome 5 (Solid|Regular|Light|Brands|Free|Pro)/;\n  var FONT_WEIGHT_TO_PREFIX = {\n    '900': 'fas',\n    '400': 'far',\n    'normal': 'far',\n    '300': 'fal'\n  };\n  var oneToTen = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  var oneToTwenty = oneToTen.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);\n  var ATTRIBUTES_WATCHED_FOR_MUTATION = ['class', 'data-prefix', 'data-icon', 'data-fa-transform', 'data-fa-mask'];\n  var RESERVED_CLASSES = ['xs', 'sm', 'lg', 'fw', 'ul', 'li', 'border', 'pull-left', 'pull-right', 'spin', 'pulse', 'rotate-90', 'rotate-180', 'rotate-270', 'flip-horizontal', 'flip-vertical', 'flip-both', 'stack', 'stack-1x', 'stack-2x', 'inverse', 'layers', 'layers-text', 'layers-counter'].concat(oneToTen.map(function (n) {\n    return \"\".concat(n, \"x\");\n  })).concat(oneToTwenty.map(function (n) {\n    return \"w-\".concat(n);\n  }));\n\n  var initial = WINDOW.FontAwesomeConfig || {};\n\n  function getAttrConfig(attr) {\n    var element = DOCUMENT.querySelector('script[' + attr + ']');\n\n    if (element) {\n      return element.getAttribute(attr);\n    }\n  }\n\n  function coerce(val) {\n    // Getting an empty string will occur if the attribute is set on the HTML tag but without a value\n    // We'll assume that this is an indication that it should be toggled to true\n    // For example <script data-search-pseudo-elements src=\"...\"></script>\n    if (val === '') return true;\n    if (val === 'false') return false;\n    if (val === 'true') return true;\n    return val;\n  }\n\n  if (DOCUMENT && typeof DOCUMENT.querySelector === 'function') {\n    var attrs = [['data-family-prefix', 'familyPrefix'], ['data-replacement-class', 'replacementClass'], ['data-auto-replace-svg', 'autoReplaceSvg'], ['data-auto-add-css', 'autoAddCss'], ['data-auto-a11y', 'autoA11y'], ['data-search-pseudo-elements', 'searchPseudoElements'], ['data-observe-mutations', 'observeMutations'], ['data-mutate-approach', 'mutateApproach'], ['data-keep-original-source', 'keepOriginalSource'], ['data-measure-performance', 'measurePerformance'], ['data-show-missing-icons', 'showMissingIcons']];\n    attrs.forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          attr = _ref2[0],\n          key = _ref2[1];\n\n      var val = coerce(getAttrConfig(attr));\n\n      if (val !== undefined && val !== null) {\n        initial[key] = val;\n      }\n    });\n  }\n\n  var _default = {\n    familyPrefix: DEFAULT_FAMILY_PREFIX,\n    replacementClass: DEFAULT_REPLACEMENT_CLASS,\n    autoReplaceSvg: true,\n    autoAddCss: true,\n    autoA11y: true,\n    searchPseudoElements: false,\n    observeMutations: true,\n    mutateApproach: 'async',\n    keepOriginalSource: true,\n    measurePerformance: false,\n    showMissingIcons: true\n  };\n\n  var _config = _objectSpread({}, _default, initial);\n\n  if (!_config.autoReplaceSvg) _config.observeMutations = false;\n\n  var config = _objectSpread({}, _config);\n\n  WINDOW.FontAwesomeConfig = config;\n\n  var w = WINDOW || {};\n  if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};\n  if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};\n  if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};\n  if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];\n  var namespace = w[NAMESPACE_IDENTIFIER];\n\n  var functions = [];\n\n  var listener = function listener() {\n    DOCUMENT.removeEventListener('DOMContentLoaded', listener);\n    loaded = 1;\n    functions.map(function (fn) {\n      return fn();\n    });\n  };\n\n  var loaded = false;\n\n  if (IS_DOM) {\n    loaded = (DOCUMENT.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(DOCUMENT.readyState);\n    if (!loaded) DOCUMENT.addEventListener('DOMContentLoaded', listener);\n  }\n\n  function domready (fn) {\n    if (!IS_DOM) return;\n    loaded ? setTimeout(fn, 0) : functions.push(fn);\n  }\n\n  var PENDING = 'pending';\n  var SETTLED = 'settled';\n  var FULFILLED = 'fulfilled';\n  var REJECTED = 'rejected';\n\n  var NOOP = function NOOP() {};\n\n  var isNode = typeof global !== 'undefined' && typeof global.process !== 'undefined' && typeof global.process.emit === 'function';\n  var asyncSetTimer = typeof setImmediate === 'undefined' ? setTimeout : setImmediate;\n  var asyncQueue = [];\n  var asyncTimer;\n\n  function asyncFlush() {\n    // run promise callbacks\n    for (var i = 0; i < asyncQueue.length; i++) {\n      asyncQueue[i][0](asyncQueue[i][1]);\n    } // reset async asyncQueue\n\n\n    asyncQueue = [];\n    asyncTimer = false;\n  }\n\n  function asyncCall(callback, arg) {\n    asyncQueue.push([callback, arg]);\n\n    if (!asyncTimer) {\n      asyncTimer = true;\n      asyncSetTimer(asyncFlush, 0);\n    }\n  }\n\n  function invokeResolver(resolver, promise) {\n    function resolvePromise(value) {\n      resolve(promise, value);\n    }\n\n    function rejectPromise(reason) {\n      reject(promise, reason);\n    }\n\n    try {\n      resolver(resolvePromise, rejectPromise);\n    } catch (e) {\n      rejectPromise(e);\n    }\n  }\n\n  function invokeCallback(subscriber) {\n    var owner = subscriber.owner;\n    var settled = owner._state;\n    var value = owner._data;\n    var callback = subscriber[settled];\n    var promise = subscriber.then;\n\n    if (typeof callback === 'function') {\n      settled = FULFILLED;\n\n      try {\n        value = callback(value);\n      } catch (e) {\n        reject(promise, e);\n      }\n    }\n\n    if (!handleThenable(promise, value)) {\n      if (settled === FULFILLED) {\n        resolve(promise, value);\n      }\n\n      if (settled === REJECTED) {\n        reject(promise, value);\n      }\n    }\n  }\n\n  function handleThenable(promise, value) {\n    var resolved;\n\n    try {\n      if (promise === value) {\n        throw new TypeError('A promises callback cannot return that same promise.');\n      }\n\n      if (value && (typeof value === 'function' || _typeof(value) === 'object')) {\n        // then should be retrieved only once\n        var then = value.then;\n\n        if (typeof then === 'function') {\n          then.call(value, function (val) {\n            if (!resolved) {\n              resolved = true;\n\n              if (value === val) {\n                fulfill(promise, val);\n              } else {\n                resolve(promise, val);\n              }\n            }\n          }, function (reason) {\n            if (!resolved) {\n              resolved = true;\n              reject(promise, reason);\n            }\n          });\n          return true;\n        }\n      }\n    } catch (e) {\n      if (!resolved) {\n        reject(promise, e);\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function resolve(promise, value) {\n    if (promise === value || !handleThenable(promise, value)) {\n      fulfill(promise, value);\n    }\n  }\n\n  function fulfill(promise, value) {\n    if (promise._state === PENDING) {\n      promise._state = SETTLED;\n      promise._data = value;\n      asyncCall(publishFulfillment, promise);\n    }\n  }\n\n  function reject(promise, reason) {\n    if (promise._state === PENDING) {\n      promise._state = SETTLED;\n      promise._data = reason;\n      asyncCall(publishRejection, promise);\n    }\n  }\n\n  function publish(promise) {\n    promise._then = promise._then.forEach(invokeCallback);\n  }\n\n  function publishFulfillment(promise) {\n    promise._state = FULFILLED;\n    publish(promise);\n  }\n\n  function publishRejection(promise) {\n    promise._state = REJECTED;\n    publish(promise);\n\n    if (!promise._handled && isNode) {\n      global.process.emit('unhandledRejection', promise._data, promise);\n    }\n  }\n\n  function notifyRejectionHandled(promise) {\n    global.process.emit('rejectionHandled', promise);\n  }\n  /**\n   * @class\n   */\n\n\n  function P(resolver) {\n    if (typeof resolver !== 'function') {\n      throw new TypeError('Promise resolver ' + resolver + ' is not a function');\n    }\n\n    if (this instanceof P === false) {\n      throw new TypeError('Failed to construct \\'Promise\\': Please use the \\'new\\' operator, this object constructor cannot be called as a function.');\n    }\n\n    this._then = [];\n    invokeResolver(resolver, this);\n  }\n\n  P.prototype = {\n    constructor: P,\n    _state: PENDING,\n    _then: null,\n    _data: undefined,\n    _handled: false,\n    then: function then(onFulfillment, onRejection) {\n      var subscriber = {\n        owner: this,\n        then: new this.constructor(NOOP),\n        fulfilled: onFulfillment,\n        rejected: onRejection\n      };\n\n      if ((onRejection || onFulfillment) && !this._handled) {\n        this._handled = true;\n\n        if (this._state === REJECTED && isNode) {\n          asyncCall(notifyRejectionHandled, this);\n        }\n      }\n\n      if (this._state === FULFILLED || this._state === REJECTED) {\n        // already resolved, call callback async\n        asyncCall(invokeCallback, subscriber);\n      } else {\n        // subscribe\n        this._then.push(subscriber);\n      }\n\n      return subscriber.then;\n    },\n    catch: function _catch(onRejection) {\n      return this.then(null, onRejection);\n    }\n  };\n\n  P.all = function (promises) {\n    if (!Array.isArray(promises)) {\n      throw new TypeError('You must pass an array to Promise.all().');\n    }\n\n    return new P(function (resolve, reject) {\n      var results = [];\n      var remaining = 0;\n\n      function resolver(index) {\n        remaining++;\n        return function (value) {\n          results[index] = value;\n\n          if (! --remaining) {\n            resolve(results);\n          }\n        };\n      }\n\n      for (var i = 0, promise; i < promises.length; i++) {\n        promise = promises[i];\n\n        if (promise && typeof promise.then === 'function') {\n          promise.then(resolver(i), reject);\n        } else {\n          results[i] = promise;\n        }\n      }\n\n      if (!remaining) {\n        resolve(results);\n      }\n    });\n  };\n\n  P.race = function (promises) {\n    if (!Array.isArray(promises)) {\n      throw new TypeError('You must pass an array to Promise.race().');\n    }\n\n    return new P(function (resolve, reject) {\n      for (var i = 0, promise; i < promises.length; i++) {\n        promise = promises[i];\n\n        if (promise && typeof promise.then === 'function') {\n          promise.then(resolve, reject);\n        } else {\n          resolve(promise);\n        }\n      }\n    });\n  };\n\n  P.resolve = function (value) {\n    if (value && _typeof(value) === 'object' && value.constructor === P) {\n      return value;\n    }\n\n    return new P(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  P.reject = function (reason) {\n    return new P(function (resolve, reject) {\n      reject(reason);\n    });\n  };\n\n  var picked = typeof Promise === 'function' ? Promise : P;\n\n  var d = UNITS_IN_GRID;\n  var meaninglessTransform = {\n    size: 16,\n    x: 0,\n    y: 0,\n    rotate: 0,\n    flipX: false,\n    flipY: false\n  };\n\n  function isReserved(name) {\n    return ~RESERVED_CLASSES.indexOf(name);\n  }\n  function insertCss(css) {\n    if (!css || !IS_DOM) {\n      return;\n    }\n\n    var style = DOCUMENT.createElement('style');\n    style.setAttribute('type', 'text/css');\n    style.innerHTML = css;\n    var headChildren = DOCUMENT.head.childNodes;\n    var beforeChild = null;\n\n    for (var i = headChildren.length - 1; i > -1; i--) {\n      var child = headChildren[i];\n      var tagName = (child.tagName || '').toUpperCase();\n\n      if (['STYLE', 'LINK'].indexOf(tagName) > -1) {\n        beforeChild = child;\n      }\n    }\n\n    DOCUMENT.head.insertBefore(style, beforeChild);\n    return css;\n  }\n  var idPool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  function nextUniqueId() {\n    var size = 12;\n    var id = '';\n\n    while (size-- > 0) {\n      id += idPool[Math.random() * 62 | 0];\n    }\n\n    return id;\n  }\n  function toArray(obj) {\n    var array = [];\n\n    for (var i = (obj || []).length >>> 0; i--;) {\n      array[i] = obj[i];\n    }\n\n    return array;\n  }\n  function classArray(node) {\n    if (node.classList) {\n      return toArray(node.classList);\n    } else {\n      return (node.getAttribute('class') || '').split(' ').filter(function (i) {\n        return i;\n      });\n    }\n  }\n  function getIconName(familyPrefix, cls) {\n    var parts = cls.split('-');\n    var prefix = parts[0];\n    var iconName = parts.slice(1).join('-');\n\n    if (prefix === familyPrefix && iconName !== '' && !isReserved(iconName)) {\n      return iconName;\n    } else {\n      return null;\n    }\n  }\n  function htmlEscape(str) {\n    return \"\".concat(str).replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n  function joinAttributes(attributes) {\n    return Object.keys(attributes || {}).reduce(function (acc, attributeName) {\n      return acc + \"\".concat(attributeName, \"=\\\"\").concat(htmlEscape(attributes[attributeName]), \"\\\" \");\n    }, '').trim();\n  }\n  function joinStyles(styles) {\n    return Object.keys(styles || {}).reduce(function (acc, styleName) {\n      return acc + \"\".concat(styleName, \": \").concat(styles[styleName], \";\");\n    }, '');\n  }\n  function transformIsMeaningful(transform) {\n    return transform.size !== meaninglessTransform.size || transform.x !== meaninglessTransform.x || transform.y !== meaninglessTransform.y || transform.rotate !== meaninglessTransform.rotate || transform.flipX || transform.flipY;\n  }\n  function transformForSvg(_ref) {\n    var transform = _ref.transform,\n        containerWidth = _ref.containerWidth,\n        iconWidth = _ref.iconWidth;\n    var outer = {\n      transform: \"translate(\".concat(containerWidth / 2, \" 256)\")\n    };\n    var innerTranslate = \"translate(\".concat(transform.x * 32, \", \").concat(transform.y * 32, \") \");\n    var innerScale = \"scale(\".concat(transform.size / 16 * (transform.flipX ? -1 : 1), \", \").concat(transform.size / 16 * (transform.flipY ? -1 : 1), \") \");\n    var innerRotate = \"rotate(\".concat(transform.rotate, \" 0 0)\");\n    var inner = {\n      transform: \"\".concat(innerTranslate, \" \").concat(innerScale, \" \").concat(innerRotate)\n    };\n    var path = {\n      transform: \"translate(\".concat(iconWidth / 2 * -1, \" -256)\")\n    };\n    return {\n      outer: outer,\n      inner: inner,\n      path: path\n    };\n  }\n  function transformForCss(_ref2) {\n    var transform = _ref2.transform,\n        _ref2$width = _ref2.width,\n        width = _ref2$width === void 0 ? UNITS_IN_GRID : _ref2$width,\n        _ref2$height = _ref2.height,\n        height = _ref2$height === void 0 ? UNITS_IN_GRID : _ref2$height,\n        _ref2$startCentered = _ref2.startCentered,\n        startCentered = _ref2$startCentered === void 0 ? false : _ref2$startCentered;\n    var val = '';\n\n    if (startCentered && IS_IE) {\n      val += \"translate(\".concat(transform.x / d - width / 2, \"em, \").concat(transform.y / d - height / 2, \"em) \");\n    } else if (startCentered) {\n      val += \"translate(calc(-50% + \".concat(transform.x / d, \"em), calc(-50% + \").concat(transform.y / d, \"em)) \");\n    } else {\n      val += \"translate(\".concat(transform.x / d, \"em, \").concat(transform.y / d, \"em) \");\n    }\n\n    val += \"scale(\".concat(transform.size / d * (transform.flipX ? -1 : 1), \", \").concat(transform.size / d * (transform.flipY ? -1 : 1), \") \");\n    val += \"rotate(\".concat(transform.rotate, \"deg) \");\n    return val;\n  }\n\n  var ALL_SPACE = {\n    x: 0,\n    y: 0,\n    width: '100%',\n    height: '100%'\n  };\n  function makeIconMasking (_ref) {\n    var children = _ref.children,\n        attributes = _ref.attributes,\n        main = _ref.main,\n        mask = _ref.mask,\n        transform = _ref.transform;\n    var mainWidth = main.width,\n        mainPath = main.icon;\n    var maskWidth = mask.width,\n        maskPath = mask.icon;\n    var trans = transformForSvg({\n      transform: transform,\n      containerWidth: maskWidth,\n      iconWidth: mainWidth\n    });\n    var maskRect = {\n      tag: 'rect',\n      attributes: _objectSpread({}, ALL_SPACE, {\n        fill: 'white'\n      })\n    };\n    var maskInnerGroup = {\n      tag: 'g',\n      attributes: _objectSpread({}, trans.inner),\n      children: [{\n        tag: 'path',\n        attributes: _objectSpread({}, mainPath.attributes, trans.path, {\n          fill: 'black'\n        })\n      }]\n    };\n    var maskOuterGroup = {\n      tag: 'g',\n      attributes: _objectSpread({}, trans.outer),\n      children: [maskInnerGroup]\n    };\n    var maskId = \"mask-\".concat(nextUniqueId());\n    var clipId = \"clip-\".concat(nextUniqueId());\n    var maskTag = {\n      tag: 'mask',\n      attributes: _objectSpread({}, ALL_SPACE, {\n        id: maskId,\n        maskUnits: 'userSpaceOnUse',\n        maskContentUnits: 'userSpaceOnUse'\n      }),\n      children: [maskRect, maskOuterGroup]\n    };\n    var defs = {\n      tag: 'defs',\n      children: [{\n        tag: 'clipPath',\n        attributes: {\n          id: clipId\n        },\n        children: [maskPath]\n      }, maskTag]\n    };\n    children.push(defs, {\n      tag: 'rect',\n      attributes: _objectSpread({\n        fill: 'currentColor',\n        'clip-path': \"url(#\".concat(clipId, \")\"),\n        mask: \"url(#\".concat(maskId, \")\")\n      }, ALL_SPACE)\n    });\n    return {\n      children: children,\n      attributes: attributes\n    };\n  }\n\n  function makeIconStandard (_ref) {\n    var children = _ref.children,\n        attributes = _ref.attributes,\n        main = _ref.main,\n        transform = _ref.transform,\n        styles = _ref.styles;\n    var styleString = joinStyles(styles);\n\n    if (styleString.length > 0) {\n      attributes['style'] = styleString;\n    }\n\n    if (transformIsMeaningful(transform)) {\n      var trans = transformForSvg({\n        transform: transform,\n        containerWidth: main.width,\n        iconWidth: main.width\n      });\n      children.push({\n        tag: 'g',\n        attributes: _objectSpread({}, trans.outer),\n        children: [{\n          tag: 'g',\n          attributes: _objectSpread({}, trans.inner),\n          children: [{\n            tag: main.icon.tag,\n            children: main.icon.children,\n            attributes: _objectSpread({}, main.icon.attributes, trans.path)\n          }]\n        }]\n      });\n    } else {\n      children.push(main.icon);\n    }\n\n    return {\n      children: children,\n      attributes: attributes\n    };\n  }\n\n  function asIcon (_ref) {\n    var children = _ref.children,\n        main = _ref.main,\n        mask = _ref.mask,\n        attributes = _ref.attributes,\n        styles = _ref.styles,\n        transform = _ref.transform;\n\n    if (transformIsMeaningful(transform) && main.found && !mask.found) {\n      var width = main.width,\n          height = main.height;\n      var offset = {\n        x: width / height / 2,\n        y: 0.5\n      };\n      attributes['style'] = joinStyles(_objectSpread({}, styles, {\n        'transform-origin': \"\".concat(offset.x + transform.x / 16, \"em \").concat(offset.y + transform.y / 16, \"em\")\n      }));\n    }\n\n    return [{\n      tag: 'svg',\n      attributes: attributes,\n      children: children\n    }];\n  }\n\n  function asSymbol (_ref) {\n    var prefix = _ref.prefix,\n        iconName = _ref.iconName,\n        children = _ref.children,\n        attributes = _ref.attributes,\n        symbol = _ref.symbol;\n    var id = symbol === true ? \"\".concat(prefix, \"-\").concat(config.familyPrefix, \"-\").concat(iconName) : symbol;\n    return [{\n      tag: 'svg',\n      attributes: {\n        style: 'display: none;'\n      },\n      children: [{\n        tag: 'symbol',\n        attributes: _objectSpread({}, attributes, {\n          id: id\n        }),\n        children: children\n      }]\n    }];\n  }\n\n  function makeInlineSvgAbstract(params) {\n    var _params$icons = params.icons,\n        main = _params$icons.main,\n        mask = _params$icons.mask,\n        prefix = params.prefix,\n        iconName = params.iconName,\n        transform = params.transform,\n        symbol = params.symbol,\n        title = params.title,\n        extra = params.extra,\n        _params$watchable = params.watchable,\n        watchable = _params$watchable === void 0 ? false : _params$watchable;\n\n    var _ref = mask.found ? mask : main,\n        width = _ref.width,\n        height = _ref.height;\n\n    var widthClass = \"fa-w-\".concat(Math.ceil(width / height * 16));\n    var attrClass = [config.replacementClass, iconName ? \"\".concat(config.familyPrefix, \"-\").concat(iconName) : '', widthClass].filter(function (c) {\n      return extra.classes.indexOf(c) === -1;\n    }).concat(extra.classes).join(' ');\n    var content = {\n      children: [],\n      attributes: _objectSpread({}, extra.attributes, {\n        'data-prefix': prefix,\n        'data-icon': iconName,\n        'class': attrClass,\n        'role': 'img',\n        'xmlns': 'http://www.w3.org/2000/svg',\n        'viewBox': \"0 0 \".concat(width, \" \").concat(height)\n      })\n    };\n\n    if (watchable) {\n      content.attributes[DATA_FA_I2SVG] = '';\n    }\n\n    if (title) content.children.push({\n      tag: 'title',\n      attributes: {\n        id: content.attributes['aria-labelledby'] || \"title-\".concat(nextUniqueId())\n      },\n      children: [title]\n    });\n\n    var args = _objectSpread({}, content, {\n      prefix: prefix,\n      iconName: iconName,\n      main: main,\n      mask: mask,\n      transform: transform,\n      symbol: symbol,\n      styles: extra.styles\n    });\n\n    var _ref2 = mask.found && main.found ? makeIconMasking(args) : makeIconStandard(args),\n        children = _ref2.children,\n        attributes = _ref2.attributes;\n\n    args.children = children;\n    args.attributes = attributes;\n\n    if (symbol) {\n      return asSymbol(args);\n    } else {\n      return asIcon(args);\n    }\n  }\n  function makeLayersTextAbstract(params) {\n    var content = params.content,\n        width = params.width,\n        height = params.height,\n        transform = params.transform,\n        title = params.title,\n        extra = params.extra,\n        _params$watchable2 = params.watchable,\n        watchable = _params$watchable2 === void 0 ? false : _params$watchable2;\n\n    var attributes = _objectSpread({}, extra.attributes, title ? {\n      'title': title\n    } : {}, {\n      'class': extra.classes.join(' ')\n    });\n\n    if (watchable) {\n      attributes[DATA_FA_I2SVG] = '';\n    }\n\n    var styles = _objectSpread({}, extra.styles);\n\n    if (transformIsMeaningful(transform)) {\n      styles['transform'] = transformForCss({\n        transform: transform,\n        startCentered: true,\n        width: width,\n        height: height\n      });\n      styles['-webkit-transform'] = styles['transform'];\n    }\n\n    var styleString = joinStyles(styles);\n\n    if (styleString.length > 0) {\n      attributes['style'] = styleString;\n    }\n\n    var val = [];\n    val.push({\n      tag: 'span',\n      attributes: attributes,\n      children: [content]\n    });\n\n    if (title) {\n      val.push({\n        tag: 'span',\n        attributes: {\n          class: 'sr-only'\n        },\n        children: [title]\n      });\n    }\n\n    return val;\n  }\n  function makeLayersCounterAbstract(params) {\n    var content = params.content,\n        title = params.title,\n        extra = params.extra;\n\n    var attributes = _objectSpread({}, extra.attributes, title ? {\n      'title': title\n    } : {}, {\n      'class': extra.classes.join(' ')\n    });\n\n    var styleString = joinStyles(extra.styles);\n\n    if (styleString.length > 0) {\n      attributes['style'] = styleString;\n    }\n\n    var val = [];\n    val.push({\n      tag: 'span',\n      attributes: attributes,\n      children: [content]\n    });\n\n    if (title) {\n      val.push({\n        tag: 'span',\n        attributes: {\n          class: 'sr-only'\n        },\n        children: [title]\n      });\n    }\n\n    return val;\n  }\n\n  var noop$1 = function noop() {};\n\n  var p = config.measurePerformance && PERFORMANCE && PERFORMANCE.mark && PERFORMANCE.measure ? PERFORMANCE : {\n    mark: noop$1,\n    measure: noop$1\n  };\n  var preamble = \"FA \\\"5.8.1\\\"\";\n\n  var begin = function begin(name) {\n    p.mark(\"\".concat(preamble, \" \").concat(name, \" begins\"));\n    return function () {\n      return end(name);\n    };\n  };\n\n  var end = function end(name) {\n    p.mark(\"\".concat(preamble, \" \").concat(name, \" ends\"));\n    p.measure(\"\".concat(preamble, \" \").concat(name), \"\".concat(preamble, \" \").concat(name, \" begins\"), \"\".concat(preamble, \" \").concat(name, \" ends\"));\n  };\n\n  var perf = {\n    begin: begin,\n    end: end\n  };\n\n  /**\n   * Internal helper to bind a function known to have 4 arguments\n   * to a given context.\n   */\n\n  var bindInternal4 = function bindInternal4(func, thisContext) {\n    return function (a, b, c, d) {\n      return func.call(thisContext, a, b, c, d);\n    };\n  };\n\n  /**\n   * # Reduce\n   *\n   * A fast object `.reduce()` implementation.\n   *\n   * @param  {Object}   subject      The object to reduce over.\n   * @param  {Function} fn           The reducer function.\n   * @param  {mixed}    initialValue The initial value for the reducer, defaults to subject[0].\n   * @param  {Object}   thisContext  The context for the reducer.\n   * @return {mixed}                 The final result.\n   */\n\n\n  var reduce = function fastReduceObject(subject, fn, initialValue, thisContext) {\n    var keys = Object.keys(subject),\n        length = keys.length,\n        iterator = thisContext !== undefined ? bindInternal4(fn, thisContext) : fn,\n        i,\n        key,\n        result;\n\n    if (initialValue === undefined) {\n      i = 1;\n      result = subject[keys[0]];\n    } else {\n      i = 0;\n      result = initialValue;\n    }\n\n    for (; i < length; i++) {\n      key = keys[i];\n      result = iterator(result, subject[key], key, subject);\n    }\n\n    return result;\n  };\n\n  function defineIcons(prefix, icons) {\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var _params$skipHooks = params.skipHooks,\n        skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;\n    var normalized = Object.keys(icons).reduce(function (acc, iconName) {\n      var icon = icons[iconName];\n      var expanded = !!icon.icon;\n\n      if (expanded) {\n        acc[icon.iconName] = icon.icon;\n      } else {\n        acc[iconName] = icon;\n      }\n\n      return acc;\n    }, {});\n\n    if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {\n      namespace.hooks.addPack(prefix, normalized);\n    } else {\n      namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, normalized);\n    }\n    /**\n     * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction\n     * of new styles we needed to differentiate between them. Prefix `fa` is now an alias\n     * for `fas` so we'll easy the upgrade process for our users by automatically defining\n     * this as well.\n     */\n\n\n    if (prefix === 'fas') {\n      defineIcons('fa', icons);\n    }\n  }\n\n  var styles = namespace.styles,\n      shims = namespace.shims;\n  var _byUnicode = {};\n  var _byLigature = {};\n  var _byOldName = {};\n  var build = function build() {\n    var lookup = function lookup(reducer) {\n      return reduce(styles, function (o, style, prefix) {\n        o[prefix] = reduce(style, reducer, {});\n        return o;\n      }, {});\n    };\n\n    _byUnicode = lookup(function (acc, icon, iconName) {\n      if (icon[3]) {\n        acc[icon[3]] = iconName;\n      }\n\n      return acc;\n    });\n    _byLigature = lookup(function (acc, icon, iconName) {\n      var ligatures = icon[2];\n      acc[iconName] = iconName;\n      ligatures.forEach(function (ligature) {\n        acc[ligature] = iconName;\n      });\n      return acc;\n    });\n    var hasRegular = 'far' in styles;\n    _byOldName = reduce(shims, function (acc, shim) {\n      var oldName = shim[0];\n      var prefix = shim[1];\n      var iconName = shim[2];\n\n      if (prefix === 'far' && !hasRegular) {\n        prefix = 'fas';\n      }\n\n      acc[oldName] = {\n        prefix: prefix,\n        iconName: iconName\n      };\n      return acc;\n    }, {});\n  };\n  build();\n  function byUnicode(prefix, unicode) {\n    return _byUnicode[prefix][unicode];\n  }\n  function byLigature(prefix, ligature) {\n    return _byLigature[prefix][ligature];\n  }\n  function byOldName(name) {\n    return _byOldName[name] || {\n      prefix: null,\n      iconName: null\n    };\n  }\n\n  var styles$1 = namespace.styles;\n  var emptyCanonicalIcon = function emptyCanonicalIcon() {\n    return {\n      prefix: null,\n      iconName: null,\n      rest: []\n    };\n  };\n  function getCanonicalIcon(values) {\n    return values.reduce(function (acc, cls) {\n      var iconName = getIconName(config.familyPrefix, cls);\n\n      if (styles$1[cls]) {\n        acc.prefix = cls;\n      } else if (config.autoFetchSvg && ['fas', 'far', 'fal', 'fab', 'fa'].indexOf(cls) > -1) {\n        acc.prefix = cls;\n      } else if (iconName) {\n        var shim = acc.prefix === 'fa' ? byOldName(iconName) : {};\n        acc.iconName = shim.iconName || iconName;\n        acc.prefix = shim.prefix || acc.prefix;\n      } else if (cls !== config.replacementClass && cls.indexOf('fa-w-') !== 0) {\n        acc.rest.push(cls);\n      }\n\n      return acc;\n    }, emptyCanonicalIcon());\n  }\n  function iconFromMapping(mapping, prefix, iconName) {\n    if (mapping && mapping[prefix] && mapping[prefix][iconName]) {\n      return {\n        prefix: prefix,\n        iconName: iconName,\n        icon: mapping[prefix][iconName]\n      };\n    }\n  }\n\n  function toHtml(abstractNodes) {\n    var tag = abstractNodes.tag,\n        _abstractNodes$attrib = abstractNodes.attributes,\n        attributes = _abstractNodes$attrib === void 0 ? {} : _abstractNodes$attrib,\n        _abstractNodes$childr = abstractNodes.children,\n        children = _abstractNodes$childr === void 0 ? [] : _abstractNodes$childr;\n\n    if (typeof abstractNodes === 'string') {\n      return htmlEscape(abstractNodes);\n    } else {\n      return \"<\".concat(tag, \" \").concat(joinAttributes(attributes), \">\").concat(children.map(toHtml).join(''), \"</\").concat(tag, \">\");\n    }\n  }\n\n  var noop$2 = function noop() {};\n\n  function isWatched(node) {\n    var i2svg = node.getAttribute ? node.getAttribute(DATA_FA_I2SVG) : null;\n    return typeof i2svg === 'string';\n  }\n\n  function getMutator() {\n    if (config.autoReplaceSvg === true) {\n      return mutators.replace;\n    }\n\n    var mutator = mutators[config.autoReplaceSvg];\n    return mutator || mutators.replace;\n  }\n\n  var mutators = {\n    replace: function replace(mutation) {\n      var node = mutation[0];\n      var abstract = mutation[1];\n      var newOuterHTML = abstract.map(function (a) {\n        return toHtml(a);\n      }).join('\\n');\n\n      if (node.parentNode && node.outerHTML) {\n        node.outerHTML = newOuterHTML + (config.keepOriginalSource && node.tagName.toLowerCase() !== 'svg' ? \"<!-- \".concat(node.outerHTML, \" -->\") : '');\n      } else if (node.parentNode) {\n        var newNode = document.createElement('span');\n        node.parentNode.replaceChild(newNode, node);\n        newNode.outerHTML = newOuterHTML;\n      }\n    },\n    nest: function nest(mutation) {\n      var node = mutation[0];\n      var abstract = mutation[1]; // If we already have a replaced node we do not want to continue nesting within it.\n      // Short-circuit to the standard replacement\n\n      if (~classArray(node).indexOf(config.replacementClass)) {\n        return mutators.replace(mutation);\n      }\n\n      var forSvg = new RegExp(\"\".concat(config.familyPrefix, \"-.*\"));\n      delete abstract[0].attributes.style;\n      var splitClasses = abstract[0].attributes.class.split(' ').reduce(function (acc, cls) {\n        if (cls === config.replacementClass || cls.match(forSvg)) {\n          acc.toSvg.push(cls);\n        } else {\n          acc.toNode.push(cls);\n        }\n\n        return acc;\n      }, {\n        toNode: [],\n        toSvg: []\n      });\n      abstract[0].attributes.class = splitClasses.toSvg.join(' ');\n      var newInnerHTML = abstract.map(function (a) {\n        return toHtml(a);\n      }).join('\\n');\n      node.setAttribute('class', splitClasses.toNode.join(' '));\n      node.setAttribute(DATA_FA_I2SVG, '');\n      node.innerHTML = newInnerHTML;\n    }\n  };\n\n  function performOperationSync(op) {\n    op();\n  }\n\n  function perform(mutations, callback) {\n    var callbackFunction = typeof callback === 'function' ? callback : noop$2;\n\n    if (mutations.length === 0) {\n      callbackFunction();\n    } else {\n      var frame = performOperationSync;\n\n      if (config.mutateApproach === MUTATION_APPROACH_ASYNC) {\n        frame = WINDOW.requestAnimationFrame || performOperationSync;\n      }\n\n      frame(function () {\n        var mutator = getMutator();\n        var mark = perf.begin('mutate');\n        mutations.map(mutator);\n        mark();\n        callbackFunction();\n      });\n    }\n  }\n  var disabled = false;\n  function disableObservation() {\n    disabled = true;\n  }\n  function enableObservation() {\n    disabled = false;\n  }\n  var mo = null;\n  function observe(options) {\n    if (!MUTATION_OBSERVER) {\n      return;\n    }\n\n    if (!config.observeMutations) {\n      return;\n    }\n\n    var treeCallback = options.treeCallback,\n        nodeCallback = options.nodeCallback,\n        pseudoElementsCallback = options.pseudoElementsCallback,\n        _options$observeMutat = options.observeMutationsRoot,\n        observeMutationsRoot = _options$observeMutat === void 0 ? DOCUMENT : _options$observeMutat;\n    mo = new MUTATION_OBSERVER(function (objects) {\n      if (disabled) return;\n      toArray(objects).forEach(function (mutationRecord) {\n        if (mutationRecord.type === 'childList' && mutationRecord.addedNodes.length > 0 && !isWatched(mutationRecord.addedNodes[0])) {\n          if (config.searchPseudoElements) {\n            pseudoElementsCallback(mutationRecord.target);\n          }\n\n          treeCallback(mutationRecord.target);\n        }\n\n        if (mutationRecord.type === 'attributes' && mutationRecord.target.parentNode && config.searchPseudoElements) {\n          pseudoElementsCallback(mutationRecord.target.parentNode);\n        }\n\n        if (mutationRecord.type === 'attributes' && isWatched(mutationRecord.target) && ~ATTRIBUTES_WATCHED_FOR_MUTATION.indexOf(mutationRecord.attributeName)) {\n          if (mutationRecord.attributeName === 'class') {\n            var _getCanonicalIcon = getCanonicalIcon(classArray(mutationRecord.target)),\n                prefix = _getCanonicalIcon.prefix,\n                iconName = _getCanonicalIcon.iconName;\n\n            if (prefix) mutationRecord.target.setAttribute('data-prefix', prefix);\n            if (iconName) mutationRecord.target.setAttribute('data-icon', iconName);\n          } else {\n            nodeCallback(mutationRecord.target);\n          }\n        }\n      });\n    });\n    if (!IS_DOM) return;\n    mo.observe(observeMutationsRoot, {\n      childList: true,\n      attributes: true,\n      characterData: true,\n      subtree: true\n    });\n  }\n  function disconnect() {\n    if (!mo) return;\n    mo.disconnect();\n  }\n\n  function styleParser (node) {\n    var style = node.getAttribute('style');\n    var val = [];\n\n    if (style) {\n      val = style.split(';').reduce(function (acc, style) {\n        var styles = style.split(':');\n        var prop = styles[0];\n        var value = styles.slice(1);\n\n        if (prop && value.length > 0) {\n          acc[prop] = value.join(':').trim();\n        }\n\n        return acc;\n      }, {});\n    }\n\n    return val;\n  }\n\n  function toHex(unicode) {\n    var result = '';\n\n    for (var i = 0; i < unicode.length; i++) {\n      var hex = unicode.charCodeAt(i).toString(16);\n      result += ('000' + hex).slice(-4);\n    }\n\n    return result;\n  }\n\n  function classParser (node) {\n    var existingPrefix = node.getAttribute('data-prefix');\n    var existingIconName = node.getAttribute('data-icon');\n    var innerText = node.innerText !== undefined ? node.innerText.trim() : '';\n    var val = getCanonicalIcon(classArray(node));\n\n    if (existingPrefix && existingIconName) {\n      val.prefix = existingPrefix;\n      val.iconName = existingIconName;\n    }\n\n    if (val.prefix && innerText.length > 1) {\n      val.iconName = byLigature(val.prefix, node.innerText);\n    } else if (val.prefix && innerText.length === 1) {\n      val.iconName = byUnicode(val.prefix, toHex(node.innerText));\n    }\n\n    return val;\n  }\n\n  var parseTransformString = function parseTransformString(transformString) {\n    var transform = {\n      size: 16,\n      x: 0,\n      y: 0,\n      flipX: false,\n      flipY: false,\n      rotate: 0\n    };\n\n    if (!transformString) {\n      return transform;\n    } else {\n      return transformString.toLowerCase().split(' ').reduce(function (acc, n) {\n        var parts = n.toLowerCase().split('-');\n        var first = parts[0];\n        var rest = parts.slice(1).join('-');\n\n        if (first && rest === 'h') {\n          acc.flipX = true;\n          return acc;\n        }\n\n        if (first && rest === 'v') {\n          acc.flipY = true;\n          return acc;\n        }\n\n        rest = parseFloat(rest);\n\n        if (isNaN(rest)) {\n          return acc;\n        }\n\n        switch (first) {\n          case 'grow':\n            acc.size = acc.size + rest;\n            break;\n\n          case 'shrink':\n            acc.size = acc.size - rest;\n            break;\n\n          case 'left':\n            acc.x = acc.x - rest;\n            break;\n\n          case 'right':\n            acc.x = acc.x + rest;\n            break;\n\n          case 'up':\n            acc.y = acc.y - rest;\n            break;\n\n          case 'down':\n            acc.y = acc.y + rest;\n            break;\n\n          case 'rotate':\n            acc.rotate = acc.rotate + rest;\n            break;\n        }\n\n        return acc;\n      }, transform);\n    }\n  };\n  function transformParser (node) {\n    return parseTransformString(node.getAttribute('data-fa-transform'));\n  }\n\n  function symbolParser (node) {\n    var symbol = node.getAttribute('data-fa-symbol');\n    return symbol === null ? false : symbol === '' ? true : symbol;\n  }\n\n  function attributesParser (node) {\n    var extraAttributes = toArray(node.attributes).reduce(function (acc, attr) {\n      if (acc.name !== 'class' && acc.name !== 'style') {\n        acc[attr.name] = attr.value;\n      }\n\n      return acc;\n    }, {});\n    var title = node.getAttribute('title');\n\n    if (config.autoA11y) {\n      if (title) {\n        extraAttributes['aria-labelledby'] = \"\".concat(config.replacementClass, \"-title-\").concat(nextUniqueId());\n      } else {\n        extraAttributes['aria-hidden'] = 'true';\n        extraAttributes['focusable'] = 'false';\n      }\n    }\n\n    return extraAttributes;\n  }\n\n  function maskParser (node) {\n    var mask = node.getAttribute('data-fa-mask');\n\n    if (!mask) {\n      return emptyCanonicalIcon();\n    } else {\n      return getCanonicalIcon(mask.split(' ').map(function (i) {\n        return i.trim();\n      }));\n    }\n  }\n\n  function blankMeta() {\n    return {\n      iconName: null,\n      title: null,\n      prefix: null,\n      transform: meaninglessTransform,\n      symbol: false,\n      mask: null,\n      extra: {\n        classes: [],\n        styles: {},\n        attributes: {}\n      }\n    };\n  }\n  function parseMeta(node) {\n    var _classParser = classParser(node),\n        iconName = _classParser.iconName,\n        prefix = _classParser.prefix,\n        extraClasses = _classParser.rest;\n\n    var extraStyles = styleParser(node);\n    var transform = transformParser(node);\n    var symbol = symbolParser(node);\n    var extraAttributes = attributesParser(node);\n    var mask = maskParser(node);\n    return {\n      iconName: iconName,\n      title: node.getAttribute('title'),\n      prefix: prefix,\n      transform: transform,\n      symbol: symbol,\n      mask: mask,\n      extra: {\n        classes: extraClasses,\n        styles: extraStyles,\n        attributes: extraAttributes\n      }\n    };\n  }\n\n  function MissingIcon(error) {\n    this.name = 'MissingIcon';\n    this.message = error || 'Icon unavailable';\n    this.stack = new Error().stack;\n  }\n  MissingIcon.prototype = Object.create(Error.prototype);\n  MissingIcon.prototype.constructor = MissingIcon;\n\n  var FILL = {\n    fill: 'currentColor'\n  };\n  var ANIMATION_BASE = {\n    attributeType: 'XML',\n    repeatCount: 'indefinite',\n    dur: '2s'\n  };\n  var RING = {\n    tag: 'path',\n    attributes: _objectSpread({}, FILL, {\n      d: 'M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z'\n    })\n  };\n\n  var OPACITY_ANIMATE = _objectSpread({}, ANIMATION_BASE, {\n    attributeName: 'opacity'\n  });\n\n  var DOT = {\n    tag: 'circle',\n    attributes: _objectSpread({}, FILL, {\n      cx: '256',\n      cy: '364',\n      r: '28'\n    }),\n    children: [{\n      tag: 'animate',\n      attributes: _objectSpread({}, ANIMATION_BASE, {\n        attributeName: 'r',\n        values: '28;14;28;28;14;28;'\n      })\n    }, {\n      tag: 'animate',\n      attributes: _objectSpread({}, OPACITY_ANIMATE, {\n        values: '1;0;1;1;0;1;'\n      })\n    }]\n  };\n  var QUESTION = {\n    tag: 'path',\n    attributes: _objectSpread({}, FILL, {\n      opacity: '1',\n      d: 'M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z'\n    }),\n    children: [{\n      tag: 'animate',\n      attributes: _objectSpread({}, OPACITY_ANIMATE, {\n        values: '1;0;0;0;0;1;'\n      })\n    }]\n  };\n  var EXCLAMATION = {\n    tag: 'path',\n    attributes: _objectSpread({}, FILL, {\n      opacity: '0',\n      d: 'M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z'\n    }),\n    children: [{\n      tag: 'animate',\n      attributes: _objectSpread({}, OPACITY_ANIMATE, {\n        values: '0;0;1;1;0;0;'\n      })\n    }]\n  };\n  var missing = {\n    tag: 'g',\n    children: [RING, DOT, QUESTION, EXCLAMATION]\n  };\n\n  var styles$2 = namespace.styles;\n  function findIcon(iconName, prefix) {\n    return new picked(function (resolve, reject) {\n      var val = {\n        found: false,\n        width: 512,\n        height: 512,\n        icon: missing\n      };\n\n      if (iconName && prefix && styles$2[prefix] && styles$2[prefix][iconName]) {\n        var icon = styles$2[prefix][iconName];\n        var width = icon[0];\n        var height = icon[1];\n        var vectorData = icon.slice(4);\n        val = {\n          found: true,\n          width: width,\n          height: height,\n          icon: {\n            tag: 'path',\n            attributes: {\n              fill: 'currentColor',\n              d: vectorData[0]\n            }\n          }\n        };\n        return resolve(val);\n      }\n\n      if (iconName && prefix && !config.showMissingIcons) {\n        reject(new MissingIcon(\"Icon is missing for prefix \".concat(prefix, \" with icon name \").concat(iconName)));\n      } else {\n        resolve(val);\n      }\n    });\n  }\n\n  var styles$3 = namespace.styles;\n\n  function generateSvgReplacementMutation(node, nodeMeta) {\n    var iconName = nodeMeta.iconName,\n        title = nodeMeta.title,\n        prefix = nodeMeta.prefix,\n        transform = nodeMeta.transform,\n        symbol = nodeMeta.symbol,\n        mask = nodeMeta.mask,\n        extra = nodeMeta.extra;\n    return new picked(function (resolve, reject) {\n      picked.all([findIcon(iconName, prefix), findIcon(mask.iconName, mask.prefix)]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            main = _ref2[0],\n            mask = _ref2[1];\n\n        resolve([node, makeInlineSvgAbstract({\n          icons: {\n            main: main,\n            mask: mask\n          },\n          prefix: prefix,\n          iconName: iconName,\n          transform: transform,\n          symbol: symbol,\n          mask: mask,\n          title: title,\n          extra: extra,\n          watchable: true\n        })]);\n      });\n    });\n  }\n\n  function generateLayersText(node, nodeMeta) {\n    var title = nodeMeta.title,\n        transform = nodeMeta.transform,\n        extra = nodeMeta.extra;\n    var width = null;\n    var height = null;\n\n    if (IS_IE) {\n      var computedFontSize = parseInt(getComputedStyle(node).fontSize, 10);\n      var boundingClientRect = node.getBoundingClientRect();\n      width = boundingClientRect.width / computedFontSize;\n      height = boundingClientRect.height / computedFontSize;\n    }\n\n    if (config.autoA11y && !title) {\n      extra.attributes['aria-hidden'] = 'true';\n    }\n\n    return picked.resolve([node, makeLayersTextAbstract({\n      content: node.innerHTML,\n      width: width,\n      height: height,\n      transform: transform,\n      title: title,\n      extra: extra,\n      watchable: true\n    })]);\n  }\n\n  function generateMutation(node) {\n    var nodeMeta = parseMeta(node);\n\n    if (~nodeMeta.extra.classes.indexOf(LAYERS_TEXT_CLASSNAME)) {\n      return generateLayersText(node, nodeMeta);\n    } else {\n      return generateSvgReplacementMutation(node, nodeMeta);\n    }\n  }\n\n  function onTree(root) {\n    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (!IS_DOM) return;\n    var htmlClassList = DOCUMENT.documentElement.classList;\n\n    var hclAdd = function hclAdd(suffix) {\n      return htmlClassList.add(\"\".concat(HTML_CLASS_I2SVG_BASE_CLASS, \"-\").concat(suffix));\n    };\n\n    var hclRemove = function hclRemove(suffix) {\n      return htmlClassList.remove(\"\".concat(HTML_CLASS_I2SVG_BASE_CLASS, \"-\").concat(suffix));\n    };\n\n    var prefixes = config.autoFetchSvg ? Object.keys(PREFIX_TO_STYLE) : Object.keys(styles$3);\n    var prefixesDomQuery = [\".\".concat(LAYERS_TEXT_CLASSNAME, \":not([\").concat(DATA_FA_I2SVG, \"])\")].concat(prefixes.map(function (p) {\n      return \".\".concat(p, \":not([\").concat(DATA_FA_I2SVG, \"])\");\n    })).join(', ');\n\n    if (prefixesDomQuery.length === 0) {\n      return;\n    }\n\n    var candidates = toArray(root.querySelectorAll(prefixesDomQuery));\n\n    if (candidates.length > 0) {\n      hclAdd('pending');\n      hclRemove('complete');\n    } else {\n      return;\n    }\n\n    var mark = perf.begin('onTree');\n    var mutations = candidates.reduce(function (acc, node) {\n      try {\n        var mutation = generateMutation(node);\n\n        if (mutation) {\n          acc.push(mutation);\n        }\n      } catch (e) {\n        if (!PRODUCTION) {\n          if (e instanceof MissingIcon) {\n            console.error(e);\n          }\n        }\n      }\n\n      return acc;\n    }, []);\n    return new picked(function (resolve, reject) {\n      picked.all(mutations).then(function (resolvedMutations) {\n        perform(resolvedMutations, function () {\n          hclAdd('active');\n          hclAdd('complete');\n          hclRemove('pending');\n          if (typeof callback === 'function') callback();\n          mark();\n          resolve();\n        });\n      }).catch(function () {\n        mark();\n        reject();\n      });\n    });\n  }\n  function onNode(node) {\n    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    generateMutation(node).then(function (mutation) {\n      if (mutation) {\n        perform([mutation], callback);\n      }\n    });\n  }\n\n  function replaceForPosition(node, position) {\n    var pendingAttribute = \"\".concat(DATA_FA_PSEUDO_ELEMENT_PENDING).concat(position.replace(':', '-'));\n    return new picked(function (resolve, reject) {\n      if (node.getAttribute(pendingAttribute) !== null) {\n        // This node is already being processed\n        return resolve();\n      }\n\n      var children = toArray(node.children);\n      var alreadyProcessedPseudoElement = children.filter(function (c) {\n        return c.getAttribute(DATA_FA_PSEUDO_ELEMENT) === position;\n      })[0];\n      var styles = WINDOW.getComputedStyle(node, position);\n      var fontFamily = styles.getPropertyValue('font-family').match(FONT_FAMILY_PATTERN);\n      var fontWeight = styles.getPropertyValue('font-weight');\n\n      if (alreadyProcessedPseudoElement && !fontFamily) {\n        // If we've already processed it but the current computed style does not result in a font-family,\n        // that probably means that a class name that was previously present to make the icon has been\n        // removed. So we now should delete the icon.\n        node.removeChild(alreadyProcessedPseudoElement);\n        return resolve();\n      } else if (fontFamily) {\n        var content = styles.getPropertyValue('content');\n        var prefix = ~['Light', 'Regular', 'Solid', 'Brands'].indexOf(fontFamily[1]) ? STYLE_TO_PREFIX[fontFamily[1].toLowerCase()] : FONT_WEIGHT_TO_PREFIX[fontWeight];\n        var iconName = byUnicode(prefix, toHex(content.length === 3 ? content.substr(1, 1) : content)); // Only convert the pseudo element in this :before/:after position into an icon if we haven't\n        // already done so with the same prefix and iconName\n\n        if (!alreadyProcessedPseudoElement || alreadyProcessedPseudoElement.getAttribute(DATA_PREFIX) !== prefix || alreadyProcessedPseudoElement.getAttribute(DATA_ICON) !== iconName) {\n          node.setAttribute(pendingAttribute, iconName);\n\n          if (alreadyProcessedPseudoElement) {\n            // Delete the old one, since we're replacing it with a new one\n            node.removeChild(alreadyProcessedPseudoElement);\n          }\n\n          var meta = blankMeta();\n          var extra = meta.extra;\n          extra.attributes[DATA_FA_PSEUDO_ELEMENT] = position;\n          findIcon(iconName, prefix).then(function (main) {\n            var abstract = makeInlineSvgAbstract(_objectSpread({}, meta, {\n              icons: {\n                main: main,\n                mask: emptyCanonicalIcon()\n              },\n              prefix: prefix,\n              iconName: iconName,\n              extra: extra,\n              watchable: true\n            }));\n            var element = DOCUMENT.createElement('svg');\n\n            if (position === ':before') {\n              node.insertBefore(element, node.firstChild);\n            } else {\n              node.appendChild(element);\n            }\n\n            element.outerHTML = abstract.map(function (a) {\n              return toHtml(a);\n            }).join('\\n');\n            node.removeAttribute(pendingAttribute);\n            resolve();\n          }).catch(reject);\n        } else {\n          resolve();\n        }\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  function replace(node) {\n    return picked.all([replaceForPosition(node, ':before'), replaceForPosition(node, ':after')]);\n  }\n\n  function processable(node) {\n    return node.parentNode !== document.head && !~TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS.indexOf(node.tagName.toUpperCase()) && !node.getAttribute(DATA_FA_PSEUDO_ELEMENT) && (!node.parentNode || node.parentNode.tagName !== 'svg');\n  }\n\n  function searchPseudoElements (root) {\n    if (!IS_DOM) return;\n    return new picked(function (resolve, reject) {\n      var operations = toArray(root.querySelectorAll('*')).filter(processable).map(replace);\n      var end = perf.begin('searchPseudoElements');\n      disableObservation();\n      picked.all(operations).then(function () {\n        end();\n        enableObservation();\n        resolve();\n      }).catch(function () {\n        end();\n        enableObservation();\n        reject();\n      });\n    });\n  }\n\n  var baseStyles = \"svg:not(:root).svg-inline--fa {\\n  overflow: visible;\\n}\\n\\n.svg-inline--fa {\\n  display: inline-block;\\n  font-size: inherit;\\n  height: 1em;\\n  overflow: visible;\\n  vertical-align: -0.125em;\\n}\\n.svg-inline--fa.fa-lg {\\n  vertical-align: -0.225em;\\n}\\n.svg-inline--fa.fa-w-1 {\\n  width: 0.0625em;\\n}\\n.svg-inline--fa.fa-w-2 {\\n  width: 0.125em;\\n}\\n.svg-inline--fa.fa-w-3 {\\n  width: 0.1875em;\\n}\\n.svg-inline--fa.fa-w-4 {\\n  width: 0.25em;\\n}\\n.svg-inline--fa.fa-w-5 {\\n  width: 0.3125em;\\n}\\n.svg-inline--fa.fa-w-6 {\\n  width: 0.375em;\\n}\\n.svg-inline--fa.fa-w-7 {\\n  width: 0.4375em;\\n}\\n.svg-inline--fa.fa-w-8 {\\n  width: 0.5em;\\n}\\n.svg-inline--fa.fa-w-9 {\\n  width: 0.5625em;\\n}\\n.svg-inline--fa.fa-w-10 {\\n  width: 0.625em;\\n}\\n.svg-inline--fa.fa-w-11 {\\n  width: 0.6875em;\\n}\\n.svg-inline--fa.fa-w-12 {\\n  width: 0.75em;\\n}\\n.svg-inline--fa.fa-w-13 {\\n  width: 0.8125em;\\n}\\n.svg-inline--fa.fa-w-14 {\\n  width: 0.875em;\\n}\\n.svg-inline--fa.fa-w-15 {\\n  width: 0.9375em;\\n}\\n.svg-inline--fa.fa-w-16 {\\n  width: 1em;\\n}\\n.svg-inline--fa.fa-w-17 {\\n  width: 1.0625em;\\n}\\n.svg-inline--fa.fa-w-18 {\\n  width: 1.125em;\\n}\\n.svg-inline--fa.fa-w-19 {\\n  width: 1.1875em;\\n}\\n.svg-inline--fa.fa-w-20 {\\n  width: 1.25em;\\n}\\n.svg-inline--fa.fa-pull-left {\\n  margin-right: 0.3em;\\n  width: auto;\\n}\\n.svg-inline--fa.fa-pull-right {\\n  margin-left: 0.3em;\\n  width: auto;\\n}\\n.svg-inline--fa.fa-border {\\n  height: 1.5em;\\n}\\n.svg-inline--fa.fa-li {\\n  width: 2em;\\n}\\n.svg-inline--fa.fa-fw {\\n  width: 1.25em;\\n}\\n\\n.fa-layers svg.svg-inline--fa {\\n  bottom: 0;\\n  left: 0;\\n  margin: auto;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n}\\n\\n.fa-layers {\\n  display: inline-block;\\n  height: 1em;\\n  position: relative;\\n  text-align: center;\\n  vertical-align: -0.125em;\\n  width: 1em;\\n}\\n.fa-layers svg.svg-inline--fa {\\n  -webkit-transform-origin: center center;\\n          transform-origin: center center;\\n}\\n\\n.fa-layers-counter, .fa-layers-text {\\n  display: inline-block;\\n  position: absolute;\\n  text-align: center;\\n}\\n\\n.fa-layers-text {\\n  left: 50%;\\n  top: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  -webkit-transform-origin: center center;\\n          transform-origin: center center;\\n}\\n\\n.fa-layers-counter {\\n  background-color: #ff253a;\\n  border-radius: 1em;\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  color: #fff;\\n  height: 1.5em;\\n  line-height: 1;\\n  max-width: 5em;\\n  min-width: 1.5em;\\n  overflow: hidden;\\n  padding: 0.25em;\\n  right: 0;\\n  text-overflow: ellipsis;\\n  top: 0;\\n  -webkit-transform: scale(0.25);\\n          transform: scale(0.25);\\n  -webkit-transform-origin: top right;\\n          transform-origin: top right;\\n}\\n\\n.fa-layers-bottom-right {\\n  bottom: 0;\\n  right: 0;\\n  top: auto;\\n  -webkit-transform: scale(0.25);\\n          transform: scale(0.25);\\n  -webkit-transform-origin: bottom right;\\n          transform-origin: bottom right;\\n}\\n\\n.fa-layers-bottom-left {\\n  bottom: 0;\\n  left: 0;\\n  right: auto;\\n  top: auto;\\n  -webkit-transform: scale(0.25);\\n          transform: scale(0.25);\\n  -webkit-transform-origin: bottom left;\\n          transform-origin: bottom left;\\n}\\n\\n.fa-layers-top-right {\\n  right: 0;\\n  top: 0;\\n  -webkit-transform: scale(0.25);\\n          transform: scale(0.25);\\n  -webkit-transform-origin: top right;\\n          transform-origin: top right;\\n}\\n\\n.fa-layers-top-left {\\n  left: 0;\\n  right: auto;\\n  top: 0;\\n  -webkit-transform: scale(0.25);\\n          transform: scale(0.25);\\n  -webkit-transform-origin: top left;\\n          transform-origin: top left;\\n}\\n\\n.fa-lg {\\n  font-size: 1.3333333333em;\\n  line-height: 0.75em;\\n  vertical-align: -0.0667em;\\n}\\n\\n.fa-xs {\\n  font-size: 0.75em;\\n}\\n\\n.fa-sm {\\n  font-size: 0.875em;\\n}\\n\\n.fa-1x {\\n  font-size: 1em;\\n}\\n\\n.fa-2x {\\n  font-size: 2em;\\n}\\n\\n.fa-3x {\\n  font-size: 3em;\\n}\\n\\n.fa-4x {\\n  font-size: 4em;\\n}\\n\\n.fa-5x {\\n  font-size: 5em;\\n}\\n\\n.fa-6x {\\n  font-size: 6em;\\n}\\n\\n.fa-7x {\\n  font-size: 7em;\\n}\\n\\n.fa-8x {\\n  font-size: 8em;\\n}\\n\\n.fa-9x {\\n  font-size: 9em;\\n}\\n\\n.fa-10x {\\n  font-size: 10em;\\n}\\n\\n.fa-fw {\\n  text-align: center;\\n  width: 1.25em;\\n}\\n\\n.fa-ul {\\n  list-style-type: none;\\n  margin-left: 2.5em;\\n  padding-left: 0;\\n}\\n.fa-ul > li {\\n  position: relative;\\n}\\n\\n.fa-li {\\n  left: -2em;\\n  position: absolute;\\n  text-align: center;\\n  width: 2em;\\n  line-height: inherit;\\n}\\n\\n.fa-border {\\n  border: solid 0.08em #eee;\\n  border-radius: 0.1em;\\n  padding: 0.2em 0.25em 0.15em;\\n}\\n\\n.fa-pull-left {\\n  float: left;\\n}\\n\\n.fa-pull-right {\\n  float: right;\\n}\\n\\n.fa.fa-pull-left,\\n.fas.fa-pull-left,\\n.far.fa-pull-left,\\n.fal.fa-pull-left,\\n.fab.fa-pull-left {\\n  margin-right: 0.3em;\\n}\\n.fa.fa-pull-right,\\n.fas.fa-pull-right,\\n.far.fa-pull-right,\\n.fal.fa-pull-right,\\n.fab.fa-pull-right {\\n  margin-left: 0.3em;\\n}\\n\\n.fa-spin {\\n  -webkit-animation: fa-spin 2s infinite linear;\\n          animation: fa-spin 2s infinite linear;\\n}\\n\\n.fa-pulse {\\n  -webkit-animation: fa-spin 1s infinite steps(8);\\n          animation: fa-spin 1s infinite steps(8);\\n}\\n\\n@-webkit-keyframes fa-spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes fa-spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg);\\n  }\\n}\\n.fa-rotate-90 {\\n  -ms-filter: \\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\\\";\\n  -webkit-transform: rotate(90deg);\\n          transform: rotate(90deg);\\n}\\n\\n.fa-rotate-180 {\\n  -ms-filter: \\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\\\";\\n  -webkit-transform: rotate(180deg);\\n          transform: rotate(180deg);\\n}\\n\\n.fa-rotate-270 {\\n  -ms-filter: \\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\\\";\\n  -webkit-transform: rotate(270deg);\\n          transform: rotate(270deg);\\n}\\n\\n.fa-flip-horizontal {\\n  -ms-filter: \\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\\\";\\n  -webkit-transform: scale(-1, 1);\\n          transform: scale(-1, 1);\\n}\\n\\n.fa-flip-vertical {\\n  -ms-filter: \\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\\\";\\n  -webkit-transform: scale(1, -1);\\n          transform: scale(1, -1);\\n}\\n\\n.fa-flip-both, .fa-flip-horizontal.fa-flip-vertical {\\n  -ms-filter: \\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\\\";\\n  -webkit-transform: scale(-1, -1);\\n          transform: scale(-1, -1);\\n}\\n\\n:root .fa-rotate-90,\\n:root .fa-rotate-180,\\n:root .fa-rotate-270,\\n:root .fa-flip-horizontal,\\n:root .fa-flip-vertical,\\n:root .fa-flip-both {\\n  -webkit-filter: none;\\n          filter: none;\\n}\\n\\n.fa-stack {\\n  display: inline-block;\\n  height: 2em;\\n  position: relative;\\n  width: 2.5em;\\n}\\n\\n.fa-stack-1x,\\n.fa-stack-2x {\\n  bottom: 0;\\n  left: 0;\\n  margin: auto;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n}\\n\\n.svg-inline--fa.fa-stack-1x {\\n  height: 1em;\\n  width: 1.25em;\\n}\\n.svg-inline--fa.fa-stack-2x {\\n  height: 2em;\\n  width: 2.5em;\\n}\\n\\n.fa-inverse {\\n  color: #fff;\\n}\\n\\n.sr-only {\\n  border: 0;\\n  clip: rect(0, 0, 0, 0);\\n  height: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n  width: 1px;\\n}\\n\\n.sr-only-focusable:active, .sr-only-focusable:focus {\\n  clip: auto;\\n  height: auto;\\n  margin: 0;\\n  overflow: visible;\\n  position: static;\\n  width: auto;\\n}\";\n\n  function css () {\n    var dfp = DEFAULT_FAMILY_PREFIX;\n    var drc = DEFAULT_REPLACEMENT_CLASS;\n    var fp = config.familyPrefix;\n    var rc = config.replacementClass;\n    var s = baseStyles;\n\n    if (fp !== dfp || rc !== drc) {\n      var dPatt = new RegExp(\"\\\\.\".concat(dfp, \"\\\\-\"), 'g');\n      var rPatt = new RegExp(\"\\\\.\".concat(drc), 'g');\n      s = s.replace(dPatt, \".\".concat(fp, \"-\")).replace(rPatt, \".\".concat(rc));\n    }\n\n    return s;\n  }\n\n  var Library =\n  /*#__PURE__*/\n  function () {\n    function Library() {\n      _classCallCheck(this, Library);\n\n      this.definitions = {};\n    }\n\n    _createClass(Library, [{\n      key: \"add\",\n      value: function add() {\n        var _this = this;\n\n        for (var _len = arguments.length, definitions = new Array(_len), _key = 0; _key < _len; _key++) {\n          definitions[_key] = arguments[_key];\n        }\n\n        var additions = definitions.reduce(this._pullDefinitions, {});\n        Object.keys(additions).forEach(function (key) {\n          _this.definitions[key] = _objectSpread({}, _this.definitions[key] || {}, additions[key]);\n          defineIcons(key, additions[key]);\n          build();\n        });\n      }\n    }, {\n      key: \"reset\",\n      value: function reset() {\n        this.definitions = {};\n      }\n    }, {\n      key: \"_pullDefinitions\",\n      value: function _pullDefinitions(additions, definition) {\n        var normalized = definition.prefix && definition.iconName && definition.icon ? {\n          0: definition\n        } : definition;\n        Object.keys(normalized).map(function (key) {\n          var _normalized$key = normalized[key],\n              prefix = _normalized$key.prefix,\n              iconName = _normalized$key.iconName,\n              icon = _normalized$key.icon;\n          if (!additions[prefix]) additions[prefix] = {};\n          additions[prefix][iconName] = icon;\n        });\n        return additions;\n      }\n    }]);\n\n    return Library;\n  }();\n\n  function prepIcon(icon) {\n    var width = icon[0];\n    var height = icon[1];\n    var vectorData = icon.slice(4);\n    return {\n      found: true,\n      width: width,\n      height: height,\n      icon: {\n        tag: 'path',\n        attributes: {\n          fill: 'currentColor',\n          d: vectorData[0]\n        }\n      }\n    };\n  }\n\n  function ensureCss() {\n    if (config.autoAddCss && !_cssInserted) {\n      insertCss(css());\n\n      _cssInserted = true;\n    }\n  }\n\n  function apiObject(val, abstractCreator) {\n    Object.defineProperty(val, 'abstract', {\n      get: abstractCreator\n    });\n    Object.defineProperty(val, 'html', {\n      get: function get() {\n        return val.abstract.map(function (a) {\n          return toHtml(a);\n        });\n      }\n    });\n    Object.defineProperty(val, 'node', {\n      get: function get() {\n        if (!IS_DOM) return;\n        var container = DOCUMENT.createElement('div');\n        container.innerHTML = val.html;\n        return container.children;\n      }\n    });\n    return val;\n  }\n\n  function findIconDefinition(iconLookup) {\n    var _iconLookup$prefix = iconLookup.prefix,\n        prefix = _iconLookup$prefix === void 0 ? 'fa' : _iconLookup$prefix,\n        iconName = iconLookup.iconName;\n    if (!iconName) return;\n    return iconFromMapping(library.definitions, prefix, iconName) || iconFromMapping(namespace.styles, prefix, iconName);\n  }\n\n  function resolveIcons(next) {\n    return function (maybeIconDefinition) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var iconDefinition = (maybeIconDefinition || {}).icon ? maybeIconDefinition : findIconDefinition(maybeIconDefinition || {});\n      var mask = params.mask;\n\n      if (mask) {\n        mask = (mask || {}).icon ? mask : findIconDefinition(mask || {});\n      }\n\n      return next(iconDefinition, _objectSpread({}, params, {\n        mask: mask\n      }));\n    };\n  }\n\n  var library = new Library();\n  var noAuto = function noAuto() {\n    config.autoReplaceSvg = false;\n    config.observeMutations = false;\n    disconnect();\n  };\n  var _cssInserted = false;\n  var dom = {\n    i2svg: function i2svg() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (IS_DOM) {\n        ensureCss();\n        var _params$node = params.node,\n            node = _params$node === void 0 ? DOCUMENT : _params$node,\n            _params$callback = params.callback,\n            callback = _params$callback === void 0 ? function () {} : _params$callback;\n\n        if (config.searchPseudoElements) {\n          searchPseudoElements(node);\n        }\n\n        return onTree(node, callback);\n      } else {\n        return picked.reject('Operation requires a DOM of some kind.');\n      }\n    },\n    css: css,\n    insertCss: function insertCss$$1() {\n      if (!_cssInserted) {\n        insertCss(css());\n\n        _cssInserted = true;\n      }\n    },\n    watch: function watch() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var autoReplaceSvgRoot = params.autoReplaceSvgRoot,\n          observeMutationsRoot = params.observeMutationsRoot;\n\n      if (config.autoReplaceSvg === false) {\n        config.autoReplaceSvg = true;\n      }\n\n      config.observeMutations = true;\n      domready(function () {\n        autoReplace({\n          autoReplaceSvgRoot: autoReplaceSvgRoot\n        });\n        observe({\n          treeCallback: onTree,\n          nodeCallback: onNode,\n          pseudoElementsCallback: searchPseudoElements,\n          observeMutationsRoot: observeMutationsRoot\n        });\n      });\n    }\n  };\n  var parse = {\n    transform: function transform(transformString) {\n      return parseTransformString(transformString);\n    }\n  };\n  var icon = resolveIcons(function (iconDefinition) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _params$transform = params.transform,\n        transform = _params$transform === void 0 ? meaninglessTransform : _params$transform,\n        _params$symbol = params.symbol,\n        symbol = _params$symbol === void 0 ? false : _params$symbol,\n        _params$mask = params.mask,\n        mask = _params$mask === void 0 ? null : _params$mask,\n        _params$title = params.title,\n        title = _params$title === void 0 ? null : _params$title,\n        _params$classes = params.classes,\n        classes = _params$classes === void 0 ? [] : _params$classes,\n        _params$attributes = params.attributes,\n        attributes = _params$attributes === void 0 ? {} : _params$attributes,\n        _params$styles = params.styles,\n        styles = _params$styles === void 0 ? {} : _params$styles;\n    if (!iconDefinition) return;\n    var prefix = iconDefinition.prefix,\n        iconName = iconDefinition.iconName,\n        icon = iconDefinition.icon;\n    return apiObject(_objectSpread({\n      type: 'icon'\n    }, iconDefinition), function () {\n      ensureCss();\n\n      if (config.autoA11y) {\n        if (title) {\n          attributes['aria-labelledby'] = \"\".concat(config.replacementClass, \"-title-\").concat(nextUniqueId());\n        } else {\n          attributes['aria-hidden'] = 'true';\n          attributes['focusable'] = 'false';\n        }\n      }\n\n      return makeInlineSvgAbstract({\n        icons: {\n          main: prepIcon(icon),\n          mask: mask ? prepIcon(mask.icon) : {\n            found: false,\n            width: null,\n            height: null,\n            icon: {}\n          }\n        },\n        prefix: prefix,\n        iconName: iconName,\n        transform: _objectSpread({}, meaninglessTransform, transform),\n        symbol: symbol,\n        title: title,\n        extra: {\n          attributes: attributes,\n          styles: styles,\n          classes: classes\n        }\n      });\n    });\n  });\n  var text = function text(content) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _params$transform2 = params.transform,\n        transform = _params$transform2 === void 0 ? meaninglessTransform : _params$transform2,\n        _params$title2 = params.title,\n        title = _params$title2 === void 0 ? null : _params$title2,\n        _params$classes2 = params.classes,\n        classes = _params$classes2 === void 0 ? [] : _params$classes2,\n        _params$attributes2 = params.attributes,\n        attributes = _params$attributes2 === void 0 ? {} : _params$attributes2,\n        _params$styles2 = params.styles,\n        styles = _params$styles2 === void 0 ? {} : _params$styles2;\n    return apiObject({\n      type: 'text',\n      content: content\n    }, function () {\n      ensureCss();\n      return makeLayersTextAbstract({\n        content: content,\n        transform: _objectSpread({}, meaninglessTransform, transform),\n        title: title,\n        extra: {\n          attributes: attributes,\n          styles: styles,\n          classes: [\"\".concat(config.familyPrefix, \"-layers-text\")].concat(_toConsumableArray(classes))\n        }\n      });\n    });\n  };\n  var counter = function counter(content) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _params$title3 = params.title,\n        title = _params$title3 === void 0 ? null : _params$title3,\n        _params$classes3 = params.classes,\n        classes = _params$classes3 === void 0 ? [] : _params$classes3,\n        _params$attributes3 = params.attributes,\n        attributes = _params$attributes3 === void 0 ? {} : _params$attributes3,\n        _params$styles3 = params.styles,\n        styles = _params$styles3 === void 0 ? {} : _params$styles3;\n    return apiObject({\n      type: 'counter',\n      content: content\n    }, function () {\n      ensureCss();\n      return makeLayersCounterAbstract({\n        content: content.toString(),\n        title: title,\n        extra: {\n          attributes: attributes,\n          styles: styles,\n          classes: [\"\".concat(config.familyPrefix, \"-layers-counter\")].concat(_toConsumableArray(classes))\n        }\n      });\n    });\n  };\n  var layer = function layer(assembler) {\n    return apiObject({\n      type: 'layer'\n    }, function () {\n      ensureCss();\n      var children = [];\n      assembler(function (args) {\n        Array.isArray(args) ? args.map(function (a) {\n          children = children.concat(a.abstract);\n        }) : children = children.concat(args.abstract);\n      });\n      return [{\n        tag: 'span',\n        attributes: {\n          class: \"\".concat(config.familyPrefix, \"-layers\")\n        },\n        children: children\n      }];\n    });\n  };\n  var api = {\n    noAuto: noAuto,\n    config: config,\n    dom: dom,\n    library: library,\n    parse: parse,\n    findIconDefinition: findIconDefinition,\n    icon: icon,\n    text: text,\n    counter: counter,\n    layer: layer,\n    toHtml: toHtml\n  };\n\n  var autoReplace = function autoReplace() {\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _params$autoReplaceSv = params.autoReplaceSvgRoot,\n        autoReplaceSvgRoot = _params$autoReplaceSv === void 0 ? DOCUMENT : _params$autoReplaceSv;\n    if ((Object.keys(namespace.styles).length > 0 || config.autoFetchSvg) && IS_DOM && config.autoReplaceSvg) api.dom.i2svg({\n      node: autoReplaceSvgRoot\n    });\n  };\n\n  exports.icon = icon;\n  exports.noAuto = noAuto;\n  exports.config = config;\n  exports.toHtml = toHtml;\n  exports.layer = layer;\n  exports.text = text;\n  exports.counter = counter;\n  exports.library = library;\n  exports.dom = dom;\n  exports.parse = parse;\n  exports.findIconDefinition = findIconDefinition;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n",null,"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global['free-solid-svg-icons'] = {})));\n}(this, (function (exports) { 'use strict';\n\n  var prefix = \"fas\";\n  var faAd = {\n    prefix: 'fas',\n    iconName: 'ad',\n    icon: [512, 512, [], \"f641\", \"M157.52 272h36.96L176 218.78 157.52 272zM352 256c-13.23 0-24 10.77-24 24s10.77 24 24 24 24-10.77 24-24-10.77-24-24-24zM464 64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM250.58 352h-16.94c-6.81 0-12.88-4.32-15.12-10.75L211.15 320h-70.29l-7.38 21.25A16 16 0 0 1 118.36 352h-16.94c-11.01 0-18.73-10.85-15.12-21.25L140 176.12A23.995 23.995 0 0 1 162.67 160h26.66A23.99 23.99 0 0 1 212 176.13l53.69 154.62c3.61 10.4-4.11 21.25-15.11 21.25zM424 336c0 8.84-7.16 16-16 16h-16c-4.85 0-9.04-2.27-11.98-5.68-8.62 3.66-18.09 5.68-28.02 5.68-39.7 0-72-32.3-72-72s32.3-72 72-72c8.46 0 16.46 1.73 24 4.42V176c0-8.84 7.16-16 16-16h16c8.84 0 16 7.16 16 16v160z\"]\n  };\n  var faAddressBook = {\n    prefix: 'fas',\n    iconName: 'address-book',\n    icon: [448, 512, [], \"f2b9\", \"M436 160c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h320c26.5 0 48-21.5 48-48v-48h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20v-64h20zm-228-32c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H118.4C106 384 96 375.4 96 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2z\"]\n  };\n  var faAddressCard = {\n    prefix: 'fas',\n    iconName: 'address-card',\n    icon: [576, 512, [], \"f2bb\", \"M528 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-352 96c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H86.4C74 384 64 375.4 64 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2zM512 312c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-64c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-64c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16z\"]\n  };\n  var faAdjust = {\n    prefix: 'fas',\n    iconName: 'adjust',\n    icon: [512, 512, [], \"f042\", \"M8 256c0 136.966 111.033 248 248 248s248-111.034 248-248S392.966 8 256 8 8 119.033 8 256zm248 184V72c101.705 0 184 82.311 184 184 0 101.705-82.311 184-184 184z\"]\n  };\n  var faAirFreshener = {\n    prefix: 'fas',\n    iconName: 'air-freshener',\n    icon: [384, 512, [], \"f5d0\", \"M378.94 321.41L284.7 224h49.22c15.3 0 23.66-16.6 13.86-27.53L234.45 69.96c3.43-6.61 5.55-14 5.55-21.96 0-26.51-21.49-48-48-48s-48 21.49-48 48c0 7.96 2.12 15.35 5.55 21.96L36.22 196.47C26.42 207.4 34.78 224 50.08 224H99.3L5.06 321.41C-6.69 333.56 3.34 352 21.7 352H160v32H48c-8.84 0-16 7.16-16 16v96c0 8.84 7.16 16 16 16h288c8.84 0 16-7.16 16-16v-96c0-8.84-7.16-16-16-16H224v-32h138.3c18.36 0 28.39-18.44 16.64-30.59zM192 31.98c8.85 0 16.02 7.17 16.02 16.02 0 8.84-7.17 16.02-16.02 16.02S175.98 56.84 175.98 48c0-8.85 7.17-16.02 16.02-16.02zM304 432v32H80v-32h224z\"]\n  };\n  var faAlignCenter = {\n    prefix: 'fas',\n    iconName: 'align-center',\n    icon: [448, 512, [], \"f037\", \"M352 44v40c0 8.837-7.163 16-16 16H112c-8.837 0-16-7.163-16-16V44c0-8.837 7.163-16 16-16h224c8.837 0 16 7.163 16 16zM16 228h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 256h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm320-200H112c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16h224c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16z\"]\n  };\n  var faAlignJustify = {\n    prefix: 'fas',\n    iconName: 'align-justify',\n    icon: [448, 512, [], \"f039\", \"M0 84V44c0-8.837 7.163-16 16-16h416c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16zm16 144h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 256h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0-128h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"]\n  };\n  var faAlignLeft = {\n    prefix: 'fas',\n    iconName: 'align-left',\n    icon: [448, 512, [], \"f036\", \"M288 44v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16V44c0-8.837 7.163-16 16-16h256c8.837 0 16 7.163 16 16zM0 172v40c0 8.837 7.163 16 16 16h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16zm16 312h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm256-200H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16z\"]\n  };\n  var faAlignRight = {\n    prefix: 'fas',\n    iconName: 'align-right',\n    icon: [448, 512, [], \"f038\", \"M160 84V44c0-8.837 7.163-16 16-16h256c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H176c-8.837 0-16-7.163-16-16zM16 228h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 256h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm160-128h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H176c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"]\n  };\n  var faAllergies = {\n    prefix: 'fas',\n    iconName: 'allergies',\n    icon: [448, 512, [], \"f461\", \"M416 112c-17.6 0-32 14.4-32 32v72c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8V64c0-17.6-14.4-32-32-32s-32 14.4-32 32v152c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8V32c0-17.6-14.4-32-32-32s-32 14.4-32 32v184c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8V64c0-17.6-14.4-32-32-32S96 46.4 96 64v241l-23.6-32.5c-13-17.9-38-21.8-55.9-8.8s-21.8 38-8.8 55.9l125.6 172.7c9 12.4 23.5 19.8 38.8 19.8h197.6c22.3 0 41.6-15.3 46.7-37l26.5-112.7c3.2-13.7 4.9-28.3 5.1-42.3V144c0-17.6-14.4-32-32-32zM176 416c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-96c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm64 128c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-96c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm64 32c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm32 64c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm32-128c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z\"]\n  };\n  var faAmbulance = {\n    prefix: 'fas',\n    iconName: 'ambulance',\n    icon: [640, 512, [], \"f0f9\", \"M624 352h-16V243.9c0-12.7-5.1-24.9-14.1-33.9L494 110.1c-9-9-21.2-14.1-33.9-14.1H416V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h16c0 53 43 96 96 96s96-43 96-96h128c0 53 43 96 96 96s96-43 96-96h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM160 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm144-248c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48zm176 248c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-208H416V144h44.1l99.9 99.9V256z\"]\n  };\n  var faAmericanSignLanguageInterpreting = {\n    prefix: 'fas',\n    iconName: 'american-sign-language-interpreting',\n    icon: [640, 512, [], \"f2a3\", \"M290.547 189.039c-20.295-10.149-44.147-11.199-64.739-3.89 42.606 0 71.208 20.475 85.578 50.576 8.576 17.899-5.148 38.071-23.617 38.071 18.429 0 32.211 20.136 23.617 38.071-14.725 30.846-46.123 50.854-80.298 50.854-.557 0-94.471-8.615-94.471-8.615l-66.406 33.347c-9.384 4.693-19.815.379-23.895-7.781L1.86 290.747c-4.167-8.615-1.111-18.897 6.946-23.621l58.072-33.069L108 159.861c6.39-57.245 34.731-109.767 79.743-146.726 11.391-9.448 28.341-7.781 37.51 3.613 9.446 11.394 7.78 28.067-3.612 37.516-12.503 10.559-23.618 22.509-32.509 35.57 21.672-14.729 46.679-24.732 74.186-28.067 14.725-1.945 28.063 8.336 29.73 23.065 1.945 14.728-8.336 28.067-23.062 29.734-16.116 1.945-31.12 7.503-44.178 15.284 26.114-5.713 58.712-3.138 88.079 11.115 13.336 6.669 18.893 22.509 12.224 35.848-6.389 13.06-22.504 18.617-35.564 12.226zm-27.229 69.472c-6.112-12.505-18.338-20.286-32.231-20.286a35.46 35.46 0 0 0-35.565 35.57c0 21.428 17.808 35.57 35.565 35.57 13.893 0 26.119-7.781 32.231-20.286 4.446-9.449 13.614-15.006 23.339-15.284-9.725-.277-18.893-5.835-23.339-15.284zm374.821-37.237c4.168 8.615 1.111 18.897-6.946 23.621l-58.071 33.069L532 352.16c-6.39 57.245-34.731 109.767-79.743 146.726-10.932 9.112-27.799 8.144-37.51-3.613-9.446-11.394-7.78-28.067 3.613-37.516 12.503-10.559 23.617-22.509 32.508-35.57-21.672 14.729-46.679 24.732-74.186 28.067-10.021 2.506-27.552-5.643-29.73-23.065-1.945-14.728 8.336-28.067 23.062-29.734 16.116-1.946 31.12-7.503 44.178-15.284-26.114 5.713-58.712 3.138-88.079-11.115-13.336-6.669-18.893-22.509-12.224-35.848 6.389-13.061 22.505-18.619 35.565-12.227 20.295 10.149 44.147 11.199 64.739 3.89-42.606 0-71.208-20.475-85.578-50.576-8.576-17.899 5.148-38.071 23.617-38.071-18.429 0-32.211-20.136-23.617-38.071 14.033-29.396 44.039-50.887 81.966-50.854l92.803 8.615 66.406-33.347c9.408-4.704 19.828-.354 23.894 7.781l44.455 88.926zm-229.227-18.618c-13.893 0-26.119 7.781-32.231 20.286-4.446 9.449-13.614 15.006-23.339 15.284 9.725.278 18.893 5.836 23.339 15.284 6.112 12.505 18.338 20.286 32.231 20.286a35.46 35.46 0 0 0 35.565-35.57c0-21.429-17.808-35.57-35.565-35.57z\"]\n  };\n  var faAnchor = {\n    prefix: 'fas',\n    iconName: 'anchor',\n    icon: [576, 512, [], \"f13d\", \"M12.971 352h32.394C67.172 454.735 181.944 512 288 512c106.229 0 220.853-57.38 242.635-160h32.394c10.691 0 16.045-12.926 8.485-20.485l-67.029-67.029c-4.686-4.686-12.284-4.686-16.971 0l-67.029 67.029c-7.56 7.56-2.206 20.485 8.485 20.485h35.146c-20.29 54.317-84.963 86.588-144.117 94.015V256h52c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-52v-5.47c37.281-13.178 63.995-48.725 64-90.518C384.005 43.772 341.605.738 289.37.01 235.723-.739 192 42.525 192 96c0 41.798 26.716 77.35 64 90.53V192h-52c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h52v190.015c-58.936-7.399-123.82-39.679-144.117-94.015h35.146c10.691 0 16.045-12.926 8.485-20.485l-67.029-67.029c-4.686-4.686-12.284-4.686-16.971 0L4.485 331.515C-3.074 339.074 2.28 352 12.971 352zM288 64c17.645 0 32 14.355 32 32s-14.355 32-32 32-32-14.355-32-32 14.355-32 32-32z\"]\n  };\n  var faAngleDoubleDown = {\n    prefix: 'fas',\n    iconName: 'angle-double-down',\n    icon: [320, 512, [], \"f103\", \"M143 256.3L7 120.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0L313 86.3c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.4 9.5-24.6 9.5-34 .1zm34 192l136-136c9.4-9.4 9.4-24.6 0-33.9l-22.6-22.6c-9.4-9.4-24.6-9.4-33.9 0L160 352.1l-96.4-96.4c-9.4-9.4-24.6-9.4-33.9 0L7 278.3c-9.4 9.4-9.4 24.6 0 33.9l136 136c9.4 9.5 24.6 9.5 34 .1z\"]\n  };\n  var faAngleDoubleLeft = {\n    prefix: 'fas',\n    iconName: 'angle-double-left',\n    icon: [448, 512, [], \"f100\", \"M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z\"]\n  };\n  var faAngleDoubleRight = {\n    prefix: 'fas',\n    iconName: 'angle-double-right',\n    icon: [448, 512, [], \"f101\", \"M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z\"]\n  };\n  var faAngleDoubleUp = {\n    prefix: 'fas',\n    iconName: 'angle-double-up',\n    icon: [320, 512, [], \"f102\", \"M177 255.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 351.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 425.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1zm-34-192L7 199.7c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l96.4-96.4 96.4 96.4c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9l-136-136c-9.2-9.4-24.4-9.4-33.8 0z\"]\n  };\n  var faAngleDown = {\n    prefix: 'fas',\n    iconName: 'angle-down',\n    icon: [320, 512, [], \"f107\", \"M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z\"]\n  };\n  var faAngleLeft = {\n    prefix: 'fas',\n    iconName: 'angle-left',\n    icon: [256, 512, [], \"f104\", \"M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z\"]\n  };\n  var faAngleRight = {\n    prefix: 'fas',\n    iconName: 'angle-right',\n    icon: [256, 512, [], \"f105\", \"M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z\"]\n  };\n  var faAngleUp = {\n    prefix: 'fas',\n    iconName: 'angle-up',\n    icon: [320, 512, [], \"f106\", \"M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z\"]\n  };\n  var faAngry = {\n    prefix: 'fas',\n    iconName: 'angry',\n    icon: [496, 512, [], \"f556\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM136 240c0-9.3 4.1-17.5 10.5-23.4l-31-9.3c-8.5-2.5-13.3-11.5-10.7-19.9 2.5-8.5 11.4-13.2 19.9-10.7l80 24c8.5 2.5 13.3 11.5 10.7 19.9-2.1 6.9-8.4 11.4-15.3 11.4-.5 0-1.1-.2-1.7-.2.7 2.7 1.7 5.3 1.7 8.2 0 17.7-14.3 32-32 32S136 257.7 136 240zm168 154.2c-27.8-33.4-84.2-33.4-112.1 0-13.5 16.3-38.2-4.2-24.6-20.5 20-24 49.4-37.8 80.6-37.8s60.6 13.8 80.6 37.8c13.8 16.5-11.1 36.6-24.5 20.5zm76.6-186.9l-31 9.3c6.3 5.8 10.5 14.1 10.5 23.4 0 17.7-14.3 32-32 32s-32-14.3-32-32c0-2.9.9-5.6 1.7-8.2-.6.1-1.1.2-1.7.2-6.9 0-13.2-4.5-15.3-11.4-2.5-8.5 2.3-17.4 10.7-19.9l80-24c8.4-2.5 17.4 2.3 19.9 10.7 2.5 8.5-2.3 17.4-10.8 19.9z\"]\n  };\n  var faAnkh = {\n    prefix: 'fas',\n    iconName: 'ankh',\n    icon: [320, 512, [], \"f644\", \"M296 256h-44.62C272.46 222.01 288 181.65 288 144 288 55.63 230.69 0 160 0S32 55.63 32 144c0 37.65 15.54 78.01 36.62 112H24c-13.25 0-24 10.74-24 24v32c0 13.25 10.75 24 24 24h96v152c0 13.25 10.75 24 24 24h32c13.25 0 24-10.75 24-24V336h96c13.25 0 24-10.75 24-24v-32c0-13.26-10.75-24-24-24zM160 80c29.61 0 48 24.52 48 64 0 34.66-27.14 78.14-48 100.87-20.86-22.72-48-66.21-48-100.87 0-39.48 18.39-64 48-64z\"]\n  };\n  var faAppleAlt = {\n    prefix: 'fas',\n    iconName: 'apple-alt',\n    icon: [448, 512, [], \"f5d1\", \"M350.85 129c25.97 4.67 47.27 18.67 63.92 42 14.65 20.67 24.64 46.67 29.96 78 4.67 28.67 4.32 57.33-1 86-7.99 47.33-23.97 87-47.94 119-28.64 38.67-64.59 58-107.87 58-10.66 0-22.3-3.33-34.96-10-8.66-5.33-18.31-8-28.97-8s-20.3 2.67-28.97 8c-12.66 6.67-24.3 10-34.96 10-43.28 0-79.23-19.33-107.87-58-23.97-32-39.95-71.67-47.94-119-5.32-28.67-5.67-57.33-1-86 5.32-31.33 15.31-57.33 29.96-78 16.65-23.33 37.95-37.33 63.92-42 15.98-2.67 37.95-.33 65.92 7 23.97 6.67 44.28 14.67 60.93 24 16.65-9.33 36.96-17.33 60.93-24 27.98-7.33 49.96-9.67 65.94-7zm-54.94-41c-9.32 8.67-21.65 15-36.96 19-10.66 3.33-22.3 5-34.96 5l-14.98-1c-1.33-9.33-1.33-20 0-32 2.67-24 10.32-42.33 22.97-55 9.32-8.67 21.65-15 36.96-19 10.66-3.33 22.3-5 34.96-5l14.98 1 1 15c0 12.67-1.67 24.33-4.99 35-3.99 15.33-10.31 27.67-18.98 37z\"]\n  };\n  var faArchive = {\n    prefix: 'fas',\n    iconName: 'archive',\n    icon: [512, 512, [], \"f187\", \"M32 448c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V160H32v288zm160-212c0-6.6 5.4-12 12-12h104c6.6 0 12 5.4 12 12v8c0 6.6-5.4 12-12 12H204c-6.6 0-12-5.4-12-12v-8zM480 32H32C14.3 32 0 46.3 0 64v48c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16V64c0-17.7-14.3-32-32-32z\"]\n  };\n  var faArchway = {\n    prefix: 'fas',\n    iconName: 'archway',\n    icon: [576, 512, [], \"f557\", \"M560 448h-16V96H32v352H16.02c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16H176c8.84 0 16-7.16 16-16V320c0-53.02 42.98-96 96-96s96 42.98 96 96l.02 160v16c0 8.84 7.16 16 16 16H560c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm0-448H16C7.16 0 0 7.16 0 16v32c0 8.84 7.16 16 16 16h544c8.84 0 16-7.16 16-16V16c0-8.84-7.16-16-16-16z\"]\n  };\n  var faArrowAltCircleDown = {\n    prefix: 'fas',\n    iconName: 'arrow-alt-circle-down',\n    icon: [512, 512, [], \"f358\", \"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zM212 140v116h-70.9c-10.7 0-16.1 13-8.5 20.5l114.9 114.3c4.7 4.7 12.2 4.7 16.9 0l114.9-114.3c7.6-7.6 2.2-20.5-8.5-20.5H300V140c0-6.6-5.4-12-12-12h-64c-6.6 0-12 5.4-12 12z\"]\n  };\n  var faArrowAltCircleLeft = {\n    prefix: 'fas',\n    iconName: 'arrow-alt-circle-left',\n    icon: [512, 512, [], \"f359\", \"M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zm116-292H256v-70.9c0-10.7-13-16.1-20.5-8.5L121.2 247.5c-4.7 4.7-4.7 12.2 0 16.9l114.3 114.9c7.6 7.6 20.5 2.2 20.5-8.5V300h116c6.6 0 12-5.4 12-12v-64c0-6.6-5.4-12-12-12z\"]\n  };\n  var faArrowAltCircleRight = {\n    prefix: 'fas',\n    iconName: 'arrow-alt-circle-right',\n    icon: [512, 512, [], \"f35a\", \"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zM140 300h116v70.9c0 10.7 13 16.1 20.5 8.5l114.3-114.9c4.7-4.7 4.7-12.2 0-16.9l-114.3-115c-7.6-7.6-20.5-2.2-20.5 8.5V212H140c-6.6 0-12 5.4-12 12v64c0 6.6 5.4 12 12 12z\"]\n  };\n  var faArrowAltCircleUp = {\n    prefix: 'fas',\n    iconName: 'arrow-alt-circle-up',\n    icon: [512, 512, [], \"f35b\", \"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm292 116V256h70.9c10.7 0 16.1-13 8.5-20.5L264.5 121.2c-4.7-4.7-12.2-4.7-16.9 0l-115 114.3c-7.6 7.6-2.2 20.5 8.5 20.5H212v116c0 6.6 5.4 12 12 12h64c6.6 0 12-5.4 12-12z\"]\n  };\n  var faArrowCircleDown = {\n    prefix: 'fas',\n    iconName: 'arrow-circle-down',\n    icon: [512, 512, [], \"f0ab\", \"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-143.6-28.9L288 302.6V120c0-13.3-10.7-24-24-24h-16c-13.3 0-24 10.7-24 24v182.6l-72.4-75.5c-9.3-9.7-24.8-9.9-34.3-.4l-10.9 11c-9.4 9.4-9.4 24.6 0 33.9L239 404.3c9.4 9.4 24.6 9.4 33.9 0l132.7-132.7c9.4-9.4 9.4-24.6 0-33.9l-10.9-11c-9.5-9.5-25-9.3-34.3.4z\"]\n  };\n  var faArrowCircleLeft = {\n    prefix: 'fas',\n    iconName: 'arrow-circle-left',\n    icon: [512, 512, [], \"f0a8\", \"M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zm28.9-143.6L209.4 288H392c13.3 0 24-10.7 24-24v-16c0-13.3-10.7-24-24-24H209.4l75.5-72.4c9.7-9.3 9.9-24.8.4-34.3l-11-10.9c-9.4-9.4-24.6-9.4-33.9 0L107.7 239c-9.4 9.4-9.4 24.6 0 33.9l132.7 132.7c9.4 9.4 24.6 9.4 33.9 0l11-10.9c9.5-9.5 9.3-25-.4-34.3z\"]\n  };\n  var faArrowCircleRight = {\n    prefix: 'fas',\n    iconName: 'arrow-circle-right',\n    icon: [512, 512, [], \"f0a9\", \"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm-28.9 143.6l75.5 72.4H120c-13.3 0-24 10.7-24 24v16c0 13.3 10.7 24 24 24h182.6l-75.5 72.4c-9.7 9.3-9.9 24.8-.4 34.3l11 10.9c9.4 9.4 24.6 9.4 33.9 0L404.3 273c9.4-9.4 9.4-24.6 0-33.9L271.6 106.3c-9.4-9.4-24.6-9.4-33.9 0l-11 10.9c-9.5 9.6-9.3 25.1.4 34.4z\"]\n  };\n  var faArrowCircleUp = {\n    prefix: 'fas',\n    iconName: 'arrow-circle-up',\n    icon: [512, 512, [], \"f0aa\", \"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm143.6 28.9l72.4-75.5V392c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24V209.4l72.4 75.5c9.3 9.7 24.8 9.9 34.3.4l10.9-11c9.4-9.4 9.4-24.6 0-33.9L273 107.7c-9.4-9.4-24.6-9.4-33.9 0L106.3 240.4c-9.4 9.4-9.4 24.6 0 33.9l10.9 11c9.6 9.5 25.1 9.3 34.4-.4z\"]\n  };\n  var faArrowDown = {\n    prefix: 'fas',\n    iconName: 'arrow-down',\n    icon: [448, 512, [], \"f063\", \"M413.1 222.5l22.2 22.2c9.4 9.4 9.4 24.6 0 33.9L241 473c-9.4 9.4-24.6 9.4-33.9 0L12.7 278.6c-9.4-9.4-9.4-24.6 0-33.9l22.2-22.2c9.5-9.5 25-9.3 34.3.4L184 343.4V56c0-13.3 10.7-24 24-24h32c13.3 0 24 10.7 24 24v287.4l114.8-120.5c9.3-9.8 24.8-10 34.3-.4z\"]\n  };\n  var faArrowLeft = {\n    prefix: 'fas',\n    iconName: 'arrow-left',\n    icon: [448, 512, [], \"f060\", \"M257.5 445.1l-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z\"]\n  };\n  var faArrowRight = {\n    prefix: 'fas',\n    iconName: 'arrow-right',\n    icon: [448, 512, [], \"f061\", \"M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z\"]\n  };\n  var faArrowUp = {\n    prefix: 'fas',\n    iconName: 'arrow-up',\n    icon: [448, 512, [], \"f062\", \"M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z\"]\n  };\n  var faArrowsAlt = {\n    prefix: 'fas',\n    iconName: 'arrows-alt',\n    icon: [512, 512, [], \"f0b2\", \"M352.201 425.775l-79.196 79.196c-9.373 9.373-24.568 9.373-33.941 0l-79.196-79.196c-15.119-15.119-4.411-40.971 16.971-40.97h51.162L228 284H127.196v51.162c0 21.382-25.851 32.09-40.971 16.971L7.029 272.937c-9.373-9.373-9.373-24.569 0-33.941L86.225 159.8c15.119-15.119 40.971-4.411 40.971 16.971V228H228V127.196h-51.23c-21.382 0-32.09-25.851-16.971-40.971l79.196-79.196c9.373-9.373 24.568-9.373 33.941 0l79.196 79.196c15.119 15.119 4.411 40.971-16.971 40.971h-51.162V228h100.804v-51.162c0-21.382 25.851-32.09 40.97-16.971l79.196 79.196c9.373 9.373 9.373 24.569 0 33.941L425.773 352.2c-15.119 15.119-40.971 4.411-40.97-16.971V284H284v100.804h51.23c21.382 0 32.09 25.851 16.971 40.971z\"]\n  };\n  var faArrowsAltH = {\n    prefix: 'fas',\n    iconName: 'arrows-alt-h',\n    icon: [512, 512, [], \"f337\", \"M377.941 169.941V216H134.059v-46.059c0-21.382-25.851-32.09-40.971-16.971L7.029 239.029c-9.373 9.373-9.373 24.568 0 33.941l86.059 86.059c15.119 15.119 40.971 4.411 40.971-16.971V296h243.882v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.568 0-33.941l-86.059-86.059c-15.119-15.12-40.971-4.412-40.971 16.97z\"]\n  };\n  var faArrowsAltV = {\n    prefix: 'fas',\n    iconName: 'arrows-alt-v',\n    icon: [256, 512, [], \"f338\", \"M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z\"]\n  };\n  var faAssistiveListeningSystems = {\n    prefix: 'fas',\n    iconName: 'assistive-listening-systems',\n    icon: [512, 512, [], \"f2a2\", \"M216 260c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-44.112 35.888-80 80-80s80 35.888 80 80c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-13.234-10.767-24-24-24s-24 10.766-24 24zm24-176c-97.047 0-176 78.953-176 176 0 15.464 12.536 28 28 28s28-12.536 28-28c0-66.168 53.832-120 120-120s120 53.832 120 120c0 75.164-71.009 70.311-71.997 143.622L288 404c0 28.673-23.327 52-52 52-15.464 0-28 12.536-28 28s12.536 28 28 28c59.475 0 107.876-48.328 108-107.774.595-34.428 72-48.24 72-144.226 0-97.047-78.953-176-176-176zm-80 236c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zM32 448c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm480-187.993c0-1.518-.012-3.025-.045-4.531C510.076 140.525 436.157 38.47 327.994 1.511c-14.633-4.998-30.549 2.809-35.55 17.442-5 14.633 2.81 30.549 17.442 35.55 85.906 29.354 144.61 110.513 146.077 201.953l.003.188c.026 1.118.033 2.236.033 3.363 0 15.464 12.536 28 28 28s28.001-12.536 28.001-28zM152.971 439.029l-80-80L39.03 392.97l80 80 33.941-33.941z\"]\n  };\n  var faAsterisk = {\n    prefix: 'fas',\n    iconName: 'asterisk',\n    icon: [512, 512, [], \"f069\", \"M478.21 334.093L336 256l142.21-78.093c11.795-6.477 15.961-21.384 9.232-33.037l-19.48-33.741c-6.728-11.653-21.72-15.499-33.227-8.523L296 186.718l3.475-162.204C299.763 11.061 288.937 0 275.48 0h-38.96c-13.456 0-24.283 11.061-23.994 24.514L216 186.718 77.265 102.607c-11.506-6.976-26.499-3.13-33.227 8.523l-19.48 33.741c-6.728 11.653-2.562 26.56 9.233 33.037L176 256 33.79 334.093c-11.795 6.477-15.961 21.384-9.232 33.037l19.48 33.741c6.728 11.653 21.721 15.499 33.227 8.523L216 325.282l-3.475 162.204C212.237 500.939 223.064 512 236.52 512h38.961c13.456 0 24.283-11.061 23.995-24.514L296 325.282l138.735 84.111c11.506 6.976 26.499 3.13 33.227-8.523l19.48-33.741c6.728-11.653 2.563-26.559-9.232-33.036z\"]\n  };\n  var faAt = {\n    prefix: 'fas',\n    iconName: 'at',\n    icon: [512, 512, [], \"f1fa\", \"M256 8C118.941 8 8 118.919 8 256c0 137.059 110.919 248 248 248 48.154 0 95.342-14.14 135.408-40.223 12.005-7.815 14.625-24.288 5.552-35.372l-10.177-12.433c-7.671-9.371-21.179-11.667-31.373-5.129C325.92 429.757 291.314 440 256 440c-101.458 0-184-82.542-184-184S154.542 72 256 72c100.139 0 184 57.619 184 160 0 38.786-21.093 79.742-58.17 83.693-17.349-.454-16.91-12.857-13.476-30.024l23.433-121.11C394.653 149.75 383.308 136 368.225 136h-44.981a13.518 13.518 0 0 0-13.432 11.993l-.01.092c-14.697-17.901-40.448-21.775-59.971-21.775-74.58 0-137.831 62.234-137.831 151.46 0 65.303 36.785 105.87 96 105.87 26.984 0 57.369-15.637 74.991-38.333 9.522 34.104 40.613 34.103 70.71 34.103C462.609 379.41 504 307.798 504 232 504 95.653 394.023 8 256 8zm-21.68 304.43c-22.249 0-36.07-15.623-36.07-40.771 0-44.993 30.779-72.729 58.63-72.729 22.292 0 35.601 15.241 35.601 40.77 0 45.061-33.875 72.73-58.161 72.73z\"]\n  };\n  var faAtlas = {\n    prefix: 'fas',\n    iconName: 'atlas',\n    icon: [448, 512, [], \"f558\", \"M318.38 208h-39.09c-1.49 27.03-6.54 51.35-14.21 70.41 27.71-13.24 48.02-39.19 53.3-70.41zm0-32c-5.29-31.22-25.59-57.17-53.3-70.41 7.68 19.06 12.72 43.38 14.21 70.41h39.09zM224 97.31c-7.69 7.45-20.77 34.42-23.43 78.69h46.87c-2.67-44.26-15.75-71.24-23.44-78.69zm-41.08 8.28c-27.71 13.24-48.02 39.19-53.3 70.41h39.09c1.49-27.03 6.53-51.35 14.21-70.41zm0 172.82c-7.68-19.06-12.72-43.38-14.21-70.41h-39.09c5.28 31.22 25.59 57.17 53.3 70.41zM247.43 208h-46.87c2.66 44.26 15.74 71.24 23.43 78.69 7.7-7.45 20.78-34.43 23.44-78.69zM448 358.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16c0-6.4-3.2-12.8-9.6-19.2-3.2-16-3.2-60.8 0-73.6 6.4-3.2 9.6-9.6 9.6-19.2zM224 64c70.69 0 128 57.31 128 128s-57.31 128-128 128S96 262.69 96 192 153.31 64 224 64zm160 384H96c-19.2 0-32-12.8-32-32s16-32 32-32h288v64z\"]\n  };\n  var faAtom = {\n    prefix: 'fas',\n    iconName: 'atom',\n    icon: [448, 512, [], \"f5d2\", \"M413.03 256c40.13-54.89 41.51-98.62 25.14-128-10.91-19.52-40.54-50.73-116.33-41.88C300.36 34.89 267.64 0 224 0s-76.36 34.89-97.84 86.12C50.43 77.34 20.73 108.48 9.83 128c-16.38 29.4-15 73.09 25.14 128-40.13 54.89-41.51 98.62-25.14 128 29.21 52.34 101.68 43.58 116.33 41.88C147.63 477.1 180.36 512 224 512s76.37-34.9 97.84-86.12c14.64 1.7 87.11 10.46 116.33-41.88 16.38-29.4 15-73.09-25.14-128zM63.38 352c-4.03-7.21-.19-24.8 14.95-48.29 6.96 6.53 14.2 12.89 21.87 19.18 1.71 13.71 4 27.08 6.76 40.08-24.56.89-39.89-4.37-43.58-10.97zm36.82-162.88c-7.66 6.29-14.9 12.65-21.87 19.18-15.13-23.5-18.97-41.09-14.95-48.3 3.41-6.14 16.39-11.47 37.92-11.47 1.71 0 3.87.3 5.69.37a472.191 472.191 0 0 0-6.79 40.22zM224 64c9.47 0 22.2 13.52 33.86 37.26-11.19 3.7-22.44 8-33.86 12.86-11.42-4.86-22.67-9.16-33.86-12.86C201.8 77.52 214.53 64 224 64zm0 384c-9.47 0-22.2-13.52-33.86-37.26 11.19-3.7 22.44-8 33.86-12.86 11.42 4.86 22.67 9.16 33.86 12.86C246.2 434.48 233.47 448 224 448zm62.5-157.33c-26.7 19.08-46.14 29.33-62.5 37.48-16.35-8.14-35.8-18.41-62.5-37.48-1.99-27.79-1.99-41.54 0-69.33 26.67-19.05 46.13-29.32 62.5-37.48 16.39 8.17 35.86 18.44 62.5 37.48 1.98 27.78 1.99 41.53 0 69.33zM384.62 352c-3.67 6.62-19 11.82-43.58 10.95 2.76-13 5.05-26.37 6.76-40.06 7.66-6.29 14.9-12.65 21.87-19.18 15.13 23.49 18.97 41.08 14.95 48.29zm-14.95-143.71c-6.96-6.53-14.2-12.89-21.87-19.18a473.535 473.535 0 0 0-6.79-40.22c1.82-.07 3.97-.37 5.69-.37 21.52 0 34.51 5.34 37.92 11.47 4.02 7.22.18 24.81-14.95 48.3zM224 224c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32z\"]\n  };\n  var faAudioDescription = {\n    prefix: 'fas',\n    iconName: 'audio-description',\n    icon: [512, 512, [], \"f29e\", \"M162.925 238.709l8.822 30.655h-25.606l9.041-30.652c1.277-4.421 2.651-9.994 3.872-15.245 1.22 5.251 2.594 10.823 3.871 15.242zm166.474-32.099h-14.523v98.781h14.523c29.776 0 46.175-17.678 46.175-49.776 0-32.239-17.49-49.005-46.175-49.005zM512 112v288c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48zM245.459 336.139l-57.097-168A12.001 12.001 0 0 0 177 160h-35.894a12.001 12.001 0 0 0-11.362 8.139l-57.097 168C70.003 343.922 75.789 352 84.009 352h29.133a12 12 0 0 0 11.535-8.693l8.574-29.906h51.367l8.793 29.977A12 12 0 0 0 204.926 352h29.172c8.22 0 14.006-8.078 11.361-15.861zm184.701-80.525c0-58.977-37.919-95.614-98.96-95.614h-57.366c-6.627 0-12 5.373-12 12v168c0 6.627 5.373 12 12 12H331.2c61.041 0 98.96-36.933 98.96-96.386z\"]\n  };\n  var faAward = {\n    prefix: 'fas',\n    iconName: 'award',\n    icon: [384, 512, [], \"f559\", \"M97.12 362.63c-8.69-8.69-4.16-6.24-25.12-11.85-9.51-2.55-17.87-7.45-25.43-13.32L1.2 448.7c-4.39 10.77 3.81 22.47 15.43 22.03l52.69-2.01L105.56 507c8 8.44 22.04 5.81 26.43-4.96l52.05-127.62c-10.84 6.04-22.87 9.58-35.31 9.58-19.5 0-37.82-7.59-51.61-21.37zM382.8 448.7l-45.37-111.24c-7.56 5.88-15.92 10.77-25.43 13.32-21.07 5.64-16.45 3.18-25.12 11.85-13.79 13.78-32.12 21.37-51.62 21.37-12.44 0-24.47-3.55-35.31-9.58L252 502.04c4.39 10.77 18.44 13.4 26.43 4.96l36.25-38.28 52.69 2.01c11.62.44 19.82-11.27 15.43-22.03zM263 340c15.28-15.55 17.03-14.21 38.79-20.14 13.89-3.79 24.75-14.84 28.47-28.98 7.48-28.4 5.54-24.97 25.95-45.75 10.17-10.35 14.14-25.44 10.42-39.58-7.47-28.38-7.48-24.42 0-52.83 3.72-14.14-.25-29.23-10.42-39.58-20.41-20.78-18.47-17.36-25.95-45.75-3.72-14.14-14.58-25.19-28.47-28.98-27.88-7.61-24.52-5.62-44.95-26.41-10.17-10.35-25-14.4-38.89-10.61-27.87 7.6-23.98 7.61-51.9 0-13.89-3.79-28.72.25-38.89 10.61-20.41 20.78-17.05 18.8-44.94 26.41-13.89 3.79-24.75 14.84-28.47 28.98-7.47 28.39-5.54 24.97-25.95 45.75-10.17 10.35-14.15 25.44-10.42 39.58 7.47 28.36 7.48 24.4 0 52.82-3.72 14.14.25 29.23 10.42 39.59 20.41 20.78 18.47 17.35 25.95 45.75 3.72 14.14 14.58 25.19 28.47 28.98C104.6 325.96 106.27 325 121 340c13.23 13.47 33.84 15.88 49.74 5.82a39.676 39.676 0 0 1 42.53 0c15.89 10.06 36.5 7.65 49.73-5.82zM97.66 175.96c0-53.03 42.24-96.02 94.34-96.02s94.34 42.99 94.34 96.02-42.24 96.02-94.34 96.02-94.34-42.99-94.34-96.02z\"]\n  };\n  var faBaby = {\n    prefix: 'fas',\n    iconName: 'baby',\n    icon: [384, 512, [], \"f77c\", \"M192 160c44.2 0 80-35.8 80-80S236.2 0 192 0s-80 35.8-80 80 35.8 80 80 80zm-53.4 248.8l25.6-32-61.5-51.2L56.8 383c-11.4 14.2-11.7 34.4-.8 49l48 64c7.9 10.5 19.9 16 32 16 8.3 0 16.8-2.6 24-8 17.7-13.2 21.2-38.3 8-56l-29.4-39.2zm142.7-83.2l-61.5 51.2 25.6 32L216 448c-13.2 17.7-9.7 42.8 8 56 7.2 5.4 15.6 8 24 8 12.2 0 24.2-5.5 32-16l48-64c10.9-14.6 10.6-34.8-.8-49l-45.9-57.4zM376.7 145c-12.7-18.1-37.6-22.4-55.7-9.8l-40.6 28.5c-52.7 37-124.2 37-176.8 0L63 135.3C44.9 122.6 20 127 7.3 145-5.4 163.1-1 188 17 200.7l40.6 28.5c17 11.9 35.4 20.9 54.4 27.9V288h160v-30.8c19-7 37.4-16 54.4-27.9l40.6-28.5c18.1-12.8 22.4-37.7 9.7-55.8z\"]\n  };\n  var faBabyCarriage = {\n    prefix: 'fas',\n    iconName: 'baby-carriage',\n    icon: [512, 512, [], \"f77d\", \"M144.8 17c-11.3-17.8-37.2-22.8-54-9.4C35.3 51.9 0 118 0 192h256L144.8 17zM496 96h-48c-35.3 0-64 28.7-64 64v64H0c0 50.6 23 96.4 60.3 130.7C25.7 363.6 0 394.7 0 432c0 44.2 35.8 80 80 80s80-35.8 80-80c0-8.9-1.8-17.2-4.4-25.2 21.6 5.9 44.6 9.2 68.4 9.2s46.9-3.3 68.4-9.2c-2.7 8-4.4 16.3-4.4 25.2 0 44.2 35.8 80 80 80s80-35.8 80-80c0-37.3-25.7-68.4-60.3-77.3C425 320.4 448 274.6 448 224v-64h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM80 464c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32zm320-32c0 17.6-14.4 32-32 32s-32-14.4-32-32 14.4-32 32-32 32 14.4 32 32z\"]\n  };\n  var faBackspace = {\n    prefix: 'fas',\n    iconName: 'backspace',\n    icon: [640, 512, [], \"f55a\", \"M576 64H205.26A63.97 63.97 0 0 0 160 82.75L9.37 233.37c-12.5 12.5-12.5 32.76 0 45.25L160 429.25c12 12 28.28 18.75 45.25 18.75H576c35.35 0 64-28.65 64-64V128c0-35.35-28.65-64-64-64zm-84.69 254.06c6.25 6.25 6.25 16.38 0 22.63l-22.62 22.62c-6.25 6.25-16.38 6.25-22.63 0L384 301.25l-62.06 62.06c-6.25 6.25-16.38 6.25-22.63 0l-22.62-22.62c-6.25-6.25-6.25-16.38 0-22.63L338.75 256l-62.06-62.06c-6.25-6.25-6.25-16.38 0-22.63l22.62-22.62c6.25-6.25 16.38-6.25 22.63 0L384 210.75l62.06-62.06c6.25-6.25 16.38-6.25 22.63 0l22.62 22.62c6.25 6.25 6.25 16.38 0 22.63L429.25 256l62.06 62.06z\"]\n  };\n  var faBackward = {\n    prefix: 'fas',\n    iconName: 'backward',\n    icon: [512, 512, [], \"f04a\", \"M11.5 280.6l192 160c20.6 17.2 52.5 2.8 52.5-24.6V96c0-27.4-31.9-41.8-52.5-24.6l-192 160c-15.3 12.8-15.3 36.4 0 49.2zm256 0l192 160c20.6 17.2 52.5 2.8 52.5-24.6V96c0-27.4-31.9-41.8-52.5-24.6l-192 160c-15.3 12.8-15.3 36.4 0 49.2z\"]\n  };\n  var faBacon = {\n    prefix: 'fas',\n    iconName: 'bacon',\n    icon: [576, 512, [], \"f7e5\", \"M218.92 336.39c34.89-34.89 44.2-59.7 54.05-86 10.61-28.29 21.59-57.54 61.37-97.34s69.05-50.77 97.35-61.38c23.88-9 46.64-17.68 76.79-45.37L470.81 8.91a31 31 0 0 0-40.18-2.83c-13.64 10.1-25.15 14.39-41 20.3C247 79.52 209.26 191.29 200.65 214.1c-29.75 78.83-89.55 94.68-98.72 98.09-24.86 9.26-54.73 20.38-91.07 50.36C-3 374-3.63 395 9.07 407.61l35.76 35.51C80 410.52 107 400.15 133 390.39c26.27-9.84 51.06-19.12 85.92-54zm348-232l-35.75-35.51c-35.19 32.63-62.18 43-88.25 52.79-26.26 9.85-51.06 19.16-85.95 54s-44.19 59.69-54 86C292.33 290 281.34 319.22 241.55 359s-69 50.73-97.3 61.32c-23.86 9-46.61 17.66-76.72 45.33l37.68 37.43a31 31 0 0 0 40.18 2.82c13.6-10.06 25.09-14.34 40.94-20.24 142.2-53 180-164.1 188.94-187.69C405 219.18 464.8 203.3 474 199.86c24.87-9.27 54.74-20.4 91.11-50.41 13.89-11.4 14.52-32.45 1.82-45.05z\"]\n  };\n  var faBalanceScale = {\n    prefix: 'fas',\n    iconName: 'balance-scale',\n    icon: [640, 512, [], \"f24e\", \"M256 336h-.02c0-16.18 1.34-8.73-85.05-181.51-17.65-35.29-68.19-35.36-85.87 0C-2.06 328.75.02 320.33.02 336H0c0 44.18 57.31 80 128 80s128-35.82 128-80zM128 176l72 144H56l72-144zm511.98 160c0-16.18 1.34-8.73-85.05-181.51-17.65-35.29-68.19-35.36-85.87 0-87.12 174.26-85.04 165.84-85.04 181.51H384c0 44.18 57.31 80 128 80s128-35.82 128-80h-.02zM440 320l72-144 72 144H440zm88 128H352V153.25c23.51-10.29 41.16-31.48 46.39-57.25H528c8.84 0 16-7.16 16-16V48c0-8.84-7.16-16-16-16H383.64C369.04 12.68 346.09 0 320 0s-49.04 12.68-63.64 32H112c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h129.61c5.23 25.76 22.87 46.96 46.39 57.25V448H112c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"]\n  };\n  var faBan = {\n    prefix: 'fas',\n    iconName: 'ban',\n    icon: [512, 512, [], \"f05e\", \"M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z\"]\n  };\n  var faBandAid = {\n    prefix: 'fas',\n    iconName: 'band-aid',\n    icon: [640, 512, [], \"f462\", \"M0 160v192c0 35.3 28.7 64 64 64h96V96H64c-35.3 0-64 28.7-64 64zm576-64h-96v320h96c35.3 0 64-28.7 64-64V160c0-35.3-28.7-64-64-64zM192 416h256V96H192v320zm176-232c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm0 96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm-96-96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm0 96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24z\"]\n  };\n  var faBarcode = {\n    prefix: 'fas',\n    iconName: 'barcode',\n    icon: [512, 512, [], \"f02a\", \"M0 448V64h18v384H0zm26.857-.273V64H36v383.727h-9.143zm27.143 0V64h8.857v383.727H54zm44.857 0V64h8.857v383.727h-8.857zm36 0V64h17.714v383.727h-17.714zm44.857 0V64h8.857v383.727h-8.857zm18 0V64h8.857v383.727h-8.857zm18 0V64h8.857v383.727h-8.857zm35.715 0V64h18v383.727h-18zm44.857 0V64h18v383.727h-18zm35.999 0V64h18.001v383.727h-18.001zm36.001 0V64h18.001v383.727h-18.001zm26.857 0V64h18v383.727h-18zm45.143 0V64h26.857v383.727h-26.857zm35.714 0V64h9.143v383.727H476zm18 .273V64h18v384h-18z\"]\n  };\n  var faBars = {\n    prefix: 'fas',\n    iconName: 'bars',\n    icon: [448, 512, [], \"f0c9\", \"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"]\n  };\n  var faBaseballBall = {\n    prefix: 'fas',\n    iconName: 'baseball-ball',\n    icon: [496, 512, [], \"f433\", \"M368.5 363.9l28.8-13.9c11.1 22.9 26 43.2 44.1 60.9 34-42.5 54.5-96.3 54.5-154.9 0-58.5-20.4-112.2-54.2-154.6-17.8 17.3-32.6 37.1-43.6 59.5l-28.7-14.1c12.8-26 30-49 50.8-69C375.6 34.7 315 8 248 8 181.1 8 120.5 34.6 75.9 77.7c20.7 19.9 37.9 42.9 50.7 68.8l-28.7 14.1c-11-22.3-25.7-42.1-43.5-59.4C20.4 143.7 0 197.4 0 256c0 58.6 20.4 112.3 54.4 154.7 18.2-17.7 33.2-38 44.3-61l28.8 13.9c-12.9 26.7-30.3 50.3-51.5 70.7 44.5 43.1 105.1 69.7 172 69.7 66.8 0 127.3-26.5 171.9-69.5-21.1-20.4-38.5-43.9-51.4-70.6zm-228.3-32l-30.5-9.8c14.9-46.4 12.7-93.8-.6-134l30.4-10c15 45.6 18 99.9.7 153.8zm216.3-153.4l30.4 10c-13.2 40.1-15.5 87.5-.6 134l-30.5 9.8c-17.3-54-14.3-108.3.7-153.8z\"]\n  };\n  var faBasketballBall = {\n    prefix: 'fas',\n    iconName: 'basketball-ball',\n    icon: [496, 512, [], \"f434\", \"M212.3 10.3c-43.8 6.3-86.2 24.1-122.2 53.8l77.4 77.4c27.8-35.8 43.3-81.2 44.8-131.2zM248 222L405.9 64.1c-42.4-35-93.6-53.5-145.5-56.1-1.2 63.9-21.5 122.3-58.7 167.7L248 222zM56.1 98.1c-29.7 36-47.5 78.4-53.8 122.2 50-1.5 95.5-17 131.2-44.8L56.1 98.1zm272.2 204.2c45.3-37.1 103.7-57.4 167.7-58.7-2.6-51.9-21.1-103.1-56.1-145.5L282 256l46.3 46.3zM248 290L90.1 447.9c42.4 34.9 93.6 53.5 145.5 56.1 1.3-64 21.6-122.4 58.7-167.7L248 290zm191.9 123.9c29.7-36 47.5-78.4 53.8-122.2-50.1 1.6-95.5 17.1-131.2 44.8l77.4 77.4zM167.7 209.7C122.3 246.9 63.9 267.3 0 268.4c2.6 51.9 21.1 103.1 56.1 145.5L214 256l-46.3-46.3zm116 292c43.8-6.3 86.2-24.1 122.2-53.8l-77.4-77.4c-27.7 35.7-43.2 81.2-44.8 131.2z\"]\n  };\n  var faBath = {\n    prefix: 'fas',\n    iconName: 'bath',\n    icon: [512, 512, [], \"f2cd\", \"M488 256H80V112c0-17.645 14.355-32 32-32 11.351 0 21.332 5.945 27.015 14.88-16.492 25.207-14.687 59.576 6.838 83.035-4.176 4.713-4.021 11.916.491 16.428l11.314 11.314c4.686 4.686 12.284 4.686 16.971 0l95.03-95.029c4.686-4.686 4.686-12.284 0-16.971l-11.314-11.314c-4.512-4.512-11.715-4.666-16.428-.491-17.949-16.469-42.294-21.429-64.178-15.365C163.281 45.667 139.212 32 112 32c-44.112 0-80 35.888-80 80v144h-8c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h8v32c0 28.43 12.362 53.969 32 71.547V456c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-8h256v8c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-32.453c19.638-17.578 32-43.117 32-71.547v-32h8c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24z\"]\n  };\n  var faBatteryEmpty = {\n    prefix: 'fas',\n    iconName: 'battery-empty',\n    icon: [640, 512, [], \"f244\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48z\"]\n  };\n  var faBatteryFull = {\n    prefix: 'fas',\n    iconName: 'battery-full',\n    icon: [640, 512, [], \"f240\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-48 96H96v128h416V192z\"]\n  };\n  var faBatteryHalf = {\n    prefix: 'fas',\n    iconName: 'battery-half',\n    icon: [640, 512, [], \"f242\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-240 96H96v128h224V192z\"]\n  };\n  var faBatteryQuarter = {\n    prefix: 'fas',\n    iconName: 'battery-quarter',\n    icon: [640, 512, [], \"f243\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-336 96H96v128h128V192z\"]\n  };\n  var faBatteryThreeQuarters = {\n    prefix: 'fas',\n    iconName: 'battery-three-quarters',\n    icon: [640, 512, [], \"f241\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-144 96H96v128h320V192z\"]\n  };\n  var faBed = {\n    prefix: 'fas',\n    iconName: 'bed',\n    icon: [640, 512, [], \"f236\", \"M176 256c44.11 0 80-35.89 80-80s-35.89-80-80-80-80 35.89-80 80 35.89 80 80 80zm352-128H304c-8.84 0-16 7.16-16 16v144H64V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v352c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-48h512v48c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V240c0-61.86-50.14-112-112-112z\"]\n  };\n  var faBeer = {\n    prefix: 'fas',\n    iconName: 'beer',\n    icon: [448, 512, [], \"f0fc\", \"M368 96h-48V56c0-13.255-10.745-24-24-24H24C10.745 32 0 42.745 0 56v400c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24v-42.11l80.606-35.977C429.396 365.063 448 336.388 448 304.86V176c0-44.112-35.888-80-80-80zm16 208.86a16.018 16.018 0 0 1-9.479 14.611L320 343.805V160h48c8.822 0 16 7.178 16 16v128.86zM208 384c-8.836 0-16-7.164-16-16V144c0-8.836 7.164-16 16-16s16 7.164 16 16v224c0 8.836-7.164 16-16 16zm-96 0c-8.836 0-16-7.164-16-16V144c0-8.836 7.164-16 16-16s16 7.164 16 16v224c0 8.836-7.164 16-16 16z\"]\n  };\n  var faBell = {\n    prefix: 'fas',\n    iconName: 'bell',\n    icon: [448, 512, [], \"f0f3\", \"M224 512c35.32 0 63.97-28.65 63.97-64H160.03c0 35.35 28.65 64 63.97 64zm215.39-149.71c-19.32-20.76-55.47-51.99-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V32c0-17.67-14.32-32-31.98-32s-31.98 14.33-31.98 32v20.84C118.56 68.1 64.08 130.3 64.08 208c0 102.3-36.15 133.53-55.47 154.29-6 6.45-8.66 14.16-8.61 21.71.11 16.4 12.98 32 32.1 32h383.8c19.12 0 32-15.6 32.1-32 .05-7.55-2.61-15.27-8.61-21.71z\"]\n  };\n  var faBellSlash = {\n    prefix: 'fas',\n    iconName: 'bell-slash',\n    icon: [640, 512, [], \"f1f6\", \"M633.82 458.1l-90.62-70.05c.19-1.38.8-2.66.8-4.06.05-7.55-2.61-15.27-8.61-21.71-19.32-20.76-55.47-51.99-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V32c0-17.67-14.32-32-31.98-32s-31.98 14.33-31.98 32v20.84c-40.33 8.38-74.66 31.07-97.59 62.57L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.35 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.42-6.97 4.17-17.02-2.81-22.45zM157.23 251.54c-8.61 67.96-36.41 93.33-52.62 110.75-6 6.45-8.66 14.16-8.61 21.71.11 16.4 12.98 32 32.1 32h241.92L157.23 251.54zM320 512c35.32 0 63.97-28.65 63.97-64H256.03c0 35.35 28.65 64 63.97 64z\"]\n  };\n  var faBezierCurve = {\n    prefix: 'fas',\n    iconName: 'bezier-curve',\n    icon: [640, 512, [], \"f55b\", \"M368 32h-96c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zM208 88h-84.75C113.75 64.56 90.84 48 64 48 28.66 48 0 76.65 0 112s28.66 64 64 64c26.84 0 49.75-16.56 59.25-40h79.73c-55.37 32.52-95.86 87.32-109.54 152h49.4c11.3-41.61 36.77-77.21 71.04-101.56-3.7-8.08-5.88-16.99-5.88-26.44V88zm-48 232H64c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zM576 48c-26.84 0-49.75 16.56-59.25 40H432v72c0 9.45-2.19 18.36-5.88 26.44 34.27 24.35 59.74 59.95 71.04 101.56h49.4c-13.68-64.68-54.17-119.48-109.54-152h79.73c9.5 23.44 32.41 40 59.25 40 35.34 0 64-28.65 64-64s-28.66-64-64-64zm0 272h-96c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32z\"]\n  };\n  var faBible = {\n    prefix: 'fas',\n    iconName: 'bible',\n    icon: [448, 512, [], \"f647\", \"M448 358.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16c0-6.4-3.2-12.8-9.6-19.2-3.2-16-3.2-60.8 0-73.6 6.4-3.2 9.6-9.6 9.6-19.2zM144 144c0-8.84 7.16-16 16-16h48V80c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v48h48c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16h-48v112c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16V192h-48c-8.84 0-16-7.16-16-16v-32zm236.8 304H96c-19.2 0-32-12.8-32-32s16-32 32-32h284.8v64z\"]\n  };\n  var faBicycle = {\n    prefix: 'fas',\n    iconName: 'bicycle',\n    icon: [640, 512, [], \"f206\", \"M512.509 192.001c-16.373-.064-32.03 2.955-46.436 8.495l-77.68-125.153A24 24 0 0 0 368.001 64h-64c-8.837 0-16 7.163-16 16v16c0 8.837 7.163 16 16 16h50.649l14.896 24H256.002v-16c0-8.837-7.163-16-16-16h-87.459c-13.441 0-24.777 10.999-24.536 24.437.232 13.044 10.876 23.563 23.995 23.563h48.726l-29.417 47.52c-13.433-4.83-27.904-7.483-42.992-7.52C58.094 191.83.412 249.012.002 319.236-.413 390.279 57.055 448 128.002 448c59.642 0 109.758-40.793 123.967-96h52.033a24 24 0 0 0 20.406-11.367L410.37 201.77l14.938 24.067c-25.455 23.448-41.385 57.081-41.307 94.437.145 68.833 57.899 127.051 126.729 127.719 70.606.685 128.181-55.803 129.255-125.996 1.086-70.941-56.526-129.72-127.476-129.996zM186.75 265.772c9.727 10.529 16.673 23.661 19.642 38.228h-43.306l23.664-38.228zM128.002 400c-44.112 0-80-35.888-80-80s35.888-80 80-80c5.869 0 11.586.653 17.099 1.859l-45.505 73.509C89.715 331.327 101.213 352 120.002 352h81.3c-12.37 28.225-40.562 48-73.3 48zm162.63-96h-35.624c-3.96-31.756-19.556-59.894-42.383-80.026L237.371 184h127.547l-74.286 120zm217.057 95.886c-41.036-2.165-74.049-35.692-75.627-76.755-.812-21.121 6.633-40.518 19.335-55.263l44.433 71.586c4.66 7.508 14.524 9.816 22.032 5.156l13.594-8.437c7.508-4.66 9.817-14.524 5.156-22.032l-44.468-71.643a79.901 79.901 0 0 1 19.858-2.497c44.112 0 80 35.888 80 80-.001 45.54-38.252 82.316-84.313 79.885z\"]\n  };\n  var faBinoculars = {\n    prefix: 'fas',\n    iconName: 'binoculars',\n    icon: [512, 512, [], \"f1e5\", \"M416 48c0-8.84-7.16-16-16-16h-64c-8.84 0-16 7.16-16 16v48h96V48zM63.91 159.99C61.4 253.84 3.46 274.22 0 404v44c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32V288h32V128H95.84c-17.63 0-31.45 14.37-31.93 31.99zm384.18 0c-.48-17.62-14.3-31.99-31.93-31.99H320v160h32v160c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-44c-3.46-129.78-61.4-150.16-63.91-244.01zM176 32h-64c-8.84 0-16 7.16-16 16v48h96V48c0-8.84-7.16-16-16-16zm48 256h64V128h-64v160z\"]\n  };\n  var faBiohazard = {\n    prefix: 'fas',\n    iconName: 'biohazard',\n    icon: [576, 512, [], \"f780\", \"M287.9 112c18.6 0 36.2 3.8 52.8 9.6 13.3-10.3 23.6-24.3 29.5-40.7-25.2-10.9-53-17-82.2-17-29.1 0-56.9 6-82.1 16.9 5.9 16.4 16.2 30.4 29.5 40.7 16.5-5.7 34-9.5 52.5-9.5zM163.6 438.7c12-11.8 20.4-26.4 24.5-42.4-32.9-26.4-54.8-65.3-58.9-109.6-8.5-2.8-17.2-4.6-26.4-4.6-7.6 0-15.2 1-22.5 3.1 4.1 62.8 35.8 118 83.3 153.5zm224.2-42.6c4.1 16 12.5 30.7 24.5 42.5 47.4-35.5 79.1-90.7 83-153.5-7.2-2-14.7-3-22.2-3-9.2 0-18 1.9-26.6 4.7-4.1 44.2-26 82.9-58.7 109.3zm113.5-205c-17.6-10.4-36.3-16.6-55.3-19.9 6-17.7 10-36.4 10-56.2 0-41-14.5-80.8-41-112.2-2.5-3-6.6-3.7-10-1.8-3.3 1.9-4.8 6-3.6 9.7 4.5 13.8 6.6 26.3 6.6 38.5 0 67.8-53.8 122.9-120 122.9S168 117 168 49.2c0-12.1 2.2-24.7 6.6-38.5 1.2-3.7-.3-7.8-3.6-9.7-3.4-1.9-7.5-1.2-10 1.8C134.6 34.2 120 74 120 115c0 19.8 3.9 38.5 10 56.2-18.9 3.3-37.7 9.5-55.3 19.9-34.6 20.5-61 53.3-74.3 92.4-1.3 3.7.2 7.7 3.5 9.8 3.3 2 7.5 1.3 10-1.6 9.4-10.8 19-19.1 29.2-25.1 57.3-33.9 130.8-13.7 163.9 45 33.1 58.7 13.4 134-43.9 167.9-10.2 6.1-22 10.4-35.8 13.4-3.7.8-6.4 4.2-6.4 8.1.1 4 2.7 7.3 6.5 8 39.7 7.8 80.6.8 115.2-19.7 18-10.6 32.9-24.5 45.3-40.1 12.4 15.6 27.3 29.5 45.3 40.1 34.6 20.5 75.5 27.5 115.2 19.7 3.8-.7 6.4-4 6.5-8 0-3.9-2.6-7.3-6.4-8.1-13.9-2.9-25.6-7.3-35.8-13.4-57.3-33.9-77-109.2-43.9-167.9s106.6-78.9 163.9-45c10.2 6.1 19.8 14.3 29.2 25.1 2.5 2.9 6.7 3.6 10 1.6s4.8-6.1 3.5-9.8c-13.1-39.1-39.5-72-74.1-92.4zm-213.4 129c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"]\n  };\n  var faBirthdayCake = {\n    prefix: 'fas',\n    iconName: 'birthday-cake',\n    icon: [448, 512, [], \"f1fd\", \"M448 384c-28.02 0-31.26-32-74.5-32-43.43 0-46.825 32-74.75 32-27.695 0-31.454-32-74.75-32-42.842 0-47.218 32-74.5 32-28.148 0-31.202-32-74.75-32-43.547 0-46.653 32-74.75 32v-80c0-26.5 21.5-48 48-48h16V112h64v144h64V112h64v144h64V112h64v144h16c26.5 0 48 21.5 48 48v80zm0 128H0v-96c43.356 0 46.767-32 74.75-32 27.951 0 31.253 32 74.75 32 42.843 0 47.217-32 74.5-32 28.148 0 31.201 32 74.75 32 43.357 0 46.767-32 74.75-32 27.488 0 31.252 32 74.5 32v96zM96 96c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40z\"]\n  };\n  var faBlender = {\n    prefix: 'fas',\n    iconName: 'blender',\n    icon: [512, 512, [], \"f517\", \"M416 384H160c-35.35 0-64 28.65-64 64v32c0 17.67 14.33 32 32 32h320c17.67 0 32-14.33 32-32v-32c0-35.35-28.65-64-64-64zm-128 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm40-416h166.54L512 0H48C21.49 0 0 21.49 0 48v160c0 26.51 21.49 48 48 48h103.27l8.73 96h256l17.46-64H328c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h114.18l17.46-64H328c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h140.36l17.46-64H328c-4.42 0-8-3.58-8-8V72c0-4.42 3.58-8 8-8zM64 192V64h69.82l11.64 128H64z\"]\n  };\n  var faBlenderPhone = {\n    prefix: 'fas',\n    iconName: 'blender-phone',\n    icon: [576, 512, [], \"f6b6\", \"M392 64h166.54L576 0H192v352h288l17.46-64H392c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h114.18l17.46-64H392c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h140.36l17.46-64H392c-4.42 0-8-3.58-8-8V72c0-4.42 3.58-8 8-8zM158.8 335.01l-25.78-63.26c-2.78-6.81-9.8-10.99-17.24-10.26l-45.03 4.42c-17.28-46.94-17.65-99.78 0-147.72l45.03 4.42c7.43.73 14.46-3.46 17.24-10.26l25.78-63.26c3.02-7.39.2-15.85-6.68-20.07l-39.28-24.1C98.51-3.87 80.09-.5 68.95 11.97c-92.57 103.6-92 259.55 2.1 362.49 9.87 10.8 29.12 12.48 41.65 4.8l39.41-24.18c6.89-4.22 9.7-12.67 6.69-20.07zM480 384H192c-35.35 0-64 28.65-64 64v32c0 17.67 14.33 32 32 32h352c17.67 0 32-14.33 32-32v-32c0-35.35-28.65-64-64-64zm-144 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"]\n  };\n  var faBlind = {\n    prefix: 'fas',\n    iconName: 'blind',\n    icon: [384, 512, [], \"f29d\", \"M380.15 510.837a8 8 0 0 1-10.989-2.687l-125.33-206.427a31.923 31.923 0 0 0 12.958-9.485l126.048 207.608a8 8 0 0 1-2.687 10.991zM142.803 314.338l-32.54 89.485 36.12 88.285c6.693 16.36 25.377 24.192 41.733 17.501 16.357-6.692 24.193-25.376 17.501-41.734l-62.814-153.537zM96 88c24.301 0 44-19.699 44-44S120.301 0 96 0 52 19.699 52 44s19.699 44 44 44zm154.837 169.128l-120-152c-4.733-5.995-11.75-9.108-18.837-9.112V96H80v.026c-7.146.003-14.217 3.161-18.944 9.24L0 183.766v95.694c0 13.455 11.011 24.791 24.464 24.536C37.505 303.748 48 293.1 48 280v-79.766l16-20.571v140.698L9.927 469.055c-6.04 16.609 2.528 34.969 19.138 41.009 16.602 6.039 34.968-2.524 41.009-19.138L136 309.638V202.441l-31.406-39.816a4 4 0 1 1 6.269-4.971l102.3 129.217c9.145 11.584 24.368 11.339 33.708 3.965 10.41-8.216 12.159-23.334 3.966-33.708z\"]\n  };\n  var faBlog = {\n    prefix: 'fas',\n    iconName: 'blog',\n    icon: [512, 512, [], \"f781\", \"M172.2 226.8c-14.6-2.9-28.2 8.9-28.2 23.8V301c0 10.2 7.1 18.4 16.7 22 18.2 6.8 31.3 24.4 31.3 45 0 26.5-21.5 48-48 48s-48-21.5-48-48V120c0-13.3-10.7-24-24-24H24c-13.3 0-24 10.7-24 24v248c0 89.5 82.1 160.2 175 140.7 54.4-11.4 98.3-55.4 109.7-109.7 17.4-82.9-37-157.2-112.5-172.2zM209 0c-9.2-.5-17 6.8-17 16v31.6c0 8.5 6.6 15.5 15 15.9 129.4 7 233.4 112 240.9 241.5.5 8.4 7.5 15 15.9 15h32.1c9.2 0 16.5-7.8 16-17C503.4 139.8 372.2 8.6 209 0zm.3 96c-9.3-.7-17.3 6.7-17.3 16.1v32.1c0 8.4 6.5 15.3 14.8 15.9 76.8 6.3 138 68.2 144.9 145.2.8 8.3 7.6 14.7 15.9 14.7h32.2c9.3 0 16.8-8 16.1-17.3-8.4-110.1-96.5-198.2-206.6-206.7z\"]\n  };\n  var faBold = {\n    prefix: 'fas',\n    iconName: 'bold',\n    icon: [384, 512, [], \"f032\", \"M304.793 243.891c33.639-18.537 53.657-54.16 53.657-95.693 0-48.236-26.25-87.626-68.626-104.179C265.138 34.01 240.849 32 209.661 32H24c-8.837 0-16 7.163-16 16v33.049c0 8.837 7.163 16 16 16h33.113v318.53H24c-8.837 0-16 7.163-16 16V464c0 8.837 7.163 16 16 16h195.69c24.203 0 44.834-1.289 66.866-7.584C337.52 457.193 376 410.647 376 350.014c0-52.168-26.573-91.684-71.207-106.123zM142.217 100.809h67.444c16.294 0 27.536 2.019 37.525 6.717 15.828 8.479 24.906 26.502 24.906 49.446 0 35.029-20.32 56.79-53.029 56.79h-76.846V100.809zm112.642 305.475c-10.14 4.056-22.677 4.907-31.409 4.907h-81.233V281.943h84.367c39.645 0 63.057 25.38 63.057 63.057.001 28.425-13.66 52.483-34.782 61.284z\"]\n  };\n  var faBolt = {\n    prefix: 'fas',\n    iconName: 'bolt',\n    icon: [320, 512, [], \"f0e7\", \"M296 160H180.6l42.6-129.8C227.2 15 215.7 0 200 0H56C44 0 33.8 8.9 32.2 20.8l-32 240C-1.7 275.2 9.5 288 24 288h118.7L96.6 482.5c-3.6 15.2 8 29.5 23.3 29.5 8.4 0 16.4-4.4 20.8-12l176-304c9.3-15.9-2.2-36-20.7-36z\"]\n  };\n  var faBomb = {\n    prefix: 'fas',\n    iconName: 'bomb',\n    icon: [512, 512, [], \"f1e2\", \"M440.5 88.5l-52 52L415 167c9.4 9.4 9.4 24.6 0 33.9l-17.4 17.4c11.8 26.1 18.4 55.1 18.4 85.6 0 114.9-93.1 208-208 208S0 418.9 0 304 93.1 96 208 96c30.5 0 59.5 6.6 85.6 18.4L311 97c9.4-9.4 24.6-9.4 33.9 0l26.5 26.5 52-52 17.1 17zM500 60h-24c-6.6 0-12 5.4-12 12s5.4 12 12 12h24c6.6 0 12-5.4 12-12s-5.4-12-12-12zM440 0c-6.6 0-12 5.4-12 12v24c0 6.6 5.4 12 12 12s12-5.4 12-12V12c0-6.6-5.4-12-12-12zm33.9 55l17-17c4.7-4.7 4.7-12.3 0-17-4.7-4.7-12.3-4.7-17 0l-17 17c-4.7 4.7-4.7 12.3 0 17 4.8 4.7 12.4 4.7 17 0zm-67.8 0c4.7 4.7 12.3 4.7 17 0 4.7-4.7 4.7-12.3 0-17l-17-17c-4.7-4.7-12.3-4.7-17 0-4.7 4.7-4.7 12.3 0 17l17 17zm67.8 34c-4.7-4.7-12.3-4.7-17 0-4.7 4.7-4.7 12.3 0 17l17 17c4.7 4.7 12.3 4.7 17 0 4.7-4.7 4.7-12.3 0-17l-17-17zM112 272c0-35.3 28.7-64 64-64 8.8 0 16-7.2 16-16s-7.2-16-16-16c-52.9 0-96 43.1-96 96 0 8.8 7.2 16 16 16s16-7.2 16-16z\"]\n  };\n  var faBone = {\n    prefix: 'fas',\n    iconName: 'bone',\n    icon: [640, 512, [], \"f5d7\", \"M598.88 244.56c25.2-12.6 41.12-38.36 41.12-66.53v-7.64C640 129.3 606.7 96 565.61 96c-32.02 0-60.44 20.49-70.57 50.86-7.68 23.03-11.6 45.14-38.11 45.14H183.06c-27.38 0-31.58-25.54-38.11-45.14C134.83 116.49 106.4 96 74.39 96 33.3 96 0 129.3 0 170.39v7.64c0 28.17 15.92 53.93 41.12 66.53 9.43 4.71 9.43 18.17 0 22.88C15.92 280.04 0 305.8 0 333.97v7.64C0 382.7 33.3 416 74.38 416c32.02 0 60.44-20.49 70.57-50.86 7.68-23.03 11.6-45.14 38.11-45.14h273.87c27.38 0 31.58 25.54 38.11 45.14C505.17 395.51 533.6 416 565.61 416c41.08 0 74.38-33.3 74.38-74.39v-7.64c0-28.18-15.92-53.93-41.12-66.53-9.42-4.71-9.42-18.17.01-22.88z\"]\n  };\n  var faBong = {\n    prefix: 'fas',\n    iconName: 'bong',\n    icon: [448, 512, [], \"f55c\", \"M302.5 512c23.18 0 44.43-12.58 56-32.66C374.69 451.26 384 418.75 384 384c0-36.12-10.08-69.81-27.44-98.62L400 241.94l9.38 9.38c6.25 6.25 16.38 6.25 22.63 0l11.3-11.32c6.25-6.25 6.25-16.38 0-22.63l-52.69-52.69c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l9.38 9.38-39.41 39.41c-11.56-11.37-24.53-21.33-38.65-29.51V63.74l15.97-.02c8.82-.01 15.97-7.16 15.98-15.98l.04-31.72C320 7.17 312.82-.01 303.97 0L80.03.26c-8.82.01-15.97 7.16-15.98 15.98l-.04 31.73c-.01 8.85 7.17 16.02 16.02 16.01L96 63.96v153.93C38.67 251.1 0 312.97 0 384c0 34.75 9.31 67.27 25.5 95.34C37.08 499.42 58.33 512 81.5 512h221zM120.06 259.43L144 245.56V63.91l96-.11v181.76l23.94 13.87c24.81 14.37 44.12 35.73 56.56 60.57h-257c12.45-24.84 31.75-46.2 56.56-60.57z\"]\n  };\n  var faBook = {\n    prefix: 'fas',\n    iconName: 'book',\n    icon: [448, 512, [], \"f02d\", \"M448 360V24c0-13.3-10.7-24-24-24H96C43 0 0 43 0 96v320c0 53 43 96 96 96h328c13.3 0 24-10.7 24-24v-16c0-7.5-3.5-14.3-8.9-18.7-4.2-15.4-4.2-59.3 0-74.7 5.4-4.3 8.9-11.1 8.9-18.6zM128 134c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm0 64c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm253.4 250H96c-17.7 0-32-14.3-32-32 0-17.6 14.4-32 32-32h285.4c-1.9 17.1-1.9 46.9 0 64z\"]\n  };\n  var faBookDead = {\n    prefix: 'fas',\n    iconName: 'book-dead',\n    icon: [448, 512, [], \"f6b7\", \"M272 136c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16zm176 222.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16c0-6.4-3.2-12.8-9.6-19.2-3.2-16-3.2-60.8 0-73.6 6.4-3.2 9.6-9.6 9.6-19.2zM240 56c44.2 0 80 28.7 80 64 0 20.9-12.7 39.2-32 50.9V184c0 8.8-7.2 16-16 16h-64c-8.8 0-16-7.2-16-16v-13.1c-19.3-11.7-32-30-32-50.9 0-35.3 35.8-64 80-64zM124.8 223.3l6.3-14.7c1.7-4.1 6.4-5.9 10.5-4.2l98.3 42.1 98.4-42.1c4.1-1.7 8.8.1 10.5 4.2l6.3 14.7c1.7 4.1-.1 8.8-4.2 10.5L280.6 264l70.3 30.1c4.1 1.7 5.9 6.4 4.2 10.5l-6.3 14.7c-1.7 4.1-6.4 5.9-10.5 4.2L240 281.4l-98.3 42.2c-4.1 1.7-8.8-.1-10.5-4.2l-6.3-14.7c-1.7-4.1.1-8.8 4.2-10.5l70.4-30.1-70.5-30.3c-4.1-1.7-5.9-6.4-4.2-10.5zm256 224.7H96c-19.2 0-32-12.8-32-32s16-32 32-32h284.8zM208 136c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16z\"]\n  };\n  var faBookMedical = {\n    prefix: 'fas',\n    iconName: 'book-medical',\n    icon: [448, 512, [], \"f7e6\", \"M448 358.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16q0-9.6-9.6-19.2c-3.2-16-3.2-60.8 0-73.6q9.6-4.8 9.6-19.2zM144 168a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8v48a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8zm236.8 280H96c-19.2 0-32-12.8-32-32s16-32 32-32h284.8z\"]\n  };\n  var faBookOpen = {\n    prefix: 'fas',\n    iconName: 'book-open',\n    icon: [576, 512, [], \"f518\", \"M542.22 32.05c-54.8 3.11-163.72 14.43-230.96 55.59-4.64 2.84-7.27 7.89-7.27 13.17v363.87c0 11.55 12.63 18.85 23.28 13.49 69.18-34.82 169.23-44.32 218.7-46.92 16.89-.89 30.02-14.43 30.02-30.66V62.75c.01-17.71-15.35-31.74-33.77-30.7zM264.73 87.64C197.5 46.48 88.58 35.17 33.78 32.05 15.36 31.01 0 45.04 0 62.75V400.6c0 16.24 13.13 29.78 30.02 30.66 49.49 2.6 149.59 12.11 218.77 46.95 10.62 5.35 23.21-1.94 23.21-13.46V100.63c0-5.29-2.62-10.14-7.27-12.99z\"]\n  };\n  var faBookReader = {\n    prefix: 'fas',\n    iconName: 'book-reader',\n    icon: [512, 512, [], \"f5da\", \"M352 96c0-53.02-42.98-96-96-96s-96 42.98-96 96 42.98 96 96 96 96-42.98 96-96zM233.59 241.1c-59.33-36.32-155.43-46.3-203.79-49.05C13.55 191.13 0 203.51 0 219.14v222.8c0 14.33 11.59 26.28 26.49 27.05 43.66 2.29 131.99 10.68 193.04 41.43 9.37 4.72 20.48-1.71 20.48-11.87V252.56c-.01-4.67-2.32-8.95-6.42-11.46zm248.61-49.05c-48.35 2.74-144.46 12.73-203.78 49.05-4.1 2.51-6.41 6.96-6.41 11.63v245.79c0 10.19 11.14 16.63 20.54 11.9 61.04-30.72 149.32-39.11 192.97-41.4 14.9-.78 26.49-12.73 26.49-27.06V219.14c-.01-15.63-13.56-28.01-29.81-27.09z\"]\n  };\n  var faBookmark = {\n    prefix: 'fas',\n    iconName: 'bookmark',\n    icon: [384, 512, [], \"f02e\", \"M0 512V48C0 21.49 21.49 0 48 0h288c26.51 0 48 21.49 48 48v464L192 400 0 512z\"]\n  };\n  var faBowlingBall = {\n    prefix: 'fas',\n    iconName: 'bowling-ball',\n    icon: [496, 512, [], \"f436\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM120 192c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm64-96c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32zm48 144c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"]\n  };\n  var faBox = {\n    prefix: 'fas',\n    iconName: 'box',\n    icon: [512, 512, [], \"f466\", \"M509.5 184.6L458.9 32.8C452.4 13.2 434.1 0 413.4 0H272v192h238.7c-.4-2.5-.4-5-1.2-7.4zM240 0H98.6c-20.7 0-39 13.2-45.5 32.8L2.5 184.6c-.8 2.4-.8 4.9-1.2 7.4H240V0zM0 224v240c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V224H0z\"]\n  };\n  var faBoxOpen = {\n    prefix: 'fas',\n    iconName: 'box-open',\n    icon: [640, 512, [], \"f49e\", \"M425.7 256c-16.9 0-32.8-9-41.4-23.4L320 126l-64.2 106.6c-8.7 14.5-24.6 23.5-41.5 23.5-4.5 0-9-.6-13.3-1.9L64 215v178c0 14.7 10 27.5 24.2 31l216.2 54.1c10.2 2.5 20.9 2.5 31 0L551.8 424c14.2-3.6 24.2-16.4 24.2-31V215l-137 39.1c-4.3 1.3-8.8 1.9-13.3 1.9zm212.6-112.2L586.8 41c-3.1-6.2-9.8-9.8-16.7-8.9L320 64l91.7 152.1c3.8 6.3 11.4 9.3 18.5 7.3l197.9-56.5c9.9-2.9 14.7-13.9 10.2-23.1zM53.2 41L1.7 143.8c-4.6 9.2.3 20.2 10.1 23l197.9 56.5c7.1 2 14.7-1 18.5-7.3L320 64 69.8 32.1c-6.9-.8-13.5 2.7-16.6 8.9z\"]\n  };\n  var faBoxes = {\n    prefix: 'fas',\n    iconName: 'boxes',\n    icon: [576, 512, [], \"f468\", \"M560 288h-80v96l-32-21.3-32 21.3v-96h-80c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16h224c8.8 0 16-7.2 16-16V304c0-8.8-7.2-16-16-16zm-384-64h224c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16h-80v96l-32-21.3L256 96V0h-80c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16zm64 64h-80v96l-32-21.3L96 384v-96H16c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16h224c8.8 0 16-7.2 16-16V304c0-8.8-7.2-16-16-16z\"]\n  };\n  var faBraille = {\n    prefix: 'fas',\n    iconName: 'braille',\n    icon: [640, 512, [], \"f2a1\", \"M128 256c0 35.346-28.654 64-64 64S0 291.346 0 256s28.654-64 64-64 64 28.654 64 64zM64 384c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-352C28.654 32 0 60.654 0 96s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64zm160 192c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0 160c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-352c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64zm224 192c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0 160c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-352c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64zm160 192c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0 160c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-320c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z\"]\n  };\n  var faBrain = {\n    prefix: 'fas',\n    iconName: 'brain',\n    icon: [576, 512, [], \"f5dc\", \"M208 0c-29.87 0-54.74 20.55-61.8 48.22-.75-.02-1.45-.22-2.2-.22-35.34 0-64 28.65-64 64 0 4.84.64 9.51 1.66 14.04C52.54 138 32 166.57 32 200c0 12.58 3.16 24.32 8.34 34.91C16.34 248.72 0 274.33 0 304c0 33.34 20.42 61.88 49.42 73.89-.9 4.57-1.42 9.28-1.42 14.11 0 39.76 32.23 72 72 72 4.12 0 8.1-.55 12.03-1.21C141.61 491.31 168.25 512 200 512c39.77 0 72-32.24 72-72V205.45c-10.91 8.98-23.98 15.45-38.36 18.39-4.97 1.02-9.64-2.82-9.64-7.89v-16.18c0-3.57 2.35-6.78 5.8-7.66 24.2-6.16 42.2-27.95 42.2-54.04V64c0-35.35-28.66-64-64-64zm368 304c0-29.67-16.34-55.28-40.34-69.09 5.17-10.59 8.34-22.33 8.34-34.91 0-33.43-20.54-62-49.66-73.96 1.02-4.53 1.66-9.2 1.66-14.04 0-35.35-28.66-64-64-64-.75 0-1.45.2-2.2.22C422.74 20.55 397.87 0 368 0c-35.34 0-64 28.65-64 64v74.07c0 26.09 17.99 47.88 42.2 54.04 3.46.88 5.8 4.09 5.8 7.66v16.18c0 5.07-4.68 8.91-9.64 7.89-14.38-2.94-27.44-9.41-38.36-18.39V440c0 39.76 32.23 72 72 72 31.75 0 58.39-20.69 67.97-49.21 3.93.67 7.91 1.21 12.03 1.21 39.77 0 72-32.24 72-72 0-4.83-.52-9.54-1.42-14.11 29-12.01 49.42-40.55 49.42-73.89z\"]\n  };\n  var faBreadSlice = {\n    prefix: 'fas',\n    iconName: 'bread-slice',\n    icon: [576, 512, [], \"f7ec\", \"M288 0C108 0 0 93.4 0 169.14 0 199.44 24.24 224 64 224v256c0 17.67 16.12 32 36 32h376c19.88 0 36-14.33 36-32V224c39.76 0 64-24.56 64-54.86C576 93.4 468 0 288 0z\"]\n  };\n  var faBriefcase = {\n    prefix: 'fas',\n    iconName: 'briefcase',\n    icon: [512, 512, [], \"f0b1\", \"M320 336c0 8.84-7.16 16-16 16h-96c-8.84 0-16-7.16-16-16v-48H0v144c0 25.6 22.4 48 48 48h416c25.6 0 48-22.4 48-48V288H320v48zm144-208h-80V80c0-25.6-22.4-48-48-48H176c-25.6 0-48 22.4-48 48v48H48c-25.6 0-48 22.4-48 48v80h512v-80c0-25.6-22.4-48-48-48zm-144 0H192V96h128v32z\"]\n  };\n  var faBriefcaseMedical = {\n    prefix: 'fas',\n    iconName: 'briefcase-medical',\n    icon: [512, 512, [], \"f469\", \"M464 128h-80V80c0-26.5-21.5-48-48-48H176c-26.5 0-48 21.5-48 48v48H48c-26.5 0-48 21.5-48 48v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V176c0-26.5-21.5-48-48-48zM192 96h128v32H192V96zm160 248c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48z\"]\n  };\n  var faBroadcastTower = {\n    prefix: 'fas',\n    iconName: 'broadcast-tower',\n    icon: [640, 512, [], \"f519\", \"M150.94 192h33.73c11.01 0 18.61-10.83 14.86-21.18-4.93-13.58-7.55-27.98-7.55-42.82s2.62-29.24 7.55-42.82C203.29 74.83 195.68 64 184.67 64h-33.73c-7.01 0-13.46 4.49-15.41 11.23C130.64 92.21 128 109.88 128 128c0 18.12 2.64 35.79 7.54 52.76 1.94 6.74 8.39 11.24 15.4 11.24zM89.92 23.34C95.56 12.72 87.97 0 75.96 0H40.63c-6.27 0-12.14 3.59-14.74 9.31C9.4 45.54 0 85.65 0 128c0 24.75 3.12 68.33 26.69 118.86 2.62 5.63 8.42 9.14 14.61 9.14h34.84c12.02 0 19.61-12.74 13.95-23.37-49.78-93.32-16.71-178.15-.17-209.29zM614.06 9.29C611.46 3.58 605.6 0 599.33 0h-35.42c-11.98 0-19.66 12.66-14.02 23.25 18.27 34.29 48.42 119.42.28 209.23-5.72 10.68 1.8 23.52 13.91 23.52h35.23c6.27 0 12.13-3.58 14.73-9.29C630.57 210.48 640 170.36 640 128s-9.42-82.48-25.94-118.71zM489.06 64h-33.73c-11.01 0-18.61 10.83-14.86 21.18 4.93 13.58 7.55 27.98 7.55 42.82s-2.62 29.24-7.55 42.82c-3.76 10.35 3.85 21.18 14.86 21.18h33.73c7.02 0 13.46-4.49 15.41-11.24 4.9-16.97 7.53-34.64 7.53-52.76 0-18.12-2.64-35.79-7.54-52.76-1.94-6.75-8.39-11.24-15.4-11.24zm-116.3 100.12c7.05-10.29 11.2-22.71 11.2-36.12 0-35.35-28.63-64-63.96-64-35.32 0-63.96 28.65-63.96 64 0 13.41 4.15 25.83 11.2 36.12l-130.5 313.41c-3.4 8.15.46 17.52 8.61 20.92l29.51 12.31c8.15 3.4 17.52-.46 20.91-8.61L244.96 384h150.07l49.2 118.15c3.4 8.16 12.76 12.01 20.91 8.61l29.51-12.31c8.15-3.4 12-12.77 8.61-20.92l-130.5-313.41zM271.62 320L320 203.81 368.38 320h-96.76z\"]\n  };\n  var faBroom = {\n    prefix: 'fas',\n    iconName: 'broom',\n    icon: [640, 512, [], \"f51a\", \"M256.47 216.77l86.73 109.18s-16.6 102.36-76.57 150.12C206.66 523.85 0 510.19 0 510.19s3.8-23.14 11-55.43l94.62-112.17c3.97-4.7-.87-11.62-6.65-9.5l-60.4 22.09c14.44-41.66 32.72-80.04 54.6-97.47 59.97-47.76 163.3-40.94 163.3-40.94zM636.53 31.03l-19.86-25c-5.49-6.9-15.52-8.05-22.41-2.56l-232.48 177.8-34.14-42.97c-5.09-6.41-15.14-5.21-18.59 2.21l-25.33 54.55 86.73 109.18 58.8-12.45c8-1.69 11.42-11.2 6.34-17.6l-34.09-42.92 232.48-177.8c6.89-5.48 8.04-15.53 2.55-22.44z\"]\n  };\n  var faBrush = {\n    prefix: 'fas',\n    iconName: 'brush',\n    icon: [384, 512, [], \"f55d\", \"M352 0H32C14.33 0 0 14.33 0 32v224h384V32c0-17.67-14.33-32-32-32zM0 320c0 35.35 28.66 64 64 64h64v64c0 35.35 28.66 64 64 64s64-28.65 64-64v-64h64c35.34 0 64-28.65 64-64v-32H0v32zm192 104c13.25 0 24 10.74 24 24 0 13.25-10.75 24-24 24s-24-10.75-24-24c0-13.26 10.75-24 24-24z\"]\n  };\n  var faBug = {\n    prefix: 'fas',\n    iconName: 'bug',\n    icon: [512, 512, [], \"f188\", \"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\"]\n  };\n  var faBuilding = {\n    prefix: 'fas',\n    iconName: 'building',\n    icon: [448, 512, [], \"f1ad\", \"M436 480h-20V24c0-13.255-10.745-24-24-24H56C42.745 0 32 10.745 32 24v456H12c-6.627 0-12 5.373-12 12v20h448v-20c0-6.627-5.373-12-12-12zM128 76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76zm0 96c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40zm52 148h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12zm76 160h-64v-84c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v84zm64-172c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40z\"]\n  };\n  var faBullhorn = {\n    prefix: 'fas',\n    iconName: 'bullhorn',\n    icon: [576, 512, [], \"f0a1\", \"M576 240c0-23.63-12.95-44.04-32-55.12V32.01C544 23.26 537.02 0 512 0c-7.12 0-14.19 2.38-19.98 7.02l-85.03 68.03C364.28 109.19 310.66 128 256 128H64c-35.35 0-64 28.65-64 64v96c0 35.35 28.65 64 64 64h33.7c-1.39 10.48-2.18 21.14-2.18 32 0 39.77 9.26 77.35 25.56 110.94 5.19 10.69 16.52 17.06 28.4 17.06h74.28c26.05 0 41.69-29.84 25.9-50.56-16.4-21.52-26.15-48.36-26.15-77.44 0-11.11 1.62-21.79 4.41-32H256c54.66 0 108.28 18.81 150.98 52.95l85.03 68.03a32.023 32.023 0 0 0 19.98 7.02c24.92 0 32-22.78 32-32V295.13C563.05 284.04 576 263.63 576 240zm-96 141.42l-33.05-26.44C392.95 311.78 325.12 288 256 288v-96c69.12 0 136.95-23.78 190.95-66.98L480 98.58v282.84z\"]\n  };\n  var faBullseye = {\n    prefix: 'fas',\n    iconName: 'bullseye',\n    icon: [496, 512, [], \"f140\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 432c-101.69 0-184-82.29-184-184 0-101.69 82.29-184 184-184 101.69 0 184 82.29 184 184 0 101.69-82.29 184-184 184zm0-312c-70.69 0-128 57.31-128 128s57.31 128 128 128 128-57.31 128-128-57.31-128-128-128zm0 192c-35.29 0-64-28.71-64-64s28.71-64 64-64 64 28.71 64 64-28.71 64-64 64z\"]\n  };\n  var faBurn = {\n    prefix: 'fas',\n    iconName: 'burn',\n    icon: [384, 512, [], \"f46a\", \"M192 0C79.7 101.3 0 220.9 0 300.5 0 425 79 512 192 512s192-87 192-211.5c0-79.9-80.2-199.6-192-300.5zm0 448c-56.5 0-96-39-96-94.8 0-13.5 4.6-61.5 96-161.2 91.4 99.7 96 147.7 96 161.2 0 55.8-39.5 94.8-96 94.8z\"]\n  };\n  var faBus = {\n    prefix: 'fas',\n    iconName: 'bus',\n    icon: [512, 512, [], \"f207\", \"M488 128h-8V80c0-44.8-99.2-80-224-80S32 35.2 32 80v48h-8c-13.25 0-24 10.74-24 24v80c0 13.25 10.75 24 24 24h8v160c0 17.67 14.33 32 32 32v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h192v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h6.4c16 0 25.6-12.8 25.6-25.6V256h8c13.25 0 24-10.75 24-24v-80c0-13.26-10.75-24-24-24zM112 400c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm16-112c-17.67 0-32-14.33-32-32V128c0-17.67 14.33-32 32-32h256c17.67 0 32 14.33 32 32v128c0 17.67-14.33 32-32 32H128zm272 112c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"]\n  };\n  var faBusAlt = {\n    prefix: 'fas',\n    iconName: 'bus-alt',\n    icon: [512, 512, [], \"f55e\", \"M488 128h-8V80c0-44.8-99.2-80-224-80S32 35.2 32 80v48h-8c-13.25 0-24 10.74-24 24v80c0 13.25 10.75 24 24 24h8v160c0 17.67 14.33 32 32 32v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h192v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h6.4c16 0 25.6-12.8 25.6-25.6V256h8c13.25 0 24-10.75 24-24v-80c0-13.26-10.75-24-24-24zM160 72c0-4.42 3.58-8 8-8h176c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H168c-4.42 0-8-3.58-8-8V72zm-48 328c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm128-112H128c-17.67 0-32-14.33-32-32v-96c0-17.67 14.33-32 32-32h112v160zm32 0V128h112c17.67 0 32 14.33 32 32v96c0 17.67-14.33 32-32 32H272zm128 112c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"]\n  };\n  var faBusinessTime = {\n    prefix: 'fas',\n    iconName: 'business-time',\n    icon: [640, 512, [], \"f64a\", \"M496 224c-79.59 0-144 64.41-144 144s64.41 144 144 144 144-64.41 144-144-64.41-144-144-144zm64 150.29c0 5.34-4.37 9.71-9.71 9.71h-60.57c-5.34 0-9.71-4.37-9.71-9.71v-76.57c0-5.34 4.37-9.71 9.71-9.71h12.57c5.34 0 9.71 4.37 9.71 9.71V352h38.29c5.34 0 9.71 4.37 9.71 9.71v12.58zM496 192c5.4 0 10.72.33 16 .81V144c0-25.6-22.4-48-48-48h-80V48c0-25.6-22.4-48-48-48H176c-25.6 0-48 22.4-48 48v48H48c-25.6 0-48 22.4-48 48v80h395.12c28.6-20.09 63.35-32 100.88-32zM320 96H192V64h128v32zm6.82 224H208c-8.84 0-16-7.16-16-16v-48H0v144c0 25.6 22.4 48 48 48h291.43C327.1 423.96 320 396.82 320 368c0-16.66 2.48-32.72 6.82-48z\"]\n  };\n  var faCalculator = {\n    prefix: 'fas',\n    iconName: 'calculator',\n    icon: [448, 512, [], \"f1ec\", \"M400 0H48C22.4 0 0 22.4 0 48v416c0 25.6 22.4 48 48 48h352c25.6 0 48-22.4 48-48V48c0-25.6-22.4-48-48-48zM128 435.2c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8V268.8c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v166.4zm0-256c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8V76.8C64 70.4 70.4 64 76.8 64h294.4c6.4 0 12.8 6.4 12.8 12.8v102.4z\"]\n  };\n  var faCalendar = {\n    prefix: 'fas',\n    iconName: 'calendar',\n    icon: [448, 512, [], \"f133\", \"M12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm436-44v-36c0-26.5-21.5-48-48-48h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v36c0 6.6 5.4 12 12 12h424c6.6 0 12-5.4 12-12z\"]\n  };\n  var faCalendarAlt = {\n    prefix: 'fas',\n    iconName: 'calendar-alt',\n    icon: [448, 512, [], \"f073\", \"M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm320-196c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zM192 268c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40zM64 268c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zm0 128c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z\"]\n  };\n  var faCalendarCheck = {\n    prefix: 'fas',\n    iconName: 'calendar-check',\n    icon: [448, 512, [], \"f274\", \"M436 160H12c-6.627 0-12-5.373-12-12v-36c0-26.51 21.49-48 48-48h48V12c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v52h128V12c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v52h48c26.51 0 48 21.49 48 48v36c0 6.627-5.373 12-12 12zM12 192h424c6.627 0 12 5.373 12 12v260c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V204c0-6.627 5.373-12 12-12zm333.296 95.947l-28.169-28.398c-4.667-4.705-12.265-4.736-16.97-.068L194.12 364.665l-45.98-46.352c-4.667-4.705-12.266-4.736-16.971-.068l-28.397 28.17c-4.705 4.667-4.736 12.265-.068 16.97l82.601 83.269c4.667 4.705 12.265 4.736 16.97.068l142.953-141.805c4.705-4.667 4.736-12.265.068-16.97z\"]\n  };\n  var faCalendarDay = {\n    prefix: 'fas',\n    iconName: 'calendar-day',\n    icon: [448, 512, [], \"f783\", \"M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm64-192c0-8.8 7.2-16 16-16h96c8.8 0 16 7.2 16 16v96c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16v-96zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z\"]\n  };\n  var faCalendarMinus = {\n    prefix: 'fas',\n    iconName: 'calendar-minus',\n    icon: [448, 512, [], \"f272\", \"M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm304 192c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H132c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h184z\"]\n  };\n  var faCalendarPlus = {\n    prefix: 'fas',\n    iconName: 'calendar-plus',\n    icon: [448, 512, [], \"f271\", \"M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm316 140c0-6.6-5.4-12-12-12h-60v-60c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v60h-60c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h60v60c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-60h60c6.6 0 12-5.4 12-12v-40z\"]\n  };\n  var faCalendarTimes = {\n    prefix: 'fas',\n    iconName: 'calendar-times',\n    icon: [448, 512, [], \"f273\", \"M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm257.3 160l48.1-48.1c4.7-4.7 4.7-12.3 0-17l-28.3-28.3c-4.7-4.7-12.3-4.7-17 0L224 306.7l-48.1-48.1c-4.7-4.7-12.3-4.7-17 0l-28.3 28.3c-4.7 4.7-4.7 12.3 0 17l48.1 48.1-48.1 48.1c-4.7 4.7-4.7 12.3 0 17l28.3 28.3c4.7 4.7 12.3 4.7 17 0l48.1-48.1 48.1 48.1c4.7 4.7 12.3 4.7 17 0l28.3-28.3c4.7-4.7 4.7-12.3 0-17L269.3 352z\"]\n  };\n  var faCalendarWeek = {\n    prefix: 'fas',\n    iconName: 'calendar-week',\n    icon: [448, 512, [], \"f784\", \"M0 464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V192H0v272zm64-192c0-8.8 7.2-16 16-16h288c8.8 0 16 7.2 16 16v64c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16v-64zM400 64h-48V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H160V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H48C21.5 64 0 85.5 0 112v48h448v-48c0-26.5-21.5-48-48-48z\"]\n  };\n  var faCamera = {\n    prefix: 'fas',\n    iconName: 'camera',\n    icon: [512, 512, [], \"f030\", \"M512 144v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V144c0-26.5 21.5-48 48-48h88l12.3-32.9c7-18.7 24.9-31.1 44.9-31.1h125.5c20 0 37.9 12.4 44.9 31.1L376 96h88c26.5 0 48 21.5 48 48zM376 288c0-66.2-53.8-120-120-120s-120 53.8-120 120 53.8 120 120 120 120-53.8 120-120zm-32 0c0 48.5-39.5 88-88 88s-88-39.5-88-88 39.5-88 88-88 88 39.5 88 88z\"]\n  };\n  var faCameraRetro = {\n    prefix: 'fas',\n    iconName: 'camera-retro',\n    icon: [512, 512, [], \"f083\", \"M48 32C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48H48zm0 32h106c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H38c-3.3 0-6-2.7-6-6V80c0-8.8 7.2-16 16-16zm426 96H38c-3.3 0-6-2.7-6-6v-36c0-3.3 2.7-6 6-6h138l30.2-45.3c1.1-1.7 3-2.7 5-2.7H464c8.8 0 16 7.2 16 16v74c0 3.3-2.7 6-6 6zM256 424c-66.2 0-120-53.8-120-120s53.8-120 120-120 120 53.8 120 120-53.8 120-120 120zm0-208c-48.5 0-88 39.5-88 88s39.5 88 88 88 88-39.5 88-88-39.5-88-88-88zm-48 104c-8.8 0-16-7.2-16-16 0-35.3 28.7-64 64-64 8.8 0 16 7.2 16 16s-7.2 16-16 16c-17.6 0-32 14.4-32 32 0 8.8-7.2 16-16 16z\"]\n  };\n  var faCampground = {\n    prefix: 'fas',\n    iconName: 'campground',\n    icon: [640, 512, [], \"f6bb\", \"M624 448h-24.68L359.54 117.75l53.41-73.55c5.19-7.15 3.61-17.16-3.54-22.35l-25.9-18.79c-7.15-5.19-17.15-3.61-22.35 3.55L320 63.3 278.83 6.6c-5.19-7.15-15.2-8.74-22.35-3.55l-25.88 18.8c-7.15 5.19-8.74 15.2-3.54 22.35l53.41 73.55L40.68 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM320 288l116.36 160H203.64L320 288z\"]\n  };\n  var faCandyCane = {\n    prefix: 'fas',\n    iconName: 'candy-cane',\n    icon: [512, 512, [], \"f786\", \"M497.5 92C469.6 33.1 411.8 0 352.4 0c-27.9 0-56.2 7.3-81.8 22.6L243.1 39c-15.2 9.1-20.1 28.7-11 43.9l32.8 54.9c6 10 16.6 15.6 27.5 15.6 5.6 0 11.2-1.5 16.4-4.5l27.5-16.4c5.1-3.1 10.8-4.5 16.4-4.5 10.9 0 21.5 5.6 27.5 15.6 9.1 15.1 4.1 34.8-11 43.9L15.6 397.6c-15.2 9.1-20.1 28.7-11 43.9l32.8 54.9c6 10 16.6 15.6 27.5 15.6 5.6 0 11.2-1.5 16.4-4.5L428.6 301c71.7-42.9 104.6-133.5 68.9-209zm-177.7 13l-2.5 1.5L296.8 45c9.7-4.7 19.8-8.1 30.3-10.2l20.6 61.8c-9.8.8-19.4 3.3-27.9 8.4zM145.9 431.8l-60.5-38.5 30.8-18.3 60.5 38.5-30.8 18.3zm107.5-63.9l-60.5-38.5 30.8-18.3 60.5 38.5-30.8 18.3zM364.3 302l-60.5-38.5 30.8-18.3 60.5 38.5-30.8 18.3zm20.4-197.3l46-46c8.4 6.5 16 14.1 22.6 22.6L407.6 127c-5.7-9.3-13.7-16.9-22.9-22.3zm82.1 107.8l-59.5-19.8c3.2-5.3 5.8-10.9 7.4-17.1 1.1-4.5 1.7-9.1 1.8-13.6l60.4 20.1c-2.1 10.4-5.5 20.6-10.1 30.4z\"]\n  };\n  var faCannabis = {\n    prefix: 'fas',\n    iconName: 'cannabis',\n    icon: [512, 512, [], \"f55f\", \"M503.47 360.25c-1.56-.82-32.39-16.89-76.78-25.81 64.25-75.12 84.05-161.67 84.93-165.64 1.18-5.33-.44-10.9-4.3-14.77-3.03-3.04-7.12-4.7-11.32-4.7-1.14 0-2.29.12-3.44.38-3.88.85-86.54 19.59-160.58 79.76.01-1.46.01-2.93.01-4.4 0-118.79-59.98-213.72-62.53-217.7A15.973 15.973 0 0 0 256 0c-5.45 0-10.53 2.78-13.47 7.37-2.55 3.98-62.53 98.91-62.53 217.7 0 1.47.01 2.94.01 4.4-74.03-60.16-156.69-78.9-160.58-79.76-1.14-.25-2.29-.38-3.44-.38-4.2 0-8.29 1.66-11.32 4.7A15.986 15.986 0 0 0 .38 168.8c.88 3.97 20.68 90.52 84.93 165.64-44.39 8.92-75.21 24.99-76.78 25.81a16.003 16.003 0 0 0-.02 28.29c2.45 1.29 60.76 31.72 133.49 31.72 6.14 0 11.96-.1 17.5-.31-11.37 22.23-16.52 38.31-16.81 39.22-1.8 5.68-.29 11.89 3.91 16.11a16.019 16.019 0 0 0 16.1 3.99c1.83-.57 37.72-11.99 77.3-39.29V504c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8v-64.01c39.58 27.3 75.47 38.71 77.3 39.29a16.019 16.019 0 0 0 16.1-3.99c4.2-4.22 5.71-10.43 3.91-16.11-.29-.91-5.45-16.99-16.81-39.22 5.54.21 11.37.31 17.5.31 72.72 0 131.04-30.43 133.49-31.72 5.24-2.78 8.52-8.22 8.51-14.15-.01-5.94-3.29-11.39-8.53-14.15z\"]\n  };\n  var faCapsules = {\n    prefix: 'fas',\n    iconName: 'capsules',\n    icon: [576, 512, [], \"f46b\", \"M555.3 300.1L424.2 112.8C401.9 81 366.4 64 330.4 64c-22.6 0-45.5 6.7-65.5 20.7-19.7 13.8-33.7 32.8-41.5 53.8C220.5 79.2 172 32 112 32 50.1 32 0 82.1 0 144v224c0 61.9 50.1 112 112 112s112-50.1 112-112V218.9c3.3 8.6 7.3 17.1 12.8 25L368 431.2c22.2 31.8 57.7 48.8 93.8 48.8 22.7 0 45.5-6.7 65.5-20.7 51.7-36.2 64.2-107.5 28-159.2zM160 256H64V144c0-26.5 21.5-48 48-48s48 21.5 48 48v112zm194.8 44.9l-65.6-93.7c-7.7-11-10.7-24.4-8.3-37.6 2.3-13.2 9.7-24.8 20.7-32.5 8.5-6 18.5-9.1 28.8-9.1 16.5 0 31.9 8 41.3 21.5l65.6 93.7-82.5 57.7z\"]\n  };\n  var faCar = {\n    prefix: 'fas',\n    iconName: 'car',\n    icon: [512, 512, [], \"f1b9\", \"M499.99 176h-59.87l-16.64-41.6C406.38 91.63 365.57 64 319.5 64h-127c-46.06 0-86.88 27.63-103.99 70.4L71.87 176H12.01C4.2 176-1.53 183.34.37 190.91l6 24C7.7 220.25 12.5 224 18.01 224h20.07C24.65 235.73 16 252.78 16 272v48c0 16.12 6.16 30.67 16 41.93V416c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h256v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-54.07c9.84-11.25 16-25.8 16-41.93v-48c0-19.22-8.65-36.27-22.07-48H494c5.51 0 10.31-3.75 11.64-9.09l6-24c1.89-7.57-3.84-14.91-11.65-14.91zm-352.06-17.83c7.29-18.22 24.94-30.17 44.57-30.17h127c19.63 0 37.28 11.95 44.57 30.17L384 208H128l19.93-49.83zM96 319.8c-19.2 0-32-12.76-32-31.9S76.8 256 96 256s48 28.71 48 47.85-28.8 15.95-48 15.95zm320 0c-19.2 0-48 3.19-48-15.95S396.8 256 416 256s32 12.76 32 31.9-12.8 31.9-32 31.9z\"]\n  };\n  var faCarAlt = {\n    prefix: 'fas',\n    iconName: 'car-alt',\n    icon: [480, 512, [], \"f5de\", \"M438.66 212.33l-11.24-28.1-19.93-49.83C390.38 91.63 349.57 64 303.5 64h-127c-46.06 0-86.88 27.63-103.99 70.4l-19.93 49.83-11.24 28.1C17.22 221.5 0 244.66 0 272v48c0 16.12 6.16 30.67 16 41.93V416c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h256v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-54.07c9.84-11.25 16-25.8 16-41.93v-48c0-27.34-17.22-50.5-41.34-59.67zm-306.73-54.16c7.29-18.22 24.94-30.17 44.57-30.17h127c19.63 0 37.28 11.95 44.57 30.17L368 208H112l19.93-49.83zM80 319.8c-19.2 0-32-12.76-32-31.9S60.8 256 80 256s48 28.71 48 47.85-28.8 15.95-48 15.95zm320 0c-19.2 0-48 3.19-48-15.95S380.8 256 400 256s32 12.76 32 31.9-12.8 31.9-32 31.9z\"]\n  };\n  var faCarBattery = {\n    prefix: 'fas',\n    iconName: 'car-battery',\n    icon: [512, 512, [], \"f5df\", \"M480 128h-32V80c0-8.84-7.16-16-16-16h-96c-8.84 0-16 7.16-16 16v48H192V80c0-8.84-7.16-16-16-16H80c-8.84 0-16 7.16-16 16v48H32c-17.67 0-32 14.33-32 32v256c0 17.67 14.33 32 32 32h448c17.67 0 32-14.33 32-32V160c0-17.67-14.33-32-32-32zM192 264c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h112c4.42 0 8 3.58 8 8v16zm256 0c0 4.42-3.58 8-8 8h-40v40c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-40h-40c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h40v-40c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v40h40c4.42 0 8 3.58 8 8v16z\"]\n  };\n  var faCarCrash = {\n    prefix: 'fas',\n    iconName: 'car-crash',\n    icon: [640, 512, [], \"f5e1\", \"M143.25 220.81l-12.42 46.37c-3.01 11.25-3.63 22.89-2.41 34.39l-35.2 28.98c-6.57 5.41-16.31-.43-14.62-8.77l15.44-76.68c1.06-5.26-2.66-10.28-8-10.79l-77.86-7.55c-8.47-.82-11.23-11.83-4.14-16.54l65.15-43.3c4.46-2.97 5.38-9.15 1.98-13.29L21.46 93.22c-5.41-6.57.43-16.3 8.78-14.62l76.68 15.44c5.26 1.06 10.28-2.66 10.8-8l7.55-77.86c.82-8.48 11.83-11.23 16.55-4.14l43.3 65.14c2.97 4.46 9.15 5.38 13.29 1.98l60.4-49.71c6.57-5.41 16.3.43 14.62 8.77L262.1 86.38c-2.71 3.05-5.43 6.09-7.91 9.4l-32.15 42.97-10.71 14.32c-32.73 8.76-59.18 34.53-68.08 67.74zm494.57 132.51l-12.42 46.36c-3.13 11.68-9.38 21.61-17.55 29.36a66.876 66.876 0 0 1-8.76 7l-13.99 52.23c-1.14 4.27-3.1 8.1-5.65 11.38-7.67 9.84-20.74 14.68-33.54 11.25L515 502.62c-17.07-4.57-27.2-22.12-22.63-39.19l8.28-30.91-247.28-66.26-8.28 30.91c-4.57 17.07-22.12 27.2-39.19 22.63l-30.91-8.28c-12.8-3.43-21.7-14.16-23.42-26.51-.57-4.12-.35-8.42.79-12.68l13.99-52.23a66.62 66.62 0 0 1-4.09-10.45c-3.2-10.79-3.65-22.52-.52-34.2l12.42-46.37c5.31-19.8 19.36-34.83 36.89-42.21a64.336 64.336 0 0 1 18.49-4.72l18.13-24.23 32.15-42.97c3.45-4.61 7.19-8.9 11.2-12.84 8-7.89 17.03-14.44 26.74-19.51 4.86-2.54 9.89-4.71 15.05-6.49 10.33-3.58 21.19-5.63 32.24-6.04 11.05-.41 22.31.82 33.43 3.8l122.68 32.87c11.12 2.98 21.48 7.54 30.85 13.43a111.11 111.11 0 0 1 34.69 34.5c8.82 13.88 14.64 29.84 16.68 46.99l6.36 53.29 3.59 30.05a64.49 64.49 0 0 1 22.74 29.93c4.39 11.88 5.29 25.19 1.75 38.39zM255.58 234.34c-18.55-4.97-34.21 4.04-39.17 22.53-4.96 18.49 4.11 34.12 22.65 39.09 18.55 4.97 45.54 15.51 50.49-2.98 4.96-18.49-15.43-53.67-33.97-58.64zm290.61 28.17l-6.36-53.29c-.58-4.87-1.89-9.53-3.82-13.86-5.8-12.99-17.2-23.01-31.42-26.82l-122.68-32.87a48.008 48.008 0 0 0-50.86 17.61l-32.15 42.97 172 46.08 75.29 20.18zm18.49 54.65c-18.55-4.97-53.8 15.31-58.75 33.79-4.95 18.49 23.69 22.86 42.24 27.83 18.55 4.97 34.21-4.04 39.17-22.53 4.95-18.48-4.11-34.12-22.66-39.09z\"]\n  };\n  var faCarSide = {\n    prefix: 'fas',\n    iconName: 'car-side',\n    icon: [640, 512, [], \"f5e4\", \"M544 192h-16L419.22 56.02A64.025 64.025 0 0 0 369.24 32H155.33c-26.17 0-49.7 15.93-59.42 40.23L48 194.26C20.44 201.4 0 226.21 0 256v112c0 8.84 7.16 16 16 16h48c0 53.02 42.98 96 96 96s96-42.98 96-96h128c0 53.02 42.98 96 96 96s96-42.98 96-96h48c8.84 0 16-7.16 16-16v-80c0-53.02-42.98-96-96-96zM160 432c-26.47 0-48-21.53-48-48s21.53-48 48-48 48 21.53 48 48-21.53 48-48 48zm72-240H116.93l38.4-96H232v96zm48 0V96h89.24l76.8 96H280zm200 240c-26.47 0-48-21.53-48-48s21.53-48 48-48 48 21.53 48 48-21.53 48-48 48z\"]\n  };\n  var faCaretDown = {\n    prefix: 'fas',\n    iconName: 'caret-down',\n    icon: [320, 512, [], \"f0d7\", \"M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z\"]\n  };\n  var faCaretLeft = {\n    prefix: 'fas',\n    iconName: 'caret-left',\n    icon: [192, 512, [], \"f0d9\", \"M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z\"]\n  };\n  var faCaretRight = {\n    prefix: 'fas',\n    iconName: 'caret-right',\n    icon: [192, 512, [], \"f0da\", \"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"]\n  };\n  var faCaretSquareDown = {\n    prefix: 'fas',\n    iconName: 'caret-square-down',\n    icon: [448, 512, [], \"f150\", \"M448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zM92.5 220.5l123 123c4.7 4.7 12.3 4.7 17 0l123-123c7.6-7.6 2.2-20.5-8.5-20.5H101c-10.7 0-16.1 12.9-8.5 20.5z\"]\n  };\n  var faCaretSquareLeft = {\n    prefix: 'fas',\n    iconName: 'caret-square-left',\n    icon: [448, 512, [], \"f191\", \"M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zM259.515 124.485l-123.03 123.03c-4.686 4.686-4.686 12.284 0 16.971l123.029 123.029c7.56 7.56 20.485 2.206 20.485-8.485V132.971c.001-10.691-12.925-16.045-20.484-8.486z\"]\n  };\n  var faCaretSquareRight = {\n    prefix: 'fas',\n    iconName: 'caret-square-right',\n    icon: [448, 512, [], \"f152\", \"M48 32h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48zm140.485 355.515l123.029-123.029c4.686-4.686 4.686-12.284 0-16.971l-123.029-123.03c-7.56-7.56-20.485-2.206-20.485 8.485v246.059c0 10.691 12.926 16.045 20.485 8.486z\"]\n  };\n  var faCaretSquareUp = {\n    prefix: 'fas',\n    iconName: 'caret-square-up',\n    icon: [448, 512, [], \"f151\", \"M0 432V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48zm355.515-140.485l-123.03-123.03c-4.686-4.686-12.284-4.686-16.971 0L92.485 291.515c-7.56 7.56-2.206 20.485 8.485 20.485h246.059c10.691 0 16.045-12.926 8.486-20.485z\"]\n  };\n  var faCaretUp = {\n    prefix: 'fas',\n    iconName: 'caret-up',\n    icon: [320, 512, [], \"f0d8\", \"M288.662 352H31.338c-17.818 0-26.741-21.543-14.142-34.142l128.662-128.662c7.81-7.81 20.474-7.81 28.284 0l128.662 128.662c12.6 12.599 3.676 34.142-14.142 34.142z\"]\n  };\n  var faCarrot = {\n    prefix: 'fas',\n    iconName: 'carrot',\n    icon: [512, 512, [], \"f787\", \"M298.2 156.6c-52.7-25.7-114.5-10.5-150.2 32.8l55.2 55.2c6.3 6.3 6.3 16.4 0 22.6-3.1 3.1-7.2 4.7-11.3 4.7s-8.2-1.6-11.3-4.7L130.4 217 2.3 479.7c-2.9 6-3.1 13.3 0 19.7 5.4 11.1 18.9 15.7 30 10.3l133.6-65.2-49.2-49.2c-6.3-6.2-6.3-16.4 0-22.6 6.3-6.2 16.4-6.2 22.6 0l57 57 102-49.8c24-11.7 44.5-31.3 57.1-57.1 30.1-61.7 4.5-136.1-57.2-166.2zm92.1-34.9C409.8 81 399.7 32.9 360 0c-50.3 41.7-52.5 107.5-7.9 151.9l8 8c44.4 44.6 110.3 42.4 151.9-7.9-32.9-39.7-81-49.8-121.7-30.3z\"]\n  };\n  var faCartArrowDown = {\n    prefix: 'fas',\n    iconName: 'cart-arrow-down',\n    icon: [576, 512, [], \"f218\", \"M504.717 320H211.572l6.545 32h268.418c15.401 0 26.816 14.301 23.403 29.319l-5.517 24.276C523.112 414.668 536 433.828 536 456c0 31.202-25.519 56.444-56.824 55.994-29.823-.429-54.35-24.631-55.155-54.447-.44-16.287 6.085-31.049 16.803-41.548H231.176C241.553 426.165 248 440.326 248 456c0 31.813-26.528 57.431-58.67 55.938-28.54-1.325-51.751-24.385-53.251-52.917-1.158-22.034 10.436-41.455 28.051-51.586L93.883 64H24C10.745 64 0 53.255 0 40V24C0 10.745 10.745 0 24 0h102.529c11.401 0 21.228 8.021 23.513 19.19L159.208 64H551.99c15.401 0 26.816 14.301 23.403 29.319l-47.273 208C525.637 312.246 515.923 320 504.717 320zM403.029 192H360v-60c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v60h-43.029c-10.691 0-16.045 12.926-8.485 20.485l67.029 67.029c4.686 4.686 12.284 4.686 16.971 0l67.029-67.029c7.559-7.559 2.205-20.485-8.486-20.485z\"]\n  };\n  var faCartPlus = {\n    prefix: 'fas',\n    iconName: 'cart-plus',\n    icon: [576, 512, [], \"f217\", \"M504.717 320H211.572l6.545 32h268.418c15.401 0 26.816 14.301 23.403 29.319l-5.517 24.276C523.112 414.668 536 433.828 536 456c0 31.202-25.519 56.444-56.824 55.994-29.823-.429-54.35-24.631-55.155-54.447-.44-16.287 6.085-31.049 16.803-41.548H231.176C241.553 426.165 248 440.326 248 456c0 31.813-26.528 57.431-58.67 55.938-28.54-1.325-51.751-24.385-53.251-52.917-1.158-22.034 10.436-41.455 28.051-51.586L93.883 64H24C10.745 64 0 53.255 0 40V24C0 10.745 10.745 0 24 0h102.529c11.401 0 21.228 8.021 23.513 19.19L159.208 64H551.99c15.401 0 26.816 14.301 23.403 29.319l-47.273 208C525.637 312.246 515.923 320 504.717 320zM408 168h-48v-40c0-8.837-7.163-16-16-16h-16c-8.837 0-16 7.163-16 16v40h-48c-8.837 0-16 7.163-16 16v16c0 8.837 7.163 16 16 16h48v40c0 8.837 7.163 16 16 16h16c8.837 0 16-7.163 16-16v-40h48c8.837 0 16-7.163 16-16v-16c0-8.837-7.163-16-16-16z\"]\n  };\n  var faCashRegister = {\n    prefix: 'fas',\n    iconName: 'cash-register',\n    icon: [512, 512, [], \"f788\", \"M511.1 378.8l-26.7-160c-2.6-15.4-15.9-26.7-31.6-26.7H208v-64h96c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16H48c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16h96v64H59.1c-15.6 0-29 11.3-31.6 26.7L.8 378.7c-.6 3.5-.9 7-.9 10.5V480c0 17.7 14.3 32 32 32h448c17.7 0 32-14.3 32-32v-90.7c.1-3.5-.2-7-.8-10.5zM280 248c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16v-16zm-32 64h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16v-16c0-8.8 7.2-16 16-16zm-32-80c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16v-16c0-8.8 7.2-16 16-16h16zM80 80V48h192v32H80zm40 200h-16c-8.8 0-16-7.2-16-16v-16c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16zm16 64v-16c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16zm216 112c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h176c4.4 0 8 3.6 8 8v16zm24-112c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16v-16c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16zm48-80c0 8.8-7.2 16-16 16h-16c-8.8 0-16-7.2-16-16v-16c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16z\"]\n  };\n  var faCat = {\n    prefix: 'fas',\n    iconName: 'cat',\n    icon: [512, 512, [], \"f6be\", \"M290.59 192c-20.18 0-106.82 1.98-162.59 85.95V192c0-52.94-43.06-96-96-96-17.67 0-32 14.33-32 32s14.33 32 32 32c17.64 0 32 14.36 32 32v256c0 35.3 28.7 64 64 64h176c8.84 0 16-7.16 16-16v-16c0-17.67-14.33-32-32-32h-32l128-96v144c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V289.86c-10.29 2.67-20.89 4.54-32 4.54-61.81 0-113.52-44.05-125.41-102.4zM448 96h-64l-64-64v134.4c0 53.02 42.98 96 96 96s96-42.98 96-96V32l-64 64zm-72 80c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zm80 0c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16z\"]\n  };\n  var faCertificate = {\n    prefix: 'fas',\n    iconName: 'certificate',\n    icon: [512, 512, [], \"f0a3\", \"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\"]\n  };\n  var faChair = {\n    prefix: 'fas',\n    iconName: 'chair',\n    icon: [448, 512, [], \"f6c0\", \"M112 128c0-29.5 16.2-55 40-68.9V256h48V48h48v208h48V59.1c23.8 13.9 40 39.4 40 68.9v128h48V128C384 57.3 326.7 0 256 0h-64C121.3 0 64 57.3 64 128v128h48zm334.3 213.9l-10.7-32c-4.4-13.1-16.6-21.9-30.4-21.9H42.7c-13.8 0-26 8.8-30.4 21.9l-10.7 32C-5.2 362.6 10.2 384 32 384v112c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V384h256v112c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V384c21.8 0 37.2-21.4 30.3-42.1z\"]\n  };\n  var faChalkboard = {\n    prefix: 'fas',\n    iconName: 'chalkboard',\n    icon: [640, 512, [], \"f51b\", \"M96 64h448v352h64V40c0-22.06-17.94-40-40-40H72C49.94 0 32 17.94 32 40v376h64V64zm528 384H480v-64H288v64H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"]\n  };\n  var faChalkboardTeacher = {\n    prefix: 'fas',\n    iconName: 'chalkboard-teacher',\n    icon: [640, 512, [], \"f51c\", \"M208 352c-2.39 0-4.78.35-7.06 1.09C187.98 357.3 174.35 360 160 360c-14.35 0-27.98-2.7-40.95-6.91-2.28-.74-4.66-1.09-7.05-1.09C49.94 352-.33 402.48 0 464.62.14 490.88 21.73 512 48 512h224c26.27 0 47.86-21.12 48-47.38.33-62.14-49.94-112.62-112-112.62zm-48-32c53.02 0 96-42.98 96-96s-42.98-96-96-96-96 42.98-96 96 42.98 96 96 96zM592 0H208c-26.47 0-48 22.25-48 49.59V96c23.42 0 45.1 6.78 64 17.8V64h352v288h-64v-64H384v64h-76.24c19.1 16.69 33.12 38.73 39.69 64H592c26.47 0 48-22.25 48-49.59V49.59C640 22.25 618.47 0 592 0z\"]\n  };\n  var faChargingStation = {\n    prefix: 'fas',\n    iconName: 'charging-station',\n    icon: [576, 512, [], \"f5e7\", \"M336 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h320c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm208-320V80c0-8.84-7.16-16-16-16s-16 7.16-16 16v48h-32V80c0-8.84-7.16-16-16-16s-16 7.16-16 16v48h-16c-8.84 0-16 7.16-16 16v32c0 35.76 23.62 65.69 56 75.93v118.49c0 13.95-9.5 26.92-23.26 29.19C431.22 402.5 416 388.99 416 372v-28c0-48.6-39.4-88-88-88h-8V64c0-35.35-28.65-64-64-64H96C60.65 0 32 28.65 32 64v352h288V304h8c22.09 0 40 17.91 40 40v24.61c0 39.67 28.92 75.16 68.41 79.01C481.71 452.05 520 416.41 520 372V251.93c32.38-10.24 56-40.17 56-75.93v-32c0-8.84-7.16-16-16-16h-16zm-283.91 47.76l-93.7 139c-2.2 3.33-6.21 5.24-10.39 5.24-7.67 0-13.47-6.28-11.67-12.92L167.35 224H108c-7.25 0-12.85-5.59-11.89-11.89l16-107C112.9 99.9 117.98 96 124 96h68c7.88 0 13.62 6.54 11.6 13.21L192 160h57.7c9.24 0 15.01 8.78 10.39 15.76z\"]\n  };\n  var faChartArea = {\n    prefix: 'fas',\n    iconName: 'chart-area',\n    icon: [512, 512, [], \"f1fe\", \"M500 384c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v308h436zM372.7 159.5L288 216l-85.3-113.7c-5.1-6.8-15.5-6.3-19.9 1L96 248v104h384l-89.9-187.8c-3.2-6.5-11.4-8.7-17.4-4.7z\"]\n  };\n  var faChartBar = {\n    prefix: 'fas',\n    iconName: 'chart-bar',\n    icon: [512, 512, [], \"f080\", \"M332.8 320h38.4c6.4 0 12.8-6.4 12.8-12.8V172.8c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h38.4c6.4 0 12.8-6.4 12.8-12.8V76.8c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8zm-288 0h38.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8zm96 0h38.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8zM496 384H64V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"]\n  };\n  var faChartLine = {\n    prefix: 'fas',\n    iconName: 'chart-line',\n    icon: [512, 512, [], \"f201\", \"M496 384H64V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM464 96H345.94c-21.38 0-32.09 25.85-16.97 40.97l32.4 32.4L288 242.75l-73.37-73.37c-12.5-12.5-32.76-12.5-45.25 0l-68.69 68.69c-6.25 6.25-6.25 16.38 0 22.63l22.62 22.62c6.25 6.25 16.38 6.25 22.63 0L192 237.25l73.37 73.37c12.5 12.5 32.76 12.5 45.25 0l96-96 32.4 32.4c15.12 15.12 40.97 4.41 40.97-16.97V112c.01-8.84-7.15-16-15.99-16z\"]\n  };\n  var faChartPie = {\n    prefix: 'fas',\n    iconName: 'chart-pie',\n    icon: [544, 512, [], \"f200\", \"M527.79 288H290.5l158.03 158.03c6.04 6.04 15.98 6.53 22.19.68 38.7-36.46 65.32-85.61 73.13-140.86 1.34-9.46-6.51-17.85-16.06-17.85zm-15.83-64.8C503.72 103.74 408.26 8.28 288.8.04 279.68-.59 272 7.1 272 16.24V240h223.77c9.14 0 16.82-7.68 16.19-16.8zM224 288V50.71c0-9.55-8.39-17.4-17.84-16.06C86.99 51.49-4.1 155.6.14 280.37 4.5 408.51 114.83 513.59 243.03 511.98c50.4-.63 96.97-16.87 135.26-44.03 7.9-5.6 8.42-17.23 1.57-24.08L224 288z\"]\n  };\n  var faCheck = {\n    prefix: 'fas',\n    iconName: 'check',\n    icon: [512, 512, [], \"f00c\", \"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\"]\n  };\n  var faCheckCircle = {\n    prefix: 'fas',\n    iconName: 'check-circle',\n    icon: [512, 512, [], \"f058\", \"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z\"]\n  };\n  var faCheckDouble = {\n    prefix: 'fas',\n    iconName: 'check-double',\n    icon: [512, 512, [], \"f560\", \"M504.5 171.95l-36.2-36.41c-10-10.05-26.21-10.05-36.2 0L192 377.02 79.9 264.28c-10-10.06-26.21-10.06-36.2 0L7.5 300.69c-10 10.05-10 26.36 0 36.41l166.4 167.36c10 10.06 26.21 10.06 36.2 0l294.4-296.09c10-10.06 10-26.36 0-36.42zM166.57 282.71c6.84 7.02 18.18 7.02 25.21.18L403.85 72.62c7.02-6.84 7.02-18.18.18-25.21L362.08 5.29c-6.84-7.02-18.18-7.02-25.21-.18L179.71 161.19l-68.23-68.77c-6.84-7.02-18.18-7.02-25.2-.18l-42.13 41.77c-7.02 6.84-7.02 18.18-.18 25.2l122.6 123.5z\"]\n  };\n  var faCheckSquare = {\n    prefix: 'fas',\n    iconName: 'check-square',\n    icon: [448, 512, [], \"f14a\", \"M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zm-204.686-98.059l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.248-16.379-6.249-22.628 0L184 302.745l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.25 16.379 6.25 22.628.001z\"]\n  };\n  var faCheese = {\n    prefix: 'fas',\n    iconName: 'cheese',\n    icon: [512, 512, [], \"f7ef\", \"M0 288v160a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32V288zM299.83 32a32 32 0 0 0-21.13 7L0 256h512c0-119.89-94-217.8-212.17-224z\"]\n  };\n  var faChess = {\n    prefix: 'fas',\n    iconName: 'chess',\n    icon: [512, 512, [], \"f439\", \"M76.1 210.2h103.7l34.6-95.1c2.8-7.8-3-16.1-11.3-16.1H152V68.8h21.6c3.3 0 6-2.7 6-6V40.4c0-3.3-2.7-6-6-6h-28.4V6c0-3.3-2.7-6-6-6h-22.4c-3.3 0-6 2.7-6 6v28.4H82.4c-3.3 0-6 2.7-6 6v22.4c0 3.3 2.7 6 6 6H104V99H52.8c-8.3 0-14.1 8.3-11.3 16.1zm237.2 90.7l24.9 17c.1 18.1-.2 63.9-11.9 114.5h147.5c-11.7-50.5-12-96.3-11.9-114.5l24.9-16.9c1.1-.7 1.7-1.9 1.7-3.2v-69.9c0-2.1-1.7-3.9-3.9-3.9h-27.7c-2.1 0-3.9 1.7-3.9 3.9v31.5h-22.7v-31.5c0-2.1-1.7-3.9-3.9-3.9h-52.9c-2.1 0-3.9 1.7-3.9 3.9v31.5h-22.7v-31.5c0-2.1-1.7-3.9-3.9-3.9h-27.7c-2.1 0-3.9 1.7-3.9 3.9v69.9c.2 1.2.8 2.4 1.9 3.1zm71.5 52c0-8.4 6.8-15.2 15.2-15.2s15.2 6.8 15.2 15.2v30.3h-30.3v-30.3zm119.8 117.2L491 459.4v-15.6c0-2.1-1.7-3.9-3.9-3.9H312.9c-2.1 0-3.9 1.7-3.9 3.9v15.6L295.3 470c-.9.7-1.5 1.9-1.5 3v35c0 2.1 1.7 3.9 3.9 3.9h204.5c2.1 0 3.9-1.7 3.9-3.9v-35c0-1.1-.5-2.2-1.5-2.9zm-259.8-10.8l-22.1-14.2V417c0-3.3-2.7-6-6-6H39.3c-3.3 0-6 2.7-6 6v28.1l-22.1 14.2c-1.7 1.1-2.8 3-2.8 5.1V506c0 3.3 2.7 6 6 6h227.2c3.3 0 6-2.7 6-6v-41.6c0-2.1-1-4-2.8-5.1zm-45-208.9c3.3 0 6-2.7 6-6v-20.8c0-3.3-2.7-6-6-6H56.2c-3.3 0-6 2.7-6 6v20.8c0 3.3 2.7 6 6 6H82c0 28.8 2.5 95.1-17.4 153.2h126.8c-19.6-57-17.4-121.5-17.4-153.2z\"]\n  };\n  var faChessBishop = {\n    prefix: 'fas',\n    iconName: 'chess-bishop',\n    icon: [320, 512, [], \"f43a\", \"M123.158 77.881C107.369 72.53 96 57.597 96 40c0-22.091 17.909-40 40-40h47.796c22.091 0 40 17.909 40 40 0 17.541-11.295 32.434-27.005 37.829 23.993 16.657 48.577 46.839 68.703 82.05L144.929 280.443a6 6 0 0 0 0 8.485l14.142 14.142a6 6 0 0 0 8.485 0L280.9 189.726c17.758 38.297 29.371 79.443 29.371 114.273 0 53.786-22.897 75.788-58.446 86.033V448H68.174v-57.97C32.631 379.784 9.739 357.781 9.739 304c0-78.029 58.281-187.766 113.419-226.119zM320 500v-24c0-6.627-5.373-12-12-12H12c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h296c6.627 0 12-5.373 12-12z\"]\n  };\n  var faChessBoard = {\n    prefix: 'fas',\n    iconName: 'chess-board',\n    icon: [512, 512, [], \"f43c\", \"M192 256v64h64v-64zm320 64v-64h-64v64zM0 192v64h64v-64zm512 0v-64h-64v64zm0 256v-64h-64v64zM256 256h64v-64h-64zM0 512h64v-64H0zm128 0h64v-64h-64zM384 0h-64v64h64zM128 0H64v64h64zm128 512h64v-64h-64zM0 64v64h64V64zm0 256v64h64v-64zM256 0h-64v64h64zm128 512h64v-64h-64zM64 384v64h64v-64zm256 0v64h64v-64zm-64-192v-64h-64v64zm128 192h64v-64h-64zM128 256H64v64h64zm256 0h64v-64h-64zM512 0h-64v64h64zM128 128H64v64h64zm256-64v64h64V64zM192 384v64h64v-64zm-64-64v64h64v-64zm128 0v64h64v-64zm-64-128h-64v64h64zm128-64V64h-64v64zm-128 0V64h-64v64zm128 64h64v-64h-64zm0 128h64v-64h-64z\"]\n  };\n  var faChessKing = {\n    prefix: 'fas',\n    iconName: 'chess-king',\n    icon: [448, 512, [], \"f43f\", \"M416 476v24c0 6.627-5.373 12-12 12H44c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12zm-8.033-324H248v-48h50a6 6 0 0 0 6-6V62a6 6 0 0 0-6-6h-50V6a6 6 0 0 0-6-6h-36a6 6 0 0 0-6 6v50h-50a6 6 0 0 0-6 6v36a6 6 0 0 0 6 6h50v48H40.033c-27.574 0-46.879 27.244-37.738 53.259L87.582 448h272.836l85.287-242.741C454.846 179.244 435.541 152 407.967 152z\"]\n  };\n  var faChessKnight = {\n    prefix: 'fas',\n    iconName: 'chess-knight',\n    icon: [384, 512, [], \"f441\", \"M352 224v224H32v-46.557c0-30.302 17.12-58.003 44.223-71.554l57.243-28.622A48 48 0 0 0 160 258.334V208l-22.127 11.063a23.996 23.996 0 0 0-12.55 15.645l-11.835 47.338a12 12 0 0 1-7.185 8.231l-29.601 11.84a11.998 11.998 0 0 1-9.33-.176L7.126 275.167A12 12 0 0 1 0 264.201v-158.26c0-6.365 2.529-12.47 7.03-16.971L16 80 1.789 51.578A16.937 16.937 0 0 1 0 44c0-6.627 5.373-12 12-12h148c106.039 0 192 85.961 192 192zm20 240H12c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h360c6.627 0 12-5.373 12-12v-24c0-6.627-5.373-12-12-12zM52 128c-11.046 0-20 8.954-20 20s8.954 20 20 20 20-8.954 20-20-8.954-20-20-20z\"]\n  };\n  var faChessPawn = {\n    prefix: 'fas',\n    iconName: 'chess-pawn',\n    icon: [320, 512, [], \"f443\", \"M264 448H56s60-42.743 60-176H84c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h40.209C95.721 210.56 76 181.588 76 148c0-46.392 37.608-84 84-84s84 37.608 84 84c0 33.588-19.721 62.56-48.209 76H236c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12h-32c0 133.257 60 176 60 176zm28 16H28c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h264c6.627 0 12-5.373 12-12v-24c0-6.627-5.373-12-12-12z\"]\n  };\n  var faChessQueen = {\n    prefix: 'fas',\n    iconName: 'chess-queen',\n    icon: [512, 512, [], \"f445\", \"M436 512H76c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12zM255.579 0c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zm204.568 154.634c-5.768-3.045-12.916-.932-16.082 4.77-8.616 15.516-22.747 37.801-44.065 37.801-28.714 0-30.625-19.804-31.686-57.542-.183-6.492-5.501-11.664-11.995-11.664h-41.006c-5.175 0-9.754 3.328-11.388 8.238-8.89 26.709-26.073 40.992-47.925 40.992s-39.034-14.283-47.925-40.992c-1.634-4.91-6.213-8.238-11.388-8.238h-41.005c-6.495 0-11.813 5.174-11.995 11.667-1.052 37.642-2.934 57.539-31.688 57.539-20.691 0-33.817-20.224-44.425-38.025-3.266-5.48-10.258-7.431-15.899-4.453l-39.179 20.679a12 12 0 0 0-5.51 15.145L112 448h288l105.014-257.448a12 12 0 0 0-5.51-15.145l-39.357-20.773z\"]\n  };\n  var faChessRook = {\n    prefix: 'fas',\n    iconName: 'chess-rook',\n    icon: [384, 512, [], \"f447\", \"M81.241 215.027C80.957 258.92 77.411 348.076 48 448h287.982c-29.4-99.604-32.936-188.912-33.221-232.975l45.418-42.312a11.998 11.998 0 0 0 3.82-8.78V44c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v44h-48V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v44H96V44c0-6.627-5.373-12-12-12H44c-6.627 0-12 5.373-12 12v119.932c0 3.33 1.384 6.51 3.82 8.78l45.421 42.315zM160 256c0-17.673 14.327-32 32-32 17.673 0 32 14.327 32 32v64.004h-64V256zm224 220v24c0 6.627-5.373 12-12 12H12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12z\"]\n  };\n  var faChevronCircleDown = {\n    prefix: 'fas',\n    iconName: 'chevron-circle-down',\n    icon: [512, 512, [], \"f13a\", \"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zM273 369.9l135.5-135.5c9.4-9.4 9.4-24.6 0-33.9l-17-17c-9.4-9.4-24.6-9.4-33.9 0L256 285.1 154.4 183.5c-9.4-9.4-24.6-9.4-33.9 0l-17 17c-9.4 9.4-9.4 24.6 0 33.9L239 369.9c9.4 9.4 24.6 9.4 34 0z\"]\n  };\n  var faChevronCircleLeft = {\n    prefix: 'fas',\n    iconName: 'chevron-circle-left',\n    icon: [512, 512, [], \"f137\", \"M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zM142.1 273l135.5 135.5c9.4 9.4 24.6 9.4 33.9 0l17-17c9.4-9.4 9.4-24.6 0-33.9L226.9 256l101.6-101.6c9.4-9.4 9.4-24.6 0-33.9l-17-17c-9.4-9.4-24.6-9.4-33.9 0L142.1 239c-9.4 9.4-9.4 24.6 0 34z\"]\n  };\n  var faChevronCircleRight = {\n    prefix: 'fas',\n    iconName: 'chevron-circle-right',\n    icon: [512, 512, [], \"f138\", \"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm113.9 231L234.4 103.5c-9.4-9.4-24.6-9.4-33.9 0l-17 17c-9.4 9.4-9.4 24.6 0 33.9L285.1 256 183.5 357.6c-9.4 9.4-9.4 24.6 0 33.9l17 17c9.4 9.4 24.6 9.4 33.9 0L369.9 273c9.4-9.4 9.4-24.6 0-34z\"]\n  };\n  var faChevronCircleUp = {\n    prefix: 'fas',\n    iconName: 'chevron-circle-up',\n    icon: [512, 512, [], \"f139\", \"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm231-113.9L103.5 277.6c-9.4 9.4-9.4 24.6 0 33.9l17 17c9.4 9.4 24.6 9.4 33.9 0L256 226.9l101.6 101.6c9.4 9.4 24.6 9.4 33.9 0l17-17c9.4-9.4 9.4-24.6 0-33.9L273 142.1c-9.4-9.4-24.6-9.4-34 0z\"]\n  };\n  var faChevronDown = {\n    prefix: 'fas',\n    iconName: 'chevron-down',\n    icon: [448, 512, [], \"f078\", \"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"]\n  };\n  var faChevronLeft = {\n    prefix: 'fas',\n    iconName: 'chevron-left',\n    icon: [320, 512, [], \"f053\", \"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z\"]\n  };\n  var faChevronRight = {\n    prefix: 'fas',\n    iconName: 'chevron-right',\n    icon: [320, 512, [], \"f054\", \"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"]\n  };\n  var faChevronUp = {\n    prefix: 'fas',\n    iconName: 'chevron-up',\n    icon: [448, 512, [], \"f077\", \"M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z\"]\n  };\n  var faChild = {\n    prefix: 'fas',\n    iconName: 'child',\n    icon: [384, 512, [], \"f1ae\", \"M120 72c0-39.765 32.235-72 72-72s72 32.235 72 72c0 39.764-32.235 72-72 72s-72-32.236-72-72zm254.627 1.373c-12.496-12.497-32.758-12.497-45.254 0L242.745 160H141.254L54.627 73.373c-12.496-12.497-32.758-12.497-45.254 0-12.497 12.497-12.497 32.758 0 45.255L104 213.254V480c0 17.673 14.327 32 32 32h16c17.673 0 32-14.327 32-32V368h16v112c0 17.673 14.327 32 32 32h16c17.673 0 32-14.327 32-32V213.254l94.627-94.627c12.497-12.497 12.497-32.757 0-45.254z\"]\n  };\n  var faChurch = {\n    prefix: 'fas',\n    iconName: 'church',\n    icon: [640, 512, [], \"f51d\", \"M464.46 246.68L352 179.2V128h48c8.84 0 16-7.16 16-16V80c0-8.84-7.16-16-16-16h-48V16c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v48h-48c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h48v51.2l-112.46 67.48A31.997 31.997 0 0 0 160 274.12V512h96v-96c0-35.35 28.65-64 64-64s64 28.65 64 64v96h96V274.12c0-11.24-5.9-21.66-15.54-27.44zM0 395.96V496c0 8.84 7.16 16 16 16h112V320L19.39 366.54A32.024 32.024 0 0 0 0 395.96zm620.61-29.42L512 320v192h112c8.84 0 16-7.16 16-16V395.96c0-12.8-7.63-24.37-19.39-29.42z\"]\n  };\n  var faCircle = {\n    prefix: 'fas',\n    iconName: 'circle',\n    icon: [512, 512, [], \"f111\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\"]\n  };\n  var faCircleNotch = {\n    prefix: 'fas',\n    iconName: 'circle-notch',\n    icon: [512, 512, [], \"f1ce\", \"M288 39.056v16.659c0 10.804 7.281 20.159 17.686 23.066C383.204 100.434 440 171.518 440 256c0 101.689-82.295 184-184 184-101.689 0-184-82.295-184-184 0-84.47 56.786-155.564 134.312-177.219C216.719 75.874 224 66.517 224 55.712V39.064c0-15.709-14.834-27.153-30.046-23.234C86.603 43.482 7.394 141.206 8.003 257.332c.72 137.052 111.477 246.956 248.531 246.667C393.255 503.711 504 392.788 504 256c0-115.633-79.14-212.779-186.211-240.236C302.678 11.889 288 23.456 288 39.056z\"]\n  };\n  var faCity = {\n    prefix: 'fas',\n    iconName: 'city',\n    icon: [640, 512, [], \"f64f\", \"M616 192H480V24c0-13.26-10.74-24-24-24H312c-13.26 0-24 10.74-24 24v72h-64V16c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v80h-64V16c0-8.84-7.16-16-16-16H80c-8.84 0-16 7.16-16 16v80H24c-13.26 0-24 10.74-24 24v360c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V216c0-13.26-10.75-24-24-24zM128 404c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm128 192c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm160 96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12V76c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm160 288c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40z\"]\n  };\n  var faClinicMedical = {\n    prefix: 'fas',\n    iconName: 'clinic-medical',\n    icon: [576, 512, [], \"f7f2\", \"M288 115L69.47 307.71c-1.62 1.46-3.69 2.14-5.47 3.35V496a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V311.1c-1.7-1.16-3.72-1.82-5.26-3.2zm96 261a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8zm186.69-139.72l-255.94-226a39.85 39.85 0 0 0-53.45 0l-256 226a16 16 0 0 0-1.21 22.6L25.5 282.7a16 16 0 0 0 22.6 1.21L277.42 81.63a16 16 0 0 1 21.17 0L527.91 283.9a16 16 0 0 0 22.6-1.21l21.4-23.82a16 16 0 0 0-1.22-22.59z\"]\n  };\n  var faClipboard = {\n    prefix: 'fas',\n    iconName: 'clipboard',\n    icon: [384, 512, [], \"f328\", \"M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 0 0-6-6H102a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h180a6 6 0 0 0 6-6z\"]\n  };\n  var faClipboardCheck = {\n    prefix: 'fas',\n    iconName: 'clipboard-check',\n    icon: [384, 512, [], \"f46c\", \"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm121.2 231.8l-143 141.8c-4.7 4.7-12.3 4.6-17-.1l-82.6-83.3c-4.7-4.7-4.6-12.3.1-17L99.1 285c4.7-4.7 12.3-4.6 17 .1l46 46.4 106-105.2c4.7-4.7 12.3-4.6 17 .1l28.2 28.4c4.7 4.8 4.6 12.3-.1 17z\"]\n  };\n  var faClipboardList = {\n    prefix: 'fas',\n    iconName: 'clipboard-list',\n    icon: [384, 512, [], \"f46d\", \"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM96 424c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm0-96c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm0-96c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm96-192c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm128 368c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16z\"]\n  };\n  var faClock = {\n    prefix: 'fas',\n    iconName: 'clock',\n    icon: [512, 512, [], \"f017\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm57.1 350.1L224.9 294c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12v137.7l63.5 46.2c5.4 3.9 6.5 11.4 2.6 16.8l-28.2 38.8c-3.9 5.3-11.4 6.5-16.8 2.6z\"]\n  };\n  var faClone = {\n    prefix: 'fas',\n    iconName: 'clone',\n    icon: [512, 512, [], \"f24d\", \"M464 0c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48H176c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h288M176 416c-44.112 0-80-35.888-80-80V128H48c-26.51 0-48 21.49-48 48v288c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48v-48H176z\"]\n  };\n  var faClosedCaptioning = {\n    prefix: 'fas',\n    iconName: 'closed-captioning',\n    icon: [512, 512, [], \"f20a\", \"M464 64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM218.1 287.7c2.8-2.5 7.1-2.1 9.2.9l19.5 27.7c1.7 2.4 1.5 5.6-.5 7.7-53.6 56.8-172.8 32.1-172.8-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7l-17.5 30.5c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2.1 48 51.1 70.5 92.3 32.6zm190.4 0c2.8-2.5 7.1-2.1 9.2.9l19.5 27.7c1.7 2.4 1.5 5.6-.5 7.7-53.5 56.9-172.7 32.1-172.7-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7L420 222.2c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2 0 48 51 70.5 92.2 32.6z\"]\n  };\n  var faCloud = {\n    prefix: 'fas',\n    iconName: 'cloud',\n    icon: [640, 512, [], \"f0c2\", \"M537.6 226.6c4.1-10.7 6.4-22.4 6.4-34.6 0-53-43-96-96-96-19.7 0-38.1 6-53.3 16.2C367 64.2 315.3 32 256 32c-88.4 0-160 71.6-160 160 0 2.7.1 5.4.2 8.1C40.2 219.8 0 273.2 0 336c0 79.5 64.5 144 144 144h368c70.7 0 128-57.3 128-128 0-61.9-44-113.6-102.4-125.4z\"]\n  };\n  var faCloudDownloadAlt = {\n    prefix: 'fas',\n    iconName: 'cloud-download-alt',\n    icon: [640, 512, [], \"f381\", \"M537.6 226.6c4.1-10.7 6.4-22.4 6.4-34.6 0-53-43-96-96-96-19.7 0-38.1 6-53.3 16.2C367 64.2 315.3 32 256 32c-88.4 0-160 71.6-160 160 0 2.7.1 5.4.2 8.1C40.2 219.8 0 273.2 0 336c0 79.5 64.5 144 144 144h368c70.7 0 128-57.3 128-128 0-61.9-44-113.6-102.4-125.4zm-132.9 88.7L299.3 420.7c-6.2 6.2-16.4 6.2-22.6 0L171.3 315.3c-10.1-10.1-2.9-27.3 11.3-27.3H248V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v112h65.4c14.2 0 21.4 17.2 11.3 27.3z\"]\n  };\n  var faCloudMeatball = {\n    prefix: 'fas',\n    iconName: 'cloud-meatball',\n    icon: [512, 512, [], \"f73b\", \"M48 352c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm416 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-119 11.1c4.6-14.5 1.6-30.8-9.8-42.3-11.5-11.5-27.8-14.4-42.3-9.9-7-13.5-20.7-23-36.9-23s-29.9 9.5-36.9 23c-14.5-4.6-30.8-1.6-42.3 9.9-11.5 11.5-14.4 27.8-9.9 42.3-13.5 7-23 20.7-23 36.9s9.5 29.9 23 36.9c-4.6 14.5-1.6 30.8 9.9 42.3 8.2 8.2 18.9 12.3 29.7 12.3 4.3 0 8.5-1.1 12.6-2.5 7 13.5 20.7 23 36.9 23s29.9-9.5 36.9-23c4.1 1.3 8.3 2.5 12.6 2.5 10.8 0 21.5-4.1 29.7-12.3 11.5-11.5 14.4-27.8 9.8-42.3 13.5-7 23-20.7 23-36.9s-9.5-29.9-23-36.9zM512 224c0-53-43-96-96-96-.6 0-1.1.2-1.6.2 1.1-5.2 1.6-10.6 1.6-16.2 0-44.2-35.8-80-80-80-24.6 0-46.3 11.3-61 28.8C256.4 24.8 219.3 0 176 0 114.1 0 64 50.1 64 112c0 7.3.8 14.3 2.1 21.2C27.8 145.8 0 181.5 0 224c0 53 43 96 96 96h43.4c3.6-8 8.4-15.4 14.8-21.8 13.5-13.5 31.5-21.1 50.8-21.3 13.5-13.2 31.7-20.9 51-20.9s37.5 7.7 51 20.9c19.3.2 37.3 7.8 50.8 21.3 6.4 6.4 11.3 13.8 14.8 21.8H416c53 0 96-43 96-96z\"]\n  };\n  var faCloudMoon = {\n    prefix: 'fas',\n    iconName: 'cloud-moon',\n    icon: [576, 512, [], \"f6c3\", \"M342.8 352.7c5.7-9.6 9.2-20.7 9.2-32.7 0-35.3-28.7-64-64-64-17.2 0-32.8 6.9-44.3 17.9-16.3-29.6-47.5-49.9-83.7-49.9-53 0-96 43-96 96 0 2 .5 3.8.6 5.7C27.1 338.8 0 374.1 0 416c0 53 43 96 96 96h240c44.2 0 80-35.8 80-80 0-41.9-32.3-75.8-73.2-79.3zm222.5-54.3c-93.1 17.7-178.5-53.7-178.5-147.7 0-54.2 29-104 76.1-130.8 7.3-4.1 5.4-15.1-2.8-16.7C448.4 1.1 436.7 0 425 0 319.1 0 233.1 85.9 233.1 192c0 8.5.7 16.8 1.8 25 5.9 4.3 11.6 8.9 16.7 14.2 11.4-4.7 23.7-7.2 36.4-7.2 52.9 0 96 43.1 96 96 0 3.6-.2 7.2-.6 10.7 23.6 10.8 42.4 29.5 53.5 52.6 54.4-3.4 103.7-29.3 137.1-70.4 5.3-6.5-.5-16.1-8.7-14.5z\"]\n  };\n  var faCloudMoonRain = {\n    prefix: 'fas',\n    iconName: 'cloud-moon-rain',\n    icon: [576, 512, [], \"f73c\", \"M350.5 225.5c-6.9-37.2-39.3-65.5-78.5-65.5-12.3 0-23.9 3-34.3 8-17.4-24.1-45.6-40-77.7-40-53 0-96 43-96 96 0 .5.2 1.1.2 1.6C27.6 232.9 0 265.2 0 304c0 44.2 35.8 80 80 80h256c44.2 0 80-35.8 80-80 0-39.2-28.2-71.7-65.5-78.5zm217.4-1.7c-70.4 13.3-135-40.3-135-110.8 0-40.6 21.9-78 57.5-98.1 5.5-3.1 4.1-11.4-2.1-12.5C479.6.8 470.7 0 461.8 0c-77.9 0-141.1 61.2-144.4 137.9 26.7 11.9 48.2 33.8 58.9 61.7 37.1 14.3 64 47.4 70.2 86.8 5.1.5 10 1.5 15.2 1.5 44.7 0 85.6-20.2 112.6-53.3 4.2-4.8-.2-12-6.4-10.8zM364.5 418.1c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8z\"]\n  };\n  var faCloudRain = {\n    prefix: 'fas',\n    iconName: 'cloud-rain',\n    icon: [512, 512, [], \"f73d\", \"M416 128c-.6 0-1.1.2-1.6.2 1.1-5.2 1.6-10.6 1.6-16.2 0-44.2-35.8-80-80-80-24.6 0-46.3 11.3-61 28.8C256.4 24.8 219.3 0 176 0 114.1 0 64 50.1 64 112c0 7.3.8 14.3 2.1 21.2C27.8 145.8 0 181.5 0 224c0 53 43 96 96 96h320c53 0 96-43 96-96s-43-96-96-96zM88 374.2c-12.8 44.4-40 56.4-40 87.7 0 27.7 21.5 50.1 48 50.1s48-22.4 48-50.1c0-31.4-27.2-43.1-40-87.7-2.2-8.1-13.5-8.5-16 0zm160 0c-12.8 44.4-40 56.4-40 87.7 0 27.7 21.5 50.1 48 50.1s48-22.4 48-50.1c0-31.4-27.2-43.1-40-87.7-2.2-8.1-13.5-8.5-16 0zm160 0c-12.8 44.4-40 56.4-40 87.7 0 27.7 21.5 50.1 48 50.1s48-22.4 48-50.1c0-31.4-27.2-43.1-40-87.7-2.2-8.1-13.5-8.5-16 0z\"]\n  };\n  var faCloudShowersHeavy = {\n    prefix: 'fas',\n    iconName: 'cloud-showers-heavy',\n    icon: [512, 512, [], \"f740\", \"M183.9 370.1c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm96 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm-192 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm384 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm-96 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zM416 128c-.6 0-1.1.2-1.6.2 1.1-5.2 1.6-10.6 1.6-16.2 0-44.2-35.8-80-80-80-24.6 0-46.3 11.3-61 28.8C256.4 24.8 219.3 0 176 0 114.2 0 64 50.1 64 112c0 7.3.8 14.3 2.1 21.2C27.8 145.8 0 181.5 0 224c0 53 43 96 96 96h320c53 0 96-43 96-96s-43-96-96-96z\"]\n  };\n  var faCloudSun = {\n    prefix: 'fas',\n    iconName: 'cloud-sun',\n    icon: [640, 512, [], \"f6c4\", \"M575.2 325.7c.2-1.9.8-3.7.8-5.6 0-35.3-28.7-64-64-64-12.6 0-24.2 3.8-34.1 10-17.6-38.8-56.5-66-101.9-66-61.8 0-112 50.1-112 112 0 3 .7 5.8.9 8.7-49.6 3.7-88.9 44.7-88.9 95.3 0 53 43 96 96 96h272c53 0 96-43 96-96 0-42.1-27.2-77.4-64.8-90.4zm-430.4-22.6c-43.7-43.7-43.7-114.7 0-158.3 43.7-43.7 114.7-43.7 158.4 0 9.7 9.7 16.9 20.9 22.3 32.7 9.8-3.7 20.1-6 30.7-7.5L386 81.1c4-11.9-7.3-23.1-19.2-19.2L279 91.2 237.5 8.4C232-2.8 216-2.8 210.4 8.4L169 91.2 81.1 61.9C69.3 58 58 69.3 61.9 81.1l29.3 87.8-82.8 41.5c-11.2 5.6-11.2 21.5 0 27.1l82.8 41.4-29.3 87.8c-4 11.9 7.3 23.1 19.2 19.2l76.1-25.3c6.1-12.4 14-23.7 23.6-33.5-13.1-5.4-25.4-13.4-36-24zm-4.8-79.2c0 40.8 29.3 74.8 67.9 82.3 8-4.7 16.3-8.8 25.2-11.7 5.4-44.3 31-82.5 67.4-105C287.3 160.4 258 140 224 140c-46.3 0-84 37.6-84 83.9z\"]\n  };\n  var faCloudSunRain = {\n    prefix: 'fas',\n    iconName: 'cloud-sun-rain',\n    icon: [576, 512, [], \"f743\", \"M510.5 225.5c-6.9-37.2-39.3-65.5-78.5-65.5-12.3 0-23.9 3-34.3 8-17.4-24.1-45.6-40-77.7-40-53 0-96 43-96 96 0 .5.2 1.1.2 1.6C187.6 233 160 265.2 160 304c0 44.2 35.8 80 80 80h256c44.2 0 80-35.8 80-80 0-39.2-28.2-71.7-65.5-78.5zm-386.4 34.4c-37.4-37.4-37.4-98.3 0-135.8 34.6-34.6 89.1-36.8 126.7-7.4 20-12.9 43.6-20.7 69.2-20.7.7 0 1.3.2 2 .2l8.9-26.7c3.4-10.2-6.3-19.8-16.5-16.4l-75.3 25.1-35.5-71c-4.8-9.6-18.5-9.6-23.3 0l-35.5 71-75.3-25.1c-10.2-3.4-19.8 6.3-16.4 16.5l25.1 75.3-71 35.5c-9.6 4.8-9.6 18.5 0 23.3l71 35.5-25.1 75.3c-3.4 10.2 6.3 19.8 16.5 16.5l59.2-19.7c-.2-2.4-.7-4.7-.7-7.2 0-12.5 2.3-24.5 6.2-35.9-3.6-2.7-7.1-5.2-10.2-8.3zm69.8-58c4.3-24.5 15.8-46.4 31.9-64-9.8-6.2-21.4-9.9-33.8-9.9-35.3 0-64 28.7-64 64 0 18.7 8.2 35.4 21.1 47.1 11.3-15.9 26.6-28.9 44.8-37.2zm330.6 216.2c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8zm-96 0c-7.6-4.3-17.4-1.8-21.8 6l-36.6 64c-4.4 7.7-1.7 17.4 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l36.6-64c4.3-7.7 1.7-17.4-6-21.8z\"]\n  };\n  var faCloudUploadAlt = {\n    prefix: 'fas',\n    iconName: 'cloud-upload-alt',\n    icon: [640, 512, [], \"f382\", \"M537.6 226.6c4.1-10.7 6.4-22.4 6.4-34.6 0-53-43-96-96-96-19.7 0-38.1 6-53.3 16.2C367 64.2 315.3 32 256 32c-88.4 0-160 71.6-160 160 0 2.7.1 5.4.2 8.1C40.2 219.8 0 273.2 0 336c0 79.5 64.5 144 144 144h368c70.7 0 128-57.3 128-128 0-61.9-44-113.6-102.4-125.4zM393.4 288H328v112c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V288h-65.4c-14.3 0-21.4-17.2-11.3-27.3l105.4-105.4c6.2-6.2 16.4-6.2 22.6 0l105.4 105.4c10.1 10.1 2.9 27.3-11.3 27.3z\"]\n  };\n  var faCocktail = {\n    prefix: 'fas',\n    iconName: 'cocktail',\n    icon: [576, 512, [], \"f561\", \"M296 464h-56V338.78l168.74-168.73c15.52-15.52 4.53-42.05-17.42-42.05H24.68c-21.95 0-32.94 26.53-17.42 42.05L176 338.78V464h-56c-22.09 0-40 17.91-40 40 0 4.42 3.58 8 8 8h240c4.42 0 8-3.58 8-8 0-22.09-17.91-40-40-40zM432 0c-62.61 0-115.35 40.2-135.18 96h52.54c16.65-28.55 47.27-48 82.64-48 52.93 0 96 43.06 96 96s-43.07 96-96 96c-14.04 0-27.29-3.2-39.32-8.64l-35.26 35.26C379.23 279.92 404.59 288 432 288c79.53 0 144-64.47 144-144S511.53 0 432 0z\"]\n  };\n  var faCode = {\n    prefix: 'fas',\n    iconName: 'code',\n    icon: [640, 512, [], \"f121\", \"M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z\"]\n  };\n  var faCodeBranch = {\n    prefix: 'fas',\n    iconName: 'code-branch',\n    icon: [384, 512, [], \"f126\", \"M384 144c0-44.2-35.8-80-80-80s-80 35.8-80 80c0 36.4 24.3 67.1 57.5 76.8-.6 16.1-4.2 28.5-11 36.9-15.4 19.2-49.3 22.4-85.2 25.7-28.2 2.6-57.4 5.4-81.3 16.9v-144c32.5-10.2 56-40.5 56-76.3 0-44.2-35.8-80-80-80S0 35.8 0 80c0 35.8 23.5 66.1 56 76.3v199.3C23.5 365.9 0 396.2 0 432c0 44.2 35.8 80 80 80s80-35.8 80-80c0-34-21.2-63.1-51.2-74.6 3.1-5.2 7.8-9.8 14.9-13.4 16.2-8.2 40.4-10.4 66.1-12.8 42.2-3.9 90-8.4 118.2-43.4 14-17.4 21.1-39.8 21.6-67.9 31.6-10.8 54.4-40.7 54.4-75.9zM80 64c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16zm0 384c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm224-320c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16z\"]\n  };\n  var faCoffee = {\n    prefix: 'fas',\n    iconName: 'coffee',\n    icon: [640, 512, [], \"f0f4\", \"M192 384h192c53 0 96-43 96-96h32c70.6 0 128-57.4 128-128S582.6 32 512 32H120c-13.3 0-24 10.7-24 24v232c0 53 43 96 96 96zM512 96c35.3 0 64 28.7 64 64s-28.7 64-64 64h-32V96h32zm47.7 384H48.3c-47.6 0-61-64-36-64h583.3c25 0 11.8 64-35.9 64z\"]\n  };\n  var faCog = {\n    prefix: 'fas',\n    iconName: 'cog',\n    icon: [512, 512, [], \"f013\", \"M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"]\n  };\n  var faCogs = {\n    prefix: 'fas',\n    iconName: 'cogs',\n    icon: [640, 512, [], \"f085\", \"M512.1 191l-8.2 14.3c-3 5.3-9.4 7.5-15.1 5.4-11.8-4.4-22.6-10.7-32.1-18.6-4.6-3.8-5.8-10.5-2.8-15.7l8.2-14.3c-6.9-8-12.3-17.3-15.9-27.4h-16.5c-6 0-11.2-4.3-12.2-10.3-2-12-2.1-24.6 0-37.1 1-6 6.2-10.4 12.2-10.4h16.5c3.6-10.1 9-19.4 15.9-27.4l-8.2-14.3c-3-5.2-1.9-11.9 2.8-15.7 9.5-7.9 20.4-14.2 32.1-18.6 5.7-2.1 12.1.1 15.1 5.4l8.2 14.3c10.5-1.9 21.2-1.9 31.7 0L552 6.3c3-5.3 9.4-7.5 15.1-5.4 11.8 4.4 22.6 10.7 32.1 18.6 4.6 3.8 5.8 10.5 2.8 15.7l-8.2 14.3c6.9 8 12.3 17.3 15.9 27.4h16.5c6 0 11.2 4.3 12.2 10.3 2 12 2.1 24.6 0 37.1-1 6-6.2 10.4-12.2 10.4h-16.5c-3.6 10.1-9 19.4-15.9 27.4l8.2 14.3c3 5.2 1.9 11.9-2.8 15.7-9.5 7.9-20.4 14.2-32.1 18.6-5.7 2.1-12.1-.1-15.1-5.4l-8.2-14.3c-10.4 1.9-21.2 1.9-31.7 0zm-10.5-58.8c38.5 29.6 82.4-14.3 52.8-52.8-38.5-29.7-82.4 14.3-52.8 52.8zM386.3 286.1l33.7 16.8c10.1 5.8 14.5 18.1 10.5 29.1-8.9 24.2-26.4 46.4-42.6 65.8-7.4 8.9-20.2 11.1-30.3 5.3l-29.1-16.8c-16 13.7-34.6 24.6-54.9 31.7v33.6c0 11.6-8.3 21.6-19.7 23.6-24.6 4.2-50.4 4.4-75.9 0-11.5-2-20-11.9-20-23.6V418c-20.3-7.2-38.9-18-54.9-31.7L74 403c-10 5.8-22.9 3.6-30.3-5.3-16.2-19.4-33.3-41.6-42.2-65.7-4-10.9.4-23.2 10.5-29.1l33.3-16.8c-3.9-20.9-3.9-42.4 0-63.4L12 205.8c-10.1-5.8-14.6-18.1-10.5-29 8.9-24.2 26-46.4 42.2-65.8 7.4-8.9 20.2-11.1 30.3-5.3l29.1 16.8c16-13.7 34.6-24.6 54.9-31.7V57.1c0-11.5 8.2-21.5 19.6-23.5 24.6-4.2 50.5-4.4 76-.1 11.5 2 20 11.9 20 23.6v33.6c20.3 7.2 38.9 18 54.9 31.7l29.1-16.8c10-5.8 22.9-3.6 30.3 5.3 16.2 19.4 33.2 41.6 42.1 65.8 4 10.9.1 23.2-10 29.1l-33.7 16.8c3.9 21 3.9 42.5 0 63.5zm-117.6 21.1c59.2-77-28.7-164.9-105.7-105.7-59.2 77 28.7 164.9 105.7 105.7zm243.4 182.7l-8.2 14.3c-3 5.3-9.4 7.5-15.1 5.4-11.8-4.4-22.6-10.7-32.1-18.6-4.6-3.8-5.8-10.5-2.8-15.7l8.2-14.3c-6.9-8-12.3-17.3-15.9-27.4h-16.5c-6 0-11.2-4.3-12.2-10.3-2-12-2.1-24.6 0-37.1 1-6 6.2-10.4 12.2-10.4h16.5c3.6-10.1 9-19.4 15.9-27.4l-8.2-14.3c-3-5.2-1.9-11.9 2.8-15.7 9.5-7.9 20.4-14.2 32.1-18.6 5.7-2.1 12.1.1 15.1 5.4l8.2 14.3c10.5-1.9 21.2-1.9 31.7 0l8.2-14.3c3-5.3 9.4-7.5 15.1-5.4 11.8 4.4 22.6 10.7 32.1 18.6 4.6 3.8 5.8 10.5 2.8 15.7l-8.2 14.3c6.9 8 12.3 17.3 15.9 27.4h16.5c6 0 11.2 4.3 12.2 10.3 2 12 2.1 24.6 0 37.1-1 6-6.2 10.4-12.2 10.4h-16.5c-3.6 10.1-9 19.4-15.9 27.4l8.2 14.3c3 5.2 1.9 11.9-2.8 15.7-9.5 7.9-20.4 14.2-32.1 18.6-5.7 2.1-12.1-.1-15.1-5.4l-8.2-14.3c-10.4 1.9-21.2 1.9-31.7 0zM501.6 431c38.5 29.6 82.4-14.3 52.8-52.8-38.5-29.6-82.4 14.3-52.8 52.8z\"]\n  };\n  var faCoins = {\n    prefix: 'fas',\n    iconName: 'coins',\n    icon: [512, 512, [], \"f51e\", \"M0 405.3V448c0 35.3 86 64 192 64s192-28.7 192-64v-42.7C342.7 434.4 267.2 448 192 448S41.3 434.4 0 405.3zM320 128c106 0 192-28.7 192-64S426 0 320 0 128 28.7 128 64s86 64 192 64zM0 300.4V352c0 35.3 86 64 192 64s192-28.7 192-64v-51.6c-41.3 34-116.9 51.6-192 51.6S41.3 334.4 0 300.4zm416 11c57.3-11.1 96-31.7 96-55.4v-42.7c-23.2 16.4-57.3 27.6-96 34.5v63.6zM192 160C86 160 0 195.8 0 240s86 80 192 80 192-35.8 192-80-86-80-192-80zm219.3 56.3c60-10.8 100.7-32 100.7-56.3v-42.7c-35.5 25.1-96.5 38.6-160.7 41.8 29.5 14.3 51.2 33.5 60 57.2z\"]\n  };\n  var faColumns = {\n    prefix: 'fas',\n    iconName: 'columns',\n    icon: [512, 512, [], \"f0db\", \"M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64V160h160v256zm224 0H288V160h160v256z\"]\n  };\n  var faComment = {\n    prefix: 'fas',\n    iconName: 'comment',\n    icon: [512, 512, [], \"f075\", \"M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7S4.8 480 8 480c66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32z\"]\n  };\n  var faCommentAlt = {\n    prefix: 'fas',\n    iconName: 'comment-alt',\n    icon: [512, 512, [], \"f27a\", \"M448 0H64C28.7 0 0 28.7 0 64v288c0 35.3 28.7 64 64 64h96v84c0 9.8 11.2 15.5 19.1 9.7L304 416h144c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z\"]\n  };\n  var faCommentDollar = {\n    prefix: 'fas',\n    iconName: 'comment-dollar',\n    icon: [512, 512, [], \"f651\", \"M256 32C114.62 32 0 125.12 0 240c0 49.56 21.41 95.01 57.02 130.74C44.46 421.05 2.7 465.97 2.2 466.5A7.995 7.995 0 0 0 8 480c66.26 0 115.99-31.75 140.6-51.38C181.29 440.93 217.59 448 256 448c141.38 0 256-93.12 256-208S397.38 32 256 32zm24 302.44V352c0 8.84-7.16 16-16 16h-16c-8.84 0-16-7.16-16-16v-17.73c-11.42-1.35-22.28-5.19-31.78-11.46-6.22-4.11-6.82-13.11-1.55-18.38l17.52-17.52c3.74-3.74 9.31-4.24 14.11-2.03 3.18 1.46 6.66 2.22 10.26 2.22h32.78c4.66 0 8.44-3.78 8.44-8.42 0-3.75-2.52-7.08-6.12-8.11l-50.07-14.3c-22.25-6.35-40.01-24.71-42.91-47.67-4.05-32.07 19.03-59.43 49.32-63.05V128c0-8.84 7.16-16 16-16h16c8.84 0 16 7.16 16 16v17.73c11.42 1.35 22.28 5.19 31.78 11.46 6.22 4.11 6.82 13.11 1.55 18.38l-17.52 17.52c-3.74 3.74-9.31 4.24-14.11 2.03a24.516 24.516 0 0 0-10.26-2.22h-32.78c-4.66 0-8.44 3.78-8.44 8.42 0 3.75 2.52 7.08 6.12 8.11l50.07 14.3c22.25 6.36 40.01 24.71 42.91 47.67 4.05 32.06-19.03 59.42-49.32 63.04z\"]\n  };\n  var faCommentDots = {\n    prefix: 'fas',\n    iconName: 'comment-dots',\n    icon: [512, 512, [], \"f4ad\", \"M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7S4.8 480 8 480c66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32zM128 272c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"]\n  };\n  var faCommentMedical = {\n    prefix: 'fas',\n    iconName: 'comment-medical',\n    icon: [512, 512, [], \"f7f5\", \"M256 32C114.62 32 0 125.12 0 240c0 49.56 21.41 95 57 130.74C44.46 421.05 2.7 466 2.2 466.5A8 8 0 0 0 8 480c66.26 0 116-31.75 140.6-51.38A304.66 304.66 0 0 0 256 448c141.39 0 256-93.12 256-208S397.39 32 256 32zm96 232a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8z\"]\n  };\n  var faCommentSlash = {\n    prefix: 'fas',\n    iconName: 'comment-slash',\n    icon: [640, 512, [], \"f4b3\", \"M64 240c0 49.6 21.4 95 57 130.7-12.6 50.3-54.3 95.2-54.8 95.8-2.2 2.3-2.8 5.7-1.5 8.7 1.3 2.9 4.1 4.8 7.3 4.8 66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 27.4 0 53.7-3.6 78.4-10L72.9 186.4c-5.6 17.1-8.9 35-8.9 53.6zm569.8 218.1l-114.4-88.4C554.6 334.1 576 289.2 576 240c0-114.9-114.6-208-256-208-65.1 0-124.2 20.1-169.4 52.7L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3z\"]\n  };\n  var faComments = {\n    prefix: 'fas',\n    iconName: 'comments',\n    icon: [576, 512, [], \"f086\", \"M416 192c0-88.4-93.1-160-208-160S0 103.6 0 192c0 34.3 14.1 65.9 38 92-13.4 30.2-35.5 54.2-35.8 54.5-2.2 2.3-2.8 5.7-1.5 8.7S4.8 352 8 352c36.6 0 66.9-12.3 88.7-25 32.2 15.7 70.3 25 111.3 25 114.9 0 208-71.6 208-160zm122 220c23.9-26 38-57.7 38-92 0-66.9-53.5-124.2-129.3-148.1.9 6.6 1.3 13.3 1.3 20.1 0 105.9-107.7 192-240 192-10.8 0-21.3-.8-31.7-1.9C207.8 439.6 281.8 480 368 480c41 0 79.1-9.2 111.3-25 21.8 12.7 52.1 25 88.7 25 3.2 0 6.1-1.9 7.3-4.8 1.3-2.9.7-6.3-1.5-8.7-.3-.3-22.4-24.2-35.8-54.5z\"]\n  };\n  var faCommentsDollar = {\n    prefix: 'fas',\n    iconName: 'comments-dollar',\n    icon: [576, 512, [], \"f653\", \"M416 192c0-88.37-93.12-160-208-160S0 103.63 0 192c0 34.27 14.13 65.95 37.97 91.98C24.61 314.22 2.52 338.16 2.2 338.5A7.995 7.995 0 0 0 8 352c36.58 0 66.93-12.25 88.73-24.98C128.93 342.76 167.02 352 208 352c114.88 0 208-71.63 208-160zm-224 96v-16.29c-11.29-.58-22.27-4.52-31.37-11.35-3.9-2.93-4.1-8.77-.57-12.14l11.75-11.21c2.77-2.64 6.89-2.76 10.13-.73 3.87 2.42 8.26 3.72 12.82 3.72h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V96c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16.29c11.29.58 22.27 4.51 31.37 11.35 3.9 2.93 4.1 8.77.57 12.14l-11.75 11.21c-2.77 2.64-6.89 2.76-10.13.73-3.87-2.43-8.26-3.72-12.82-3.72h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07V288c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8zm346.01 123.99C561.87 385.96 576 354.27 576 320c0-66.94-53.49-124.2-129.33-148.07.86 6.6 1.33 13.29 1.33 20.07 0 105.87-107.66 192-240 192-10.78 0-21.32-.77-31.73-1.88C207.8 439.63 281.77 480 368 480c40.98 0 79.07-9.24 111.27-24.98C501.07 467.75 531.42 480 568 480c3.2 0 6.09-1.91 7.34-4.84 1.27-2.94.66-6.34-1.55-8.67-.31-.33-22.42-24.24-35.78-54.5z\"]\n  };\n  var faCompactDisc = {\n    prefix: 'fas',\n    iconName: 'compact-disc',\n    icon: [496, 512, [], \"f51f\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM88 256H56c0-105.9 86.1-192 192-192v32c-88.2 0-160 71.8-160 160zm160 96c-53 0-96-43-96-96s43-96 96-96 96 43 96 96-43 96-96 96zm0-128c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32z\"]\n  };\n  var faCompass = {\n    prefix: 'fas',\n    iconName: 'compass',\n    icon: [496, 512, [], \"f14e\", \"M225.38 233.37c-12.5 12.5-12.5 32.76 0 45.25 12.49 12.5 32.76 12.5 45.25 0 12.5-12.5 12.5-32.76 0-45.25-12.5-12.49-32.76-12.49-45.25 0zM248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm126.14 148.05L308.17 300.4a31.938 31.938 0 0 1-15.77 15.77l-144.34 65.97c-16.65 7.61-33.81-9.55-26.2-26.2l65.98-144.35a31.938 31.938 0 0 1 15.77-15.77l144.34-65.97c16.65-7.6 33.8 9.55 26.19 26.2z\"]\n  };\n  var faCompress = {\n    prefix: 'fas',\n    iconName: 'compress',\n    icon: [448, 512, [], \"f066\", \"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"]\n  };\n  var faCompressArrowsAlt = {\n    prefix: 'fas',\n    iconName: 'compress-arrows-alt',\n    icon: [512, 512, [], \"f78c\", \"M200 288H88c-21.4 0-32.1 25.8-17 41l32.9 31-99.2 99.3c-6.2 6.2-6.2 16.4 0 22.6l25.4 25.4c6.2 6.2 16.4 6.2 22.6 0L152 408l31.1 33c15.1 15.1 40.9 4.4 40.9-17V312c0-13.3-10.7-24-24-24zm112-64h112c21.4 0 32.1-25.9 17-41l-33-31 99.3-99.3c6.2-6.2 6.2-16.4 0-22.6L481.9 4.7c-6.2-6.2-16.4-6.2-22.6 0L360 104l-31.1-33C313.8 55.9 288 66.6 288 88v112c0 13.3 10.7 24 24 24zm96 136l33-31.1c15.1-15.1 4.4-40.9-17-40.9H312c-13.3 0-24 10.7-24 24v112c0 21.4 25.9 32.1 41 17l31-32.9 99.3 99.3c6.2 6.2 16.4 6.2 22.6 0l25.4-25.4c6.2-6.2 6.2-16.4 0-22.6L408 360zM183 71.1L152 104 52.7 4.7c-6.2-6.2-16.4-6.2-22.6 0L4.7 30.1c-6.2 6.2-6.2 16.4 0 22.6L104 152l-33 31.1C55.9 198.2 66.6 224 88 224h112c13.3 0 24-10.7 24-24V88c0-21.3-25.9-32-41-16.9z\"]\n  };\n  var faConciergeBell = {\n    prefix: 'fas',\n    iconName: 'concierge-bell',\n    icon: [512, 512, [], \"f562\", \"M288 130.54V112h16c8.84 0 16-7.16 16-16V80c0-8.84-7.16-16-16-16h-96c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h16v18.54C115.49 146.11 32 239.18 32 352h448c0-112.82-83.49-205.89-192-221.46zM496 384H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h480c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"]\n  };\n  var faCookie = {\n    prefix: 'fas',\n    iconName: 'cookie',\n    icon: [512, 512, [], \"f563\", \"M510.37 254.79l-12.08-76.26a132.493 132.493 0 0 0-37.16-72.95l-54.76-54.75c-19.73-19.72-45.18-32.7-72.71-37.05l-76.7-12.15c-27.51-4.36-55.69.11-80.52 12.76L107.32 49.6a132.25 132.25 0 0 0-57.79 57.8l-35.1 68.88a132.602 132.602 0 0 0-12.82 80.94l12.08 76.27a132.493 132.493 0 0 0 37.16 72.95l54.76 54.75a132.087 132.087 0 0 0 72.71 37.05l76.7 12.14c27.51 4.36 55.69-.11 80.52-12.75l69.12-35.21a132.302 132.302 0 0 0 57.79-57.8l35.1-68.87c12.71-24.96 17.2-53.3 12.82-80.96zM176 368c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm32-160c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm160 128c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"]\n  };\n  var faCookieBite = {\n    prefix: 'fas',\n    iconName: 'cookie-bite',\n    icon: [512, 512, [], \"f564\", \"M510.52 255.82c-69.97-.85-126.47-57.69-126.47-127.86-70.17 0-127-56.49-127.86-126.45-27.26-4.14-55.13.3-79.72 12.82l-69.13 35.22a132.221 132.221 0 0 0-57.79 57.81l-35.1 68.88a132.645 132.645 0 0 0-12.82 80.95l12.08 76.27a132.521 132.521 0 0 0 37.16 72.96l54.77 54.76a132.036 132.036 0 0 0 72.71 37.06l76.71 12.15c27.51 4.36 55.7-.11 80.53-12.76l69.13-35.21a132.273 132.273 0 0 0 57.79-57.81l35.1-68.88c12.56-24.64 17.01-52.58 12.91-79.91zM176 368c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm32-160c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm160 128c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"]\n  };\n  var faCopy = {\n    prefix: 'fas',\n    iconName: 'copy',\n    icon: [448, 512, [], \"f0c5\", \"M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z\"]\n  };\n  var faCopyright = {\n    prefix: 'fas',\n    iconName: 'copyright',\n    icon: [512, 512, [], \"f1f9\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm117.134 346.753c-1.592 1.867-39.776 45.731-109.851 45.731-84.692 0-144.484-63.26-144.484-145.567 0-81.303 62.004-143.401 143.762-143.401 66.957 0 101.965 37.315 103.422 38.904a12 12 0 0 1 1.238 14.623l-22.38 34.655c-4.049 6.267-12.774 7.351-18.234 2.295-.233-.214-26.529-23.88-61.88-23.88-46.116 0-73.916 33.575-73.916 76.082 0 39.602 25.514 79.692 74.277 79.692 38.697 0 65.28-28.338 65.544-28.625 5.132-5.565 14.059-5.033 18.508 1.053l24.547 33.572a12.001 12.001 0 0 1-.553 14.866z\"]\n  };\n  var faCouch = {\n    prefix: 'fas',\n    iconName: 'couch',\n    icon: [640, 512, [], \"f4b8\", \"M160 224v64h320v-64c0-35.3 28.7-64 64-64h32c0-53-43-96-96-96H160c-53 0-96 43-96 96h32c35.3 0 64 28.7 64 64zm416-32h-32c-17.7 0-32 14.3-32 32v96H128v-96c0-17.7-14.3-32-32-32H64c-35.3 0-64 28.7-64 64 0 23.6 13 44 32 55.1V432c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-16h384v16c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16V311.1c19-11.1 32-31.5 32-55.1 0-35.3-28.7-64-64-64z\"]\n  };\n  var faCreditCard = {\n    prefix: 'fas',\n    iconName: 'credit-card',\n    icon: [576, 512, [], \"f09d\", \"M0 432c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V256H0v176zm192-68c0-6.6 5.4-12 12-12h136c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H204c-6.6 0-12-5.4-12-12v-40zm-128 0c0-6.6 5.4-12 12-12h72c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zM576 80v48H0V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48z\"]\n  };\n  var faCrop = {\n    prefix: 'fas',\n    iconName: 'crop',\n    icon: [512, 512, [], \"f125\", \"M488 352h-40V109.25l59.31-59.31c6.25-6.25 6.25-16.38 0-22.63L484.69 4.69c-6.25-6.25-16.38-6.25-22.63 0L402.75 64H192v96h114.75L160 306.75V24c0-13.26-10.75-24-24-24H88C74.75 0 64 10.74 64 24v40H24C10.75 64 0 74.74 0 88v48c0 13.25 10.75 24 24 24h40v264c0 13.25 10.75 24 24 24h232v-96H205.25L352 205.25V488c0 13.25 10.75 24 24 24h48c13.25 0 24-10.75 24-24v-40h40c13.25 0 24-10.75 24-24v-48c0-13.26-10.75-24-24-24z\"]\n  };\n  var faCropAlt = {\n    prefix: 'fas',\n    iconName: 'crop-alt',\n    icon: [512, 512, [], \"f565\", \"M488 352h-40V96c0-17.67-14.33-32-32-32H192v96h160v328c0 13.25 10.75 24 24 24h48c13.25 0 24-10.75 24-24v-40h40c13.25 0 24-10.75 24-24v-48c0-13.26-10.75-24-24-24zM160 24c0-13.26-10.75-24-24-24H88C74.75 0 64 10.74 64 24v40H24C10.75 64 0 74.74 0 88v48c0 13.25 10.75 24 24 24h40v256c0 17.67 14.33 32 32 32h224v-96H160V24z\"]\n  };\n  var faCross = {\n    prefix: 'fas',\n    iconName: 'cross',\n    icon: [384, 512, [], \"f654\", \"M352 128h-96V32c0-17.67-14.33-32-32-32h-64c-17.67 0-32 14.33-32 32v96H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h96v224c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V256h96c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z\"]\n  };\n  var faCrosshairs = {\n    prefix: 'fas',\n    iconName: 'crosshairs',\n    icon: [512, 512, [], \"f05b\", \"M500 224h-30.364C455.724 130.325 381.675 56.276 288 42.364V12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v30.364C130.325 56.276 56.276 130.325 42.364 224H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h30.364C56.276 381.675 130.325 455.724 224 469.636V500c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-30.364C381.675 455.724 455.724 381.675 469.636 288H500c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12zM288 404.634V364c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40.634C165.826 392.232 119.783 346.243 107.366 288H148c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40.634C119.768 165.826 165.757 119.783 224 107.366V148c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40.634C346.174 119.768 392.217 165.757 404.634 224H364c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40.634C392.232 346.174 346.243 392.217 288 404.634zM288 256c0 17.673-14.327 32-32 32s-32-14.327-32-32c0-17.673 14.327-32 32-32s32 14.327 32 32z\"]\n  };\n  var faCrow = {\n    prefix: 'fas',\n    iconName: 'crow',\n    icon: [640, 512, [], \"f520\", \"M544 32h-16.36C513.04 12.68 490.09 0 464 0c-44.18 0-80 35.82-80 80v20.98L12.09 393.57A30.216 30.216 0 0 0 0 417.74c0 22.46 23.64 37.07 43.73 27.03L165.27 384h96.49l44.41 120.1c2.27 6.23 9.15 9.44 15.38 7.17l22.55-8.21c6.23-2.27 9.44-9.15 7.17-15.38L312.94 384H352c1.91 0 3.76-.23 5.66-.29l44.51 120.38c2.27 6.23 9.15 9.44 15.38 7.17l22.55-8.21c6.23-2.27 9.44-9.15 7.17-15.38l-41.24-111.53C485.74 352.8 544 279.26 544 192v-80l96-16c0-35.35-42.98-64-96-64zm-80 72c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z\"]\n  };\n  var faCrown = {\n    prefix: 'fas',\n    iconName: 'crown',\n    icon: [640, 512, [], \"f521\", \"M528 448H112c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h416c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm64-320c-26.5 0-48 21.5-48 48 0 7.1 1.6 13.7 4.4 19.8L476 239.2c-15.4 9.2-35.3 4-44.2-11.6L350.3 85C361 76.2 368 63 368 48c0-26.5-21.5-48-48-48s-48 21.5-48 48c0 15 7 28.2 17.7 37l-81.5 142.6c-8.9 15.6-28.9 20.8-44.2 11.6l-72.3-43.4c2.7-6 4.4-12.7 4.4-19.8 0-26.5-21.5-48-48-48S0 149.5 0 176s21.5 48 48 48c2.6 0 5.2-.4 7.7-.8L128 416h384l72.3-192.8c2.5.4 5.1.8 7.7.8 26.5 0 48-21.5 48-48s-21.5-48-48-48z\"]\n  };\n  var faCrutch = {\n    prefix: 'fas',\n    iconName: 'crutch',\n    icon: [512, 512, [], \"f7f7\", \"M507.31 185.71l-181-181a16 16 0 0 0-22.62 0L281 27.31a16 16 0 0 0 0 22.63l181 181a16 16 0 0 0 22.63 0l22.62-22.63a16 16 0 0 0 .06-22.6zm-179.54 66.41l-67.89-67.89 55.1-55.1-45.25-45.25-109.67 109.67a96.08 96.08 0 0 0-25.67 46.29L106.65 360.1l-102 102a16 16 0 0 0 0 22.63l22.62 22.62a16 16 0 0 0 22.63 0l102-102 120.25-27.75a95.88 95.88 0 0 0 46.29-25.65l109.68-109.68L382.87 197zm-54.57 54.57a32 32 0 0 1-15.45 8.54l-79.3 18.32 18.3-79.3a32.22 32.22 0 0 1 8.56-15.45l9.31-9.31 67.89 67.89z\"]\n  };\n  var faCube = {\n    prefix: 'fas',\n    iconName: 'cube',\n    icon: [512, 512, [], \"f1b2\", \"M239.1 6.3l-208 78c-18.7 7-31.1 25-31.1 45v225.1c0 18.2 10.3 34.8 26.5 42.9l208 104c13.5 6.8 29.4 6.8 42.9 0l208-104c16.3-8.1 26.5-24.8 26.5-42.9V129.3c0-20-12.4-37.9-31.1-44.9l-208-78C262 2.2 250 2.2 239.1 6.3zM256 68.4l192 72v1.1l-192 78-192-78v-1.1l192-72zm32 356V275.5l160-65v133.9l-160 80z\"]\n  };\n  var faCubes = {\n    prefix: 'fas',\n    iconName: 'cubes',\n    icon: [512, 512, [], \"f1b3\", \"M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z\"]\n  };\n  var faCut = {\n    prefix: 'fas',\n    iconName: 'cut',\n    icon: [448, 512, [], \"f0c4\", \"M278.06 256L444.48 89.57c4.69-4.69 4.69-12.29 0-16.97-32.8-32.8-85.99-32.8-118.79 0L210.18 188.12l-24.86-24.86c4.31-10.92 6.68-22.81 6.68-35.26 0-53.02-42.98-96-96-96S0 74.98 0 128s42.98 96 96 96c4.54 0 8.99-.32 13.36-.93L142.29 256l-32.93 32.93c-4.37-.61-8.83-.93-13.36-.93-53.02 0-96 42.98-96 96s42.98 96 96 96 96-42.98 96-96c0-12.45-2.37-24.34-6.68-35.26l24.86-24.86L325.69 439.4c32.8 32.8 85.99 32.8 118.79 0 4.69-4.68 4.69-12.28 0-16.97L278.06 256zM96 160c-17.64 0-32-14.36-32-32s14.36-32 32-32 32 14.36 32 32-14.36 32-32 32zm0 256c-17.64 0-32-14.36-32-32s14.36-32 32-32 32 14.36 32 32-14.36 32-32 32z\"]\n  };\n  var faDatabase = {\n    prefix: 'fas',\n    iconName: 'database',\n    icon: [448, 512, [], \"f1c0\", \"M448 73.143v45.714C448 159.143 347.667 192 224 192S0 159.143 0 118.857V73.143C0 32.857 100.333 0 224 0s224 32.857 224 73.143zM448 176v102.857C448 319.143 347.667 352 224 352S0 319.143 0 278.857V176c48.125 33.143 136.208 48.572 224 48.572S399.874 209.143 448 176zm0 160v102.857C448 479.143 347.667 512 224 512S0 479.143 0 438.857V336c48.125 33.143 136.208 48.572 224 48.572S399.874 369.143 448 336z\"]\n  };\n  var faDeaf = {\n    prefix: 'fas',\n    iconName: 'deaf',\n    icon: [512, 512, [], \"f2a4\", \"M216 260c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-44.112 35.888-80 80-80s80 35.888 80 80c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-13.234-10.767-24-24-24s-24 10.766-24 24zm24-176c-97.047 0-176 78.953-176 176 0 15.464 12.536 28 28 28s28-12.536 28-28c0-66.168 53.832-120 120-120s120 53.832 120 120c0 75.164-71.009 70.311-71.997 143.622L288 404c0 28.673-23.327 52-52 52-15.464 0-28 12.536-28 28s12.536 28 28 28c59.475 0 107.876-48.328 108-107.774.595-34.428 72-48.24 72-144.226 0-97.047-78.953-176-176-176zm268.485-52.201L480.2 3.515c-4.687-4.686-12.284-4.686-16.971 0L376.2 90.544c-4.686 4.686-4.686 12.284 0 16.971l28.285 28.285c4.686 4.686 12.284 4.686 16.97 0l87.03-87.029c4.687-4.688 4.687-12.286 0-16.972zM168.97 314.745c-4.686-4.686-12.284-4.686-16.97 0L3.515 463.23c-4.686 4.686-4.686 12.284 0 16.971L31.8 508.485c4.687 4.686 12.284 4.686 16.971 0L197.256 360c4.686-4.686 4.686-12.284 0-16.971l-28.286-28.284z\"]\n  };\n  var faDemocrat = {\n    prefix: 'fas',\n    iconName: 'democrat',\n    icon: [640, 512, [], \"f747\", \"M637.3 256.9l-19.6-29.4c-28.2-42.3-75.3-67.5-126.1-67.5H256l-81.2-81.2c20.1-20.1 22.6-51.1 7.5-73.9-3.4-5.2-10.8-5.9-15.2-1.5l-41.8 41.8L82.4 2.4c-3.6-3.6-9.6-3-12.4 1.2-12.3 18.6-10.3 44 6.1 60.4 3.3 3.3 7.3 5.3 11.3 7.5-2.2 1.7-4.7 3.1-6.4 5.4L6.4 176.2c-7.3 9.7-8.4 22.7-3 33.5l14.3 28.6c5.4 10.8 16.5 17.7 28.6 17.7h31c8.5 0 16.6-3.4 22.6-9.4L138 212l54 108h352v-77.8c16.2 12.2 18.3 17.6 40.1 50.3 4.9 7.4 14.8 9.3 22.2 4.4l26.6-17.7c7.3-5 9.3-14.9 4.4-22.3zm-341.1-13.6l-16.5 16.1 3.9 22.7c.7 4.1-3.6 7.2-7.2 5.3L256 276.7l-20.4 10.7c-3.6 1.9-7.9-1.2-7.2-5.3l3.9-22.7-16.5-16.1c-3-2.9-1.3-7.9 2.8-8.5l22.8-3.3 10.2-20.7c1.8-3.7 7.1-3.7 9 0l10.2 20.7 22.8 3.3c4 .6 5.6 5.6 2.6 8.5zm112 0l-16.5 16.1 3.9 22.7c.7 4.1-3.6 7.2-7.2 5.3L368 276.7l-20.4 10.7c-3.6 1.9-7.9-1.2-7.2-5.3l3.9-22.7-16.5-16.1c-3-2.9-1.3-7.9 2.8-8.5l22.8-3.3 10.2-20.7c1.8-3.7 7.1-3.7 9 0l10.2 20.7 22.8 3.3c4 .6 5.6 5.6 2.6 8.5zm112 0l-16.5 16.1 3.9 22.7c.7 4.1-3.6 7.2-7.2 5.3L480 276.7l-20.4 10.7c-3.6 1.9-7.9-1.2-7.2-5.3l3.9-22.7-16.5-16.1c-3-2.9-1.3-7.9 2.8-8.5l22.8-3.3 10.2-20.7c1.8-3.7 7.1-3.7 9 0l10.2 20.7 22.8 3.3c4 .6 5.6 5.6 2.6 8.5zM192 496c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-80h160v80c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16V352H192v144z\"]\n  };\n  var faDesktop = {\n    prefix: 'fas',\n    iconName: 'desktop',\n    icon: [576, 512, [], \"f108\", \"M528 0H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h192l-16 48h-72c-13.3 0-24 10.7-24 24s10.7 24 24 24h272c13.3 0 24-10.7 24-24s-10.7-24-24-24h-72l-16-48h192c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm-16 352H64V64h448v288z\"]\n  };\n  var faDharmachakra = {\n    prefix: 'fas',\n    iconName: 'dharmachakra',\n    icon: [512, 512, [], \"f655\", \"M495 225.06l-17.22 1.08c-5.27-39.49-20.79-75.64-43.86-105.84l12.95-11.43c6.92-6.11 7.25-16.79.73-23.31L426.44 64.4c-6.53-6.53-17.21-6.19-23.31.73L391.7 78.07c-30.2-23.06-66.35-38.58-105.83-43.86L286.94 17c.58-9.21-6.74-17-15.97-17h-29.94c-9.23 0-16.54 7.79-15.97 17l1.08 17.22c-39.49 5.27-75.64 20.79-105.83 43.86l-11.43-12.95c-6.11-6.92-16.79-7.25-23.31-.73L64.4 85.56c-6.53 6.53-6.19 17.21.73 23.31l12.95 11.43c-23.06 30.2-38.58 66.35-43.86 105.84L17 225.06c-9.21-.58-17 6.74-17 15.97v29.94c0 9.23 7.79 16.54 17 15.97l17.22-1.08c5.27 39.49 20.79 75.64 43.86 105.83l-12.95 11.43c-6.92 6.11-7.25 16.79-.73 23.31l21.17 21.17c6.53 6.53 17.21 6.19 23.31-.73l11.43-12.95c30.2 23.06 66.35 38.58 105.84 43.86L225.06 495c-.58 9.21 6.74 17 15.97 17h29.94c9.23 0 16.54-7.79 15.97-17l-1.08-17.22c39.49-5.27 75.64-20.79 105.84-43.86l11.43 12.95c6.11 6.92 16.79 7.25 23.31.73l21.17-21.17c6.53-6.53 6.19-17.21-.73-23.31l-12.95-11.43c23.06-30.2 38.58-66.35 43.86-105.83l17.22 1.08c9.21.58 17-6.74 17-15.97v-29.94c-.01-9.23-7.8-16.54-17.01-15.97zM281.84 98.61c24.81 4.07 47.63 13.66 67.23 27.78l-42.62 48.29c-8.73-5.44-18.32-9.54-28.62-11.95l4.01-64.12zm-51.68 0l4.01 64.12c-10.29 2.41-19.89 6.52-28.62 11.95l-42.62-48.29c19.6-14.12 42.42-23.71 67.23-27.78zm-103.77 64.33l48.3 42.61c-5.44 8.73-9.54 18.33-11.96 28.62l-64.12-4.01c4.07-24.81 13.66-47.62 27.78-67.22zm-27.78 118.9l64.12-4.01c2.41 10.29 6.52 19.89 11.95 28.62l-48.29 42.62c-14.12-19.6-23.71-42.42-27.78-67.23zm131.55 131.55c-24.81-4.07-47.63-13.66-67.23-27.78l42.61-48.3c8.73 5.44 18.33 9.54 28.62 11.96l-4 64.12zM256 288c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm25.84 125.39l-4.01-64.12c10.29-2.41 19.89-6.52 28.62-11.96l42.61 48.3c-19.6 14.12-42.41 23.71-67.22 27.78zm103.77-64.33l-48.29-42.62c5.44-8.73 9.54-18.32 11.95-28.62l64.12 4.01c-4.07 24.82-13.66 47.64-27.78 67.23zm-36.34-114.89c-2.41-10.29-6.52-19.89-11.96-28.62l48.3-42.61c14.12 19.6 23.71 42.42 27.78 67.23l-64.12 4z\"]\n  };\n  var faDiagnoses = {\n    prefix: 'fas',\n    iconName: 'diagnoses',\n    icon: [640, 512, [], \"f470\", \"M496 256c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16zm-176-80c48.5 0 88-39.5 88-88S368.5 0 320 0s-88 39.5-88 88 39.5 88 88 88zM59.8 364c10.2 15.3 29.3 17.8 42.9 9.8 16.2-9.6 56.2-31.7 105.3-48.6V416h224v-90.7c49.1 16.8 89.1 39 105.3 48.6 13.6 8 32.7 5.3 42.9-9.8l17.8-26.7c8.8-13.2 7.6-34.6-10-45.1-11.9-7.1-29.7-17-51.1-27.4-28.1 46.1-99.4 17.8-87.7-35.1C409.3 217.2 365.1 208 320 208c-57 0-112.9 14.5-160 32.2-.2 40.2-47.6 63.3-79.2 36-11.2 6-21.3 11.6-28.7 16-17.6 10.5-18.8 31.8-10 45.1L59.8 364zM368 344c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm-96-96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm-160 8c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16zm512 192H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z\"]\n  };\n  var faDice = {\n    prefix: 'fas',\n    iconName: 'dice',\n    icon: [640, 512, [], \"f522\", \"M592 192H473.26c12.69 29.59 7.12 65.2-17 89.32L320 417.58V464c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48V240c0-26.51-21.49-48-48-48zM480 376c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm-46.37-186.7L258.7 14.37c-19.16-19.16-50.23-19.16-69.39 0L14.37 189.3c-19.16 19.16-19.16 50.23 0 69.39L189.3 433.63c19.16 19.16 50.23 19.16 69.39 0L433.63 258.7c19.16-19.17 19.16-50.24 0-69.4zM96 248c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm128 128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm0-128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm0-128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm128 128c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z\"]\n  };\n  var faDiceD20 = {\n    prefix: 'fas',\n    iconName: 'dice-d20',\n    icon: [480, 512, [], \"f6cf\", \"M106.75 215.06L1.2 370.95c-3.08 5 .1 11.5 5.93 12.14l208.26 22.07-108.64-190.1zM7.41 315.43L82.7 193.08 6.06 147.1c-2.67-1.6-6.06.32-6.06 3.43v162.81c0 4.03 5.29 5.53 7.41 2.09zM18.25 423.6l194.4 87.66c5.3 2.45 11.35-1.43 11.35-7.26v-65.67l-203.55-22.3c-4.45-.5-6.23 5.59-2.2 7.57zm81.22-257.78L179.4 22.88c4.34-7.06-3.59-15.25-10.78-11.14L17.81 110.35c-2.47 1.62-2.39 5.26.13 6.78l81.53 48.69zM240 176h109.21L253.63 7.62C250.5 2.54 245.25 0 240 0s-10.5 2.54-13.63 7.62L130.79 176H240zm233.94-28.9l-76.64 45.99 75.29 122.35c2.11 3.44 7.41 1.94 7.41-2.1V150.53c0-3.11-3.39-5.03-6.06-3.43zm-93.41 18.72l81.53-48.7c2.53-1.52 2.6-5.16.13-6.78l-150.81-98.6c-7.19-4.11-15.12 4.08-10.78 11.14l79.93 142.94zm79.02 250.21L256 438.32v65.67c0 5.84 6.05 9.71 11.35 7.26l194.4-87.66c4.03-1.97 2.25-8.06-2.2-7.56zm-86.3-200.97l-108.63 190.1 208.26-22.07c5.83-.65 9.01-7.14 5.93-12.14L373.25 215.06zM240 208H139.57L240 383.75 340.43 208H240z\"]\n  };\n  var faDiceD6 = {\n    prefix: 'fas',\n    iconName: 'dice-d6',\n    icon: [448, 512, [], \"f6d1\", \"M422.19 109.95L256.21 9.07c-19.91-12.1-44.52-12.1-64.43 0L25.81 109.95c-5.32 3.23-5.29 11.27.06 14.46L224 242.55l198.14-118.14c5.35-3.19 5.38-11.22.05-14.46zm13.84 44.63L240 271.46v223.82c0 12.88 13.39 20.91 24.05 14.43l152.16-92.48c19.68-11.96 31.79-33.94 31.79-57.7v-197.7c0-6.41-6.64-10.43-11.97-7.25zM0 161.83v197.7c0 23.77 12.11 45.74 31.79 57.7l152.16 92.47c10.67 6.48 24.05-1.54 24.05-14.43V271.46L11.97 154.58C6.64 151.4 0 155.42 0 161.83z\"]\n  };\n  var faDiceFive = {\n    prefix: 'fas',\n    iconName: 'dice-five',\n    icon: [448, 512, [], \"f523\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"]\n  };\n  var faDiceFour = {\n    prefix: 'fas',\n    iconName: 'dice-four',\n    icon: [448, 512, [], \"f524\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm192 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"]\n  };\n  var faDiceOne = {\n    prefix: 'fas',\n    iconName: 'dice-one',\n    icon: [448, 512, [], \"f525\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM224 288c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"]\n  };\n  var faDiceSix = {\n    prefix: 'fas',\n    iconName: 'dice-six',\n    icon: [448, 512, [], \"f526\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm192 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"]\n  };\n  var faDiceThree = {\n    prefix: 'fas',\n    iconName: 'dice-three',\n    icon: [448, 512, [], \"f527\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm96 96c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"]\n  };\n  var faDiceTwo = {\n    prefix: 'fas',\n    iconName: 'dice-two',\n    icon: [448, 512, [], \"f528\", \"M384 32H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h320c35.35 0 64-28.65 64-64V96c0-35.35-28.65-64-64-64zM128 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm192 192c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"]\n  };\n  var faDigitalTachograph = {\n    prefix: 'fas',\n    iconName: 'digital-tachograph',\n    icon: [640, 512, [], \"f566\", \"M608 96H32c-17.67 0-32 14.33-32 32v256c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V128c0-17.67-14.33-32-32-32zM304 352c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-8c0-4.42 3.58-8 8-8h224c4.42 0 8 3.58 8 8v8zM72 288v-16c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H80c-4.42 0-8-3.58-8-8zm64 0v-16c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8zm64 0v-16c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8zm64 0v-16c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8zm40-64c0 8.84-7.16 16-16 16H80c-8.84 0-16-7.16-16-16v-48c0-8.84 7.16-16 16-16h208c8.84 0 16 7.16 16 16v48zm272 128c0 4.42-3.58 8-8 8H344c-4.42 0-8-3.58-8-8v-8c0-4.42 3.58-8 8-8h224c4.42 0 8 3.58 8 8v8z\"]\n  };\n  var faDirections = {\n    prefix: 'fas',\n    iconName: 'directions',\n    icon: [512, 512, [], \"f5eb\", \"M502.61 233.32L278.68 9.39c-12.52-12.52-32.83-12.52-45.36 0L9.39 233.32c-12.52 12.53-12.52 32.83 0 45.36l223.93 223.93c12.52 12.53 32.83 12.53 45.36 0l223.93-223.93c12.52-12.53 12.52-32.83 0-45.36zm-100.98 12.56l-84.21 77.73c-5.12 4.73-13.43 1.1-13.43-5.88V264h-96v64c0 4.42-3.58 8-8 8h-32c-4.42 0-8-3.58-8-8v-80c0-17.67 14.33-32 32-32h112v-53.73c0-6.97 8.3-10.61 13.43-5.88l84.21 77.73c3.43 3.17 3.43 8.59 0 11.76z\"]\n  };\n  var faDivide = {\n    prefix: 'fas',\n    iconName: 'divide',\n    icon: [448, 512, [], \"f529\", \"M224 352c-35.35 0-64 28.65-64 64s28.65 64 64 64 64-28.65 64-64-28.65-64-64-64zm0-192c35.35 0 64-28.65 64-64s-28.65-64-64-64-64 28.65-64 64 28.65 64 64 64zm192 48H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"]\n  };\n  var faDizzy = {\n    prefix: 'fas',\n    iconName: 'dizzy',\n    icon: [496, 512, [], \"f567\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-96 206.6l-28.7 28.7c-14.8 14.8-37.8-7.5-22.6-22.6l28.7-28.7-28.7-28.7c-15-15 7.7-37.6 22.6-22.6l28.7 28.7 28.7-28.7c15-15 37.6 7.7 22.6 22.6L174.6 192l28.7 28.7c15.2 15.2-7.9 37.4-22.6 22.6L152 214.6zM248 416c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64zm147.3-195.3c15.2 15.2-7.9 37.4-22.6 22.6L344 214.6l-28.7 28.7c-14.8 14.8-37.8-7.5-22.6-22.6l28.7-28.7-28.7-28.7c-15-15 7.7-37.6 22.6-22.6l28.7 28.7 28.7-28.7c15-15 37.6 7.7 22.6 22.6L366.6 192l28.7 28.7z\"]\n  };\n  var faDna = {\n    prefix: 'fas',\n    iconName: 'dna',\n    icon: [448, 512, [], \"f471\", \"M.1 494.1c-1.1 9.5 6.3 17.8 15.9 17.8l32.3.1c8.1 0 14.9-5.9 16-13.9.7-4.9 1.8-11.1 3.4-18.1H380c1.6 6.9 2.9 13.2 3.5 18.1 1.1 8 7.9 14 16 13.9l32.3-.1c9.6 0 17.1-8.3 15.9-17.8-4.6-37.9-25.6-129-118.9-207.7-17.6 12.4-37.1 24.2-58.5 35.4 6.2 4.6 11.4 9.4 17 14.2H159.7c21.3-18.1 47-35.6 78.7-51.4C410.5 199.1 442.1 65.8 447.9 17.9 449 8.4 441.6.1 432 .1L399.6 0c-8.1 0-14.9 5.9-16 13.9-.7 4.9-1.8 11.1-3.4 18.1H67.8c-1.6-7-2.7-13.1-3.4-18.1-1.1-8-7.9-14-16-13.9L16.1.1C6.5.1-1 8.4.1 17.9 5.3 60.8 31.4 171.8 160 256 31.5 340.2 5.3 451.2.1 494.1zM224 219.6c-25.1-13.7-46.4-28.4-64.3-43.6h128.5c-17.8 15.2-39.1 30-64.2 43.6zM355.1 96c-5.8 10.4-12.8 21.1-21 32H114c-8.3-10.9-15.3-21.6-21-32h262.1zM92.9 416c5.8-10.4 12.8-21.1 21-32h219.4c8.3 10.9 15.4 21.6 21.2 32H92.9z\"]\n  };\n  var faDog = {\n    prefix: 'fas',\n    iconName: 'dog',\n    icon: [512, 512, [], \"f6d3\", \"M496 96h-64l-7.16-14.31A32 32 0 0 0 396.22 64H342.6l-27.28-27.28C305.23 26.64 288 33.78 288 48.03v149.84l128 45.71V208h32c35.35 0 64-28.65 64-64v-32c0-8.84-7.16-16-16-16zm-112 48c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zM96 224c-17.64 0-32-14.36-32-32 0-17.67-14.33-32-32-32S0 174.33 0 192c0 41.66 26.83 76.85 64 90.1V496c0 8.84 7.16 16 16 16h64c8.84 0 16-7.16 16-16V384h160v112c0 8.84 7.16 16 16 16h64c8.84 0 16-7.16 16-16V277.55L266.05 224H96z\"]\n  };\n  var faDollarSign = {\n    prefix: 'fas',\n    iconName: 'dollar-sign',\n    icon: [288, 512, [], \"f155\", \"M209.2 233.4l-108-31.6C88.7 198.2 80 186.5 80 173.5c0-16.3 13.2-29.5 29.5-29.5h66.3c12.2 0 24.2 3.7 34.2 10.5 6.1 4.1 14.3 3.1 19.5-2l34.8-34c7.1-6.9 6.1-18.4-1.8-24.5C238 74.8 207.4 64.1 176 64V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48h-2.5C45.8 64-5.4 118.7.5 183.6c4.2 46.1 39.4 83.6 83.8 96.6l102.5 30c12.5 3.7 21.2 15.3 21.2 28.3 0 16.3-13.2 29.5-29.5 29.5h-66.3C100 368 88 364.3 78 357.5c-6.1-4.1-14.3-3.1-19.5 2l-34.8 34c-7.1 6.9-6.1 18.4 1.8 24.5 24.5 19.2 55.1 29.9 86.5 30v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48.2c46.6-.9 90.3-28.6 105.7-72.7 21.5-61.6-14.6-124.8-72.5-141.7z\"]\n  };\n  var faDolly = {\n    prefix: 'fas',\n    iconName: 'dolly',\n    icon: [576, 512, [], \"f472\", \"M294.2 277.7c18 5 34.7 13.4 49.5 24.7l161.5-53.8c8.4-2.8 12.9-11.9 10.1-20.2L454.9 47.2c-2.8-8.4-11.9-12.9-20.2-10.1l-61.1 20.4 33.1 99.4L346 177l-33.1-99.4-61.6 20.5c-8.4 2.8-12.9 11.9-10.1 20.2l53 159.4zm281 48.7L565 296c-2.8-8.4-11.9-12.9-20.2-10.1l-213.5 71.2c-17.2-22-43.6-36.4-73.5-37L158.4 21.9C154 8.8 141.8 0 128 0H16C7.2 0 0 7.2 0 16v32c0 8.8 7.2 16 16 16h88.9l92.2 276.7c-26.1 20.4-41.7 53.6-36 90.5 6.1 39.4 37.9 72.3 77.3 79.2 60.2 10.7 112.3-34.8 113.4-92.6l213.3-71.2c8.3-2.8 12.9-11.8 10.1-20.2zM256 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"]\n  };\n  var faDollyFlatbed = {\n    prefix: 'fas',\n    iconName: 'dolly-flatbed',\n    icon: [640, 512, [], \"f474\", \"M208 320h384c8.8 0 16-7.2 16-16V48c0-8.8-7.2-16-16-16H448v128l-48-32-48 32V32H208c-8.8 0-16 7.2-16 16v256c0 8.8 7.2 16 16 16zm416 64H128V16c0-8.8-7.2-16-16-16H16C7.2 0 0 7.2 0 16v32c0 8.8 7.2 16 16 16h48v368c0 8.8 7.2 16 16 16h82.9c-1.8 5-2.9 10.4-2.9 16 0 26.5 21.5 48 48 48s48-21.5 48-48c0-5.6-1.2-11-2.9-16H451c-1.8 5-2.9 10.4-2.9 16 0 26.5 21.5 48 48 48s48-21.5 48-48c0-5.6-1.2-11-2.9-16H624c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z\"]\n  };\n  var faDonate = {\n    prefix: 'fas',\n    iconName: 'donate',\n    icon: [512, 512, [], \"f4b9\", \"M256 416c114.9 0 208-93.1 208-208S370.9 0 256 0 48 93.1 48 208s93.1 208 208 208zM233.8 97.4V80.6c0-9.2 7.4-16.6 16.6-16.6h11.1c9.2 0 16.6 7.4 16.6 16.6v17c15.5.8 30.5 6.1 43 15.4 5.6 4.1 6.2 12.3 1.2 17.1L306 145.6c-3.8 3.7-9.5 3.8-14 1-5.4-3.4-11.4-5.1-17.8-5.1h-38.9c-9 0-16.3 8.2-16.3 18.3 0 8.2 5 15.5 12.1 17.6l62.3 18.7c25.7 7.7 43.7 32.4 43.7 60.1 0 34-26.4 61.5-59.1 62.4v16.8c0 9.2-7.4 16.6-16.6 16.6h-11.1c-9.2 0-16.6-7.4-16.6-16.6v-17c-15.5-.8-30.5-6.1-43-15.4-5.6-4.1-6.2-12.3-1.2-17.1l16.3-15.5c3.8-3.7 9.5-3.8 14-1 5.4 3.4 11.4 5.1 17.8 5.1h38.9c9 0 16.3-8.2 16.3-18.3 0-8.2-5-15.5-12.1-17.6l-62.3-18.7c-25.7-7.7-43.7-32.4-43.7-60.1.1-34 26.4-61.5 59.1-62.4zM480 352h-32.5c-19.6 26-44.6 47.7-73 64h63.8c5.3 0 9.6 3.6 9.6 8v16c0 4.4-4.3 8-9.6 8H73.6c-5.3 0-9.6-3.6-9.6-8v-16c0-4.4 4.3-8 9.6-8h63.8c-28.4-16.3-53.3-38-73-64H32c-17.7 0-32 14.3-32 32v96c0 17.7 14.3 32 32 32h448c17.7 0 32-14.3 32-32v-96c0-17.7-14.3-32-32-32z\"]\n  };\n  var faDoorClosed = {\n    prefix: 'fas',\n    iconName: 'door-closed',\n    icon: [640, 512, [], \"f52a\", \"M624 448H512V50.8C512 22.78 490.47 0 464 0H175.99c-26.47 0-48 22.78-48 50.8V448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM415.99 288c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32c.01 17.67-14.32 32-32 32z\"]\n  };\n  var faDoorOpen = {\n    prefix: 'fas',\n    iconName: 'door-open',\n    icon: [640, 512, [], \"f52b\", \"M624 448h-80V113.45C544 86.19 522.47 64 496 64H384v64h96v384h144c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM312.24 1.01l-192 49.74C105.99 54.44 96 67.7 96 82.92V448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h336V33.18c0-21.58-19.56-37.41-39.76-32.17zM264 288c-13.25 0-24-14.33-24-32s10.75-32 24-32 24 14.33 24 32-10.75 32-24 32z\"]\n  };\n  var faDotCircle = {\n    prefix: 'fas',\n    iconName: 'dot-circle',\n    icon: [512, 512, [], \"f192\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm80 248c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80z\"]\n  };\n  var faDove = {\n    prefix: 'fas',\n    iconName: 'dove',\n    icon: [512, 512, [], \"f4ba\", \"M288 167.2v-28.1c-28.2-36.3-47.1-79.3-54.1-125.2-2.1-13.5-19-18.8-27.8-8.3-21.1 24.9-37.7 54.1-48.9 86.5 34.2 38.3 80 64.6 130.8 75.1zM400 64c-44.2 0-80 35.9-80 80.1v59.4C215.6 197.3 127 133 87 41.8c-5.5-12.5-23.2-13.2-29-.9C41.4 76 32 115.2 32 156.6c0 70.8 34.1 136.9 85.1 185.9 13.2 12.7 26.1 23.2 38.9 32.8l-143.9 36C1.4 414-3.4 426.4 2.6 435.7 20 462.6 63 508.2 155.8 512c8 .3 16-2.6 22.1-7.9l65.2-56.1H320c88.4 0 160-71.5 160-159.9V128l32-64H400zm0 96.1c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z\"]\n  };\n  var faDownload = {\n    prefix: 'fas',\n    iconName: 'download',\n    icon: [512, 512, [], \"f019\", \"M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z\"]\n  };\n  var faDraftingCompass = {\n    prefix: 'fas',\n    iconName: 'drafting-compass',\n    icon: [512, 512, [], \"f568\", \"M457.01 344.42c-25.05 20.33-52.63 37.18-82.54 49.05l54.38 94.19 53.95 23.04c9.81 4.19 20.89-2.21 22.17-12.8l7.02-58.25-54.98-95.23zm42.49-94.56c4.86-7.67 1.89-17.99-6.05-22.39l-28.07-15.57c-7.48-4.15-16.61-1.46-21.26 5.72C403.01 281.15 332.25 320 256 320c-23.93 0-47.23-4.25-69.41-11.53l67.36-116.68c.7.02 1.34.21 2.04.21s1.35-.19 2.04-.21l51.09 88.5c31.23-8.96 59.56-25.75 82.61-48.92l-51.79-89.71C347.39 128.03 352 112.63 352 96c0-53.02-42.98-96-96-96s-96 42.98-96 96c0 16.63 4.61 32.03 12.05 45.66l-68.3 118.31c-12.55-11.61-23.96-24.59-33.68-39-4.79-7.1-13.97-9.62-21.38-5.33l-27.75 16.07c-7.85 4.54-10.63 14.9-5.64 22.47 15.57 23.64 34.69 44.21 55.98 62.02L0 439.66l7.02 58.25c1.28 10.59 12.36 16.99 22.17 12.8l53.95-23.04 70.8-122.63C186.13 377.28 220.62 384 256 384c99.05 0 190.88-51.01 243.5-134.14zM256 64c17.67 0 32 14.33 32 32s-14.33 32-32 32-32-14.33-32-32 14.33-32 32-32z\"]\n  };\n  var faDragon = {\n    prefix: 'fas',\n    iconName: 'dragon',\n    icon: [640, 512, [], \"f6d5\", \"M18.32 255.78L192 223.96l-91.28 68.69c-10.08 10.08-2.94 27.31 11.31 27.31h222.7c-9.44-26.4-14.73-54.47-14.73-83.38v-42.27l-119.73-87.6c-23.82-15.88-55.29-14.01-77.06 4.59L5.81 227.64c-12.38 10.33-3.45 30.42 12.51 28.14zm556.87 34.1l-100.66-50.31A47.992 47.992 0 0 1 448 196.65v-36.69h64l28.09 22.63c6 6 14.14 9.37 22.63 9.37h30.97a32 32 0 0 0 28.62-17.69l14.31-28.62a32.005 32.005 0 0 0-3.02-33.51l-74.53-99.38C553.02 4.7 543.54 0 533.47 0H296.02c-7.13 0-10.7 8.57-5.66 13.61L352 63.96 292.42 88.8c-5.9 2.95-5.9 11.36 0 14.31L352 127.96v108.62c0 72.08 36.03 139.39 96 179.38-195.59 6.81-344.56 41.01-434.1 60.91C5.78 478.67 0 485.88 0 494.2 0 504 7.95 512 17.76 512h499.08c63.29.01 119.61-47.56 122.99-110.76 2.52-47.28-22.73-90.4-64.64-111.36zM489.18 66.25l45.65 11.41c-2.75 10.91-12.47 18.89-24.13 18.26-12.96-.71-25.85-12.53-21.52-29.67z\"]\n  };\n  var faDrawPolygon = {\n    prefix: 'fas',\n    iconName: 'draw-polygon',\n    icon: [448, 512, [], \"f5ee\", \"M384 352c-.35 0-.67.1-1.02.1l-39.2-65.32c5.07-9.17 8.22-19.56 8.22-30.78s-3.14-21.61-8.22-30.78l39.2-65.32c.35.01.67.1 1.02.1 35.35 0 64-28.65 64-64s-28.65-64-64-64c-23.63 0-44.04 12.95-55.12 32H119.12C108.04 44.95 87.63 32 64 32 28.65 32 0 60.65 0 96c0 23.63 12.95 44.04 32 55.12v209.75C12.95 371.96 0 392.37 0 416c0 35.35 28.65 64 64 64 23.63 0 44.04-12.95 55.12-32h209.75c11.09 19.05 31.49 32 55.12 32 35.35 0 64-28.65 64-64 .01-35.35-28.64-64-63.99-64zm-288 8.88V151.12A63.825 63.825 0 0 0 119.12 128h208.36l-38.46 64.1c-.35-.01-.67-.1-1.02-.1-35.35 0-64 28.65-64 64s28.65 64 64 64c.35 0 .67-.1 1.02-.1l38.46 64.1H119.12A63.748 63.748 0 0 0 96 360.88zM272 256c0-8.82 7.18-16 16-16s16 7.18 16 16-7.18 16-16 16-16-7.18-16-16zM400 96c0 8.82-7.18 16-16 16s-16-7.18-16-16 7.18-16 16-16 16 7.18 16 16zM64 80c8.82 0 16 7.18 16 16s-7.18 16-16 16-16-7.18-16-16 7.18-16 16-16zM48 416c0-8.82 7.18-16 16-16s16 7.18 16 16-7.18 16-16 16-16-7.18-16-16zm336 16c-8.82 0-16-7.18-16-16s7.18-16 16-16 16 7.18 16 16-7.18 16-16 16z\"]\n  };\n  var faDrum = {\n    prefix: 'fas',\n    iconName: 'drum',\n    icon: [576, 512, [], \"f569\", \"M458.08 120.88l102.39-61.43c15.16-9.09 20.06-28.75 10.97-43.91C562.34.39 542.7-4.53 527.53 4.57l-160.69 96.41A629.32 629.32 0 0 0 288 96C128.94 96 0 153.31 0 224v160.83c0 30.46 24.03 58.4 64 80.37v-96.37c0-17.6 14.4-32 32-32s32 14.4 32 32v122.41c37.4 11.13 81 18.44 128 20.75V400.84c0-17.6 14.4-32 32-32s32 14.4 32 32V512c47-2.31 90.6-9.62 128-20.75V368.84c0-17.6 14.4-32 32-32s32 14.4 32 32v96.37c39.97-21.97 64-49.91 64-80.37V224.01c-.01-42.38-46.54-79.84-117.92-103.13zM288 304c-132.55 0-240-35.82-240-80s107.45-80 240-80c2.34 0 4.62.1 6.94.12l-87.41 52.44c-15.16 9.09-20.06 28.75-10.97 43.91 9.56 15.93 29.51 19.61 43.91 10.97l162.71-97.62C477.55 167.41 528 193.74 528 224.01 528 268.19 420.54 304 288 304z\"]\n  };\n  var faDrumSteelpan = {\n    prefix: 'fas',\n    iconName: 'drum-steelpan',\n    icon: [576, 512, [], \"f56a\", \"M288 32C128.94 32 0 89.31 0 160v192c0 70.69 128.94 128 288 128s288-57.31 288-128V160c0-70.69-128.94-128-288-128zm-82.99 158.36c-4.45 16.61-14.54 30.57-28.31 40.48C100.23 217.46 48 190.78 48 160c0-30.16 50.11-56.39 124.04-70.03l25.6 44.34c9.86 17.09 12.48 36.99 7.37 56.05zM288 240c-21.08 0-41.41-1-60.89-2.7 8.06-26.13 32.15-45.3 60.89-45.3s52.83 19.17 60.89 45.3C329.41 239 309.08 240 288 240zm64-144c0 35.29-28.71 64-64 64s-64-28.71-64-64V82.96c20.4-1.88 41.8-2.96 64-2.96s43.6 1.08 64 2.96V96zm46.93 134.9c-13.81-9.91-23.94-23.9-28.4-40.54-5.11-19.06-2.49-38.96 7.38-56.04l25.65-44.42C477.72 103.5 528 129.79 528 160c0 30.83-52.4 57.54-129.07 70.9z\"]\n  };\n  var faDrumstickBite = {\n    prefix: 'fas',\n    iconName: 'drumstick-bite',\n    icon: [512, 512, [], \"f6d7\", \"M462.8 49.57a169.44 169.44 0 0 0-239.5 0C187.82 85 160.13 128 160.13 192v85.83l-40.62 40.59c-9.7 9.69-24 11.07-36.78 6a60.33 60.33 0 0 0-65 98.72C33 438.39 54.24 442.7 73.85 438.21c-4.5 19.6-.18 40.83 15.1 56.1a60.35 60.35 0 0 0 98.8-65c-5.09-12.73-3.72-27 6-36.75L234.36 352h85.89a187.87 187.87 0 0 0 61.89-10c-39.64-43.89-39.83-110.23 1.05-151.07 34.38-34.36 86.76-39.46 128.74-16.8 1.3-44.96-14.81-90.28-49.13-124.56z\"]\n  };\n  var faDumbbell = {\n    prefix: 'fas',\n    iconName: 'dumbbell',\n    icon: [640, 512, [], \"f44b\", \"M104 96H56c-13.3 0-24 10.7-24 24v104H8c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h24v104c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V120c0-13.3-10.7-24-24-24zm528 128h-24V120c0-13.3-10.7-24-24-24h-48c-13.3 0-24 10.7-24 24v272c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V288h24c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM456 32h-48c-13.3 0-24 10.7-24 24v168H256V56c0-13.3-10.7-24-24-24h-48c-13.3 0-24 10.7-24 24v400c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V288h128v168c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24z\"]\n  };\n  var faDumpster = {\n    prefix: 'fas',\n    iconName: 'dumpster',\n    icon: [576, 512, [], \"f793\", \"M560 160c10.4 0 18-9.8 15.5-19.9l-24-96C549.7 37 543.3 32 536 32h-98.9l25.6 128H560zM272 32H171.5l-25.6 128H272V32zm132.5 0H304v128h126.1L404.5 32zM16 160h97.3l25.6-128H40c-7.3 0-13.7 5-15.5 12.1l-24 96C-2 150.2 5.6 160 16 160zm544 64h-20l4-32H32l4 32H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h28l20 160v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h320v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16l20-160h28c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z\"]\n  };\n  var faDumpsterFire = {\n    prefix: 'fas',\n    iconName: 'dumpster-fire',\n    icon: [640, 512, [], \"f794\", \"M418.7 104.1l.2-.2-14.4-72H304v128h60.8c16.2-19.3 34.2-38.2 53.9-55.8zM272 32H171.5l-25.6 128H272V32zm189.3 72.1c18.2 16.3 35.5 33.7 51.1 51.5 5.7-5.6 11.4-11.1 17.3-16.3l21.3-19 21.3 19c1.1.9 2.1 2.1 3.1 3.1-.1-.8.2-1.5 0-2.3l-24-96C549.7 37 543.3 32 536 32h-98.9l12.3 61.5 11.9 10.6zM16 160h97.3l25.6-128H40c-7.3 0-13.7 5-15.5 12.1l-24 96C-2 150.2 5.6 160 16 160zm324.6 32H32l4 32H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h28l20 160v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h208.8c-30.2-33.7-48.8-77.9-48.8-126.4 0-35.9 19.9-82.9 52.6-129.6zm210.5-28.8c-14.9 13.3-28.3 27.2-40.2 41.2-19.5-25.8-43.6-52-71-76.4-70.2 62.7-120 144.3-120 193.6 0 87.5 71.6 158.4 160 158.4s160-70.9 160-158.4c.1-36.6-37-112.2-88.8-158.4zm-18.6 229.4c-14.7 10.7-32.9 17-52.5 17-49 0-88.9-33.5-88.9-88 0-27.1 16.5-51 49.4-91.9 4.7 5.6 67.1 88.1 67.1 88.1l39.8-47c2.8 4.8 5.4 9.5 7.7 14 18.6 36.7 10.8 83.6-22.6 107.8z\"]\n  };\n  var faDungeon = {\n    prefix: 'fas',\n    iconName: 'dungeon',\n    icon: [512, 512, [], \"f6d9\", \"M128.73 195.32l-82.81-51.76c-8.04-5.02-18.99-2.17-22.93 6.45A254.19 254.19 0 0 0 .54 239.28C-.05 248.37 7.59 256 16.69 256h97.13c7.96 0 14.08-6.25 15.01-14.16 1.09-9.33 3.24-18.33 6.24-26.94 2.56-7.34.25-15.46-6.34-19.58zM319.03 8C298.86 2.82 277.77 0 256 0s-42.86 2.82-63.03 8c-9.17 2.35-13.91 12.6-10.39 21.39l37.47 104.03A16.003 16.003 0 0 0 235.1 144h41.8c6.75 0 12.77-4.23 15.05-10.58l37.47-104.03c3.52-8.79-1.22-19.03-10.39-21.39zM112 288H16c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm0 128H16c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm77.31-283.67l-36.32-90.8c-3.53-8.83-14.13-12.99-22.42-8.31a257.308 257.308 0 0 0-71.61 59.89c-6.06 7.32-3.85 18.48 4.22 23.52l82.93 51.83c6.51 4.07 14.66 2.62 20.11-2.79 5.18-5.15 10.79-9.85 16.79-14.05 6.28-4.41 9.15-12.17 6.3-19.29zM398.18 256h97.13c9.1 0 16.74-7.63 16.15-16.72a254.135 254.135 0 0 0-22.45-89.27c-3.94-8.62-14.89-11.47-22.93-6.45l-82.81 51.76c-6.59 4.12-8.9 12.24-6.34 19.58 3.01 8.61 5.15 17.62 6.24 26.94.93 7.91 7.05 14.16 15.01 14.16zm54.85-162.89a257.308 257.308 0 0 0-71.61-59.89c-8.28-4.68-18.88-.52-22.42 8.31l-36.32 90.8c-2.85 7.12.02 14.88 6.3 19.28 6 4.2 11.61 8.9 16.79 14.05 5.44 5.41 13.6 6.86 20.11 2.79l82.93-51.83c8.07-5.03 10.29-16.19 4.22-23.51zM496 288h-96c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm0 128h-96c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h96c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zM240 177.62V472c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8V177.62c-5.23-.89-10.52-1.62-16-1.62s-10.77.73-16 1.62zm-64 41.51V472c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8V189.36c-12.78 7.45-23.84 17.47-32 29.77zm128-29.77V472c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8V219.13c-8.16-12.3-19.22-22.32-32-29.77z\"]\n  };\n  var faEdit = {\n    prefix: 'fas',\n    iconName: 'edit',\n    icon: [576, 512, [], \"f044\", \"M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z\"]\n  };\n  var faEgg = {\n    prefix: 'fas',\n    iconName: 'egg',\n    icon: [384, 512, [], \"f7fb\", \"M192 0C86 0 0 214 0 320s86 192 192 192 192-86 192-192S298 0 192 0z\"]\n  };\n  var faEject = {\n    prefix: 'fas',\n    iconName: 'eject',\n    icon: [448, 512, [], \"f052\", \"M448 384v64c0 17.673-14.327 32-32 32H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h384c17.673 0 32 14.327 32 32zM48.053 320h351.886c41.651 0 63.581-49.674 35.383-80.435L259.383 47.558c-19.014-20.743-51.751-20.744-70.767 0L12.67 239.565C-15.475 270.268 6.324 320 48.053 320z\"]\n  };\n  var faEllipsisH = {\n    prefix: 'fas',\n    iconName: 'ellipsis-h',\n    icon: [512, 512, [], \"f141\", \"M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z\"]\n  };\n  var faEllipsisV = {\n    prefix: 'fas',\n    iconName: 'ellipsis-v',\n    icon: [192, 512, [], \"f142\", \"M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z\"]\n  };\n  var faEnvelope = {\n    prefix: 'fas',\n    iconName: 'envelope',\n    icon: [512, 512, [], \"f0e0\", \"M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z\"]\n  };\n  var faEnvelopeOpen = {\n    prefix: 'fas',\n    iconName: 'envelope-open',\n    icon: [512, 512, [], \"f2b6\", \"M512 464c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V200.724a48 48 0 0 1 18.387-37.776c24.913-19.529 45.501-35.365 164.2-121.511C199.412 29.17 232.797-.347 256 .003c23.198-.354 56.596 29.172 73.413 41.433 118.687 86.137 139.303 101.995 164.2 121.512A48 48 0 0 1 512 200.724V464zm-65.666-196.605c-2.563-3.728-7.7-4.595-11.339-1.907-22.845 16.873-55.462 40.705-105.582 77.079-16.825 12.266-50.21 41.781-73.413 41.43-23.211.344-56.559-29.143-73.413-41.43-50.114-36.37-82.734-60.204-105.582-77.079-3.639-2.688-8.776-1.821-11.339 1.907l-9.072 13.196a7.998 7.998 0 0 0 1.839 10.967c22.887 16.899 55.454 40.69 105.303 76.868 20.274 14.781 56.524 47.813 92.264 47.573 35.724.242 71.961-32.771 92.263-47.573 49.85-36.179 82.418-59.97 105.303-76.868a7.998 7.998 0 0 0 1.839-10.967l-9.071-13.196z\"]\n  };\n  var faEnvelopeOpenText = {\n    prefix: 'fas',\n    iconName: 'envelope-open-text',\n    icon: [512, 512, [], \"f658\", \"M176 216h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16H176c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16zm-16 80c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16H176c-8.84 0-16 7.16-16 16v16zm96 121.13c-16.42 0-32.84-5.06-46.86-15.19L0 250.86V464c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V250.86L302.86 401.94c-14.02 10.12-30.44 15.19-46.86 15.19zm237.61-254.18c-8.85-6.94-17.24-13.47-29.61-22.81V96c0-26.51-21.49-48-48-48h-77.55c-3.04-2.2-5.87-4.26-9.04-6.56C312.6 29.17 279.2-.35 256 0c-23.2-.35-56.59 29.17-73.41 41.44-3.17 2.3-6 4.36-9.04 6.56H96c-26.51 0-48 21.49-48 48v44.14c-12.37 9.33-20.76 15.87-29.61 22.81A47.995 47.995 0 0 0 0 200.72v10.65l96 69.35V96h320v184.72l96-69.35v-10.65c0-14.74-6.78-28.67-18.39-37.77z\"]\n  };\n  var faEnvelopeSquare = {\n    prefix: 'fas',\n    iconName: 'envelope-square',\n    icon: [448, 512, [], \"f199\", \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM178.117 262.104C87.429 196.287 88.353 196.121 64 177.167V152c0-13.255 10.745-24 24-24h272c13.255 0 24 10.745 24 24v25.167c-24.371 18.969-23.434 19.124-114.117 84.938-10.5 7.655-31.392 26.12-45.883 25.894-14.503.218-35.367-18.227-45.883-25.895zM384 217.775V360c0 13.255-10.745 24-24 24H88c-13.255 0-24-10.745-24-24V217.775c13.958 10.794 33.329 25.236 95.303 70.214 14.162 10.341 37.975 32.145 64.694 32.01 26.887.134 51.037-22.041 64.72-32.025 61.958-44.965 81.325-59.406 95.283-70.199z\"]\n  };\n  var faEquals = {\n    prefix: 'fas',\n    iconName: 'equals',\n    icon: [448, 512, [], \"f52c\", \"M416 304H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32zm0-192H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"]\n  };\n  var faEraser = {\n    prefix: 'fas',\n    iconName: 'eraser',\n    icon: [512, 512, [], \"f12d\", \"M497.941 273.941c18.745-18.745 18.745-49.137 0-67.882l-160-160c-18.745-18.745-49.136-18.746-67.883 0l-256 256c-18.745 18.745-18.745 49.137 0 67.882l96 96A48.004 48.004 0 0 0 144 480h356c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12H355.883l142.058-142.059zm-302.627-62.627l137.373 137.373L265.373 416H150.628l-80-80 124.686-124.686z\"]\n  };\n  var faEthernet = {\n    prefix: 'fas',\n    iconName: 'ethernet',\n    icon: [512, 512, [], \"f796\", \"M496 192h-48v-48c0-8.8-7.2-16-16-16h-48V80c0-8.8-7.2-16-16-16H144c-8.8 0-16 7.2-16 16v48H80c-8.8 0-16 7.2-16 16v48H16c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16h80V320h32v128h64V320h32v128h64V320h32v128h64V320h32v128h80c8.8 0 16-7.2 16-16V208c0-8.8-7.2-16-16-16z\"]\n  };\n  var faEuroSign = {\n    prefix: 'fas',\n    iconName: 'euro-sign',\n    icon: [320, 512, [], \"f153\", \"M310.706 413.765c-1.314-6.63-7.835-10.872-14.424-9.369-10.692 2.439-27.422 5.413-45.426 5.413-56.763 0-101.929-34.79-121.461-85.449h113.689a12 12 0 0 0 11.708-9.369l6.373-28.36c1.686-7.502-4.019-14.631-11.708-14.631H115.22c-1.21-14.328-1.414-28.287.137-42.245H261.95a12 12 0 0 0 11.723-9.434l6.512-29.755c1.638-7.484-4.061-14.566-11.723-14.566H130.184c20.633-44.991 62.69-75.03 117.619-75.03 14.486 0 28.564 2.25 37.851 4.145 6.216 1.268 12.347-2.498 14.002-8.623l11.991-44.368c1.822-6.741-2.465-13.616-9.326-14.917C290.217 34.912 270.71 32 249.635 32 152.451 32 74.03 92.252 45.075 176H12c-6.627 0-12 5.373-12 12v29.755c0 6.627 5.373 12 12 12h21.569c-1.009 13.607-1.181 29.287-.181 42.245H12c-6.627 0-12 5.373-12 12v28.36c0 6.627 5.373 12 12 12h30.114C67.139 414.692 145.264 480 249.635 480c26.301 0 48.562-4.544 61.101-7.788 6.167-1.595 10.027-7.708 8.788-13.957l-8.818-44.49z\"]\n  };\n  var faExchangeAlt = {\n    prefix: 'fas',\n    iconName: 'exchange-alt',\n    icon: [512, 512, [], \"f362\", \"M0 168v-16c0-13.255 10.745-24 24-24h360V80c0-21.367 25.899-32.042 40.971-16.971l80 80c9.372 9.373 9.372 24.569 0 33.941l-80 80C409.956 271.982 384 261.456 384 240v-48H24c-13.255 0-24-10.745-24-24zm488 152H128v-48c0-21.314-25.862-32.08-40.971-16.971l-80 80c-9.372 9.373-9.372 24.569 0 33.941l80 80C102.057 463.997 128 453.437 128 432v-48h360c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24z\"]\n  };\n  var faExclamation = {\n    prefix: 'fas',\n    iconName: 'exclamation',\n    icon: [192, 512, [], \"f12a\", \"M176 432c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zM25.26 25.199l13.6 272C39.499 309.972 50.041 320 62.83 320h66.34c12.789 0 23.331-10.028 23.97-22.801l13.6-272C167.425 11.49 156.496 0 142.77 0H49.23C35.504 0 24.575 11.49 25.26 25.199z\"]\n  };\n  var faExclamationCircle = {\n    prefix: 'fas',\n    iconName: 'exclamation-circle',\n    icon: [512, 512, [], \"f06a\", \"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"]\n  };\n  var faExclamationTriangle = {\n    prefix: 'fas',\n    iconName: 'exclamation-triangle',\n    icon: [576, 512, [], \"f071\", \"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"]\n  };\n  var faExpand = {\n    prefix: 'fas',\n    iconName: 'expand',\n    icon: [448, 512, [], \"f065\", \"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"]\n  };\n  var faExpandArrowsAlt = {\n    prefix: 'fas',\n    iconName: 'expand-arrows-alt',\n    icon: [448, 512, [], \"f31e\", \"M448 344v112a23.94 23.94 0 0 1-24 24H312c-21.39 0-32.09-25.9-17-41l36.2-36.2L224 295.6 116.77 402.9 153 439c15.09 15.1 4.39 41-17 41H24a23.94 23.94 0 0 1-24-24V344c0-21.4 25.89-32.1 41-17l36.19 36.2L184.46 256 77.18 148.7 41 185c-15.1 15.1-41 4.4-41-17V56a23.94 23.94 0 0 1 24-24h112c21.39 0 32.09 25.9 17 41l-36.2 36.2L224 216.4l107.23-107.3L295 73c-15.09-15.1-4.39-41 17-41h112a23.94 23.94 0 0 1 24 24v112c0 21.4-25.89 32.1-41 17l-36.19-36.2L263.54 256l107.28 107.3L407 327.1c15.1-15.2 41-4.5 41 16.9z\"]\n  };\n  var faExternalLinkAlt = {\n    prefix: 'fas',\n    iconName: 'external-link-alt',\n    icon: [576, 512, [], \"f35d\", \"M576 24v127.984c0 21.461-25.96 31.98-40.971 16.971l-35.707-35.709-243.523 243.523c-9.373 9.373-24.568 9.373-33.941 0l-22.627-22.627c-9.373-9.373-9.373-24.569 0-33.941L442.756 76.676l-35.703-35.705C391.982 25.9 402.656 0 424.024 0H552c13.255 0 24 10.745 24 24zM407.029 270.794l-16 16A23.999 23.999 0 0 0 384 303.765V448H64V128h264a24.003 24.003 0 0 0 16.97-7.029l16-16C376.089 89.851 365.381 64 344 64H48C21.49 64 0 85.49 0 112v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V287.764c0-21.382-25.852-32.09-40.971-16.97z\"]\n  };\n  var faExternalLinkSquareAlt = {\n    prefix: 'fas',\n    iconName: 'external-link-square-alt',\n    icon: [448, 512, [], \"f360\", \"M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zm-88 16H248.029c-21.313 0-32.08 25.861-16.971 40.971l31.984 31.987L67.515 364.485c-4.686 4.686-4.686 12.284 0 16.971l31.029 31.029c4.687 4.686 12.285 4.686 16.971 0l195.526-195.526 31.988 31.991C358.058 263.977 384 253.425 384 231.979V120c0-13.255-10.745-24-24-24z\"]\n  };\n  var faEye = {\n    prefix: 'fas',\n    iconName: 'eye',\n    icon: [576, 512, [], \"f06e\", \"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\"]\n  };\n  var faEyeDropper = {\n    prefix: 'fas',\n    iconName: 'eye-dropper',\n    icon: [512, 512, [], \"f1fb\", \"M50.75 333.25c-12 12-18.75 28.28-18.75 45.26V424L0 480l32 32 56-32h45.49c16.97 0 33.25-6.74 45.25-18.74l126.64-126.62-128-128L50.75 333.25zM483.88 28.12c-37.47-37.5-98.28-37.5-135.75 0l-77.09 77.09-13.1-13.1c-9.44-9.44-24.65-9.31-33.94 0l-40.97 40.97c-9.37 9.37-9.37 24.57 0 33.94l161.94 161.94c9.44 9.44 24.65 9.31 33.94 0L419.88 288c9.37-9.37 9.37-24.57 0-33.94l-13.1-13.1 77.09-77.09c37.51-37.48 37.51-98.26.01-135.75z\"]\n  };\n  var faEyeSlash = {\n    prefix: 'fas',\n    iconName: 'eye-slash',\n    icon: [640, 512, [], \"f070\", \"M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z\"]\n  };\n  var faFastBackward = {\n    prefix: 'fas',\n    iconName: 'fast-backward',\n    icon: [512, 512, [], \"f049\", \"M0 436V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v151.9L235.5 71.4C256.1 54.3 288 68.6 288 96v131.9L459.5 71.4C480.1 54.3 512 68.6 512 96v320c0 27.4-31.9 41.7-52.5 24.6L288 285.3V416c0 27.4-31.9 41.7-52.5 24.6L64 285.3V436c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12z\"]\n  };\n  var faFastForward = {\n    prefix: 'fas',\n    iconName: 'fast-forward',\n    icon: [512, 512, [], \"f050\", \"M512 76v360c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V284.1L276.5 440.6c-20.6 17.2-52.5 2.8-52.5-24.6V284.1L52.5 440.6C31.9 457.8 0 443.4 0 416V96c0-27.4 31.9-41.7 52.5-24.6L224 226.8V96c0-27.4 31.9-41.7 52.5-24.6L448 226.8V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12z\"]\n  };\n  var faFax = {\n    prefix: 'fas',\n    iconName: 'fax',\n    icon: [512, 512, [], \"f1ac\", \"M64 128H32c-17.67 0-32 14.33-32 32v320c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V160c0-17.67-14.33-32-32-32zm416 32V77.25c0-8.49-3.37-16.62-9.37-22.63L425.37 9.37c-6-6-14.14-9.37-22.63-9.37H160c-17.67 0-32 14.33-32 32v448c0 17.67 14.33 32 32 32h320c17.67 0 32-14.33 32-32V192c0-17.67-14.33-32-32-32zM288 432c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v32zm0-128c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v32zm128 128c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v32zm0-128c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v32zm16-112H176V48h208v32c0 8.84 7.16 16 16 16h32v96z\"]\n  };\n  var faFeather = {\n    prefix: 'fas',\n    iconName: 'feather',\n    icon: [512, 512, [], \"f52d\", \"M467.14 44.84c-62.55-62.48-161.67-64.78-252.28 25.73-78.61 78.52-60.98 60.92-85.75 85.66-60.46 60.39-70.39 150.83-63.64 211.17l178.44-178.25c6.26-6.25 16.4-6.25 22.65 0s6.25 16.38 0 22.63L7.04 471.03c-9.38 9.37-9.38 24.57 0 33.94 9.38 9.37 24.6 9.37 33.98 0l66.1-66.03C159.42 454.65 279 457.11 353.95 384h-98.19l147.57-49.14c49.99-49.93 36.38-36.18 46.31-46.86h-97.78l131.54-43.8c45.44-74.46 34.31-148.84-16.26-199.36z\"]\n  };\n  var faFeatherAlt = {\n    prefix: 'fas',\n    iconName: 'feather-alt',\n    icon: [512, 512, [], \"f56b\", \"M512 0C460.22 3.56 96.44 38.2 71.01 287.61c-3.09 26.66-4.84 53.44-5.99 80.24l178.87-178.69c6.25-6.25 16.4-6.25 22.65 0s6.25 16.38 0 22.63L7.04 471.03c-9.38 9.37-9.38 24.57 0 33.94 9.38 9.37 24.59 9.37 33.98 0l57.13-57.07c42.09-.14 84.15-2.53 125.96-7.36 53.48-5.44 97.02-26.47 132.58-56.54H255.74l146.79-48.88c11.25-14.89 21.37-30.71 30.45-47.12h-81.14l106.54-53.21C500.29 132.86 510.19 26.26 512 0z\"]\n  };\n  var faFemale = {\n    prefix: 'fas',\n    iconName: 'female',\n    icon: [256, 512, [], \"f182\", \"M128 0c35.346 0 64 28.654 64 64s-28.654 64-64 64c-35.346 0-64-28.654-64-64S92.654 0 128 0m119.283 354.179l-48-192A24 24 0 0 0 176 144h-11.36c-22.711 10.443-49.59 10.894-73.28 0H80a24 24 0 0 0-23.283 18.179l-48 192C4.935 369.305 16.383 384 32 384h56v104c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V384h56c15.591 0 27.071-14.671 23.283-29.821z\"]\n  };\n  var faFighterJet = {\n    prefix: 'fas',\n    iconName: 'fighter-jet',\n    icon: [640, 512, [], \"f0fb\", \"M544 224l-128-16-48-16h-24L227.158 44h39.509C278.333 44 288 41.375 288 38s-9.667-6-21.333-6H152v12h16v164h-48l-66.667-80H18.667L8 138.667V208h8v16h48v2.666l-64 8v42.667l64 8V288H16v16H8v69.333L18.667 384h34.667L120 304h48v164h-16v12h114.667c11.667 0 21.333-2.625 21.333-6s-9.667-6-21.333-6h-39.509L344 320h24l48-16 128-16c96-21.333 96-26.583 96-32 0-5.417 0-10.667-96-32z\"]\n  };\n  var faFile = {\n    prefix: 'fas',\n    iconName: 'file',\n    icon: [384, 512, [], \"f15b\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm160-14.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"]\n  };\n  var faFileAlt = {\n    prefix: 'fas',\n    iconName: 'file-alt',\n    icon: [384, 512, [], \"f15c\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm64 236c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-64c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-72v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm96-114.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"]\n  };\n  var faFileArchive = {\n    prefix: 'fas',\n    iconName: 'file-archive',\n    icon: [384, 512, [], \"f1c6\", \"M377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zM128.4 336c-17.9 0-32.4 12.1-32.4 27 0 15 14.6 27 32.5 27s32.4-12.1 32.4-27-14.6-27-32.5-27zM224 136V0h-63.6v32h-32V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM95.9 32h32v32h-32zm32.3 384c-33.2 0-58-30.4-51.4-62.9L96.4 256v-32h32v-32h-32v-32h32v-32h-32V96h32V64h32v32h-32v32h32v32h-32v32h32v32h-32v32h22.1c5.7 0 10.7 4.1 11.8 9.7l17.3 87.7c6.4 32.4-18.4 62.6-51.4 62.6z\"]\n  };\n  var faFileAudio = {\n    prefix: 'fas',\n    iconName: 'file-audio',\n    icon: [384, 512, [], \"f1c7\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm-64 268c0 10.7-12.9 16-20.5 8.5L104 376H76c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h28l35.5-36.5c7.6-7.6 20.5-2.2 20.5 8.5v136zm33.2-47.6c9.1-9.3 9.1-24.1 0-33.4-22.1-22.8 12.2-56.2 34.4-33.5 27.2 27.9 27.2 72.4 0 100.4-21.8 22.3-56.9-10.4-34.4-33.5zm86-117.1c54.4 55.9 54.4 144.8 0 200.8-21.8 22.4-57-10.3-34.4-33.5 36.2-37.2 36.3-96.5 0-133.8-22.1-22.8 12.3-56.3 34.4-33.5zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"]\n  };\n  var faFileCode = {\n    prefix: 'fas',\n    iconName: 'file-code',\n    icon: [384, 512, [], \"f1c9\", \"M384 121.941V128H256V0h6.059c6.365 0 12.47 2.529 16.971 7.029l97.941 97.941A24.005 24.005 0 0 1 384 121.941zM248 160c-13.2 0-24-10.8-24-24V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248zM123.206 400.505a5.4 5.4 0 0 1-7.633.246l-64.866-60.812a5.4 5.4 0 0 1 0-7.879l64.866-60.812a5.4 5.4 0 0 1 7.633.246l19.579 20.885a5.4 5.4 0 0 1-.372 7.747L101.65 336l40.763 35.874a5.4 5.4 0 0 1 .372 7.747l-19.579 20.884zm51.295 50.479l-27.453-7.97a5.402 5.402 0 0 1-3.681-6.692l61.44-211.626a5.402 5.402 0 0 1 6.692-3.681l27.452 7.97a5.4 5.4 0 0 1 3.68 6.692l-61.44 211.626a5.397 5.397 0 0 1-6.69 3.681zm160.792-111.045l-64.866 60.812a5.4 5.4 0 0 1-7.633-.246l-19.58-20.885a5.4 5.4 0 0 1 .372-7.747L284.35 336l-40.763-35.874a5.4 5.4 0 0 1-.372-7.747l19.58-20.885a5.4 5.4 0 0 1 7.633-.246l64.866 60.812a5.4 5.4 0 0 1-.001 7.879z\"]\n  };\n  var faFileContract = {\n    prefix: 'fas',\n    iconName: 'file-contract',\n    icon: [384, 512, [], \"f56c\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM64 72c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8V72zm0 64c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16zm192.81 248H304c8.84 0 16 7.16 16 16s-7.16 16-16 16h-47.19c-16.45 0-31.27-9.14-38.64-23.86-2.95-5.92-8.09-6.52-10.17-6.52s-7.22.59-10.02 6.19l-7.67 15.34a15.986 15.986 0 0 1-14.31 8.84c-.38 0-.75-.02-1.14-.05-6.45-.45-12-4.75-14.03-10.89L144 354.59l-10.61 31.88c-5.89 17.66-22.38 29.53-41 29.53H80c-8.84 0-16-7.16-16-16s7.16-16 16-16h12.39c4.83 0 9.11-3.08 10.64-7.66l18.19-54.64c3.3-9.81 12.44-16.41 22.78-16.41s19.48 6.59 22.77 16.41l13.88 41.64c19.77-16.19 54.05-9.7 66 14.16 2.02 4.06 5.96 6.5 10.16 6.5zM377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"]\n  };\n  var faFileCsv = {\n    prefix: 'fas',\n    iconName: 'file-csv',\n    icon: [384, 512, [], \"f6dd\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm-96 144c0 4.42-3.58 8-8 8h-8c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h8c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-8c-26.51 0-48-21.49-48-48v-32c0-26.51 21.49-48 48-48h8c4.42 0 8 3.58 8 8v16zm44.27 104H160c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h12.27c5.95 0 10.41-3.5 10.41-6.62 0-1.3-.75-2.66-2.12-3.84l-21.89-18.77c-8.47-7.22-13.33-17.48-13.33-28.14 0-21.3 19.02-38.62 42.41-38.62H200c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-12.27c-5.95 0-10.41 3.5-10.41 6.62 0 1.3.75 2.66 2.12 3.84l21.89 18.77c8.47 7.22 13.33 17.48 13.33 28.14.01 21.29-19 38.62-42.39 38.62zM256 264v20.8c0 20.27 5.7 40.17 16 56.88 10.3-16.7 16-36.61 16-56.88V264c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v20.8c0 35.48-12.88 68.89-36.28 94.09-3.02 3.25-7.27 5.11-11.72 5.11s-8.7-1.86-11.72-5.11c-23.4-25.2-36.28-58.61-36.28-94.09V264c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8zm121-159L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"]\n  };\n  var faFileDownload = {\n    prefix: 'fas',\n    iconName: 'file-download',\n    icon: [384, 512, [], \"f56d\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm76.45 211.36l-96.42 95.7c-6.65 6.61-17.39 6.61-24.04 0l-96.42-95.7C73.42 337.29 80.54 320 94.82 320H160v-80c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v80h65.18c14.28 0 21.4 17.29 11.27 27.36zM377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"]\n  };\n  var faFileExcel = {\n    prefix: 'fas',\n    iconName: 'file-excel',\n    icon: [384, 512, [], \"f1c3\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm60.1 106.5L224 336l60.1 93.5c5.1 8-.6 18.5-10.1 18.5h-34.9c-4.4 0-8.5-2.4-10.6-6.3C208.9 405.5 192 373 192 373c-6.4 14.8-10 20-36.6 68.8-2.1 3.9-6.1 6.3-10.5 6.3H110c-9.5 0-15.2-10.5-10.1-18.5l60.3-93.5-60.3-93.5c-5.2-8 .6-18.5 10.1-18.5h34.8c4.4 0 8.5 2.4 10.6 6.3 26.1 48.8 20 33.6 36.6 68.5 0 0 6.1-11.7 36.6-68.5 2.1-3.9 6.2-6.3 10.6-6.3H274c9.5-.1 15.2 10.4 10.1 18.4zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"]\n  };\n  var faFileExport = {\n    prefix: 'fas',\n    iconName: 'file-export',\n    icon: [576, 512, [], \"f56e\", \"M384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128zM571 308l-95.7-96.4c-10.1-10.1-27.4-3-27.4 11.3V288h-64v64h64v65.2c0 14.3 17.3 21.4 27.4 11.3L571 332c6.6-6.6 6.6-17.4 0-24zm-379 28v-32c0-8.8 7.2-16 16-16h176V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V352H208c-8.8 0-16-7.2-16-16z\"]\n  };\n  var faFileImage = {\n    prefix: 'fas',\n    iconName: 'file-image',\n    icon: [384, 512, [], \"f1c5\", \"M384 121.941V128H256V0h6.059a24 24 0 0 1 16.97 7.029l97.941 97.941a24.002 24.002 0 0 1 7.03 16.971zM248 160c-13.2 0-24-10.8-24-24V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248zm-135.455 16c26.51 0 48 21.49 48 48s-21.49 48-48 48-48-21.49-48-48 21.491-48 48-48zm208 240h-256l.485-48.485L104.545 328c4.686-4.686 11.799-4.201 16.485.485L160.545 368 264.06 264.485c4.686-4.686 12.284-4.686 16.971 0L320.545 304v112z\"]\n  };\n  var faFileImport = {\n    prefix: 'fas',\n    iconName: 'file-import',\n    icon: [512, 512, [], \"f56f\", \"M16 288c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h112v-64zm489-183L407.1 7c-4.5-4.5-10.6-7-17-7H384v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H152c-13.3 0-24 10.7-24 24v264h128v-65.2c0-14.3 17.3-21.4 27.4-11.3L379 308c6.6 6.7 6.6 17.4 0 24l-95.7 96.4c-10.1 10.1-27.4 3-27.4-11.3V352H128v136c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H376c-13.2 0-24-10.8-24-24z\"]\n  };\n  var faFileInvoice = {\n    prefix: 'fas',\n    iconName: 'file-invoice',\n    icon: [384, 512, [], \"f570\", \"M288 256H96v64h192v-64zm89-151L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM64 72c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8V72zm0 64c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16zm256 304c0 4.42-3.58 8-8 8h-80c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16zm0-200v96c0 8.84-7.16 16-16 16H80c-8.84 0-16-7.16-16-16v-96c0-8.84 7.16-16 16-16h224c8.84 0 16 7.16 16 16z\"]\n  };\n  var faFileInvoiceDollar = {\n    prefix: 'fas',\n    iconName: 'file-invoice-dollar',\n    icon: [384, 512, [], \"f571\", \"M377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM64 72c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8V72zm0 80v-16c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8zm144 263.88V440c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-24.29c-11.29-.58-22.27-4.52-31.37-11.35-3.9-2.93-4.1-8.77-.57-12.14l11.75-11.21c2.77-2.64 6.89-2.76 10.13-.73 3.87 2.42 8.26 3.72 12.82 3.72h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V232c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v24.29c11.29.58 22.27 4.51 31.37 11.35 3.9 2.93 4.1 8.77.57 12.14l-11.75 11.21c-2.77 2.64-6.89 2.76-10.13.73-3.87-2.43-8.26-3.72-12.82-3.72h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07z\"]\n  };\n  var faFileMedical = {\n    prefix: 'fas',\n    iconName: 'file-medical',\n    icon: [384, 512, [], \"f477\", \"M377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm64 160v48c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8z\"]\n  };\n  var faFileMedicalAlt = {\n    prefix: 'fas',\n    iconName: 'file-medical-alt',\n    icon: [448, 512, [], \"f478\", \"M288 136V0H88C74.7 0 64 10.7 64 24v232H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h140.9c3 0 5.8 1.7 7.2 4.4l19.9 39.8 56.8-113.7c2.9-5.9 11.4-5.9 14.3 0l34.7 69.5H352c8.8 0 16 7.2 16 16s-7.2 16-16 16h-89.9L240 275.8l-56.8 113.7c-2.9 5.9-11.4 5.9-14.3 0L134.1 320H64v168c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H312c-13.2 0-24-10.8-24-24zm153-31L343.1 7c-4.5-4.5-10.6-7-17-7H320v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"]\n  };\n  var faFilePdf = {\n    prefix: 'fas',\n    iconName: 'file-pdf',\n    icon: [384, 512, [], \"f1c1\", \"M181.9 256.1c-5-16-4.9-46.9-2-46.9 8.4 0 7.6 36.9 2 46.9zm-1.7 47.2c-7.7 20.2-17.3 43.3-28.4 62.7 18.3-7 39-17.2 62.9-21.9-12.7-9.6-24.9-23.4-34.5-40.8zM86.1 428.1c0 .8 13.2-5.4 34.9-40.2-6.7 6.3-29.1 24.5-34.9 40.2zM248 160h136v328c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V24C0 10.7 10.7 0 24 0h200v136c0 13.2 10.8 24 24 24zm-8 171.8c-20-12.2-33.3-29-42.7-53.8 4.5-18.5 11.6-46.6 6.2-64.2-4.7-29.4-42.4-26.5-47.8-6.8-5 18.3-.4 44.1 8.1 77-11.6 27.6-28.7 64.6-40.8 85.8-.1 0-.1.1-.2.1-27.1 13.9-73.6 44.5-54.5 68 5.6 6.9 16 10 21.5 10 17.9 0 35.7-18 61.1-61.8 25.8-8.5 54.1-19.1 79-23.2 21.7 11.8 47.1 19.5 64 19.5 29.2 0 31.2-32 19.7-43.4-13.9-13.6-54.3-9.7-73.6-7.2zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-74.1 255.3c4.1-2.7-2.5-11.9-42.8-9 37.1 15.8 42.8 9 42.8 9z\"]\n  };\n  var faFilePowerpoint = {\n    prefix: 'fas',\n    iconName: 'file-powerpoint',\n    icon: [384, 512, [], \"f1c4\", \"M193.7 271.2c8.8 0 15.5 2.7 20.3 8.1 9.6 10.9 9.8 32.7-.2 44.1-4.9 5.6-11.9 8.5-21.1 8.5h-26.9v-60.7h27.9zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm53 165.2c0 90.3-88.8 77.6-111.1 77.6V436c0 6.6-5.4 12-12 12h-30.8c-6.6 0-12-5.4-12-12V236.2c0-6.6 5.4-12 12-12h81c44.5 0 72.9 32.8 72.9 77z\"]\n  };\n  var faFilePrescription = {\n    prefix: 'fas',\n    iconName: 'file-prescription',\n    icon: [384, 512, [], \"f572\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm68.53 179.48l11.31 11.31c6.25 6.25 6.25 16.38 0 22.63l-29.9 29.9L304 409.38c6.25 6.25 6.25 16.38 0 22.63l-11.31 11.31c-6.25 6.25-16.38 6.25-22.63 0L240 413.25l-30.06 30.06c-6.25 6.25-16.38 6.25-22.63 0L176 432c-6.25-6.25-6.25-16.38 0-22.63l30.06-30.06L146.74 320H128v48c0 8.84-7.16 16-16 16H96c-8.84 0-16-7.16-16-16V208c0-8.84 7.16-16 16-16h80c35.35 0 64 28.65 64 64 0 24.22-13.62 45.05-33.46 55.92L240 345.38l29.9-29.9c6.25-6.25 16.38-6.25 22.63 0zM176 272h-48v-32h48c8.82 0 16 7.18 16 16s-7.18 16-16 16zm208-150.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"]\n  };\n  var faFileSignature = {\n    prefix: 'fas',\n    iconName: 'file-signature',\n    icon: [576, 512, [], \"f573\", \"M218.17 424.14c-2.95-5.92-8.09-6.52-10.17-6.52s-7.22.59-10.02 6.19l-7.67 15.34c-6.37 12.78-25.03 11.37-29.48-2.09L144 386.59l-10.61 31.88c-5.89 17.66-22.38 29.53-41 29.53H80c-8.84 0-16-7.16-16-16s7.16-16 16-16h12.39c4.83 0 9.11-3.08 10.64-7.66l18.19-54.64c3.3-9.81 12.44-16.41 22.78-16.41s19.48 6.59 22.77 16.41l13.88 41.64c19.75-16.19 54.06-9.7 66 14.16 1.89 3.78 5.49 5.95 9.36 6.26v-82.12l128-127.09V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24v-40l-128-.11c-16.12-.31-30.58-9.28-37.83-23.75zM384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1zm-96 225.06V416h68.99l161.68-162.78-67.88-67.88L288 346.96zm280.54-179.63l-31.87-31.87c-9.94-9.94-26.07-9.94-36.01 0l-27.25 27.25 67.88 67.88 27.25-27.25c9.95-9.94 9.95-26.07 0-36.01z\"]\n  };\n  var faFileUpload = {\n    prefix: 'fas',\n    iconName: 'file-upload',\n    icon: [384, 512, [], \"f574\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm65.18 216.01H224v80c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-80H94.82c-14.28 0-21.41-17.29-11.27-27.36l96.42-95.7c6.65-6.61 17.39-6.61 24.04 0l96.42 95.7c10.15 10.07 3.03 27.36-11.25 27.36zM377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z\"]\n  };\n  var faFileVideo = {\n    prefix: 'fas',\n    iconName: 'file-video',\n    icon: [384, 512, [], \"f1c8\", \"M384 121.941V128H256V0h6.059c6.365 0 12.47 2.529 16.971 7.029l97.941 97.941A24.005 24.005 0 0 1 384 121.941zM224 136V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248c-13.2 0-24-10.8-24-24zm96 144.016v111.963c0 21.445-25.943 31.998-40.971 16.971L224 353.941V392c0 13.255-10.745 24-24 24H88c-13.255 0-24-10.745-24-24V280c0-13.255 10.745-24 24-24h112c13.255 0 24 10.745 24 24v38.059l55.029-55.013c15.011-15.01 40.971-4.491 40.971 16.97z\"]\n  };\n  var faFileWord = {\n    prefix: 'fas',\n    iconName: 'file-word',\n    icon: [384, 512, [], \"f1c2\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm57.1 120H305c7.7 0 13.4 7.1 11.7 14.7l-38 168c-1.2 5.5-6.1 9.3-11.7 9.3h-38c-5.5 0-10.3-3.8-11.6-9.1-25.8-103.5-20.8-81.2-25.6-110.5h-.5c-1.1 14.3-2.4 17.4-25.6 110.5-1.3 5.3-6.1 9.1-11.6 9.1H117c-5.6 0-10.5-3.9-11.7-9.4l-37.8-168c-1.7-7.5 4-14.6 11.7-14.6h24.5c5.7 0 10.7 4 11.8 9.7 15.6 78 20.1 109.5 21 122.2 1.6-10.2 7.3-32.7 29.4-122.7 1.3-5.4 6.1-9.1 11.7-9.1h29.1c5.6 0 10.4 3.8 11.7 9.2 24 100.4 28.8 124 29.6 129.4-.2-11.2-2.6-17.8 21.6-129.2 1-5.6 5.9-9.5 11.5-9.5zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"]\n  };\n  var faFill = {\n    prefix: 'fas',\n    iconName: 'fill',\n    icon: [512, 512, [], \"f575\", \"M502.63 217.06L294.94 9.37C288.69 3.12 280.5 0 272.31 0s-16.38 3.12-22.62 9.37l-81.58 81.58L81.93 4.77c-6.24-6.25-16.38-6.25-22.62 0L36.69 27.38c-6.24 6.25-6.24 16.38 0 22.63l86.19 86.18-94.76 94.76c-37.49 37.49-37.49 98.26 0 135.75l117.19 117.19c18.75 18.74 43.31 28.12 67.87 28.12 24.57 0 49.13-9.37 67.88-28.12l221.57-221.57c12.49-12.5 12.49-32.76 0-45.26zm-116.22 70.97H65.93c1.36-3.84 3.57-7.98 7.43-11.83l13.15-13.15 81.61-81.61 58.61 58.6c12.49 12.49 32.75 12.49 45.24 0 12.49-12.49 12.49-32.75 0-45.24l-58.61-58.6 58.95-58.95 162.45 162.44-48.35 48.34z\"]\n  };\n  var faFillDrip = {\n    prefix: 'fas',\n    iconName: 'fill-drip',\n    icon: [576, 512, [], \"f576\", \"M512 320s-64 92.65-64 128c0 35.35 28.66 64 64 64s64-28.65 64-64-64-128-64-128zm-9.37-102.94L294.94 9.37C288.69 3.12 280.5 0 272.31 0s-16.38 3.12-22.62 9.37l-81.58 81.58L81.93 4.76c-6.25-6.25-16.38-6.25-22.62 0L36.69 27.38c-6.24 6.25-6.24 16.38 0 22.62l86.19 86.18-94.76 94.76c-37.49 37.48-37.49 98.26 0 135.75l117.19 117.19c18.74 18.74 43.31 28.12 67.87 28.12 24.57 0 49.13-9.37 67.87-28.12l221.57-221.57c12.5-12.5 12.5-32.75.01-45.25zm-116.22 70.97H65.93c1.36-3.84 3.57-7.98 7.43-11.83l13.15-13.15 81.61-81.61 58.6 58.6c12.49 12.49 32.75 12.49 45.24 0s12.49-32.75 0-45.24l-58.6-58.6 58.95-58.95 162.44 162.44-48.34 48.34z\"]\n  };\n  var faFilm = {\n    prefix: 'fas',\n    iconName: 'film',\n    icon: [512, 512, [], \"f008\", \"M488 64h-8v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V64H96v20c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12V64h-8C10.7 64 0 74.7 0 88v336c0 13.3 10.7 24 24 24h8v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h320v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h8c13.3 0 24-10.7 24-24V88c0-13.3-10.7-24-24-24zM96 372c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm272 208c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm0-168c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm112 152c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40z\"]\n  };\n  var faFilter = {\n    prefix: 'fas',\n    iconName: 'filter',\n    icon: [512, 512, [], \"f0b0\", \"M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z\"]\n  };\n  var faFingerprint = {\n    prefix: 'fas',\n    iconName: 'fingerprint',\n    icon: [512, 512, [], \"f577\", \"M256.12 245.96c-13.25 0-24 10.74-24 24 1.14 72.25-8.14 141.9-27.7 211.55-2.73 9.72 2.15 30.49 23.12 30.49 10.48 0 20.11-6.92 23.09-17.52 13.53-47.91 31.04-125.41 29.48-224.52.01-13.25-10.73-24-23.99-24zm-.86-81.73C194 164.16 151.25 211.3 152.1 265.32c.75 47.94-3.75 95.91-13.37 142.55-2.69 12.98 5.67 25.69 18.64 28.36 13.05 2.67 25.67-5.66 28.36-18.64 10.34-50.09 15.17-101.58 14.37-153.02-.41-25.95 19.92-52.49 54.45-52.34 31.31.47 57.15 25.34 57.62 55.47.77 48.05-2.81 96.33-10.61 143.55-2.17 13.06 6.69 25.42 19.76 27.58 19.97 3.33 26.81-15.1 27.58-19.77 8.28-50.03 12.06-101.21 11.27-152.11-.88-55.8-47.94-101.88-104.91-102.72zm-110.69-19.78c-10.3-8.34-25.37-6.8-33.76 3.48-25.62 31.5-39.39 71.28-38.75 112 .59 37.58-2.47 75.27-9.11 112.05-2.34 13.05 6.31 25.53 19.36 27.89 20.11 3.5 27.07-14.81 27.89-19.36 7.19-39.84 10.5-80.66 9.86-121.33-.47-29.88 9.2-57.88 28-80.97 8.35-10.28 6.79-25.39-3.49-33.76zm109.47-62.33c-15.41-.41-30.87 1.44-45.78 4.97-12.89 3.06-20.87 15.98-17.83 28.89 3.06 12.89 16 20.83 28.89 17.83 11.05-2.61 22.47-3.77 34-3.69 75.43 1.13 137.73 61.5 138.88 134.58.59 37.88-1.28 76.11-5.58 113.63-1.5 13.17 7.95 25.08 21.11 26.58 16.72 1.95 25.51-11.88 26.58-21.11a929.06 929.06 0 0 0 5.89-119.85c-1.56-98.75-85.07-180.33-186.16-181.83zm252.07 121.45c-2.86-12.92-15.51-21.2-28.61-18.27-12.94 2.86-21.12 15.66-18.26 28.61 4.71 21.41 4.91 37.41 4.7 61.6-.11 13.27 10.55 24.09 23.8 24.2h.2c13.17 0 23.89-10.61 24-23.8.18-22.18.4-44.11-5.83-72.34zm-40.12-90.72C417.29 43.46 337.6 1.29 252.81.02 183.02-.82 118.47 24.91 70.46 72.94 24.09 119.37-.9 181.04.14 246.65l-.12 21.47c-.39 13.25 10.03 24.31 23.28 24.69.23.02.48.02.72.02 12.92 0 23.59-10.3 23.97-23.3l.16-23.64c-.83-52.5 19.16-101.86 56.28-139 38.76-38.8 91.34-59.67 147.68-58.86 69.45 1.03 134.73 35.56 174.62 92.39 7.61 10.86 22.56 13.45 33.42 5.86 10.84-7.62 13.46-22.59 5.84-33.43z\"]\n  };\n  var faFire = {\n    prefix: 'fas',\n    iconName: 'fire',\n    icon: [384, 512, [], \"f06d\", \"M216 23.86c0-23.8-30.65-32.77-44.15-13.04C48 191.85 224 200 224 288c0 35.63-29.11 64.46-64.85 63.99-35.17-.45-63.15-29.77-63.15-64.94v-85.51c0-21.7-26.47-32.23-41.43-16.5C27.8 213.16 0 261.33 0 320c0 105.87 86.13 192 192 192s192-86.13 192-192c0-170.29-168-193-168-296.14z\"]\n  };\n  var faFireAlt = {\n    prefix: 'fas',\n    iconName: 'fire-alt',\n    icon: [448, 512, [], \"f7e4\", \"M323.56 51.2c-20.8 19.3-39.58 39.59-56.22 59.97C240.08 73.62 206.28 35.53 168 0 69.74 91.17 0 209.96 0 281.6 0 408.85 100.29 512 224 512s224-103.15 224-230.4c0-53.27-51.98-163.14-124.44-230.4zm-19.47 340.65C282.43 407.01 255.72 416 226.86 416 154.71 416 96 368.26 96 290.75c0-38.61 24.31-72.63 72.79-130.75 6.93 7.98 98.83 125.34 98.83 125.34l58.63-66.88c4.14 6.85 7.91 13.55 11.27 19.97 27.35 52.19 15.81 118.97-33.43 153.42z\"]\n  };\n  var faFireExtinguisher = {\n    prefix: 'fas',\n    iconName: 'fire-extinguisher',\n    icon: [448, 512, [], \"f134\", \"M434.027 26.329l-168 28C254.693 56.218 256 67.8 256 72h-58.332C208.353 36.108 181.446 0 144 0c-39.435 0-66.368 39.676-52.228 76.203-52.039 13.051-75.381 54.213-90.049 90.884-4.923 12.307 1.063 26.274 13.37 31.197 12.317 4.926 26.279-1.075 31.196-13.37C75.058 112.99 106.964 120 168 120v27.076c-41.543 10.862-72 49.235-72 94.129V488c0 13.255 10.745 24 24 24h144c13.255 0 24-10.745 24-24V240c0-44.731-30.596-82.312-72-92.97V120h40c0 2.974-1.703 15.716 10.027 17.671l168 28C441.342 166.89 448 161.25 448 153.834V38.166c0-7.416-6.658-13.056-13.973-11.837zM144 72c-8.822 0-16-7.178-16-16s7.178-16 16-16 16 7.178 16 16-7.178 16-16 16z\"]\n  };\n  var faFirstAid = {\n    prefix: 'fas',\n    iconName: 'first-aid',\n    icon: [576, 512, [], \"f479\", \"M0 80v352c0 26.5 21.5 48 48 48h48V32H48C21.5 32 0 53.5 0 80zm128 400h320V32H128v448zm64-248c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48zM528 32h-48v448h48c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\"]\n  };\n  var faFish = {\n    prefix: 'fas',\n    iconName: 'fish',\n    icon: [576, 512, [], \"f578\", \"M327.1 96c-89.97 0-168.54 54.77-212.27 101.63L27.5 131.58c-12.13-9.18-30.24.6-27.14 14.66L24.54 256 .35 365.77c-3.1 14.06 15.01 23.83 27.14 14.66l87.33-66.05C158.55 361.23 237.13 416 327.1 416 464.56 416 576 288 576 256S464.56 96 327.1 96zm87.43 184c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24 13.26 0 24 10.74 24 24 0 13.25-10.75 24-24 24z\"]\n  };\n  var faFistRaised = {\n    prefix: 'fas',\n    iconName: 'fist-raised',\n    icon: [384, 512, [], \"f6de\", \"M255.98 160V16c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v146.93c5.02-1.78 10.34-2.93 15.97-2.93h48.03zm128 95.99c-.01-35.34-28.66-63.99-63.99-63.99H207.85c-8.78 0-15.9 7.07-15.9 15.85v.56c0 26.27 21.3 47.59 47.57 47.59h35.26c9.68 0 13.2 3.58 13.2 8v16.2c0 4.29-3.59 7.78-7.88 8-44.52 2.28-64.16 24.71-96.05 72.55l-6.31 9.47a7.994 7.994 0 0 1-11.09 2.22l-13.31-8.88a7.994 7.994 0 0 1-2.22-11.09l6.31-9.47c15.73-23.6 30.2-43.26 47.31-58.08-17.27-5.51-31.4-18.12-38.87-34.45-6.59 3.41-13.96 5.52-21.87 5.52h-32c-12.34 0-23.49-4.81-32-12.48C71.48 251.19 60.33 256 48 256H16c-5.64 0-10.97-1.15-16-2.95v77.93c0 33.95 13.48 66.5 37.49 90.51L63.99 448v64h255.98v-63.96l35.91-35.92A96.035 96.035 0 0 0 384 344.21l-.02-88.22zm-32.01-90.09V48c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v112h32c11.28 0 21.94 2.31 32 5.9zM16 224h32c8.84 0 16-7.16 16-16V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v128c0 8.84 7.16 16 16 16zm95.99 0h32c8.84 0 16-7.16 16-16V48c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v160c0 8.84 7.16 16 16 16z\"]\n  };\n  var faFlag = {\n    prefix: 'fas',\n    iconName: 'flag',\n    icon: [512, 512, [], \"f024\", \"M349.565 98.783C295.978 98.783 251.721 64 184.348 64c-24.955 0-47.309 4.384-68.045 12.013a55.947 55.947 0 0 0 3.586-23.562C118.117 24.015 94.806 1.206 66.338.048 34.345-1.254 8 24.296 8 56c0 19.026 9.497 35.825 24 45.945V488c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-94.4c28.311-12.064 63.582-22.122 114.435-22.122 53.588 0 97.844 34.783 165.217 34.783 48.169 0 86.667-16.294 122.505-40.858C506.84 359.452 512 349.571 512 339.045v-243.1c0-23.393-24.269-38.87-45.485-29.016-34.338 15.948-76.454 31.854-116.95 31.854z\"]\n  };\n  var faFlagCheckered = {\n    prefix: 'fas',\n    iconName: 'flag-checkered',\n    icon: [512, 512, [], \"f11e\", \"M243.2 189.9V258c26.1 5.9 49.3 15.6 73.6 22.3v-68.2c-26-5.8-49.4-15.5-73.6-22.2zm223.3-123c-34.3 15.9-76.5 31.9-117 31.9C296 98.8 251.7 64 184.3 64c-25 0-47.3 4.4-68 12 2.8-7.3 4.1-15.2 3.6-23.6C118.1 24 94.8 1.2 66.3 0 34.3-1.3 8 24.3 8 56c0 19 9.5 35.8 24 45.9V488c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24v-94.4c28.3-12.1 63.6-22.1 114.4-22.1 53.6 0 97.8 34.8 165.2 34.8 48.2 0 86.7-16.3 122.5-40.9 8.7-6 13.8-15.8 13.8-26.4V95.9c.1-23.3-24.2-38.8-45.4-29zM169.6 325.5c-25.8 2.7-50 8.2-73.6 16.6v-70.5c26.2-9.3 47.5-15 73.6-17.4zM464 191c-23.6 9.8-46.3 19.5-73.6 23.9V286c24.8-3.4 51.4-11.8 73.6-26v70.5c-25.1 16.1-48.5 24.7-73.6 27.1V286c-27 3.7-47.9 1.5-73.6-5.6v67.4c-23.9-7.4-47.3-16.7-73.6-21.3V258c-19.7-4.4-40.8-6.8-73.6-3.8v-70c-22.4 3.1-44.6 10.2-73.6 20.9v-70.5c33.2-12.2 50.1-19.8 73.6-22v71.6c27-3.7 48.4-1.3 73.6 5.7v-67.4c23.7 7.4 47.2 16.7 73.6 21.3v68.4c23.7 5.3 47.6 6.9 73.6 2.7V143c27-4.8 52.3-13.6 73.6-22.5z\"]\n  };\n  var faFlagUsa = {\n    prefix: 'fas',\n    iconName: 'flag-usa',\n    icon: [512, 512, [], \"f74d\", \"M32 0C14.3 0 0 14.3 0 32v464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V32C64 14.3 49.7 0 32 0zm267.9 303.6c-57.2-15.1-111.7-28.8-203.9 11.1V384c185.7-92.2 221.7 53.3 397.5-23.1 11.4-5 18.5-16.5 18.5-28.8v-36c-43.6 17.3-80.2 24.1-112.1 24.1-37.4-.1-68.9-8.4-100-16.6zm0-96c-57.2-15.1-111.7-28.8-203.9 11.1v61.5c94.8-37.6 154.6-22.7 212.1-7.6 57.2 15.1 111.7 28.8 203.9-11.1V200c-43.6 17.3-80.2 24.1-112.1 24.1-37.4 0-68.9-8.3-100-16.5zm9.5-125.9c51.8 15.6 97.4 29 202.6-20.1V30.8c0-25.1-26.8-38.1-49.4-26.6C291.3 91.5 305.4-62.2 96 32.4v151.9c94.8-37.5 154.6-22.7 212.1-7.6 57.2 15 111.7 28.7 203.9-11.1V96.7c-53.6 23.5-93.3 31.4-126.1 31.4s-59-7.8-85.7-15.9c-4-1.2-8.1-2.4-12.1-3.5V75.5c7.2 2 14.3 4.1 21.3 6.2zM160 128.1c-8.8 0-16-7.1-16-16 0-8.8 7.2-16 16-16s16 7.1 16 16-7.2 16-16 16zm0-55.8c-8.8 0-16-7.1-16-16 0-8.8 7.2-16 16-16s16 7.1 16 16c0 8.8-7.2 16-16 16zm64 47.9c-8.8 0-16-7.1-16-16 0-8.8 7.2-16 16-16s16 7.1 16 16c0 8.8-7.2 16-16 16zm0-55.9c-8.8 0-16-7.1-16-16 0-8.8 7.2-16 16-16s16 7.1 16 16c0 8.8-7.2 16-16 16z\"]\n  };\n  var faFlask = {\n    prefix: 'fas',\n    iconName: 'flask',\n    icon: [448, 512, [], \"f0c3\", \"M437.2 403.5L320 215V64h8c13.3 0 24-10.7 24-24V24c0-13.3-10.7-24-24-24H120c-13.3 0-24 10.7-24 24v16c0 13.3 10.7 24 24 24h8v151L10.8 403.5C-18.5 450.6 15.3 512 70.9 512h306.2c55.7 0 89.4-61.5 60.1-108.5zM137.9 320l48.2-77.6c3.7-5.2 5.8-11.6 5.8-18.4V64h64v160c0 6.9 2.2 13.2 5.8 18.4l48.2 77.6h-172z\"]\n  };\n  var faFlushed = {\n    prefix: 'fas',\n    iconName: 'flushed',\n    icon: [496, 512, [], \"f579\", \"M344 200c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm-192 0c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM80 224c0-39.8 32.2-72 72-72s72 32.2 72 72-32.2 72-72 72-72-32.2-72-72zm232 176H184c-21.2 0-21.2-32 0-32h128c21.2 0 21.2 32 0 32zm32-104c-39.8 0-72-32.2-72-72s32.2-72 72-72 72 32.2 72 72-32.2 72-72 72z\"]\n  };\n  var faFolder = {\n    prefix: 'fas',\n    iconName: 'folder',\n    icon: [512, 512, [], \"f07b\", \"M464 128H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48z\"]\n  };\n  var faFolderMinus = {\n    prefix: 'fas',\n    iconName: 'folder-minus',\n    icon: [512, 512, [], \"f65d\", \"M464 128H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48zm-96 168c0 8.84-7.16 16-16 16H160c-8.84 0-16-7.16-16-16v-16c0-8.84 7.16-16 16-16h192c8.84 0 16 7.16 16 16v16z\"]\n  };\n  var faFolderOpen = {\n    prefix: 'fas',\n    iconName: 'folder-open',\n    icon: [576, 512, [], \"f07c\", \"M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z\"]\n  };\n  var faFolderPlus = {\n    prefix: 'fas',\n    iconName: 'folder-plus',\n    icon: [512, 512, [], \"f65e\", \"M464 128H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48zm-96 168c0 8.84-7.16 16-16 16h-72v72c0 8.84-7.16 16-16 16h-16c-8.84 0-16-7.16-16-16v-72h-72c-8.84 0-16-7.16-16-16v-16c0-8.84 7.16-16 16-16h72v-72c0-8.84 7.16-16 16-16h16c8.84 0 16 7.16 16 16v72h72c8.84 0 16 7.16 16 16v16z\"]\n  };\n  var faFont = {\n    prefix: 'fas',\n    iconName: 'font',\n    icon: [448, 512, [], \"f031\", \"M432 416h-26.7L275.5 42.7c-2.2-6.4-8.3-10.7-15.1-10.7h-72.8c-6.8 0-12.9 4.3-15.1 10.7L42.7 416H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h136c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16h-24l26.6-80.8h138.2l26.6 80.8H296c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h136c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM174.4 268.3l42-124.1c4.3-15.2 6.6-28.2 7.6-34.6.8 6.5 2.9 19.5 7.7 34.7l41.3 124z\"]\n  };\n  var faFontAwesomeLogoFull = {\n    prefix: 'fas',\n    iconName: 'font-awesome-logo-full',\n    icon: [3992, 512, [\"Font Awesome\"], \"f4e6\", \"M454.6 0H57.4C25.9 0 0 25.9 0 57.4v397.3C0 486.1 25.9 512 57.4 512h397.3c31.4 0 57.4-25.9 57.4-57.4V57.4C512 25.9 486.1 0 454.6 0zm-58.9 324.9c0 4.8-4.1 6.9-8.9 8.9-19.2 8.1-39.7 15.7-61.5 15.7-40.5 0-68.7-44.8-163.2 2.5v51.8c0 30.3-45.7 30.2-45.7 0v-250c-9-7-15-17.9-15-30.3 0-21 17.1-38.2 38.2-38.2 21 0 38.2 17.1 38.2 38.2 0 12.2-5.8 23.2-14.9 30.2v21c37.1-12 65.5-34.4 146.1-3.4 26.6 11.4 68.7-15.7 76.5-15.7 5.5 0 10.3 4.1 10.3 8.9v160.4zm432.9-174.2h-137v70.1H825c39.8 0 40.4 62.2 0 62.2H691.6v105.6c0 45.5-70.7 46.4-70.7 0V128.3c0-22 18-39.8 39.8-39.8h167.8c39.6 0 40.5 62.2.1 62.2zm191.1 23.4c-169.3 0-169.1 252.4 0 252.4 169.9 0 169.9-252.4 0-252.4zm0 196.1c-81.6 0-82.1-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm372.4 53.4c-17.5 0-31.4-13.9-31.4-31.4v-117c0-62.4-72.6-52.5-99.1-16.4v133.4c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c43.3-51.6 162.4-60.4 162.4 39.3v141.5c.3 30.4-31.5 31.4-31.7 31.4zm179.7 2.9c-44.3 0-68.3-22.9-68.3-65.8V235.2H1488c-35.6 0-36.7-55.3 0-55.3h15.5v-37.3c0-41.3 63.8-42.1 63.8 0v37.5h24.9c35.4 0 35.7 55.3 0 55.3h-24.9v108.5c0 29.6 26.1 26.3 27.4 26.3 31.4 0 52.6 56.3-22.9 56.3zM1992 123c-19.5-50.2-95.5-50-114.5 0-107.3 275.7-99.5 252.7-99.5 262.8 0 42.8 58.3 51.2 72.1 14.4l13.5-35.9H2006l13 35.9c14.2 37.7 72.1 27.2 72.1-14.4 0-10.1 5.3 6.8-99.1-262.8zm-108.9 179.1l51.7-142.9 51.8 142.9h-103.5zm591.3-85.6l-53.7 176.3c-12.4 41.2-72 41-84 0l-42.3-135.9-42.3 135.9c-12.4 40.9-72 41.2-84.5 0l-54.2-176.3c-12.5-39.4 49.8-56.1 60.2-16.9L2213 342l45.3-139.5c10.9-32.7 59.6-34.7 71.2 0l45.3 139.5 39.3-142.4c10.3-38.3 72.6-23.8 60.3 16.9zm275.4 75.1c0-42.4-33.9-117.5-119.5-117.5-73.2 0-124.4 56.3-124.4 126 0 77.2 55.3 126.4 128.5 126.4 31.7 0 93-11.5 93-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-109 8.4-115.9-43.8h148.3c16.3 0 29.3-13.4 29.3-28.9zM2571 277.7c9.5-73.4 113.9-68.6 118.6 0H2571zm316.7 148.8c-31.4 0-81.6-10.5-96.6-31.9-12.4-17 2.5-39.8 21.8-39.8 16.3 0 36.8 22.9 77.7 22.9 27.4 0 40.4-11 40.4-25.8 0-39.8-142.9-7.4-142.9-102 0-40.4 35.3-75.7 98.6-75.7 31.4 0 74.1 9.9 87.6 29.4 10.8 14.8-1.4 36.2-20.9 36.2-15.1 0-26.7-17.3-66.2-17.3-22.9 0-37.8 10.5-37.8 23.8 0 35.9 142.4 6 142.4 103.1-.1 43.7-37.4 77.1-104.1 77.1zm266.8-252.4c-169.3 0-169.1 252.4 0 252.4 170.1 0 169.6-252.4 0-252.4zm0 196.1c-81.8 0-82-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm476.9 22V268.7c0-53.8-61.4-45.8-85.7-10.5v134c0 41.3-63.8 42.1-63.8 0V268.7c0-52.1-59.5-47.4-85.7-10.1v133.6c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c9.9-14.4 41.8-37.3 78.6-37.3 35.3 0 57.7 16.4 66.7 43.8 13.9-21.8 45.8-43.8 82.6-43.8 44.3 0 70.7 23.4 70.7 72.7v145.3c.5 17.3-13.5 31.4-31.9 31.4 3.5.1-31.3 1.1-31.3-31.3zM3992 291.6c0-42.4-32.4-117.5-117.9-117.5-73.2 0-127.5 56.3-127.5 126 0 77.2 58.3 126.4 131.6 126.4 31.7 0 91.5-11.5 91.5-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-110.5 8.4-117.5-43.8h149.8c16.3 0 29.1-13.4 29.3-28.9zm-180.5-13.9c9.7-74.4 115.9-68.3 120.1 0h-120.1z\"]\n  };\n  var faFootballBall = {\n    prefix: 'fas',\n    iconName: 'football-ball',\n    icon: [496, 512, [], \"f44e\", \"M481.5 60.3c-4.8-18.2-19.1-32.5-37.3-37.4C420.3 16.5 383 8.9 339.4 8L496 164.8c-.8-43.5-8.2-80.6-14.5-104.5zm-467 391.4c4.8 18.2 19.1 32.5 37.3 37.4 23.9 6.4 61.2 14 104.8 14.9L0 347.2c.8 43.5 8.2 80.6 14.5 104.5zM4.2 283.4L220.4 500c132.5-19.4 248.8-118.7 271.5-271.4L275.6 12C143.1 31.4 26.8 130.7 4.2 283.4zm317.3-123.6c3.1-3.1 8.2-3.1 11.3 0l11.3 11.3c3.1 3.1 3.1 8.2 0 11.3l-28.3 28.3 28.3 28.3c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-28.3-28.3-22.6 22.7 28.3 28.3c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L248 278.6l-22.6 22.6 28.3 28.3c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-28.3-28.3-28.3 28.3c-3.1 3.1-8.2 3.1-11.3 0l-11.3-11.3c-3.1-3.1-3.1-8.2 0-11.3l28.3-28.3-28.3-28.2c-3.1-3.1-3.1-8.2 0-11.3l11.3-11.3c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3 22.6-22.6-28.3-28.3c-3.1-3.1-3.1-8.2 0-11.3l11.3-11.3c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3 22.6-22.6-28.3-28.3c-3.1-3.1-3.1-8.2 0-11.3l11.3-11.3c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3 28.3-28.5z\"]\n  };\n  var faForward = {\n    prefix: 'fas',\n    iconName: 'forward',\n    icon: [512, 512, [], \"f04e\", \"M500.5 231.4l-192-160C287.9 54.3 256 68.6 256 96v320c0 27.4 31.9 41.8 52.5 24.6l192-160c15.3-12.8 15.3-36.4 0-49.2zm-256 0l-192-160C31.9 54.3 0 68.6 0 96v320c0 27.4 31.9 41.8 52.5 24.6l192-160c15.3-12.8 15.3-36.4 0-49.2z\"]\n  };\n  var faFrog = {\n    prefix: 'fas',\n    iconName: 'frog',\n    icon: [576, 512, [], \"f52e\", \"M446.53 97.43C439.67 60.23 407.19 32 368 32c-39.23 0-71.72 28.29-78.54 65.54C126.75 112.96-.5 250.12 0 416.98.11 451.9 29.08 480 64 480h304c8.84 0 16-7.16 16-16 0-17.67-14.33-32-32-32h-79.49l35.8-48.33c24.14-36.23 10.35-88.28-33.71-106.6-23.89-9.93-51.55-4.65-72.24 10.88l-32.76 24.59c-7.06 5.31-17.09 3.91-22.41-3.19-5.3-7.08-3.88-17.11 3.19-22.41l34.78-26.09c36.84-27.66 88.28-27.62 125.13 0 10.87 8.15 45.87 39.06 40.8 93.21L469.62 480H560c8.84 0 16-7.16 16-16 0-17.67-14.33-32-32-32h-53.63l-98.52-104.68 154.44-86.65A58.16 58.16 0 0 0 576 189.94c0-21.4-11.72-40.95-30.48-51.23-40.56-22.22-98.99-41.28-98.99-41.28zM368 136c-13.26 0-24-10.75-24-24 0-13.26 10.74-24 24-24 13.25 0 24 10.74 24 24 0 13.25-10.75 24-24 24z\"]\n  };\n  var faFrown = {\n    prefix: 'fas',\n    iconName: 'frown',\n    icon: [496, 512, [], \"f119\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm-160 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm170.2 218.2C315.8 367.4 282.9 352 248 352s-67.8 15.4-90.2 42.2c-13.5 16.3-38.1-4.2-24.6-20.5C161.7 339.6 203.6 320 248 320s86.3 19.6 114.7 53.8c13.6 16.2-11 36.7-24.5 20.4z\"]\n  };\n  var faFrownOpen = {\n    prefix: 'fas',\n    iconName: 'frown-open',\n    icon: [496, 512, [], \"f57a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM136 208c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32zm187.3 183.3c-31.2-9.6-59.4-15.3-75.3-15.3s-44.1 5.7-75.3 15.3c-11.5 3.5-22.5-6.3-20.5-18.1 7-40 60.1-61.2 95.8-61.2s88.8 21.3 95.8 61.2c2 11.9-9.1 21.6-20.5 18.1zM328 240c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"]\n  };\n  var faFunnelDollar = {\n    prefix: 'fas',\n    iconName: 'funnel-dollar',\n    icon: [640, 512, [], \"f662\", \"M433.46 165.94l101.2-111.87C554.61 34.12 540.48 0 512.26 0H31.74C3.52 0-10.61 34.12 9.34 54.07L192 256v155.92c0 12.59 5.93 24.44 16 32l79.99 60c20.86 15.64 48.47 6.97 59.22-13.57C310.8 455.38 288 406.35 288 352c0-89.79 62.05-165.17 145.46-186.06zM480 192c-88.37 0-160 71.63-160 160s71.63 160 160 160 160-71.63 160-160-71.63-160-160-160zm16 239.88V448c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-16.29c-11.29-.58-22.27-4.52-31.37-11.35-3.9-2.93-4.1-8.77-.57-12.14l11.75-11.21c2.77-2.64 6.89-2.76 10.13-.73 3.87 2.42 8.26 3.72 12.82 3.72h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V256c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16.29c11.29.58 22.27 4.51 31.37 11.35 3.9 2.93 4.1 8.77.57 12.14l-11.75 11.21c-2.77 2.64-6.89 2.76-10.13.73-3.87-2.43-8.26-3.72-12.82-3.72h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.04 44.44-42.67 45.07z\"]\n  };\n  var faFutbol = {\n    prefix: 'fas',\n    iconName: 'futbol',\n    icon: [512, 512, [], \"f1e3\", \"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zm-48 0l-.003-.282-26.064 22.741-62.679-58.5 16.454-84.355 34.303 3.072c-24.889-34.216-60.004-60.089-100.709-73.141l13.651 31.939L256 139l-74.953-41.525 13.651-31.939c-40.631 13.028-75.78 38.87-100.709 73.141l34.565-3.073 16.192 84.355-62.678 58.5-26.064-22.741-.003.282c0 43.015 13.497 83.952 38.472 117.991l7.704-33.897 85.138 10.447 36.301 77.826-29.902 17.786c40.202 13.122 84.29 13.148 124.572 0l-29.902-17.786 36.301-77.826 85.138-10.447 7.704 33.897C442.503 339.952 456 299.015 456 256zm-248.102 69.571l-29.894-91.312L256 177.732l77.996 56.527-29.622 91.312h-96.476z\"]\n  };\n  var faGamepad = {\n    prefix: 'fas',\n    iconName: 'gamepad',\n    icon: [640, 512, [], \"f11b\", \"M480 96H160C71.6 96 0 167.6 0 256s71.6 160 160 160c44.8 0 85.2-18.4 114.2-48h91.5c29 29.6 69.5 48 114.2 48 88.4 0 160-71.6 160-160S568.4 96 480 96zM256 276c0 6.6-5.4 12-12 12h-52v52c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-52H76c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h52v-52c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h52c6.6 0 12 5.4 12 12v40zm184 68c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-80c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"]\n  };\n  var faGasPump = {\n    prefix: 'fas',\n    iconName: 'gas-pump',\n    icon: [512, 512, [], \"f52f\", \"M336 448H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h320c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm157.2-340.7l-81-81c-6.2-6.2-16.4-6.2-22.6 0l-11.3 11.3c-6.2 6.2-6.2 16.4 0 22.6L416 97.9V160c0 28.1 20.9 51.3 48 55.2V376c0 13.2-10.8 24-24 24s-24-10.8-24-24v-32c0-48.6-39.4-88-88-88h-8V64c0-35.3-28.7-64-64-64H96C60.7 0 32 28.7 32 64v352h288V304h8c22.1 0 40 17.9 40 40v27.8c0 37.7 27 72 64.5 75.9 43 4.3 79.5-29.5 79.5-71.7V152.6c0-17-6.8-33.3-18.8-45.3zM256 192H96V64h160v128z\"]\n  };\n  var faGavel = {\n    prefix: 'fas',\n    iconName: 'gavel',\n    icon: [512, 512, [], \"f0e3\", \"M504.971 199.362l-22.627-22.627c-9.373-9.373-24.569-9.373-33.941 0l-5.657 5.657L329.608 69.255l5.657-5.657c9.373-9.373 9.373-24.569 0-33.941L312.638 7.029c-9.373-9.373-24.569-9.373-33.941 0L154.246 131.48c-9.373 9.373-9.373 24.569 0 33.941l22.627 22.627c9.373 9.373 24.569 9.373 33.941 0l5.657-5.657 39.598 39.598-81.04 81.04-5.657-5.657c-12.497-12.497-32.758-12.497-45.255 0L9.373 412.118c-12.497 12.497-12.497 32.758 0 45.255l45.255 45.255c12.497 12.497 32.758 12.497 45.255 0l114.745-114.745c12.497-12.497 12.497-32.758 0-45.255l-5.657-5.657 81.04-81.04 39.598 39.598-5.657 5.657c-9.373 9.373-9.373 24.569 0 33.941l22.627 22.627c9.373 9.373 24.569 9.373 33.941 0l124.451-124.451c9.372-9.372 9.372-24.568 0-33.941z\"]\n  };\n  var faGem = {\n    prefix: 'fas',\n    iconName: 'gem',\n    icon: [576, 512, [], \"f3a5\", \"M485.5 0L576 160H474.9L405.7 0h79.8zm-128 0l69.2 160H149.3L218.5 0h139zm-267 0h79.8l-69.2 160H0L90.5 0zM0 192h100.7l123 251.7c1.5 3.1-2.7 5.9-5 3.3L0 192zm148.2 0h279.6l-137 318.2c-1 2.4-4.5 2.4-5.5 0L148.2 192zm204.1 251.7l123-251.7H576L357.3 446.9c-2.3 2.7-6.5-.1-5-3.2z\"]\n  };\n  var faGenderless = {\n    prefix: 'fas',\n    iconName: 'genderless',\n    icon: [288, 512, [], \"f22d\", \"M144 176c44.1 0 80 35.9 80 80s-35.9 80-80 80-80-35.9-80-80 35.9-80 80-80m0-64C64.5 112 0 176.5 0 256s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144z\"]\n  };\n  var faGhost = {\n    prefix: 'fas',\n    iconName: 'ghost',\n    icon: [384, 512, [], \"f6e2\", \"M186.1.09C81.01 3.24 0 94.92 0 200.05v263.92c0 14.26 17.23 21.39 27.31 11.31l24.92-18.53c6.66-4.95 16-3.99 21.51 2.21l42.95 48.35c6.25 6.25 16.38 6.25 22.63 0l40.72-45.85c6.37-7.17 17.56-7.17 23.92 0l40.72 45.85c6.25 6.25 16.38 6.25 22.63 0l42.95-48.35c5.51-6.2 14.85-7.17 21.51-2.21l24.92 18.53c10.08 10.08 27.31 2.94 27.31-11.31V192C384 84 294.83-3.17 186.1.09zM128 224c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm128 0c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"]\n  };\n  var faGift = {\n    prefix: 'fas',\n    iconName: 'gift',\n    icon: [512, 512, [], \"f06b\", \"M32 448c0 17.7 14.3 32 32 32h160V320H32v128zm256 32h160c17.7 0 32-14.3 32-32V320H288v160zm192-320h-42.1c6.2-12.1 10.1-25.5 10.1-40 0-48.5-39.5-88-88-88-41.6 0-68.5 21.3-103 68.3-34.5-47-61.4-68.3-103-68.3-48.5 0-88 39.5-88 88 0 14.5 3.8 27.9 10.1 40H32c-17.7 0-32 14.3-32 32v80c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-80c0-17.7-14.3-32-32-32zm-326.1 0c-22.1 0-40-17.9-40-40s17.9-40 40-40c19.9 0 34.6 3.3 86.1 80h-86.1zm206.1 0h-86.1c51.4-76.5 65.7-80 86.1-80 22.1 0 40 17.9 40 40s-17.9 40-40 40z\"]\n  };\n  var faGifts = {\n    prefix: 'fas',\n    iconName: 'gifts',\n    icon: [640, 512, [], \"f79c\", \"M240.6 194.1c1.9-30.8 17.3-61.2 44-79.8C279.4 103.5 268.7 96 256 96h-29.4l30.7-22c7.2-5.1 8.9-15.1 3.7-22.3l-9.3-13c-5.1-7.2-15.1-8.9-22.3-3.7l-32 22.9 11.5-30.6c3.1-8.3-1.1-17.5-9.4-20.6l-15-5.6c-8.3-3.1-17.5 1.1-20.6 9.4l-19.9 53-19.9-53.1C121 2.1 111.8-2.1 103.5 1l-15 5.6C80.2 9.7 76 19 79.2 27.2l11.5 30.6L58.6 35c-7.2-5.1-17.2-3.5-22.3 3.7l-9.3 13c-5.1 7.2-3.5 17.2 3.7 22.3l30.7 22H32c-17.7 0-32 14.3-32 32v352c0 17.7 14.3 32 32 32h168.9c-5.5-9.5-8.9-20.3-8.9-32V256c0-29.9 20.8-55 48.6-61.9zM224 480c0 17.7 14.3 32 32 32h160V384H224v96zm224 32h160c17.7 0 32-14.3 32-32v-96H448v128zm160-288h-20.4c2.6-7.6 4.4-15.5 4.4-23.8 0-35.5-27-72.2-72.1-72.2-48.1 0-75.9 47.7-87.9 75.3-12.1-27.6-39.9-75.3-87.9-75.3-45.1 0-72.1 36.7-72.1 72.2 0 8.3 1.7 16.2 4.4 23.8H256c-17.7 0-32 14.3-32 32v96h192V224h15.3l.7-.2.7.2H448v128h192v-96c0-17.7-14.3-32-32-32zm-272 0c-2.7-1.4-5.1-3-7.2-4.8-7.3-6.4-8.8-13.8-8.8-19 0-9.7 6.4-24.2 24.1-24.2 18.7 0 35.6 27.4 44.5 48H336zm199.2-4.8c-2.1 1.8-4.5 3.4-7.2 4.8h-52.6c8.8-20.3 25.8-48 44.5-48 17.7 0 24.1 14.5 24.1 24.2 0 5.2-1.5 12.6-8.8 19z\"]\n  };\n  var faGlassCheers = {\n    prefix: 'fas',\n    iconName: 'glass-cheers',\n    icon: [640, 512, [], \"f79f\", \"M639.4 433.6c-8.4-20.4-31.8-30.1-52.2-21.6l-22.1 9.2-38.7-101.9c47.9-35 64.8-100.3 34.5-152.8L474.3 16c-8-13.9-25.1-19.7-40-13.6L320 49.8 205.7 2.4c-14.9-6.2-32-.3-40 13.6L79.1 166.5C48.9 219 65.7 284.3 113.6 319.2L74.9 421.1l-22.1-9.2c-20.4-8.5-43.7 1.2-52.2 21.6-1.7 4.1.2 8.8 4.3 10.5l162.3 67.4c4.1 1.7 8.7-.2 10.4-4.3 8.4-20.4-1.2-43.8-21.6-52.3l-22.1-9.2L173.3 342c4.4.5 8.8 1.3 13.1 1.3 51.7 0 99.4-33.1 113.4-85.3l20.2-75.4 20.2 75.4c14 52.2 61.7 85.3 113.4 85.3 4.3 0 8.7-.8 13.1-1.3L506 445.6l-22.1 9.2c-20.4 8.5-30.1 31.9-21.6 52.3 1.7 4.1 6.4 6 10.4 4.3L635.1 444c4-1.7 6-6.3 4.3-10.4zM275.9 162.1l-112.1-46.5 36.5-63.4 94.5 39.2-18.9 70.7zm88.2 0l-18.9-70.7 94.5-39.2 36.5 63.4-112.1 46.5z\"]\n  };\n  var faGlassMartini = {\n    prefix: 'fas',\n    iconName: 'glass-martini',\n    icon: [512, 512, [], \"f000\", \"M502.05 57.6C523.3 36.34 508.25 0 478.2 0H33.8C3.75 0-11.3 36.34 9.95 57.6L224 271.64V464h-56c-22.09 0-40 17.91-40 40 0 4.42 3.58 8 8 8h240c4.42 0 8-3.58 8-8 0-22.09-17.91-40-40-40h-56V271.64L502.05 57.6z\"]\n  };\n  var faGlassMartiniAlt = {\n    prefix: 'fas',\n    iconName: 'glass-martini-alt',\n    icon: [512, 512, [], \"f57b\", \"M502.05 57.6C523.3 36.34 508.25 0 478.2 0H33.8C3.75 0-11.3 36.34 9.95 57.6L224 271.64V464h-56c-22.09 0-40 17.91-40 40 0 4.42 3.58 8 8 8h240c4.42 0 8-3.58 8-8 0-22.09-17.91-40-40-40h-56V271.64L502.05 57.6zM443.77 48l-48 48H116.24l-48-48h375.53z\"]\n  };\n  var faGlassWhiskey = {\n    prefix: 'fas',\n    iconName: 'glass-whiskey',\n    icon: [512, 512, [], \"f7a0\", \"M480 32H32C12.5 32-2.4 49.2.3 68.5l56 356.5c4.5 31.5 31.5 54.9 63.4 54.9h273c31.8 0 58.9-23.4 63.4-54.9l55.6-356.5C514.4 49.2 499.5 32 480 32zm-37.4 64l-30 192h-313L69.4 96h373.2z\"]\n  };\n  var faGlasses = {\n    prefix: 'fas',\n    iconName: 'glasses',\n    icon: [576, 512, [], \"f530\", \"M574.1 280.37L528.75 98.66c-5.91-23.7-21.59-44.05-43-55.81-21.44-11.73-46.97-14.11-70.19-6.33l-15.25 5.08c-8.39 2.79-12.92 11.86-10.12 20.24l5.06 15.18c2.79 8.38 11.85 12.91 20.23 10.12l13.18-4.39c10.87-3.62 23-3.57 33.16 1.73 10.29 5.37 17.57 14.56 20.37 25.82l38.46 153.82c-22.19-6.81-49.79-12.46-81.2-12.46-34.77 0-73.98 7.02-114.85 26.74h-73.18c-40.87-19.74-80.08-26.75-114.86-26.75-31.42 0-59.02 5.65-81.21 12.46l38.46-153.83c2.79-11.25 10.09-20.45 20.38-25.81 10.16-5.3 22.28-5.35 33.15-1.73l13.17 4.39c8.38 2.79 17.44-1.74 20.23-10.12l5.06-15.18c2.8-8.38-1.73-17.45-10.12-20.24l-15.25-5.08c-23.22-7.78-48.75-5.41-70.19 6.33-21.41 11.77-37.09 32.11-43 55.8L1.9 280.37A64.218 64.218 0 0 0 0 295.86v70.25C0 429.01 51.58 480 115.2 480h37.12c60.28 0 110.37-45.94 114.88-105.37l2.93-38.63h35.75l2.93 38.63C313.31 434.06 363.4 480 423.68 480h37.12c63.62 0 115.2-50.99 115.2-113.88v-70.25c0-5.23-.64-10.43-1.9-15.5zm-370.72 89.42c-1.97 25.91-24.4 46.21-51.06 46.21H115.2C86.97 416 64 393.62 64 366.11v-37.54c18.12-6.49 43.42-12.92 72.58-12.92 23.86 0 47.26 4.33 69.93 12.92l-3.13 41.22zM512 366.12c0 27.51-22.97 49.88-51.2 49.88h-37.12c-26.67 0-49.1-20.3-51.06-46.21l-3.13-41.22c22.67-8.59 46.08-12.92 69.95-12.92 29.12 0 54.43 6.44 72.55 12.93v37.54z\"]\n  };\n  var faGlobe = {\n    prefix: 'fas',\n    iconName: 'globe',\n    icon: [496, 512, [], \"f0ac\", \"M336.5 160C322 70.7 287.8 8 248 8s-74 62.7-88.5 152h177zM152 256c0 22.2 1.2 43.5 3.3 64h185.3c2.1-20.5 3.3-41.8 3.3-64s-1.2-43.5-3.3-64H155.3c-2.1 20.5-3.3 41.8-3.3 64zm324.7-96c-28.6-67.9-86.5-120.4-158-141.6 24.4 33.8 41.2 84.7 50 141.6h108zM177.2 18.4C105.8 39.6 47.8 92.1 19.3 160h108c8.7-56.9 25.5-107.8 49.9-141.6zM487.4 192H372.7c2.1 21 3.3 42.5 3.3 64s-1.2 43-3.3 64h114.6c5.5-20.5 8.6-41.8 8.6-64s-3.1-43.5-8.5-64zM120 256c0-21.5 1.2-43 3.3-64H8.6C3.2 212.5 0 233.8 0 256s3.2 43.5 8.6 64h114.6c-2-21-3.2-42.5-3.2-64zm39.5 96c14.5 89.3 48.7 152 88.5 152s74-62.7 88.5-152h-177zm159.3 141.6c71.4-21.2 129.4-73.7 158-141.6h-108c-8.8 56.9-25.6 107.8-50 141.6zM19.3 352c28.6 67.9 86.5 120.4 158 141.6-24.4-33.8-41.2-84.7-50-141.6h-108z\"]\n  };\n  var faGlobeAfrica = {\n    prefix: 'fas',\n    iconName: 'globe-africa',\n    icon: [496, 512, [], \"f57c\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm160 215.5v6.93c0 5.87-3.32 11.24-8.57 13.86l-15.39 7.7a15.485 15.485 0 0 1-15.53-.97l-18.21-12.14a15.52 15.52 0 0 0-13.5-1.81l-2.65.88c-9.7 3.23-13.66 14.79-7.99 23.3l13.24 19.86c2.87 4.31 7.71 6.9 12.89 6.9h8.21c8.56 0 15.5 6.94 15.5 15.5v11.34c0 3.35-1.09 6.62-3.1 9.3l-18.74 24.98c-1.42 1.9-2.39 4.1-2.83 6.43l-4.3 22.83c-.62 3.29-2.29 6.29-4.76 8.56a159.608 159.608 0 0 0-25 29.16l-13.03 19.55a27.756 27.756 0 0 1-23.09 12.36c-10.51 0-20.12-5.94-24.82-15.34a78.902 78.902 0 0 1-8.33-35.29V367.5c0-8.56-6.94-15.5-15.5-15.5h-25.88c-14.49 0-28.38-5.76-38.63-16a54.659 54.659 0 0 1-16-38.63v-14.06c0-17.19 8.1-33.38 21.85-43.7l27.58-20.69a54.663 54.663 0 0 1 32.78-10.93h.89c8.48 0 16.85 1.97 24.43 5.77l14.72 7.36c3.68 1.84 7.93 2.14 11.83.84l47.31-15.77c6.33-2.11 10.6-8.03 10.6-14.7 0-8.56-6.94-15.5-15.5-15.5h-10.09c-4.11 0-8.05-1.63-10.96-4.54l-6.92-6.92a15.493 15.493 0 0 0-10.96-4.54H199.5c-8.56 0-15.5-6.94-15.5-15.5v-4.4c0-7.11 4.84-13.31 11.74-15.04l14.45-3.61c3.74-.94 7-3.23 9.14-6.44l8.08-12.11c2.87-4.31 7.71-6.9 12.89-6.9h24.21c8.56 0 15.5-6.94 15.5-15.5v-21.7C359.23 71.63 422.86 131.02 441.93 208H423.5c-8.56 0-15.5 6.94-15.5 15.5z\"]\n  };\n  var faGlobeAmericas = {\n    prefix: 'fas',\n    iconName: 'globe-americas',\n    icon: [496, 512, [], \"f57d\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm82.29 357.6c-3.9 3.88-7.99 7.95-11.31 11.28-2.99 3-5.1 6.7-6.17 10.71-1.51 5.66-2.73 11.38-4.77 16.87l-17.39 46.85c-13.76 3-28 4.69-42.65 4.69v-27.38c1.69-12.62-7.64-36.26-22.63-51.25-6-6-9.37-14.14-9.37-22.63v-32.01c0-11.64-6.27-22.34-16.46-27.97-14.37-7.95-34.81-19.06-48.81-26.11-11.48-5.78-22.1-13.14-31.65-21.75l-.8-.72a114.792 114.792 0 0 1-18.06-20.74c-9.38-13.77-24.66-36.42-34.59-51.14 20.47-45.5 57.36-82.04 103.2-101.89l24.01 12.01C203.48 89.74 216 82.01 216 70.11v-11.3c7.99-1.29 16.12-2.11 24.39-2.42l28.3 28.3c6.25 6.25 6.25 16.38 0 22.63L264 112l-10.34 10.34c-3.12 3.12-3.12 8.19 0 11.31l4.69 4.69c3.12 3.12 3.12 8.19 0 11.31l-8 8a8.008 8.008 0 0 1-5.66 2.34h-8.99c-2.08 0-4.08.81-5.58 2.27l-9.92 9.65a8.008 8.008 0 0 0-1.58 9.31l15.59 31.19c2.66 5.32-1.21 11.58-7.15 11.58h-5.64c-1.93 0-3.79-.7-5.24-1.96l-9.28-8.06a16.017 16.017 0 0 0-15.55-3.1l-31.17 10.39a11.95 11.95 0 0 0-8.17 11.34c0 4.53 2.56 8.66 6.61 10.69l11.08 5.54c9.41 4.71 19.79 7.16 30.31 7.16s22.59 27.29 32 32h66.75c8.49 0 16.62 3.37 22.63 9.37l13.69 13.69a30.503 30.503 0 0 1 8.93 21.57 46.536 46.536 0 0 1-13.72 32.98zM417 274.25c-5.79-1.45-10.84-5-14.15-9.97l-17.98-26.97a23.97 23.97 0 0 1 0-26.62l19.59-29.38c2.32-3.47 5.5-6.29 9.24-8.15l12.98-6.49C440.2 193.59 448 223.87 448 256c0 8.67-.74 17.16-1.82 25.54L417 274.25z\"]\n  };\n  var faGlobeAsia = {\n    prefix: 'fas',\n    iconName: 'globe-asia',\n    icon: [496, 512, [], \"f57e\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm-11.34 240.23c-2.89 4.82-8.1 7.77-13.72 7.77h-.31c-4.24 0-8.31 1.69-11.31 4.69l-5.66 5.66c-3.12 3.12-3.12 8.19 0 11.31l5.66 5.66c3 3 4.69 7.07 4.69 11.31V304c0 8.84-7.16 16-16 16h-6.11c-6.06 0-11.6-3.42-14.31-8.85l-22.62-45.23c-2.44-4.88-8.95-5.94-12.81-2.08l-19.47 19.46c-3 3-7.07 4.69-11.31 4.69H50.81C49.12 277.55 48 266.92 48 256c0-110.28 89.72-200 200-200 21.51 0 42.2 3.51 61.63 9.82l-50.16 38.53c-5.11 3.41-4.63 11.06.86 13.81l10.83 5.41c5.42 2.71 8.84 8.25 8.84 14.31V216c0 4.42-3.58 8-8 8h-3.06c-3.03 0-5.8-1.71-7.15-4.42-1.56-3.12-5.96-3.29-7.76-.3l-17.37 28.95zM408 358.43c0 4.24-1.69 8.31-4.69 11.31l-9.57 9.57c-3 3-7.07 4.69-11.31 4.69h-15.16c-4.24 0-8.31-1.69-11.31-4.69l-13.01-13.01a26.767 26.767 0 0 0-25.42-7.04l-21.27 5.32c-1.27.32-2.57.48-3.88.48h-10.34c-4.24 0-8.31-1.69-11.31-4.69l-11.91-11.91a8.008 8.008 0 0 1-2.34-5.66v-10.2c0-3.27 1.99-6.21 5.03-7.43l39.34-15.74c1.98-.79 3.86-1.82 5.59-3.05l23.71-16.89a7.978 7.978 0 0 1 4.64-1.48h12.09c3.23 0 6.15 1.94 7.39 4.93l5.35 12.85a4 4 0 0 0 3.69 2.46h3.8c1.78 0 3.35-1.18 3.84-2.88l4.2-14.47c.5-1.71 2.06-2.88 3.84-2.88h6.06c2.21 0 4 1.79 4 4v12.93c0 2.12.84 4.16 2.34 5.66l11.91 11.91c3 3 4.69 7.07 4.69 11.31v24.6z\"]\n  };\n  var faGlobeEurope = {\n    prefix: 'fas',\n    iconName: 'globe-europe',\n    icon: [496, 512, [], \"f7a2\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm200 248c0 22.5-3.9 44.2-10.8 64.4h-20.3c-4.3 0-8.4-1.7-11.4-4.8l-32-32.6c-4.5-4.6-4.5-12.1.1-16.7l12.5-12.5v-8.7c0-3-1.2-5.9-3.3-8l-9.4-9.4c-2.1-2.1-5-3.3-8-3.3h-16c-6.2 0-11.3-5.1-11.3-11.3 0-3 1.2-5.9 3.3-8l9.4-9.4c2.1-2.1 5-3.3 8-3.3h32c6.2 0 11.3-5.1 11.3-11.3v-9.4c0-6.2-5.1-11.3-11.3-11.3h-36.7c-8.8 0-16 7.2-16 16v4.5c0 6.9-4.4 13-10.9 15.2l-31.6 10.5c-3.3 1.1-5.5 4.1-5.5 7.6v2.2c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8s-3.6-8-8-8H247c-3 0-5.8 1.7-7.2 4.4l-9.4 18.7c-2.7 5.4-8.2 8.8-14.3 8.8H194c-8.8 0-16-7.2-16-16V199c0-4.2 1.7-8.3 4.7-11.3l20.1-20.1c4.6-4.6 7.2-10.9 7.2-17.5 0-3.4 2.2-6.5 5.5-7.6l40-13.3c1.7-.6 3.2-1.5 4.4-2.7l26.8-26.8c2.1-2.1 3.3-5 3.3-8 0-6.2-5.1-11.3-11.3-11.3H258l-16 16v8c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8v-20c0-2.5 1.2-4.9 3.2-6.4l28.9-21.7c1.9-.1 3.8-.3 5.7-.3C358.3 56 448 145.7 448 256zM130.1 149.1c0-3 1.2-5.9 3.3-8l25.4-25.4c2.1-2.1 5-3.3 8-3.3 6.2 0 11.3 5.1 11.3 11.3v16c0 3-1.2 5.9-3.3 8l-9.4 9.4c-2.1 2.1-5 3.3-8 3.3h-16c-6.2 0-11.3-5.1-11.3-11.3zm128 306.4v-7.1c0-8.8-7.2-16-16-16h-20.2c-10.8 0-26.7-5.3-35.4-11.8l-22.2-16.7c-11.5-8.6-18.2-22.1-18.2-36.4v-23.9c0-16 8.4-30.8 22.1-39l42.9-25.7c7.1-4.2 15.2-6.5 23.4-6.5h31.2c10.9 0 21.4 3.9 29.6 10.9l43.2 37.1h18.3c8.5 0 16.6 3.4 22.6 9.4l17.3 17.3c3.4 3.4 8.1 5.3 12.9 5.3H423c-32.4 58.9-93.8 99.5-164.9 103.1z\"]\n  };\n  var faGolfBall = {\n    prefix: 'fas',\n    iconName: 'golf-ball',\n    icon: [416, 512, [], \"f450\", \"M96 416h224c0 17.7-14.3 32-32 32h-16c-17.7 0-32 14.3-32 32v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-20c0-17.7-14.3-32-32-32h-16c-17.7 0-32-14.3-32-32zm320-208c0 74.2-39 139.2-97.5 176h-221C39 347.2 0 282.2 0 208 0 93.1 93.1 0 208 0s208 93.1 208 208zm-180.1 43.9c18.3 0 33.1-14.8 33.1-33.1 0-14.4-9.3-26.3-22.1-30.9 9.6 26.8-15.6 51.3-41.9 41.9 4.6 12.8 16.5 22.1 30.9 22.1zm49.1 46.9c0-14.4-9.3-26.3-22.1-30.9 9.6 26.8-15.6 51.3-41.9 41.9 4.6 12.8 16.5 22.1 30.9 22.1 18.3 0 33.1-14.9 33.1-33.1zm64-64c0-14.4-9.3-26.3-22.1-30.9 9.6 26.8-15.6 51.3-41.9 41.9 4.6 12.8 16.5 22.1 30.9 22.1 18.3 0 33.1-14.9 33.1-33.1z\"]\n  };\n  var faGopuram = {\n    prefix: 'fas',\n    iconName: 'gopuram',\n    icon: [512, 512, [], \"f664\", \"M496 352h-16V240c0-8.8-7.2-16-16-16h-16v-80c0-8.8-7.2-16-16-16h-16V16c0-8.8-7.2-16-16-16s-16 7.2-16 16v16h-64V16c0-8.8-7.2-16-16-16s-16 7.2-16 16v16h-64V16c0-8.8-7.2-16-16-16s-16 7.2-16 16v16h-64V16c0-8.8-7.2-16-16-16S96 7.2 96 16v112H80c-8.8 0-16 7.2-16 16v80H48c-8.8 0-16 7.2-16 16v112H16c-8.8 0-16 7.2-16 16v128c0 8.8 7.2 16 16 16h80V352h32V224h32v-96h32v96h-32v128h-32v160h80v-80c0-8.8 7.2-16 16-16h64c8.8 0 16 7.2 16 16v80h80V352h-32V224h-32v-96h32v96h32v128h32v160h80c8.8 0 16-7.2 16-16V368c0-8.8-7.2-16-16-16zM232 176c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v48h-48zm56 176h-64v-64c0-8.8 7.2-16 16-16h32c8.8 0 16 7.2 16 16z\"]\n  };\n  var faGraduationCap = {\n    prefix: 'fas',\n    iconName: 'graduation-cap',\n    icon: [640, 512, [], \"f19d\", \"M622.34 153.2L343.4 67.5c-15.2-4.67-31.6-4.67-46.79 0L17.66 153.2c-23.54 7.23-23.54 38.36 0 45.59l48.63 14.94c-10.67 13.19-17.23 29.28-17.88 46.9C38.78 266.15 32 276.11 32 288c0 10.78 5.68 19.85 13.86 25.65L20.33 428.53C18.11 438.52 25.71 448 35.94 448h56.11c10.24 0 17.84-9.48 15.62-19.47L82.14 313.65C90.32 307.85 96 298.78 96 288c0-11.57-6.47-21.25-15.66-26.87.76-15.02 8.44-28.3 20.69-36.72L296.6 284.5c9.06 2.78 26.44 6.25 46.79 0l278.95-85.7c23.55-7.24 23.55-38.36 0-45.6zM352.79 315.09c-28.53 8.76-52.84 3.92-65.59 0l-145.02-44.55L128 384c0 35.35 85.96 64 192 64s192-28.65 192-64l-14.18-113.47-145.03 44.56z\"]\n  };\n  var faGreaterThan = {\n    prefix: 'fas',\n    iconName: 'greater-than',\n    icon: [384, 512, [], \"f531\", \"M365.52 209.85L59.22 67.01c-16.06-7.49-35.15-.54-42.64 15.52L3.01 111.61c-7.49 16.06-.54 35.15 15.52 42.64L236.96 256.1 18.49 357.99C2.47 365.46-4.46 384.5 3.01 400.52l13.52 29C24 445.54 43.04 452.47 59.06 445l306.47-142.91a32.003 32.003 0 0 0 18.48-29v-34.23c-.01-12.45-7.21-23.76-18.49-29.01z\"]\n  };\n  var faGreaterThanEqual = {\n    prefix: 'fas',\n    iconName: 'greater-than-equal',\n    icon: [448, 512, [], \"f532\", \"M55.22 107.69l175.56 68.09-175.44 68.05c-18.39 6.03-27.88 24.39-21.2 41l12.09 30.08c6.68 16.61 26.99 25.19 45.38 19.15L393.02 214.2c13.77-4.52 22.98-16.61 22.98-30.17v-15.96c0-13.56-9.21-25.65-22.98-30.17L91.3 17.92c-18.29-6-38.51 2.53-45.15 19.06L34.12 66.9c-6.64 16.53 2.81 34.79 21.1 40.79zM424 400H24c-13.25 0-24 10.74-24 24v48c0 13.25 10.75 24 24 24h400c13.25 0 24-10.75 24-24v-48c0-13.26-10.75-24-24-24z\"]\n  };\n  var faGrimace = {\n    prefix: 'fas',\n    iconName: 'grimace',\n    icon: [496, 512, [], \"f57f\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM144 400h-8c-17.7 0-32-14.3-32-32v-8h40v40zm0-56h-40v-8c0-17.7 14.3-32 32-32h8v40zm-8-136c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32zm72 192h-48v-40h48v40zm0-56h-48v-40h48v40zm64 56h-48v-40h48v40zm0-56h-48v-40h48v40zm64 56h-48v-40h48v40zm0-56h-48v-40h48v40zm-8-104c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm64 128c0 17.7-14.3 32-32 32h-8v-40h40v8zm0-24h-40v-40h8c17.7 0 32 14.3 32 32v8z\"]\n  };\n  var faGrin = {\n    prefix: 'fas',\n    iconName: 'grin',\n    icon: [496, 512, [], \"f580\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm-160 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm80 256c-60.6 0-134.5-38.3-143.8-93.3-2-11.8 9.3-21.6 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.3-3.7 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"]\n  };\n  var faGrinAlt = {\n    prefix: 'fas',\n    iconName: 'grin-alt',\n    icon: [496, 512, [], \"f581\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm63.7 128.7c7.6-11.4 24.7-11.7 32.7 0 12.4 18.4 15.1 36.9 15.7 55.3-.5 18.4-3.3 36.9-15.7 55.3-7.6 11.4-24.7 11.7-32.7 0-12.4-18.4-15.1-36.9-15.7-55.3.5-18.4 3.3-36.9 15.7-55.3zm-160 0c7.6-11.4 24.7-11.7 32.7 0 12.4 18.4 15.1 36.9 15.7 55.3-.5 18.4-3.3 36.9-15.7 55.3-7.6 11.4-24.7 11.7-32.7 0-12.4-18.4-15.1-36.9-15.7-55.3.5-18.4 3.3-36.9 15.7-55.3zM248 432c-60.6 0-134.5-38.3-143.8-93.3-2-11.8 9.3-21.6 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.4-3.7 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"]\n  };\n  var faGrinBeam = {\n    prefix: 'fas',\n    iconName: 'grin-beam',\n    icon: [496, 512, [], \"f582\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 144c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 11.9-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.1 7.3-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm-160 0c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 11.9-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm80 280c-60.6 0-134.5-38.3-143.8-93.3-2-11.9 9.4-21.6 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.4-3.7 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"]\n  };\n  var faGrinBeamSweat = {\n    prefix: 'fas',\n    iconName: 'grin-beam-sweat',\n    icon: [504, 512, [], \"f583\", \"M456 128c26.5 0 48-21 48-47 0-20-28.5-60.4-41.6-77.8-3.2-4.3-9.6-4.3-12.8 0C436.5 20.6 408 61 408 81c0 26 21.5 47 48 47zm0 32c-44.1 0-80-35.4-80-79 0-4.4.3-14.2 8.1-32.2C345 23.1 298.3 8 248 8 111 8 0 119 0 256s111 248 248 248 248-111 248-248c0-35.1-7.4-68.4-20.5-98.6-6.3 1.5-12.7 2.6-19.5 2.6zm-128-8c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 12-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.1 7.4-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm-160 0c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 12-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm80 280c-60.6 0-134.5-38.3-143.8-93.3-2-11.8 9.3-21.6 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.5-3.7 22.6 6.2 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"]\n  };\n  var faGrinHearts = {\n    prefix: 'fas',\n    iconName: 'grin-hearts',\n    icon: [496, 512, [], \"f584\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM90.4 183.6c6.7-17.6 26.7-26.7 44.9-21.9l7.1 1.9 2-7.1c5-18.1 22.8-30.9 41.5-27.9 21.4 3.4 34.4 24.2 28.8 44.5L195.3 243c-1.2 4.5-5.9 7.2-10.5 6l-70.2-18.2c-20.4-5.4-31.9-27-24.2-47.2zM248 432c-60.6 0-134.5-38.3-143.8-93.3-2-11.8 9.2-21.5 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.4-3.6 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3zm133.4-201.3l-70.2 18.2c-4.5 1.2-9.2-1.5-10.5-6L281.3 173c-5.6-20.3 7.4-41.1 28.8-44.5 18.6-3 36.4 9.8 41.5 27.9l2 7.1 7.1-1.9c18.2-4.7 38.2 4.3 44.9 21.9 7.7 20.3-3.8 41.9-24.2 47.2z\"]\n  };\n  var faGrinSquint = {\n    prefix: 'fas',\n    iconName: 'grin-squint',\n    icon: [496, 512, [], \"f585\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm33.8 189.7l80-48c11.6-6.9 24 7.7 15.4 18L343.6 208l33.6 40.3c8.7 10.4-3.9 24.8-15.4 18l-80-48c-7.7-4.7-7.7-15.9 0-20.6zm-163-30c-8.6-10.3 3.8-24.9 15.4-18l80 48c7.8 4.7 7.8 15.9 0 20.6l-80 48c-11.5 6.8-24-7.6-15.4-18l33.6-40.3-33.6-40.3zM248 432c-60.6 0-134.5-38.3-143.8-93.3-2-11.9 9.4-21.6 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.5-3.7 22.6 6.2 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"]\n  };\n  var faGrinSquintTears = {\n    prefix: 'fas',\n    iconName: 'grin-squint-tears',\n    icon: [512, 512, [], \"f586\", \"M409.6 111.9c22.6-3.2 73.5-12 88.3-26.8 19.2-19.2 18.9-50.6-.7-70.2S446-5 426.9 14.2c-14.8 14.8-23.5 65.7-26.8 88.3-.8 5.5 3.9 10.2 9.5 9.4zM102.4 400.1c-22.6 3.2-73.5 12-88.3 26.8-19.1 19.1-18.8 50.6.8 70.2s51 19.9 70.2.7c14.8-14.8 23.5-65.7 26.8-88.3.8-5.5-3.9-10.2-9.5-9.4zm311.7-256.5c-33 3.9-48.6-25.1-45.7-45.7 3.4-24 7.4-42.1 11.5-56.5C285.1-13.4 161.8-.5 80.6 80.6-.5 161.7-13.4 285 41.4 379.9c14.4-4.1 32.4-8 56.5-11.5 33.2-3.9 48.6 25.2 45.7 45.7-3.4 24-7.4 42.1-11.5 56.5 94.8 54.8 218.1 41.9 299.3-39.2s94-204.4 39.2-299.3c-14.4 4.1-32.5 8-56.5 11.5zM255.7 106c3.3-13.2 22.4-11.5 23.6 1.8l4.8 52.3 52.3 4.8c13.4 1.2 14.9 20.3 1.8 23.6l-90.5 22.6c-8.9 2.2-16.7-5.9-14.5-14.5l22.5-90.6zm-90.9 230.3L160 284l-52.3-4.8c-13.4-1.2-14.9-20.3-1.8-23.6l90.5-22.6c8.8-2.2 16.7 5.8 14.5 14.5L188.3 338c-3.1 13.2-22.2 11.7-23.5-1.7zm215.7 44.2c-29.3 29.3-75.7 50.4-116.7 50.4-18.9 0-36.6-4.5-51-14.7-9.8-6.9-8.7-21.8 2-27.2 28.3-14.6 63.9-42.4 97.8-76.3s61.7-69.6 76.3-97.8c5.4-10.5 20.2-11.9 27.3-2 32.3 45.3 7.1 124.7-35.7 167.6z\"]\n  };\n  var faGrinStars = {\n    prefix: 'fas',\n    iconName: 'grin-stars',\n    icon: [496, 512, [], \"f587\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM94.6 168.9l34.9-5 15.5-31.6c2.9-5.8 11-5.8 13.9 0l15.5 31.6 34.9 5c6.2 1 8.9 8.6 4.3 13.2l-25.4 24.6 6 34.9c1 6.2-5.3 11-11 7.9L152 233.3l-31.3 16.3c-5.7 3.1-12-1.7-11-7.9l6-34.9-25.4-24.6c-4.6-4.7-1.9-12.3 4.3-13.3zM248 432c-60.6 0-134.5-38.3-143.8-93.3-2-11.8 9.3-21.5 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.5-3.7 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3zm157.7-249.9l-25.4 24.6 6 34.9c1 6.2-5.3 11-11 7.9L344 233.3l-31.3 16.3c-5.7 3.1-12-1.7-11-7.9l6-34.9-25.4-24.6c-4.5-4.6-1.9-12.2 4.3-13.2l34.9-5 15.5-31.6c2.9-5.8 11-5.8 13.9 0l15.5 31.6 34.9 5c6.3.9 9 8.5 4.4 13.1z\"]\n  };\n  var faGrinTears = {\n    prefix: 'fas',\n    iconName: 'grin-tears',\n    icon: [640, 512, [], \"f588\", \"M102.4 256.1c-22.6 3.2-73.5 12-88.3 26.8-19.1 19.1-18.8 50.6.8 70.2s51 19.9 70.2.7c14.8-14.8 23.5-65.7 26.8-88.3.8-5.5-3.9-10.2-9.5-9.4zm523.4 26.8c-14.8-14.8-65.7-23.5-88.3-26.8-5.5-.8-10.3 3.9-9.5 9.5 3.2 22.6 12 73.5 26.8 88.3 19.2 19.2 50.6 18.9 70.2-.7s20-51.2.8-70.3zm-129.4-12.8c-3.8-26.6 19.1-49.5 45.7-45.7 8.9 1.3 16.8 2.7 24.3 4.1C552.7 104.5 447.7 8 320 8S87.3 104.5 73.6 228.5c7.5-1.4 15.4-2.8 24.3-4.1 33.2-3.9 48.6 25.3 45.7 45.7-11.8 82.3-29.9 100.4-35.8 106.4-.9.9-2 1.6-3 2.5 42.7 74.6 123 125 215.2 125s172.5-50.4 215.2-125.1c-1-.9-2.1-1.5-3-2.5-5.9-5.9-24-24-35.8-106.3zM400 152c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 12-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm-160 0c23.8 0 52.7 29.3 56 71.4.7 8.6-10.8 12-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5 3.1-42.1 32-71.4 55.8-71.4zm80 280c-60.6 0-134.5-38.3-143.8-93.3-2-11.7 9.2-21.6 20.7-17.9C227.1 330.5 272 336 320 336s92.9-5.5 123.1-15.2c11.4-3.7 22.6 6.1 20.7 17.9-9.3 55-83.2 93.3-143.8 93.3z\"]\n  };\n  var faGrinTongue = {\n    prefix: 'fas',\n    iconName: 'grin-tongue',\n    icon: [496, 512, [], \"f589\", \"M248 8C111 8 0 119 0 256c0 106.3 67 196.7 161 232-5.6-12.2-9-25.7-9-40v-45.5c-24.7-16.2-43.5-38.1-47.8-63.8-2-11.8 9.3-21.5 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.4-3.6 22.6 6.1 20.7 17.9-4.3 25.7-23.1 47.6-47.8 63.8V448c0 14.3-3.4 27.8-9 40 94-35.3 161-125.7 161-232C496 119 385 8 248 8zm-80 232c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm160 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm-34.9 134.6c-14.4-6.5-31.1 2.2-34.6 17.6l-1.8 7.8c-2.1 9.2-15.2 9.2-17.3 0l-1.8-7.8c-3.5-15.4-20.2-24.1-34.6-17.6-.9.4.3-.2-18.9 9.4v63c0 35.2 28 64.5 63.1 64.9 35.7.5 64.9-28.4 64.9-64v-64c-19.5-9.6-18.2-8.9-19-9.3z\"]\n  };\n  var faGrinTongueSquint = {\n    prefix: 'fas',\n    iconName: 'grin-tongue-squint',\n    icon: [496, 512, [], \"f58a\", \"M293.1 374.6c-14.4-6.5-31.1 2.2-34.6 17.6l-1.8 7.8c-2.1 9.2-15.2 9.2-17.3 0l-1.8-7.8c-3.5-15.4-20.2-24.1-34.6-17.6-.9.4.3-.2-18.9 9.4v63c0 35.2 28 64.5 63.1 64.9 35.7.5 64.9-28.4 64.9-64v-64c-19.5-9.6-18.2-8.9-19-9.3zM248 8C111 8 0 119 0 256c0 106.3 67 196.7 161 232-5.6-12.2-9-25.7-9-40v-45.5c-24.7-16.2-43.5-38.1-47.8-63.8-2-11.8 9.2-21.5 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.4-3.7 22.6 6.1 20.7 17.9-4.3 25.7-23.1 47.6-47.8 63.8V448c0 14.3-3.4 27.8-9 40 94-35.3 161-125.7 161-232C496 119 385 8 248 8zm-33.8 210.3l-80 48c-11.5 6.8-24-7.6-15.4-18l33.6-40.3-33.6-40.3c-8.6-10.3 3.8-24.9 15.4-18l80 48c7.7 4.7 7.7 15.9 0 20.6zm163 30c8.7 10.4-3.9 24.8-15.4 18l-80-48c-7.8-4.7-7.8-15.9 0-20.6l80-48c11.7-6.9 23.9 7.7 15.4 18L343.6 208l33.6 40.3z\"]\n  };\n  var faGrinTongueWink = {\n    prefix: 'fas',\n    iconName: 'grin-tongue-wink',\n    icon: [496, 512, [], \"f58b\", \"M344 184c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zM248 8C111 8 0 119 0 256c0 106.3 67 196.7 161 232-5.6-12.2-9-25.7-9-40v-45.5c-24.7-16.2-43.5-38.1-47.8-63.8-2-11.8 9.3-21.5 20.7-17.9C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.5-3.7 22.6 6.1 20.7 17.9-4.3 25.7-23.1 47.6-47.8 63.8V448c0 14.3-3.4 27.8-9 40 94-35.3 161-125.7 161-232C496 119 385 8 248 8zm-56 225l-9.5-8.5c-14.8-13.2-46.2-13.2-61 0L112 233c-8.5 7.4-21.6.3-19.8-10.8 4-25.2 34.2-42.1 59.9-42.1S208 197 212 222.2c1.6 11.1-11.6 18.2-20 10.8zm152 39c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64zm-50.9 102.6c-14.4-6.5-31.1 2.2-34.6 17.6l-1.8 7.8c-2.1 9.2-15.2 9.2-17.3 0l-1.8-7.8c-3.5-15.4-20.2-24.1-34.6-17.6-.9.4.3-.2-18.9 9.4v63c0 35.2 28 64.5 63.1 64.9 35.7.5 64.9-28.4 64.9-64v-64c-19.5-9.6-18.2-8.9-19-9.3z\"]\n  };\n  var faGrinWink = {\n    prefix: 'fas',\n    iconName: 'grin-wink',\n    icon: [496, 512, [], \"f58c\", \"M0 256c0 137 111 248 248 248s248-111 248-248S385 8 248 8 0 119 0 256zm200-48c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32zm168 25l-9.5-8.5c-14.8-13.2-46.2-13.2-61 0L288 233c-8.3 7.4-21.6.4-19.8-10.8 4-25.2 34.2-42.1 59.9-42.1S384 197 388 222.2c1.6 11-11.5 18.2-20 10.8zm-243.1 87.8C155.1 330.5 200 336 248 336s92.9-5.5 123.1-15.2c11.3-3.7 22.6 6 20.7 17.9-9.2 55-83.2 93.3-143.8 93.3s-134.5-38.3-143.8-93.3c-2-11.9 9.3-21.6 20.7-17.9z\"]\n  };\n  var faGripHorizontal = {\n    prefix: 'fas',\n    iconName: 'grip-horizontal',\n    icon: [448, 512, [], \"f58d\", \"M96 288H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm160 0h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm160 0h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM96 96H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm160 0h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm160 0h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z\"]\n  };\n  var faGripLines = {\n    prefix: 'fas',\n    iconName: 'grip-lines',\n    icon: [512, 512, [], \"f7a4\", \"M496 288H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm0-128H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h480c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z\"]\n  };\n  var faGripLinesVertical = {\n    prefix: 'fas',\n    iconName: 'grip-lines-vertical',\n    icon: [256, 512, [], \"f7a5\", \"M96 496V16c0-8.8-7.2-16-16-16H48c-8.8 0-16 7.2-16 16v480c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16zm128 0V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v480c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16z\"]\n  };\n  var faGripVertical = {\n    prefix: 'fas',\n    iconName: 'grip-vertical',\n    icon: [320, 512, [], \"f58e\", \"M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z\"]\n  };\n  var faGuitar = {\n    prefix: 'fas',\n    iconName: 'guitar',\n    icon: [512, 512, [], \"f7a6\", \"M502.6 54.6L457.4 9.4c-12.5-12.5-32.8-12.5-45.3 0l-67.9 67.9c-12.5 12.5-12.5 32.8 0 45.3L290 176.7c-45.4-29-100.4-28.9-133.5 4.2-9.7 9.7-16.4 21.2-20.5 33.9-6.1 18.8-23.5 33.1-42.7 34.9-24 2.3-46.3 11.6-63.4 28.8C-16.3 324.6-8 407.6 48.2 463.8c56.2 56.2 139.2 64.4 185.3 18.3 17.2-17.1 26.5-39.4 28.8-63.5 1.8-19.1 16.1-36.6 34.9-42.7 12.7-4.1 24.2-10.8 33.9-20.5 33.1-33.1 33.1-88.1 4.2-133.5l54.2-54.2c12.5 12.5 32.8 12.5 45.3 0l67.9-67.9c12.4-12.4 12.4-32.7-.1-45.2zM208 352c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"]\n  };\n  var faHSquare = {\n    prefix: 'fas',\n    iconName: 'h-square',\n    icon: [448, 512, [], \"f0fd\", \"M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zm-112 48h-32c-8.837 0-16 7.163-16 16v80H160v-80c0-8.837-7.163-16-16-16h-32c-8.837 0-16 7.163-16 16v224c0 8.837 7.163 16 16 16h32c8.837 0 16-7.163 16-16v-80h128v80c0 8.837 7.163 16 16 16h32c8.837 0 16-7.163 16-16V144c0-8.837-7.163-16-16-16z\"]\n  };\n  var faHamburger = {\n    prefix: 'fas',\n    iconName: 'hamburger',\n    icon: [512, 512, [], \"f805\", \"M464 256H48a48 48 0 0 0 0 96h416a48 48 0 0 0 0-96zm16 128H32a16 16 0 0 0-16 16v16a64 64 0 0 0 64 64h352a64 64 0 0 0 64-64v-16a16 16 0 0 0-16-16zM58.64 224h394.72c34.57 0 54.62-43.9 34.82-75.88C448 83.2 359.55 32.1 256 32c-103.54.1-192 51.2-232.18 116.11C4 180.09 24.07 224 58.64 224zM384 112a16 16 0 1 1-16 16 16 16 0 0 1 16-16zM256 80a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm-128 32a16 16 0 1 1-16 16 16 16 0 0 1 16-16z\"]\n  };\n  var faHammer = {\n    prefix: 'fas',\n    iconName: 'hammer',\n    icon: [576, 512, [], \"f6e3\", \"M571.31 193.94l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31-28.9-28.9c5.63-21.31.36-44.9-16.35-61.61l-45.25-45.25c-62.48-62.48-163.79-62.48-226.28 0l90.51 45.25v18.75c0 16.97 6.74 33.25 18.75 45.25l49.14 49.14c16.71 16.71 40.3 21.98 61.61 16.35l28.9 28.9-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l90.51-90.51c6.23-6.24 6.23-16.37-.02-22.62zm-286.72-15.2c-3.7-3.7-6.84-7.79-9.85-11.95L19.64 404.96c-25.57 23.88-26.26 64.19-1.53 88.93s65.05 24.05 88.93-1.53l238.13-255.07c-3.96-2.91-7.9-5.87-11.44-9.41l-49.14-49.14z\"]\n  };\n  var faHamsa = {\n    prefix: 'fas',\n    iconName: 'hamsa',\n    icon: [512, 512, [], \"f665\", \"M509.34 307.25C504.28 295.56 492.75 288 480 288h-64V80c0-22-18-40-40-40s-40 18-40 40v134c0 5.52-4.48 10-10 10h-20c-5.52 0-10-4.48-10-10V40c0-22-18-40-40-40s-40 18-40 40v174c0 5.52-4.48 10-10 10h-20c-5.52 0-10-4.48-10-10V80c0-22-18-40-40-40S96 58 96 80v208H32c-12.75 0-24.28 7.56-29.34 19.25a31.966 31.966 0 0 0 5.94 34.58l102.69 110.03C146.97 490.08 199.69 512 256 512s109.03-21.92 144.72-60.14L503.4 341.83a31.966 31.966 0 0 0 5.94-34.58zM256 416c-53.02 0-96-64-96-64s42.98-64 96-64 96 64 96 64-42.98 64-96 64zm0-96c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32z\"]\n  };\n  var faHandHolding = {\n    prefix: 'fas',\n    iconName: 'hand-holding',\n    icon: [576, 512, [], \"f4bd\", \"M565.3 328.1c-11.8-10.7-30.2-10-42.6 0L430.3 402c-11.3 9.1-25.4 14-40 14H272c-8.8 0-16-7.2-16-16s7.2-16 16-16h78.3c15.9 0 30.7-10.9 33.3-26.6 3.3-20-12.1-37.4-31.6-37.4H192c-27 0-53.1 9.3-74.1 26.3L71.4 384H16c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16h356.8c14.5 0 28.6-4.9 40-14L564 377c15.2-12.1 16.4-35.3 1.3-48.9z\"]\n  };\n  var faHandHoldingHeart = {\n    prefix: 'fas',\n    iconName: 'hand-holding-heart',\n    icon: [576, 512, [], \"f4be\", \"M275.3 250.5c7 7.4 18.4 7.4 25.5 0l108.9-114.2c31.6-33.2 29.8-88.2-5.6-118.8-30.8-26.7-76.7-21.9-104.9 7.7L288 36.9l-11.1-11.6C248.7-4.4 202.8-9.2 172 17.5c-35.3 30.6-37.2 85.6-5.6 118.8l108.9 114.2zm290 77.6c-11.8-10.7-30.2-10-42.6 0L430.3 402c-11.3 9.1-25.4 14-40 14H272c-8.8 0-16-7.2-16-16s7.2-16 16-16h78.3c15.9 0 30.7-10.9 33.3-26.6 3.3-20-12.1-37.4-31.6-37.4H192c-27 0-53.1 9.3-74.1 26.3L71.4 384H16c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16h356.8c14.5 0 28.6-4.9 40-14L564 377c15.2-12.1 16.4-35.3 1.3-48.9z\"]\n  };\n  var faHandHoldingUsd = {\n    prefix: 'fas',\n    iconName: 'hand-holding-usd',\n    icon: [544, 512, [], \"f4c0\", \"M257.6 144.3l50 14.3c3.6 1 6.1 4.4 6.1 8.1 0 4.6-3.8 8.4-8.4 8.4h-32.8c-3.6 0-7.1-.8-10.3-2.2-4.8-2.2-10.4-1.7-14.1 2l-17.5 17.5c-5.3 5.3-4.7 14.3 1.5 18.4 9.5 6.3 20.3 10.1 31.8 11.5V240c0 8.8 7.2 16 16 16h16c8.8 0 16-7.2 16-16v-17.6c30.3-3.6 53.3-31 49.3-63-2.9-23-20.7-41.3-42.9-47.7l-50-14.3c-3.6-1-6.1-4.4-6.1-8.1 0-4.6 3.8-8.4 8.4-8.4h32.8c3.6 0 7.1.8 10.3 2.2 4.8 2.2 10.4 1.7 14.1-2l17.5-17.5c5.3-5.3 4.7-14.3-1.5-18.4-9.5-6.3-20.3-10.1-31.8-11.5V16c0-8.8-7.2-16-16-16h-16c-8.8 0-16 7.2-16 16v17.6c-30.3 3.6-53.3 31-49.3 63 2.9 23 20.7 41.3 42.9 47.7zm276.3 183.8c-11.2-10.7-28.5-10-40.3 0L406.4 402c-10.7 9.1-24 14-37.8 14H256.9c-8.3 0-15.1-7.2-15.1-16s6.8-16 15.1-16h73.9c15.1 0 29-10.9 31.4-26.6 3.1-20-11.5-37.4-29.8-37.4H181.3c-25.5 0-50.2 9.3-69.9 26.3L67.5 384H15.1C6.8 384 0 391.2 0 400v96c0 8.8 6.8 16 15.1 16H352c13.7 0 27-4.9 37.8-14l142.8-121c14.4-12.1 15.5-35.3 1.3-48.9z\"]\n  };\n  var faHandLizard = {\n    prefix: 'fas',\n    iconName: 'hand-lizard',\n    icon: [576, 512, [], \"f258\", \"M384 480h192V363.778a95.998 95.998 0 0 0-14.833-51.263L398.127 54.368A48 48 0 0 0 357.544 32H24C10.745 32 0 42.745 0 56v16c0 30.928 25.072 56 56 56h229.981c12.844 0 21.556 13.067 16.615 24.923l-21.41 51.385A32 32 0 0 1 251.648 224H128c-35.346 0-64 28.654-64 64v8c0 13.255 10.745 24 24 24h147.406a47.995 47.995 0 0 1 25.692 7.455l111.748 70.811A24.001 24.001 0 0 1 384 418.539V480z\"]\n  };\n  var faHandMiddleFinger = {\n    prefix: 'fas',\n    iconName: 'hand-middle-finger',\n    icon: [512, 512, [], \"f806\", \"M479.93 317.12a37.33 37.33 0 0 0-28.28-36.19L416 272v-49.59c0-11.44-9.69-21.29-23.15-23.54l-38.4-6.4C336.63 189.5 320 200.86 320 216v32a8 8 0 0 1-16 0V50c0-26.28-20.25-49.2-46.52-50A48 48 0 0 0 208 48v200a8 8 0 0 1-16 0v-32c0-15.15-16.63-26.51-34.45-23.54l-30.68 5.12c-18 3-30.87 16.12-30.87 31.38V376a8 8 0 0 1-16 0v-76l-27.36 15A37.34 37.34 0 0 0 32 348.4v73.47a37.31 37.31 0 0 0 10.93 26.39l30.93 30.93A112 112 0 0 0 153.05 512h215A112 112 0 0 0 480 400z\"]\n  };\n  var faHandPaper = {\n    prefix: 'fas',\n    iconName: 'hand-paper',\n    icon: [448, 512, [], \"f256\", \"M408.781 128.007C386.356 127.578 368 146.36 368 168.79V256h-8V79.79c0-22.43-18.356-41.212-40.781-40.783C297.488 39.423 280 57.169 280 79v177h-8V40.79C272 18.36 253.644-.422 231.219.007 209.488.423 192 18.169 192 40v216h-8V80.79c0-22.43-18.356-41.212-40.781-40.783C121.488 40.423 104 58.169 104 80v235.992l-31.648-43.519c-12.993-17.866-38.009-21.817-55.877-8.823-17.865 12.994-21.815 38.01-8.822 55.877l125.601 172.705A48 48 0 0 0 172.073 512h197.59c22.274 0 41.622-15.324 46.724-37.006l26.508-112.66a192.011 192.011 0 0 0 5.104-43.975V168c.001-21.831-17.487-39.577-39.218-39.993z\"]\n  };\n  var faHandPeace = {\n    prefix: 'fas',\n    iconName: 'hand-peace',\n    icon: [448, 512, [], \"f25b\", \"M408 216c-22.092 0-40 17.909-40 40h-8v-32c0-22.091-17.908-40-40-40s-40 17.909-40 40v32h-8V48c0-26.51-21.49-48-48-48s-48 21.49-48 48v208h-13.572L92.688 78.449C82.994 53.774 55.134 41.63 30.461 51.324 5.787 61.017-6.356 88.877 3.337 113.551l74.765 190.342-31.09 24.872c-15.381 12.306-19.515 33.978-9.741 51.081l64 112A39.998 39.998 0 0 0 136 512h240c18.562 0 34.686-12.77 38.937-30.838l32-136A39.97 39.97 0 0 0 448 336v-80c0-22.091-17.908-40-40-40z\"]\n  };\n  var faHandPointDown = {\n    prefix: 'fas',\n    iconName: 'hand-point-down',\n    icon: [384, 512, [], \"f0a7\", \"M91.826 467.2V317.966c-8.248 5.841-16.558 10.57-24.918 14.153C35.098 345.752-.014 322.222 0 288c.008-18.616 10.897-32.203 29.092-40 28.286-12.122 64.329-78.648 77.323-107.534 7.956-17.857 25.479-28.453 43.845-28.464l.001-.002h171.526c11.812 0 21.897 8.596 23.703 20.269 7.25 46.837 38.483 61.76 38.315 123.731-.007 2.724.195 13.254.195 16 0 50.654-22.122 81.574-71.263 72.6-9.297 18.597-39.486 30.738-62.315 16.45-21.177 24.645-53.896 22.639-70.944 6.299V467.2c0 24.15-20.201 44.8-43.826 44.8-23.283 0-43.826-21.35-43.826-44.8zM112 72V24c0-13.255 10.745-24 24-24h192c13.255 0 24 10.745 24 24v48c0 13.255-10.745 24-24 24H136c-13.255 0-24-10.745-24-24zm212-24c0-11.046-8.954-20-20-20s-20 8.954-20 20 8.954 20 20 20 20-8.954 20-20z\"]\n  };\n  var faHandPointLeft = {\n    prefix: 'fas',\n    iconName: 'hand-point-left',\n    icon: [512, 512, [], \"f0a5\", \"M44.8 155.826h149.234c-5.841-8.248-10.57-16.558-14.153-24.918C166.248 99.098 189.778 63.986 224 64c18.616.008 32.203 10.897 40 29.092 12.122 28.286 78.648 64.329 107.534 77.323 17.857 7.956 28.453 25.479 28.464 43.845l.002.001v171.526c0 11.812-8.596 21.897-20.269 23.703-46.837 7.25-61.76 38.483-123.731 38.315-2.724-.007-13.254.195-16 .195-50.654 0-81.574-22.122-72.6-71.263-18.597-9.297-30.738-39.486-16.45-62.315-24.645-21.177-22.639-53.896-6.299-70.944H44.8c-24.15 0-44.8-20.201-44.8-43.826 0-23.283 21.35-43.826 44.8-43.826zM440 176h48c13.255 0 24 10.745 24 24v192c0 13.255-10.745 24-24 24h-48c-13.255 0-24-10.745-24-24V200c0-13.255 10.745-24 24-24zm24 212c11.046 0 20-8.954 20-20s-8.954-20-20-20-20 8.954-20 20 8.954 20 20 20z\"]\n  };\n  var faHandPointRight = {\n    prefix: 'fas',\n    iconName: 'hand-point-right',\n    icon: [512, 512, [], \"f0a4\", \"M512 199.652c0 23.625-20.65 43.826-44.8 43.826h-99.851c16.34 17.048 18.346 49.766-6.299 70.944 14.288 22.829 2.147 53.017-16.45 62.315C353.574 425.878 322.654 448 272 448c-2.746 0-13.276-.203-16-.195-61.971.168-76.894-31.065-123.731-38.315C120.596 407.683 112 397.599 112 385.786V214.261l.002-.001c.011-18.366 10.607-35.889 28.464-43.845 28.886-12.994 95.413-49.038 107.534-77.323 7.797-18.194 21.384-29.084 40-29.092 34.222-.014 57.752 35.098 44.119 66.908-3.583 8.359-8.312 16.67-14.153 24.918H467.2c23.45 0 44.8 20.543 44.8 43.826zM96 200v192c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V200c0-13.255 10.745-24 24-24h48c13.255 0 24 10.745 24 24zM68 368c0-11.046-8.954-20-20-20s-20 8.954-20 20 8.954 20 20 20 20-8.954 20-20z\"]\n  };\n  var faHandPointUp = {\n    prefix: 'fas',\n    iconName: 'hand-point-up',\n    icon: [384, 512, [], \"f0a6\", \"M135.652 0c23.625 0 43.826 20.65 43.826 44.8v99.851c17.048-16.34 49.766-18.346 70.944 6.299 22.829-14.288 53.017-2.147 62.315 16.45C361.878 158.426 384 189.346 384 240c0 2.746-.203 13.276-.195 16 .168 61.971-31.065 76.894-38.315 123.731C343.683 391.404 333.599 400 321.786 400H150.261l-.001-.002c-18.366-.011-35.889-10.607-43.845-28.464C93.421 342.648 57.377 276.122 29.092 264 10.897 256.203.008 242.616 0 224c-.014-34.222 35.098-57.752 66.908-44.119 8.359 3.583 16.67 8.312 24.918 14.153V44.8c0-23.45 20.543-44.8 43.826-44.8zM136 416h192c13.255 0 24 10.745 24 24v48c0 13.255-10.745 24-24 24H136c-13.255 0-24-10.745-24-24v-48c0-13.255 10.745-24 24-24zm168 28c-11.046 0-20 8.954-20 20s8.954 20 20 20 20-8.954 20-20-8.954-20-20-20z\"]\n  };\n  var faHandPointer = {\n    prefix: 'fas',\n    iconName: 'hand-pointer',\n    icon: [448, 512, [], \"f25a\", \"M448 240v96c0 3.084-.356 6.159-1.063 9.162l-32 136C410.686 499.23 394.562 512 376 512H168a40.004 40.004 0 0 1-32.35-16.473l-127.997-176c-12.993-17.866-9.043-42.883 8.822-55.876 17.867-12.994 42.884-9.043 55.877 8.823L104 315.992V40c0-22.091 17.908-40 40-40s40 17.909 40 40v200h8v-40c0-22.091 17.908-40 40-40s40 17.909 40 40v40h8v-24c0-22.091 17.908-40 40-40s40 17.909 40 40v24h8c0-22.091 17.908-40 40-40s40 17.909 40 40zm-256 80h-8v96h8v-96zm88 0h-8v96h8v-96zm88 0h-8v96h8v-96z\"]\n  };\n  var faHandRock = {\n    prefix: 'fas',\n    iconName: 'hand-rock',\n    icon: [512, 512, [], \"f255\", \"M464.8 80c-26.9-.4-48.8 21.2-48.8 48h-8V96.8c0-26.3-20.9-48.3-47.2-48.8-26.9-.4-48.8 21.2-48.8 48v32h-8V80.8c0-26.3-20.9-48.3-47.2-48.8-26.9-.4-48.8 21.2-48.8 48v48h-8V96.8c0-26.3-20.9-48.3-47.2-48.8-26.9-.4-48.8 21.2-48.8 48v136l-8-7.1v-48.1c0-26.3-20.9-48.3-47.2-48.8C21.9 127.6 0 149.2 0 176v66.4c0 27.4 11.7 53.5 32.2 71.8l111.7 99.3c10.2 9.1 16.1 22.2 16.1 35.9v6.7c0 13.3 10.7 24 24 24h240c13.3 0 24-10.7 24-24v-2.9c0-12.8 2.6-25.5 7.5-37.3l49-116.3c5-11.8 7.5-24.5 7.5-37.3V128.8c0-26.3-20.9-48.4-47.2-48.8z\"]\n  };\n  var faHandScissors = {\n    prefix: 'fas',\n    iconName: 'hand-scissors',\n    icon: [512, 512, [], \"f257\", \"M216 440c0-22.092 17.909-40 40-40v-8h-32c-22.091 0-40-17.908-40-40s17.909-40 40-40h32v-8H48c-26.51 0-48-21.49-48-48s21.49-48 48-48h208v-13.572l-177.551-69.74c-24.674-9.694-36.818-37.555-27.125-62.228 9.693-24.674 37.554-36.817 62.228-27.124l190.342 74.765 24.872-31.09c12.306-15.381 33.978-19.515 51.081-9.741l112 64A40.002 40.002 0 0 1 512 168v240c0 18.562-12.77 34.686-30.838 38.937l-136 32A39.982 39.982 0 0 1 336 480h-80c-22.091 0-40-17.908-40-40z\"]\n  };\n  var faHandSpock = {\n    prefix: 'fas',\n    iconName: 'hand-spock',\n    icon: [512, 512, [], \"f259\", \"M481.3 97.1c-21.5-5.1-43.1 8.2-48.2 29.6L402.3 256h-11.1l43.6-174.3c5.4-21.4-7.7-43.1-29.1-48.5s-43.1 7.7-48.5 29.1L308.8 256h-15.1L242 31.1c-5-21.6-26.4-35-48-30.1-21.5 4.9-35 26.4-30 47.9l47.6 207h-9.8L167 103.1c-4.9-21.5-26.3-35-47.9-30.1-21.5 4.9-35 26.3-30.1 47.9l39 171.6v79.4l-60.6-57c-16.1-15.1-41.4-14.4-56.5 1.7s-14.4 41.4 1.7 56.5L146.3 499c8.9 8.4 20.7 13 32.9 13h216.7c21.3 0 40-14 46-34.4l26.2-88.3c2.6-8.9 4-18 4-27.3v-42c0-7.5.9-15 2.6-22.2L511 145.3c5-21.5-8.3-43.1-29.7-48.2z\"]\n  };\n  var faHands = {\n    prefix: 'fas',\n    iconName: 'hands',\n    icon: [640, 512, [], \"f4c2\", \"M204.8 230.4c-10.6-14.1-30.7-17-44.8-6.4-14.1 10.6-17 30.7-6.4 44.8l38.1 50.8c4.8 6.4 4.1 15.3-1.5 20.9l-12.8 12.8c-6.7 6.7-17.6 6.2-23.6-1.1L64 244.4V96c0-17.7-14.3-32-32-32S0 78.3 0 96v218.4c0 10.9 3.7 21.5 10.5 30l104.1 134.3c5 6.5 8.4 13.9 10.4 21.7 1.8 6.9 8.1 11.6 15.3 11.6H272c8.8 0 16-7.2 16-16V384c0-27.7-9-54.6-25.6-76.8l-57.6-76.8zM608 64c-17.7 0-32 14.3-32 32v148.4l-89.8 107.8c-6 7.2-17 7.7-23.6 1.1l-12.8-12.8c-5.6-5.6-6.3-14.5-1.5-20.9l38.1-50.8c10.6-14.1 7.7-34.2-6.4-44.8-14.1-10.6-34.2-7.7-44.8 6.4l-57.6 76.8C361 329.4 352 356.3 352 384v112c0 8.8 7.2 16 16 16h131.7c7.1 0 13.5-4.7 15.3-11.6 2-7.8 5.4-15.2 10.4-21.7l104.1-134.3c6.8-8.5 10.5-19.1 10.5-30V96c0-17.7-14.3-32-32-32z\"]\n  };\n  var faHandsHelping = {\n    prefix: 'fas',\n    iconName: 'hands-helping',\n    icon: [640, 512, [], \"f4c4\", \"M488 192H336v56c0 39.7-32.3 72-72 72s-72-32.3-72-72V126.4l-64.9 39C107.8 176.9 96 197.8 96 220.2v47.3l-80 46.2C.7 322.5-4.6 342.1 4.3 357.4l80 138.6c8.8 15.3 28.4 20.5 43.7 11.7L231.4 448H368c35.3 0 64-28.7 64-64h16c17.7 0 32-14.3 32-32v-64h8c13.3 0 24-10.7 24-24v-48c0-13.3-10.7-24-24-24zm147.7-37.4L555.7 16C546.9.7 527.3-4.5 512 4.3L408.6 64H306.4c-12 0-23.7 3.4-33.9 9.7L239 94.6c-9.4 5.8-15 16.1-15 27.1V248c0 22.1 17.9 40 40 40s40-17.9 40-40v-88h184c30.9 0 56 25.1 56 56v28.5l80-46.2c15.3-8.9 20.5-28.4 11.7-43.7z\"]\n  };\n  var faHandshake = {\n    prefix: 'fas',\n    iconName: 'handshake',\n    icon: [640, 512, [], \"f2b5\", \"M434.7 64h-85.9c-8 0-15.7 3-21.6 8.4l-98.3 90c-.1.1-.2.3-.3.4-16.6 15.6-16.3 40.5-2.1 56 12.7 13.9 39.4 17.6 56.1 2.7.1-.1.3-.1.4-.2l79.9-73.2c6.5-5.9 16.7-5.5 22.6 1 6 6.5 5.5 16.6-1 22.6l-26.1 23.9L504 313.8c2.9 2.4 5.5 5 7.9 7.7V128l-54.6-54.6c-5.9-6-14.1-9.4-22.6-9.4zM544 128.2v223.9c0 17.7 14.3 32 32 32h64V128.2h-96zm48 223.9c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zM0 384h64c17.7 0 32-14.3 32-32V128.2H0V384zm48-63.9c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16c0-8.9 7.2-16 16-16zm435.9 18.6L334.6 217.5l-30 27.5c-29.7 27.1-75.2 24.5-101.7-4.4-26.9-29.4-24.8-74.9 4.4-101.7L289.1 64h-83.8c-8.5 0-16.6 3.4-22.6 9.4L128 128v223.9h18.3l90.5 81.9c27.4 22.3 67.7 18.1 90-9.3l.2-.2 17.9 15.5c15.9 13 39.4 10.5 52.3-5.4l31.4-38.6 5.4 4.4c13.7 11.1 33.9 9.1 45-4.7l9.5-11.7c11.2-13.8 9.1-33.9-4.6-45.1z\"]\n  };\n  var faHanukiah = {\n    prefix: 'fas',\n    iconName: 'hanukiah',\n    icon: [640, 512, [], \"f6e6\", \"M232 160c-4.42 0-8 3.58-8 8v120h32V168c0-4.42-3.58-8-8-8h-16zm-64 0c-4.42 0-8 3.58-8 8v120h32V168c0-4.42-3.58-8-8-8h-16zm224 0c-4.42 0-8 3.58-8 8v120h32V168c0-4.42-3.58-8-8-8h-16zm64 0c-4.42 0-8 3.58-8 8v120h32V168c0-4.42-3.58-8-8-8h-16zm88 8c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8v120h32V168zm-440-8c-4.42 0-8 3.58-8 8v120h32V168c0-4.42-3.58-8-8-8h-16zm520 0h-32c-8.84 0-16 7.16-16 16v112c0 17.67-14.33 32-32 32H352V128c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v192H96c-17.67 0-32-14.33-32-32V176c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v112c0 53.02 42.98 96 96 96h192v64H112c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16H352v-64h192c53.02 0 96-42.98 96-96V176c0-8.84-7.16-16-16-16zm-16-32c13.25 0 24-11.94 24-26.67S608 48 608 48s-24 38.61-24 53.33S594.75 128 608 128zm-576 0c13.25 0 24-11.94 24-26.67S32 48 32 48 8 86.61 8 101.33 18.75 128 32 128zm288-48c13.25 0 24-11.94 24-26.67S320 0 320 0s-24 38.61-24 53.33S306.75 80 320 80zm-208 48c13.25 0 24-11.94 24-26.67S112 48 112 48s-24 38.61-24 53.33S98.75 128 112 128zm64 0c13.25 0 24-11.94 24-26.67S176 48 176 48s-24 38.61-24 53.33S162.75 128 176 128zm64 0c13.25 0 24-11.94 24-26.67S240 48 240 48s-24 38.61-24 53.33S226.75 128 240 128zm160 0c13.25 0 24-11.94 24-26.67S400 48 400 48s-24 38.61-24 53.33S386.75 128 400 128zm64 0c13.25 0 24-11.94 24-26.67S464 48 464 48s-24 38.61-24 53.33S450.75 128 464 128zm64 0c13.25 0 24-11.94 24-26.67S528 48 528 48s-24 38.61-24 53.33S514.75 128 528 128z\"]\n  };\n  var faHardHat = {\n    prefix: 'fas',\n    iconName: 'hard-hat',\n    icon: [512, 512, [], \"f807\", \"M480 288c0-80.25-49.28-148.92-119.19-177.62L320 192V80a16 16 0 0 0-16-16h-96a16 16 0 0 0-16 16v112l-40.81-81.62C81.28 139.08 32 207.75 32 288v64h448zm16 96H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\"]\n  };\n  var faHashtag = {\n    prefix: 'fas',\n    iconName: 'hashtag',\n    icon: [448, 512, [], \"f292\", \"M440.667 182.109l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l14.623-81.891C377.123 38.754 371.468 32 363.997 32h-40.632a12 12 0 0 0-11.813 9.891L296.175 128H197.54l14.623-81.891C213.477 38.754 207.822 32 200.35 32h-40.632a12 12 0 0 0-11.813 9.891L132.528 128H53.432a12 12 0 0 0-11.813 9.891l-7.143 40C33.163 185.246 38.818 192 46.289 192h74.81L98.242 320H19.146a12 12 0 0 0-11.813 9.891l-7.143 40C-1.123 377.246 4.532 384 12.003 384h74.81L72.19 465.891C70.877 473.246 76.532 480 84.003 480h40.632a12 12 0 0 0 11.813-9.891L151.826 384h98.634l-14.623 81.891C234.523 473.246 240.178 480 247.65 480h40.632a12 12 0 0 0 11.813-9.891L315.472 384h79.096a12 12 0 0 0 11.813-9.891l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l22.857-128h79.096a12 12 0 0 0 11.813-9.891zM261.889 320h-98.634l22.857-128h98.634l-22.857 128z\"]\n  };\n  var faHatWizard = {\n    prefix: 'fas',\n    iconName: 'hat-wizard',\n    icon: [512, 512, [], \"f6e8\", \"M496 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h480c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm-304-64l-64-32 64-32 32-64 32 64 64 32-64 32-16 32h208l-86.41-201.63a63.955 63.955 0 0 1-1.89-45.45L416 0 228.42 107.19a127.989 127.989 0 0 0-53.46 59.15L64 416h144l-16-32zm64-224l16-32 16 32 32 16-32 16-16 32-16-32-32-16 32-16z\"]\n  };\n  var faHaykal = {\n    prefix: 'fas',\n    iconName: 'haykal',\n    icon: [512, 512, [], \"f666\", \"M496.25 202.52l-110-15.44 41.82-104.34c6.67-16.64-11.6-32.18-26.59-22.63L307.44 120 273.35 12.82C270.64 4.27 263.32 0 256 0c-7.32 0-14.64 4.27-17.35 12.82l-34.09 107.19-94.04-59.89c-14.99-9.55-33.25 5.99-26.59 22.63l41.82 104.34-110 15.43c-17.54 2.46-21.68 26.27-6.03 34.67l98.16 52.66-74.48 83.54c-10.92 12.25-1.72 30.93 13.29 30.93 1.31 0 2.67-.14 4.07-.45l108.57-23.65-4.11 112.55c-.43 11.65 8.87 19.22 18.41 19.22 5.15 0 10.39-2.21 14.2-7.18l68.18-88.9 68.18 88.9c3.81 4.97 9.04 7.18 14.2 7.18 9.54 0 18.84-7.57 18.41-19.22l-4.11-112.55 108.57 23.65c17.36 3.76 29.21-17.2 17.35-30.49l-74.48-83.54 98.16-52.66c15.64-8.39 11.5-32.2-6.04-34.66zM338.51 311.68l-51.89-11.3 1.97 53.79L256 311.68l-32.59 42.49 1.96-53.79-51.89 11.3 35.6-39.93-46.92-25.17 52.57-7.38-19.99-49.87 44.95 28.62L256 166.72l16.29 51.23 44.95-28.62-19.99 49.87 52.57 7.38-46.92 25.17 35.61 39.93z\"]\n  };\n  var faHdd = {\n    prefix: 'fas',\n    iconName: 'hdd',\n    icon: [576, 512, [], \"f0a0\", \"M576 304v96c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48v-96c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48zm-48-80a79.557 79.557 0 0 1 30.777 6.165L462.25 85.374A48.003 48.003 0 0 0 422.311 64H153.689a48 48 0 0 0-39.938 21.374L17.223 230.165A79.557 79.557 0 0 1 48 224h480zm-48 96c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm-96 0c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z\"]\n  };\n  var faHeading = {\n    prefix: 'fas',\n    iconName: 'heading',\n    icon: [512, 512, [], \"f1dc\", \"M496 80V48c0-8.837-7.163-16-16-16H320c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h37.621v128H154.379V96H192c8.837 0 16-7.163 16-16V48c0-8.837-7.163-16-16-16H32c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h37.275v320H32c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h160c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16h-37.621V288H357.62v128H320c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h160c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16h-37.275V96H480c8.837 0 16-7.163 16-16z\"]\n  };\n  var faHeadphones = {\n    prefix: 'fas',\n    iconName: 'headphones',\n    icon: [512, 512, [], \"f025\", \"M256 32C114.52 32 0 146.496 0 288v48a32 32 0 0 0 17.689 28.622l14.383 7.191C34.083 431.903 83.421 480 144 480h24c13.255 0 24-10.745 24-24V280c0-13.255-10.745-24-24-24h-24c-31.342 0-59.671 12.879-80 33.627V288c0-105.869 86.131-192 192-192s192 86.131 192 192v1.627C427.671 268.879 399.342 256 368 256h-24c-13.255 0-24 10.745-24 24v176c0 13.255 10.745 24 24 24h24c60.579 0 109.917-48.098 111.928-108.187l14.382-7.191A32 32 0 0 0 512 336v-48c0-141.479-114.496-256-256-256z\"]\n  };\n  var faHeadphonesAlt = {\n    prefix: 'fas',\n    iconName: 'headphones-alt',\n    icon: [512, 512, [], \"f58f\", \"M160 288h-16c-35.35 0-64 28.7-64 64.12v63.76c0 35.41 28.65 64.12 64 64.12h16c17.67 0 32-14.36 32-32.06V320.06c0-17.71-14.33-32.06-32-32.06zm208 0h-16c-17.67 0-32 14.35-32 32.06v127.88c0 17.7 14.33 32.06 32 32.06h16c35.35 0 64-28.71 64-64.12v-63.76c0-35.41-28.65-64.12-64-64.12zM256 32C112.91 32 4.57 151.13 0 288v112c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16V288c0-114.67 93.33-207.8 208-207.82 114.67.02 208 93.15 208 207.82v112c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16V288C507.43 151.13 399.09 32 256 32z\"]\n  };\n  var faHeadset = {\n    prefix: 'fas',\n    iconName: 'headset',\n    icon: [512, 512, [], \"f590\", \"M192 208c0-17.67-14.33-32-32-32h-16c-35.35 0-64 28.65-64 64v48c0 35.35 28.65 64 64 64h16c17.67 0 32-14.33 32-32V208zm176 144c35.35 0 64-28.65 64-64v-48c0-35.35-28.65-64-64-64h-16c-17.67 0-32 14.33-32 32v112c0 17.67 14.33 32 32 32h16zM256 0C113.18 0 4.58 118.83 0 256v16c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-16c0-114.69 93.31-208 208-208s208 93.31 208 208h-.12c.08 2.43.12 165.72.12 165.72 0 23.35-18.93 42.28-42.28 42.28H320c0-26.51-21.49-48-48-48h-32c-26.51 0-48 21.49-48 48s21.49 48 48 48h181.72c49.86 0 90.28-40.42 90.28-90.28V256C507.42 118.83 398.82 0 256 0z\"]\n  };\n  var faHeart = {\n    prefix: 'fas',\n    iconName: 'heart',\n    icon: [512, 512, [], \"f004\", \"M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z\"]\n  };\n  var faHeartBroken = {\n    prefix: 'fas',\n    iconName: 'heart-broken',\n    icon: [512, 512, [], \"f7a9\", \"M473.7 73.8l-2.4-2.5c-46-47-118-51.7-169.6-14.8L336 159.9l-96 64 48 128-144-144 96-64-28.6-86.5C159.7 19.6 87 24 40.7 71.4l-2.4 2.4C-10.4 123.6-12.5 202.9 31 256l212.1 218.6c7.1 7.3 18.6 7.3 25.7 0L481 255.9c43.5-53 41.4-132.3-7.3-182.1z\"]\n  };\n  var faHeartbeat = {\n    prefix: 'fas',\n    iconName: 'heartbeat',\n    icon: [512, 512, [], \"f21e\", \"M320.2 243.8l-49.7 99.4c-6 12.1-23.4 11.7-28.9-.6l-56.9-126.3-30 71.7H60.6l182.5 186.5c7.1 7.3 18.6 7.3 25.7 0L451.4 288H342.3l-22.1-44.2zM473.7 73.9l-2.4-2.5c-51.5-52.6-135.8-52.6-187.4 0L256 100l-27.9-28.5c-51.5-52.7-135.9-52.7-187.4 0l-2.4 2.4C-10.4 123.7-12.5 203 31 256h102.4l35.9-86.2c5.4-12.9 23.6-13.2 29.4-.4l58.2 129.3 49-97.9c5.9-11.8 22.7-11.8 28.6 0l27.6 55.2H481c43.5-53 41.4-132.3-7.3-182.1z\"]\n  };\n  var faHelicopter = {\n    prefix: 'fas',\n    iconName: 'helicopter',\n    icon: [640, 512, [], \"f533\", \"M304 384h272c17.67 0 32-14.33 32-32 0-123.71-100.29-224-224-224V64h176c8.84 0 16-7.16 16-16V16c0-8.84-7.16-16-16-16H144c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h176v64H112L68.8 70.4C65.78 66.37 61.03 64 56 64H16.01C5.6 64-2.04 73.78.49 83.88L32 192l160 64 86.4 115.2A31.992 31.992 0 0 0 304 384zm112-188.49C478.55 208.3 528.03 257.44 540.79 320H416V195.51zm219.37 263.3l-22.15-22.2c-6.25-6.26-16.24-6.1-22.64.01-7.09 6.77-13.84 11.25-24.64 11.25H240c-8.84 0-16 7.18-16 16.03v32.06c0 8.85 7.16 16.03 16 16.03h325.94c14.88 0 35.3-.47 68.45-29.52 7.02-6.14 7.57-17.05.98-23.66z\"]\n  };\n  var faHighlighter = {\n    prefix: 'fas',\n    iconName: 'highlighter',\n    icon: [544, 512, [], \"f591\", \"M0 479.98L99.92 512l35.45-35.45-67.04-67.04L0 479.98zm124.61-240.01a36.592 36.592 0 0 0-10.79 38.1l13.05 42.83-50.93 50.94 96.23 96.23 50.86-50.86 42.74 13.08c13.73 4.2 28.65-.01 38.15-10.78l35.55-41.64-173.34-173.34-41.52 35.44zm403.31-160.7l-63.2-63.2c-20.49-20.49-53.38-21.52-75.12-2.35L190.55 183.68l169.77 169.78L530.27 154.4c19.18-21.74 18.15-54.63-2.35-75.13z\"]\n  };\n  var faHiking = {\n    prefix: 'fas',\n    iconName: 'hiking',\n    icon: [384, 512, [], \"f6ec\", \"M80.95 472.23c-4.28 17.16 6.14 34.53 23.28 38.81 2.61.66 5.22.95 7.8.95 14.33 0 27.37-9.7 31.02-24.23l25.24-100.97-52.78-52.78-34.56 138.22zm14.89-196.12L137 117c2.19-8.42-3.14-16.95-11.92-19.06-43.88-10.52-88.35 15.07-99.32 57.17L.49 253.24c-2.19 8.42 3.14 16.95 11.92 19.06l63.56 15.25c8.79 2.1 17.68-3.02 19.87-11.44zM368 160h-16c-8.84 0-16 7.16-16 16v16h-34.75l-46.78-46.78C243.38 134.11 228.61 128 212.91 128c-27.02 0-50.47 18.3-57.03 44.52l-26.92 107.72a32.012 32.012 0 0 0 8.42 30.39L224 397.25V480c0 17.67 14.33 32 32 32s32-14.33 32-32v-82.75c0-17.09-6.66-33.16-18.75-45.25l-46.82-46.82c.15-.5.49-.89.62-1.41l19.89-79.57 22.43 22.43c6 6 14.14 9.38 22.62 9.38h48v240c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16V176c.01-8.84-7.15-16-15.99-16zM240 96c26.51 0 48-21.49 48-48S266.51 0 240 0s-48 21.49-48 48 21.49 48 48 48z\"]\n  };\n  var faHippo = {\n    prefix: 'fas',\n    iconName: 'hippo',\n    icon: [640, 512, [], \"f6ed\", \"M581.12 96.2c-27.67-.15-52.5 17.58-76.6 26.62C489.98 88.27 455.83 64 416 64c-11.28 0-21.95 2.3-32 5.88V56c0-13.26-10.75-24-24-24h-16c-13.25 0-24 10.74-24 24v48.98C286.01 79.58 241.24 64 192 64 85.96 64 0 135.64 0 224v240c0 8.84 7.16 16 16 16h64c8.84 0 16-7.16 16-16v-70.79C128.35 407.57 166.72 416 208 416s79.65-8.43 112-22.79V464c0 8.84 7.16 16 16 16h64c8.84 0 16-7.16 16-16V288h128v32c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-32c17.67 0 32-14.33 32-32v-92.02c0-34.09-24.79-67.59-58.88-67.78zM448 176c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16z\"]\n  };\n  var faHistory = {\n    prefix: 'fas',\n    iconName: 'history',\n    icon: [512, 512, [], \"f1da\", \"M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z\"]\n  };\n  var faHockeyPuck = {\n    prefix: 'fas',\n    iconName: 'hockey-puck',\n    icon: [512, 512, [], \"f453\", \"M0 160c0-53 114.6-96 256-96s256 43 256 96-114.6 96-256 96S0 213 0 160zm0 82.2V352c0 53 114.6 96 256 96s256-43 256-96V242.2c-113.4 82.3-398.5 82.4-512 0z\"]\n  };\n  var faHollyBerry = {\n    prefix: 'fas',\n    iconName: 'holly-berry',\n    icon: [448, 512, [], \"f7aa\", \"M144 192c26.5 0 48-21.5 48-48s-21.5-48-48-48-48 21.5-48 48 21.5 48 48 48zm112-48c0 26.5 21.5 48 48 48s48-21.5 48-48-21.5-48-48-48-48 21.5-48 48zm-32-48c26.5 0 48-21.5 48-48S250.5 0 224 0s-48 21.5-48 48 21.5 48 48 48zm-16.2 139.1c.1-12.4-13.1-20.1-23.8-13.7-34.3 20.3-71.4 32.7-108.7 36.2-9.7.9-15.6 11.3-11.6 20.2 6.2 13.9 11.1 28.6 14.7 43.8 3.6 15.2-5.3 30.6-20.2 35.1-14.9 4.5-30.1 7.6-45.3 9.1-9.7 1-15.7 11.3-11.7 20.2 15 32.8 22.9 69.5 23 107.7.1 14.4 15.2 23.1 27.6 16 33.2-19 68.9-30.5 104.8-33.9 9.7-.9 15.6-11.3 11.6-20.2-6.2-13.9-11.1-28.6-14.7-43.8-3.6-15.2 5.3-30.6 20.2-35.1 14.9-4.5 30.1-7.6 45.3-9.1 9.7-1 15.7-11.3 11.7-20.2-15.5-34.2-23.3-72.5-22.9-112.3zM435 365.6c-15.2-1.6-30.3-4.7-45.3-9.1-14.9-4.5-23.8-19.9-20.2-35.1 3.6-15.2 8.5-29.8 14.7-43.8 4-8.9-1.9-19.3-11.6-20.2-37.3-3.5-74.4-15.9-108.7-36.2-10.7-6.3-23.9 1.4-23.8 13.7 0 1.6-.2 3.2-.2 4.9.2 33.3 7 65.7 19.9 94 5.7 12.4 5.2 26.6-.6 38.9 4.9 1.2 9.9 2.2 14.8 3.7 14.9 4.5 23.8 19.9 20.2 35.1-3.6 15.2-8.5 29.8-14.7 43.8-4 8.9 1.9 19.3 11.6 20.2 35.9 3.4 71.6 14.9 104.8 33.9 12.5 7.1 27.6-1.6 27.6-16 .2-38.2 8-75 23-107.7 4.3-8.7-1.8-19.1-11.5-20.1z\"]\n  };\n  var faHome = {\n    prefix: 'fas',\n    iconName: 'home',\n    icon: [576, 512, [], \"f015\", \"M280.37 148.26L96 300.11V464a16 16 0 0 0 16 16l112.06-.29a16 16 0 0 0 15.92-16V368a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16v95.64a16 16 0 0 0 16 16.05L464 480a16 16 0 0 0 16-16V300L295.67 148.26a12.19 12.19 0 0 0-15.3 0zM571.6 251.47L488 182.56V44.05a12 12 0 0 0-12-12h-56a12 12 0 0 0-12 12v72.61L318.47 43a48 48 0 0 0-61 0L4.34 251.47a12 12 0 0 0-1.6 16.9l25.5 31A12 12 0 0 0 45.15 301l235.22-193.74a12.19 12.19 0 0 1 15.3 0L530.9 301a12 12 0 0 0 16.9-1.6l25.5-31a12 12 0 0 0-1.7-16.93z\"]\n  };\n  var faHorse = {\n    prefix: 'fas',\n    iconName: 'horse',\n    icon: [576, 512, [], \"f6f0\", \"M575.92 76.6c-.01-8.13-3.02-15.87-8.58-21.8-3.78-4.03-8.58-9.12-13.69-14.5 11.06-6.84 19.5-17.49 22.18-30.66C576.85 4.68 572.96 0 567.9 0H447.92c-70.69 0-128 57.31-128 128H160c-28.84 0-54.4 12.98-72 33.11V160c-48.53 0-88 39.47-88 88v56c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-56c0-13.22 6.87-24.39 16.78-31.68-.21 2.58-.78 5.05-.78 7.68 0 27.64 11.84 52.36 30.54 69.88l-25.72 68.6a63.945 63.945 0 0 0-2.16 37.99l24.85 99.41A15.982 15.982 0 0 0 107.02 512h65.96c10.41 0 18.05-9.78 15.52-19.88l-26.31-105.26 23.84-63.59L320 345.6V496c0 8.84 7.16 16 16 16h64c8.84 0 16-7.16 16-16V318.22c19.74-20.19 32-47.75 32-78.22 0-.22-.07-.42-.08-.64V136.89l16 7.11 18.9 37.7c7.45 14.87 25.05 21.55 40.49 15.37l32.55-13.02a31.997 31.997 0 0 0 20.12-29.74l-.06-77.71zm-64 19.4c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16z\"]\n  };\n  var faHorseHead = {\n    prefix: 'fas',\n    iconName: 'horse-head',\n    icon: [512, 512, [], \"f7ab\", \"M509.8 332.5l-69.9-164.3c-14.9-41.2-50.4-71-93-79.2 18-10.6 46.3-35.9 34.2-82.3-1.3-5-7.1-7.9-12-6.1L166.9 76.3C35.9 123.4 0 238.9 0 398.8V480c0 17.7 14.3 32 32 32h236.2c23.8 0 39.3-25 28.6-46.3L256 384v-.7c-45.6-3.5-84.6-30.7-104.3-69.6-1.6-3.1-.9-6.9 1.6-9.3l12.1-12.1c3.9-3.9 10.6-2.7 12.9 2.4 14.8 33.7 48.2 57.4 87.4 57.4 17.2 0 33-5.1 46.8-13.2l46 63.9c6 8.4 15.7 13.3 26 13.3h50.3c8.5 0 16.6-3.4 22.6-9.4l45.3-39.8c8.9-9.1 11.7-22.6 7.1-34.4zM328 224c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24z\"]\n  };\n  var faHospital = {\n    prefix: 'fas',\n    iconName: 'hospital',\n    icon: [448, 512, [], \"f0f8\", \"M448 492v20H0v-20c0-6.627 5.373-12 12-12h20V120c0-13.255 10.745-24 24-24h88V24c0-13.255 10.745-24 24-24h112c13.255 0 24 10.745 24 24v72h88c13.255 0 24 10.745 24 24v360h20c6.627 0 12 5.373 12 12zM308 192h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12zm-168 64h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12zm104 128h-40c-6.627 0-12 5.373-12 12v84h64v-84c0-6.627-5.373-12-12-12zm64-96h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12zm-116 12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40zM182 96h26v26a6 6 0 0 0 6 6h20a6 6 0 0 0 6-6V96h26a6 6 0 0 0 6-6V70a6 6 0 0 0-6-6h-26V38a6 6 0 0 0-6-6h-20a6 6 0 0 0-6 6v26h-26a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6z\"]\n  };\n  var faHospitalAlt = {\n    prefix: 'fas',\n    iconName: 'hospital-alt',\n    icon: [576, 512, [], \"f47d\", \"M544 96H416V32c0-17.7-14.3-32-32-32H192c-17.7 0-32 14.3-32 32v64H32c-17.7 0-32 14.3-32 32v368c0 8.8 7.2 16 16 16h544c8.8 0 16-7.2 16-16V128c0-17.7-14.3-32-32-32zM160 436c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm160 128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm16-170c0 3.3-2.7 6-6 6h-26v26c0 3.3-2.7 6-6 6h-20c-3.3 0-6-2.7-6-6v-26h-26c-3.3 0-6-2.7-6-6v-20c0-3.3 2.7-6 6-6h26V86c0-3.3 2.7-6 6-6h20c3.3 0 6 2.7 6 6v26h26c3.3 0 6 2.7 6 6v20zm144 298c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-128c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40z\"]\n  };\n  var faHospitalSymbol = {\n    prefix: 'fas',\n    iconName: 'hospital-symbol',\n    icon: [512, 512, [], \"f47e\", \"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zm112 376c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-88h-96v88c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V136c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v88h96v-88c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v240z\"]\n  };\n  var faHotTub = {\n    prefix: 'fas',\n    iconName: 'hot-tub',\n    icon: [512, 512, [], \"f593\", \"M414.21 177.65c1.02 8.21 7.75 14.35 15.75 14.35h16.12c9.51 0 17.08-8.57 16-18.35-4.34-39.11-22.4-74.53-50.13-97.16-17.37-14.17-28.82-36.75-31.98-62.15C378.96 6.14 372.22 0 364.23 0h-16.12c-9.51 0-17.09 8.57-16 18.35 4.34 39.11 22.4 74.53 50.13 97.16 17.36 14.17 28.82 36.75 31.97 62.14zm-108 0c1.02 8.21 7.75 14.35 15.75 14.35h16.12c9.51 0 17.08-8.57 16-18.35-4.34-39.11-22.4-74.53-50.13-97.16-17.37-14.17-28.82-36.75-31.98-62.15C270.96 6.14 264.22 0 256.23 0h-16.12c-9.51 0-17.09 8.57-16 18.35 4.34 39.11 22.4 74.53 50.13 97.16 17.36 14.17 28.82 36.75 31.97 62.14zM480 256H256l-110.93-83.2a63.99 63.99 0 0 0-38.4-12.8H64c-35.35 0-64 28.65-64 64v224c0 35.35 28.65 64 64 64h384c35.35 0 64-28.65 64-64V288c0-17.67-14.33-32-32-32zM128 440c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8V328c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v112zm96 0c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8V328c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v112zm96 0c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8V328c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v112zm96 0c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8V328c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v112zM64 128c35.35 0 64-28.65 64-64S99.35 0 64 0 0 28.65 0 64s28.65 64 64 64z\"]\n  };\n  var faHotdog = {\n    prefix: 'fas',\n    iconName: 'hotdog',\n    icon: [512, 512, [], \"f80f\", \"M488.56 23.44a80 80 0 0 0-113.12 0l-352 352a80 80 0 1 0 113.12 113.12l352-352a80 80 0 0 0 0-113.12zm-49.93 95.19c-19.6 19.59-37.52 22.67-51.93 25.14C373.76 146 364.4 147.6 352 160s-14 21.76-16.23 34.71c-2.48 14.4-5.55 32.33-25.15 51.92s-37.52 22.67-51.92 25.15C245.75 274 236.4 275.6 224 288s-14 21.75-16.23 34.7c-2.47 14.4-5.54 32.33-25.14 51.92s-37.53 22.68-51.93 25.15C117.76 402 108.4 403.6 96 416a16 16 0 0 1-22.63-22.63c19.6-19.59 37.52-22.67 51.92-25.14 13-2.22 22.3-3.82 34.71-16.23s14-21.75 16.22-34.7c2.48-14.4 5.55-32.33 25.15-51.92s37.52-22.67 51.92-25.14c13-2.22 22.3-3.83 34.7-16.23s14-21.76 16.24-34.71c2.47-14.4 5.54-32.33 25.14-51.92s37.52-22.68 51.92-25.15C394.24 110 403.59 108.41 416 96a16 16 0 0 1 22.63 22.63zM31.44 322.18L322.18 31.44l-11.54-11.55c-25-25-63.85-26.66-86.79-3.72L16.17 223.85c-22.94 22.94-21.27 61.79 3.72 86.78zm449.12-132.36L189.82 480.56l11.54 11.55c25 25 63.85 26.66 86.79 3.72l207.68-207.68c22.94-22.94 21.27-61.79-3.72-86.79z\"]\n  };\n  var faHotel = {\n    prefix: 'fas',\n    iconName: 'hotel',\n    icon: [576, 512, [], \"f594\", \"M560 64c8.84 0 16-7.16 16-16V16c0-8.84-7.16-16-16-16H16C7.16 0 0 7.16 0 16v32c0 8.84 7.16 16 16 16h15.98v384H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h240v-80c0-8.8 7.2-16 16-16h32c8.8 0 16 7.2 16 16v80h240c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16h-16V64h16zm-304 44.8c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4zm0 96c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4zm-128-96c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4zM179.2 256h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4c0 6.4-6.4 12.8-12.8 12.8zM192 384c0-53.02 42.98-96 96-96s96 42.98 96 96H192zm256-140.8c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-96c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4z\"]\n  };\n  var faHourglass = {\n    prefix: 'fas',\n    iconName: 'hourglass',\n    icon: [384, 512, [], \"f254\", \"M360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64z\"]\n  };\n  var faHourglassEnd = {\n    prefix: 'fas',\n    iconName: 'hourglass-end',\n    icon: [384, 512, [], \"f253\", \"M360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64zM192 208c-57.787 0-104-66.518-104-144h208c0 77.945-46.51 144-104 144z\"]\n  };\n  var faHourglassHalf = {\n    prefix: 'fas',\n    iconName: 'hourglass-half',\n    icon: [384, 512, [], \"f252\", \"M360 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24zm-75.078 384H99.08c17.059-46.797 52.096-80 92.92-80 40.821 0 75.862 33.196 92.922 80zm.019-256H99.078C91.988 108.548 88 86.748 88 64h208c0 22.805-3.987 44.587-11.059 64z\"]\n  };\n  var faHourglassStart = {\n    prefix: 'fas',\n    iconName: 'hourglass-start',\n    icon: [384, 512, [], \"f251\", \"M360 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24zm-64 448H88c0-77.458 46.204-144 104-144 57.786 0 104 66.517 104 144z\"]\n  };\n  var faHouseDamage = {\n    prefix: 'fas',\n    iconName: 'house-damage',\n    icon: [576, 512, [], \"f6f1\", \"M288 114.96L69.47 307.71c-1.62 1.46-3.69 2.14-5.47 3.35V496c0 8.84 7.16 16 16 16h149.23L192 439.19l104.11-64-60.16-119.22L384 392.75l-104.11 64L319.81 512H496c8.84 0 16-7.16 16-16V311.1c-1.7-1.16-3.72-1.82-5.26-3.2L288 114.96zm282.69 121.32L512 184.45V48c0-8.84-7.16-16-16-16h-64c-8.84 0-16 7.16-16 16v51.69L314.75 10.31C307.12 3.45 297.56.01 288 0s-19.1 3.41-26.7 10.27L5.31 236.28c-6.57 5.91-7.12 16.02-1.21 22.6l21.4 23.82c5.9 6.57 16.02 7.12 22.6 1.21L277.42 81.63c6.05-5.33 15.12-5.33 21.17 0L527.91 283.9c6.57 5.9 16.69 5.36 22.6-1.21l21.4-23.82c5.9-6.57 5.36-16.69-1.22-22.59z\"]\n  };\n  var faHryvnia = {\n    prefix: 'fas',\n    iconName: 'hryvnia',\n    icon: [384, 512, [], \"f6f2\", \"M368 240c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16h-41.86c13.41-28.63 13.74-63.33-4.13-94.05C303.34 49.84 267.1 32 229.96 32h-78.82c-24.32 0-47.86 8.53-66.54 24.09L72.83 65.9c-10.18 8.49-11.56 23.62-3.07 33.8l20.49 24.59c8.49 10.19 23.62 11.56 33.81 3.07l11.73-9.78c4.32-3.6 9.77-5.57 15.39-5.57h83.62c11.69 0 21.2 9.52 21.2 21.2 0 5.91-2.48 11.58-6.81 15.58L219.7 176H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h134.37l-34.67 32H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h41.86c-13.41 28.63-13.74 63.33 4.13 94.05C80.66 462.15 116.9 480 154.04 480h78.82c24.32 0 47.86-8.53 66.54-24.09l11.77-9.81c10.18-8.49 11.56-23.62 3.07-33.8l-20.49-24.59c-8.49-10.19-23.62-11.56-33.81-3.07l-11.75 9.8a23.992 23.992 0 0 1-15.36 5.56H149.2c-11.69 0-21.2-9.52-21.2-21.2 0-5.91 2.48-11.58 6.81-15.58L164.3 336H368c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16H233.63l34.67-32H368z\"]\n  };\n  var faICursor = {\n    prefix: 'fas',\n    iconName: 'i-cursor',\n    icon: [256, 512, [], \"f246\", \"M256 52.048V12.065C256 5.496 250.726.148 244.158.066 211.621-.344 166.469.011 128 37.959 90.266.736 46.979-.114 11.913.114 5.318.157 0 5.519 0 12.114v39.645c0 6.687 5.458 12.078 12.145 11.998C38.111 63.447 96 67.243 96 112.182V224H60c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h36v112c0 44.932-56.075 48.031-83.95 47.959C5.404 447.942 0 453.306 0 459.952v39.983c0 6.569 5.274 11.917 11.842 11.999 32.537.409 77.689.054 116.158-37.894 37.734 37.223 81.021 38.073 116.087 37.845 6.595-.043 11.913-5.405 11.913-12V460.24c0-6.687-5.458-12.078-12.145-11.998C217.889 448.553 160 444.939 160 400V288h36c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-36V112.182c0-44.932 56.075-48.213 83.95-48.142 6.646.018 12.05-5.346 12.05-11.992z\"]\n  };\n  var faIceCream = {\n    prefix: 'fas',\n    iconName: 'ice-cream',\n    icon: [448, 512, [], \"f810\", \"M368 160h-.94a144 144 0 1 0-286.12 0H80a48 48 0 0 0 0 96h288a48 48 0 0 0 0-96zM195.38 493.69a31.52 31.52 0 0 0 57.24 0L352 288H96z\"]\n  };\n  var faIcicles = {\n    prefix: 'fas',\n    iconName: 'icicles',\n    icon: [512, 512, [], \"f7ad\", \"M511.4 37.9C515.1 18.2 500 0 480 0H32C10.6 0-4.8 20.7 1.4 41.2l87.1 273.4c2.5 7.2 12.7 7.2 15.1 0L140 190.5l44.2 187.3c1.9 8.3 13.7 8.3 15.6 0l46.5-196.9 34.1 133.4c2.3 7.6 13 7.6 15.3 0l45.8-172.5 66.7 363.8c1.7 8.6 14 8.6 15.7 0l87.5-467.7z\"]\n  };\n  var faIdBadge = {\n    prefix: 'fas',\n    iconName: 'id-badge',\n    icon: [384, 512, [], \"f2c1\", \"M336 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM144 32h96c8.8 0 16 7.2 16 16s-7.2 16-16 16h-96c-8.8 0-16-7.2-16-16s7.2-16 16-16zm48 128c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H102.4C90 416 80 407.4 80 396.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2z\"]\n  };\n  var faIdCard = {\n    prefix: 'fas',\n    iconName: 'id-card',\n    icon: [576, 512, [], \"f2c2\", \"M528 32H48C21.5 32 0 53.5 0 80v16h576V80c0-26.5-21.5-48-48-48zM0 432c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V128H0v304zm352-232c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16zm0 64c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16zm0 64c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H360c-4.4 0-8-3.6-8-8v-16zM176 192c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zM67.1 396.2C75.5 370.5 99.6 352 128 352h8.2c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h8.2c28.4 0 52.5 18.5 60.9 44.2 3.2 9.9-5.2 19.8-15.6 19.8H82.7c-10.4 0-18.8-10-15.6-19.8z\"]\n  };\n  var faIdCardAlt = {\n    prefix: 'fas',\n    iconName: 'id-card-alt',\n    icon: [576, 512, [], \"f47f\", \"M528 64H384v96H192V64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM288 224c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm93.3 224H194.7c-10.4 0-18.8-10-15.6-19.8 8.3-25.6 32.4-44.2 60.9-44.2h8.2c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h8.2c28.4 0 52.5 18.5 60.9 44.2 3.2 9.8-5.2 19.8-15.6 19.8zM352 32c0-17.7-14.3-32-32-32h-64c-17.7 0-32 14.3-32 32v96h128V32z\"]\n  };\n  var faIgloo = {\n    prefix: 'fas',\n    iconName: 'igloo',\n    icon: [576, 512, [], \"f7ae\", \"M320 33.9c-10.5-1.2-21.2-1.9-32-1.9-99.8 0-187.8 50.8-239.4 128H320V33.9zM96 192H30.3C11.1 230.6 0 274 0 320h96V192zM352 39.4V160h175.4C487.2 99.9 424.8 55.9 352 39.4zM480 320h96c0-46-11.1-89.4-30.3-128H480v128zm-64 64v96h128c17.7 0 32-14.3 32-32v-96H411.5c2.6 10.3 4.5 20.9 4.5 32zm32-192H128v128h49.8c22.2-38.1 63-64 110.2-64s88 25.9 110.2 64H448V192zM0 448c0 17.7 14.3 32 32 32h128v-96c0-11.1 1.9-21.7 4.5-32H0v96zm288-160c-53 0-96 43-96 96v96h192v-96c0-53-43-96-96-96z\"]\n  };\n  var faImage = {\n    prefix: 'fas',\n    iconName: 'image',\n    icon: [512, 512, [], \"f03e\", \"M464 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM112 120c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zM64 384h384V272l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L208 320l-55.515-55.515c-4.686-4.686-12.284-4.686-16.971 0L64 336v48z\"]\n  };\n  var faImages = {\n    prefix: 'fas',\n    iconName: 'images',\n    icon: [576, 512, [], \"f302\", \"M480 416v16c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V176c0-26.51 21.49-48 48-48h16v208c0 44.112 35.888 80 80 80h336zm96-80V80c0-26.51-21.49-48-48-48H144c-26.51 0-48 21.49-48 48v256c0 26.51 21.49 48 48 48h384c26.51 0 48-21.49 48-48zM256 128c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-96 144l55.515-55.515c4.686-4.686 12.284-4.686 16.971 0L272 256l135.515-135.515c4.686-4.686 12.284-4.686 16.971 0L512 208v112H160v-48z\"]\n  };\n  var faInbox = {\n    prefix: 'fas',\n    iconName: 'inbox',\n    icon: [576, 512, [], \"f01c\", \"M567.938 243.908L462.25 85.374A48.003 48.003 0 0 0 422.311 64H153.689a48 48 0 0 0-39.938 21.374L8.062 243.908A47.994 47.994 0 0 0 0 270.533V400c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V270.533a47.994 47.994 0 0 0-8.062-26.625zM162.252 128h251.497l85.333 128H376l-32 64H232l-32-64H76.918l85.334-128z\"]\n  };\n  var faIndent = {\n    prefix: 'fas',\n    iconName: 'indent',\n    icon: [448, 512, [], \"f03c\", \"M0 84V44c0-8.837 7.163-16 16-16h416c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16zm176 144h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H176c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM16 484h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm160-128h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H176c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm-52.687-111.313l-96-95.984C17.266 138.652 0 145.776 0 160.016v191.975c0 14.329 17.325 21.304 27.313 11.313l96-95.992c6.249-6.247 6.249-16.377 0-22.625z\"]\n  };\n  var faIndustry = {\n    prefix: 'fas',\n    iconName: 'industry',\n    icon: [512, 512, [], \"f275\", \"M475.115 163.781L336 252.309v-68.28c0-18.916-20.931-30.399-36.885-20.248L160 252.309V56c0-13.255-10.745-24-24-24H24C10.745 32 0 42.745 0 56v400c0 13.255 10.745 24 24 24h464c13.255 0 24-10.745 24-24V184.029c0-18.917-20.931-30.399-36.885-20.248z\"]\n  };\n  var faInfinity = {\n    prefix: 'fas',\n    iconName: 'infinity',\n    icon: [640, 512, [], \"f534\", \"M471.1 96C405 96 353.3 137.3 320 174.6 286.7 137.3 235 96 168.9 96 75.8 96 0 167.8 0 256s75.8 160 168.9 160c66.1 0 117.8-41.3 151.1-78.6 33.3 37.3 85 78.6 151.1 78.6 93.1 0 168.9-71.8 168.9-160S564.2 96 471.1 96zM168.9 320c-40.2 0-72.9-28.7-72.9-64s32.7-64 72.9-64c38.2 0 73.4 36.1 94 64-20.4 27.6-55.9 64-94 64zm302.2 0c-38.2 0-73.4-36.1-94-64 20.4-27.6 55.9-64 94-64 40.2 0 72.9 28.7 72.9 64s-32.7 64-72.9 64z\"]\n  };\n  var faInfo = {\n    prefix: 'fas',\n    iconName: 'info',\n    icon: [192, 512, [], \"f129\", \"M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z\"]\n  };\n  var faInfoCircle = {\n    prefix: 'fas',\n    iconName: 'info-circle',\n    icon: [512, 512, [], \"f05a\", \"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z\"]\n  };\n  var faItalic = {\n    prefix: 'fas',\n    iconName: 'italic',\n    icon: [320, 512, [], \"f033\", \"M204.758 416h-33.849l62.092-320h40.725a16 16 0 0 0 15.704-12.937l6.242-32C297.599 41.184 290.034 32 279.968 32H120.235a16 16 0 0 0-15.704 12.937l-6.242 32C96.362 86.816 103.927 96 113.993 96h33.846l-62.09 320H46.278a16 16 0 0 0-15.704 12.935l-6.245 32C22.402 470.815 29.967 480 40.034 480h158.479a16 16 0 0 0 15.704-12.935l6.245-32c1.927-9.88-5.638-19.065-15.704-19.065z\"]\n  };\n  var faJedi = {\n    prefix: 'fas',\n    iconName: 'jedi',\n    icon: [544, 512, [], \"f669\", \"M479.99 352l58.88-58.87c3.29-16.8 5.13-34.12 5.13-51.86 0-5.81-.68-11.51-1.05-17.27H496l41.25-41.24c-14.5-64.79-52.43-123.05-107.91-162.27-2.77-1.96-5.97-2.99-9.25-2.99-5.37 0-10.41 2.71-13.49 7.24-3.05 4.49-3.64 9.99-1.61 15.09 6.55 16.46 9.86 33.73 9.86 51.31 0 45.12-21.03 86.57-57.69 113.73-4.02 2.98-6.46 7.5-6.7 12.4-.24 4.92 1.76 9.66 5.49 13.03 32.93 29.75 47.35 73.51 38.57 117.07-9.74 48.35-48.84 87.1-97.31 96.5l-2.5-65.34L321.88 397c2.98 2.06 7.39 1.69 10.02-.8a8.002 8.002 0 0 0 1.34-9.92l-20.11-33.73 42.07-8.72c3.7-.75 6.38-4.05 6.38-7.83 0-3.77-2.69-7.06-6.38-7.83l-42.07-8.73 20.13-33.77c1.92-3.23 1.34-7.31-1.38-9.91-2.7-2.55-6.97-2.89-10-.8l-30.39 20.67L279.96 7.7a7.964 7.964 0 0 0-8-7.7c-4.33 0-7.84 3.38-8 7.67l-11.52 287.97-30.39-20.66c-3.14-2.12-7.27-1.83-10 .78-2.72 2.59-3.3 6.67-1.36 9.94l20.11 33.73-42.07 8.73c-3.7.75-6.38 4.05-6.38 7.83s2.67 7.08 6.38 7.83l42.07 8.72-20.13 33.77c-1.92 3.23-1.34 7.33 1.39 9.94 2.59 2.45 7.03 2.75 10 .75l27.16-18.48-2.5 65.26c-56.94-11.64-99.89-61.89-99.89-121.92 0-35.08 14.62-67.6 41.17-91.58 3.72-3.36 5.72-8.11 5.48-13.01-.24-4.9-2.68-9.41-6.69-12.38-36.67-27.16-57.71-68.62-57.71-113.74 0-17.56 3.31-34.81 9.84-51.26 2.02-5.09 1.43-10.59-1.62-15.09-3.08-4.54-8.13-7.25-13.51-7.25-3.3 0-6.5 1.04-9.27 3-55.87 39.52-93.6 97.37-107.97 162.07L47.93 224H.72c-.63 9.92-.97 19.91-.5 29.99.62 13.43 2.54 26.53 5.11 39.41l58.6 58.6H24.02c41.25 90.23 131.13 154.94 235.1 159.71 4.3.2 8.59.29 12.85.29 110.34 0 205.35-65.83 247.98-160h-39.96z\"]\n  };\n  var faJoint = {\n    prefix: 'fas',\n    iconName: 'joint',\n    icon: [640, 512, [], \"f595\", \"M444.34 181.1c22.38 15.68 35.66 41.16 35.66 68.59V280c0 4.42 3.58 8 8 8h48c4.42 0 8-3.58 8-8v-30.31c0-43.24-21.01-83.41-56.34-108.06C463.85 125.02 448 99.34 448 70.31V8c0-4.42-3.58-8-8-8h-48c-4.42 0-8 3.58-8 8v66.4c0 43.69 24.56 81.63 60.34 106.7zM194.97 358.98C126.03 370.07 59.69 394.69 0 432c83.65 52.28 180.3 80 278.94 80h88.57L254.79 380.49c-14.74-17.2-37.45-25.11-59.82-21.51zM553.28 87.09c-5.67-3.8-9.28-9.96-9.28-16.78V8c0-4.42-3.58-8-8-8h-48c-4.42 0-8 3.58-8 8v62.31c0 22.02 10.17 43.41 28.64 55.39C550.79 153.04 576 199.54 576 249.69V280c0 4.42 3.58 8 8 8h48c4.42 0 8-3.58 8-8v-30.31c0-65.44-32.41-126.19-86.72-162.6zM360.89 352.05c-34.4.06-86.81.15-88.21.17l117.8 137.43A63.987 63.987 0 0 0 439.07 512h88.45L409.57 374.4a63.955 63.955 0 0 0-48.68-22.35zM616 352H432l117.99 137.65A63.987 63.987 0 0 0 598.58 512H616c13.25 0 24-10.75 24-24V376c0-13.26-10.75-24-24-24z\"]\n  };\n  var faJournalWhills = {\n    prefix: 'fas',\n    iconName: 'journal-whills',\n    icon: [448, 512, [], \"f66a\", \"M448 358.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16c0-6.4-3.2-12.8-9.6-19.2-3.2-16-3.2-60.8 0-73.6 6.4-3.2 9.6-9.6 9.6-19.2zM133.08 144.39l21.26 21.26c1.56 1.56 3.61 2.34 5.66 2.34s4.09-.78 5.66-2.34c3.12-3.12 3.12-8.19 0-11.31l-26.42-26.42c10-20.9 26.24-37.97 46.37-49.26C179.62 88.4 176 99.74 176 112c0 19.96 9.33 37.57 23.66 49.31C190.01 171.37 184 184.96 184 200c0 26.94 19.04 49.4 44.38 54.76l1.36-32.71-10.37 7.04c-.69.45-1.47.69-2.25.69-1 0-1.98-.38-2.75-1.09a4.006 4.006 0 0 1-.69-4.95l8.54-14.31-17.91-3.72c-1.86-.39-3.19-2.03-3.19-3.92s1.33-3.53 3.19-3.92l17.91-3.72-8.54-14.31c-.95-1.61-.67-3.67.69-4.95 1.36-1.3 3.44-1.44 5-.41l12.01 8.16L236 71.83c.09-2.14 1.86-3.83 4-3.83s3.91 1.69 4 3.83l4.68 112.29 14.2-9.65a4.067 4.067 0 0 1 5 .41 4.006 4.006 0 0 1 .69 4.95l-8.54 14.31 17.91 3.72c1.86.39 3.19 2.03 3.19 3.92s-1.33 3.53-3.19 3.92l-17.91 3.72 8.54 14.31c.95 1.61.67 3.67-.69 4.95-.77.72-1.77 1.09-2.75 1.09-.78 0-1.56-.23-2.25-.69l-12.68-8.62 1.43 34.28C276.96 249.4 296 226.94 296 200c0-15.04-6.01-28.63-15.66-38.69C294.67 149.57 304 131.96 304 112c0-12.26-3.62-23.6-9.6-33.33 20.13 11.28 36.37 28.36 46.37 49.26l-26.42 26.42c-3.12 3.12-3.12 8.19 0 11.31 1.56 1.56 3.61 2.34 5.66 2.34s4.09-.78 5.66-2.34l21.26-21.26c2.97 10.08 5.07 20.55 5.07 31.6 0 .52-.14.99-.15 1.51l-37.11 32.47a7.975 7.975 0 0 0-.75 11.28 7.97 7.97 0 0 0 6.02 2.73c1.88 0 3.75-.66 5.27-1.98l23.59-20.64C337.32 250.96 293.09 288 240 288s-97.32-37.04-108.86-86.62l23.59 20.64A7.957 7.957 0 0 0 160 224c2.22 0 4.44-.92 6.02-2.73 2.92-3.33 2.58-8.38-.75-11.28l-37.11-32.47c-.01-.52-.15-.99-.15-1.51-.01-11.06 2.09-21.53 5.07-31.62zM380.8 448H96c-19.2 0-32-12.8-32-32s16-32 32-32h284.8v64z\"]\n  };\n  var faKaaba = {\n    prefix: 'fas',\n    iconName: 'kaaba',\n    icon: [576, 512, [], \"f66b\", \"M554.12 83.51L318.36 4.93a95.962 95.962 0 0 0-60.71 0L21.88 83.51A32.006 32.006 0 0 0 0 113.87v49.01l265.02-79.51c15.03-4.5 30.92-4.5 45.98 0l265 79.51v-49.01c0-13.77-8.81-26-21.88-30.36zm-279.9 30.52L0 196.3v228.38c0 15 10.42 27.98 25.06 31.24l242.12 53.8a95.937 95.937 0 0 0 41.65 0l242.12-53.8c14.64-3.25 25.06-16.24 25.06-31.24V196.29l-274.2-82.26c-9.04-2.72-18.59-2.72-27.59 0zM128 230.11c0 3.61-2.41 6.77-5.89 7.72l-80 21.82C37.02 261.03 32 257.2 32 251.93v-16.58c0-3.61 2.41-6.77 5.89-7.72l80-21.82c5.09-1.39 10.11 2.44 10.11 7.72v16.58zm144-39.28c0 3.61-2.41 6.77-5.89 7.72l-96 26.18c-5.09 1.39-10.11-2.44-10.11-7.72v-16.58c0-3.61 2.41-6.77 5.89-7.72l96-26.18c5.09-1.39 10.11 2.44 10.11 7.72v16.58zm176 22.7c0-5.28 5.02-9.11 10.11-7.72l80 21.82c3.48.95 5.89 4.11 5.89 7.72v16.58c0 5.28-5.02 9.11-10.11 7.72l-80-21.82a7.997 7.997 0 0 1-5.89-7.72v-16.58zm-144-39.27c0-5.28 5.02-9.11 10.11-7.72l96 26.18c3.48.95 5.89 4.11 5.89 7.72v16.58c0 5.28-5.02 9.11-10.11 7.72l-96-26.18a7.997 7.997 0 0 1-5.89-7.72v-16.58z\"]\n  };\n  var faKey = {\n    prefix: 'fas',\n    iconName: 'key',\n    icon: [512, 512, [], \"f084\", \"M512 176.001C512 273.203 433.202 352 336 352c-11.22 0-22.19-1.062-32.827-3.069l-24.012 27.014A23.999 23.999 0 0 1 261.223 384H224v40c0 13.255-10.745 24-24 24h-40v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24v-78.059c0-6.365 2.529-12.47 7.029-16.971l161.802-161.802C163.108 213.814 160 195.271 160 176 160 78.798 238.797.001 335.999 0 433.488-.001 512 78.511 512 176.001zM336 128c0 26.51 21.49 48 48 48s48-21.49 48-48-21.49-48-48-48-48 21.49-48 48z\"]\n  };\n  var faKeyboard = {\n    prefix: 'fas',\n    iconName: 'keyboard',\n    icon: [576, 512, [], \"f11c\", \"M528 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM128 180v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm288 0v-40c0-6.627-5.373-12-12-12H172c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h232c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z\"]\n  };\n  var faKhanda = {\n    prefix: 'fas',\n    iconName: 'khanda',\n    icon: [512, 512, [], \"f66d\", \"M415.81 66c-6.37-3.5-14.37-2.33-19.36 3.02a15.974 15.974 0 0 0-1.91 19.52c16.49 26.16 25.2 56.39 25.2 87.41-.19 53.25-26.77 102.69-71.27 132.41l-76.63 53.35v-20.1l44.05-36.09c3.92-4.2 5-10.09 2.81-15.28L310.85 273c33.84-19.26 56.94-55.25 56.94-96.99 0-40.79-22.02-76.13-54.59-95.71l5.22-11.44c2.34-5.53.93-11.83-3.57-16.04L255.86 0l-58.99 52.81c-4.5 4.21-5.9 10.51-3.57 16.04l5.22 11.44c-32.57 19.58-54.59 54.93-54.59 95.72 0 41.75 23.09 77.73 56.94 96.99l-7.85 17.24c-2.19 5.18-1.1 11.07 2.81 15.28l44.05 36.09v19.9l-76.59-53.33C119.02 278.62 92.44 229.19 92.26 176c0-31.08 8.71-61.31 25.2-87.47 3.87-6.16 2.4-13.77-2.59-19.08-5-5.34-13.68-6.2-20.02-2.7C16.32 109.6-22.3 205.3 13.36 295.99c7.07 17.99 17.89 34.38 30.46 49.06l55.97 65.36c4.87 5.69 13.04 7.24 19.65 3.72l79.35-42.23L228 392.23l-47.08 32.78c-1.67-.37-3.23-1.01-5.01-1.01-13.25 0-23.99 10.74-23.99 24 0 13.25 10.74 24 23.99 24 12.1 0 21.69-9.11 23.33-20.76l40.63-28.28v29.95c-9.39 5.57-15.99 15.38-15.99 27.1 0 17.67 14.32 32 31.98 32s31.98-14.33 31.98-32c0-11.71-6.61-21.52-15.99-27.1v-30.15l40.91 28.48C314.41 462.89 324 472 336.09 472c13.25 0 23.99-10.75 23.99-24 0-13.26-10.74-24-23.99-24-1.78 0-3.34.64-5.01 1.01L284 392.23l29.21-20.34 79.35 42.23c6.61 3.52 14.78 1.97 19.65-3.71l52.51-61.31c18.87-22.02 34-47.5 41.25-75.59 21.62-83.66-16.45-167.27-90.16-207.51zm-95.99 110c0 22.3-11.49 41.92-28.83 53.38l-5.65-12.41c-8.75-24.52-8.75-51.04 0-75.56l7.83-17.18c16.07 11.65 26.65 30.45 26.65 51.77zm-127.93 0c0-21.32 10.58-40.12 26.66-51.76l7.83 17.18c8.75 24.52 8.75 51.03 0 75.56l-5.65 12.41c-17.34-11.46-28.84-31.09-28.84-53.39z\"]\n  };\n  var faKiss = {\n    prefix: 'fas',\n    iconName: 'kiss',\n    icon: [496, 512, [], \"f596\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-80 232c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm136 156c0 19.2-28.7 41.5-71.5 44-8.5.8-12.1-11.8-3.6-15.4l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-6-2.5-6.1-12.2 0-14.8l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-8.6-3.6-4.8-16.5 3.6-15.4 42.8 2.5 71.5 24.8 71.5 44 0 13-13.4 27.3-35.2 36C290.6 368.7 304 383 304 396zm24-156c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"]\n  };\n  var faKissBeam = {\n    prefix: 'fas',\n    iconName: 'kiss-beam',\n    icon: [496, 512, [], \"f597\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-39 219.9l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5 3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.5 8.5-10.9 12-15.1 4.5zM304 396c0 19.2-28.7 41.5-71.5 44-8.5.8-12.1-11.8-3.6-15.4l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-6-2.5-6.1-12.2 0-14.8l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-8.6-3.6-4.8-16.5 3.6-15.4 42.8 2.5 71.5 24.8 71.5 44 0 13-13.4 27.3-35.2 36C290.6 368.7 304 383 304 396zm65-168.1l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.1 7.3-15.6 4-14.9-4.5 3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.5 8.5-10.9 12-15.1 4.5z\"]\n  };\n  var faKissWinkHeart = {\n    prefix: 'fas',\n    iconName: 'kiss-wink-heart',\n    icon: [504, 512, [], \"f598\", \"M501.1 402.5c-8-20.8-31.5-31.5-53.1-25.9l-8.4 2.2-2.3-8.4c-5.9-21.4-27-36.5-49-33-25.2 4-40.6 28.6-34 52.6l22.9 82.6c1.5 5.3 7 8.5 12.4 7.1l83-21.5c24.1-6.3 37.7-31.8 28.5-55.7zm-177.6-4c-5.6-20.3-2.3-42 9-59.7 29.7-46.3 98.7-45.5 127.8 4.3 6.4.1 12.6 1.4 18.6 2.9 10.9-27.9 17.1-58.2 17.1-90C496 119 385 8 248 8S0 119 0 256s111 248 248 248c35.4 0 68.9-7.5 99.4-20.9-.3-.7-23.9-84.6-23.9-84.6zM168 240c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm120 156c0 19.2-28.7 41.5-71.5 44-8.5.8-12.1-11.8-3.6-15.4l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-6-2.5-5.7-12.3 0-14.8l17-7.2c13-5.5 20.8-13.5 20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-8.8-3.7-4.6-16.6 3.6-15.4 42.8 2.5 71.5 24.8 71.5 44 0 13-13.4 27.3-35.2 36C274.6 368.7 288 383 288 396zm16-179c-8.3 7.4-21.6.4-19.8-10.8 4-25.2 34.2-42.1 59.9-42.1S400 181 404 206.2c1.7 11.1-11.3 18.3-19.8 10.8l-9.5-8.5c-14.8-13.2-46.2-13.2-61 0L304 217z\"]\n  };\n  var faKiwiBird = {\n    prefix: 'fas',\n    iconName: 'kiwi-bird',\n    icon: [576, 512, [], \"f535\", \"M575.81 217.98C572.64 157.41 518.28 112 457.63 112h-9.37c-52.82 0-104.25-16.25-147.74-46.24-41.99-28.96-96.04-41.62-153.21-28.7C129.3 41.12-.08 78.24 0 224c.04 70.95 38.68 132.8 95.99 166.01V464c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-54.26c15.36 3.96 31.4 6.26 48 6.26 5.44 0 10.68-.73 16-1.18V464c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-59.43c14.24-5.06 27.88-11.39 40.34-19.51C342.07 355.25 393.86 336 448.46 336c25.48 0 16.01-.31 23.05-.78l74.41 136.44c2.86 5.23 8.3 8.34 14.05 8.34 1.31 0 2.64-.16 3.95-.5 7.09-1.8 12.05-8.19 12.05-15.5 0 0 .14-240.24-.16-246.02zM463.97 248c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24zm80 153.25l-39.86-73.08c15.12-5.83 28.73-14.6 39.86-25.98v99.06z\"]\n  };\n  var faLandmark = {\n    prefix: 'fas',\n    iconName: 'landmark',\n    icon: [512, 512, [], \"f66f\", \"M501.62 92.11L267.24 2.04a31.958 31.958 0 0 0-22.47 0L10.38 92.11A16.001 16.001 0 0 0 0 107.09V144c0 8.84 7.16 16 16 16h480c8.84 0 16-7.16 16-16v-36.91c0-6.67-4.14-12.64-10.38-14.98zM64 192v160H48c-8.84 0-16 7.16-16 16v48h448v-48c0-8.84-7.16-16-16-16h-16V192h-64v160h-96V192h-64v160h-96V192H64zm432 256H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h480c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"]\n  };\n  var faLanguage = {\n    prefix: 'fas',\n    iconName: 'language',\n    icon: [640, 512, [], \"f1ab\", \"M152.1 236.2c-3.5-12.1-7.8-33.2-7.8-33.2h-.5s-4.3 21.1-7.8 33.2l-11.1 37.5H163zM616 96H336v320h280c13.3 0 24-10.7 24-24V120c0-13.3-10.7-24-24-24zm-24 120c0 6.6-5.4 12-12 12h-11.4c-6.9 23.6-21.7 47.4-42.7 69.9 8.4 6.4 17.1 12.5 26.1 18 5.5 3.4 7.3 10.5 4.1 16.2l-7.9 13.9c-3.4 5.9-10.9 7.8-16.7 4.3-12.6-7.8-24.5-16.1-35.4-24.9-10.9 8.7-22.7 17.1-35.4 24.9-5.8 3.5-13.3 1.6-16.7-4.3l-7.9-13.9c-3.2-5.6-1.4-12.8 4.2-16.2 9.3-5.7 18-11.7 26.1-18-7.9-8.4-14.9-17-21-25.7-4-5.7-2.2-13.6 3.7-17.1l6.5-3.9 7.3-4.3c5.4-3.2 12.4-1.7 16 3.4 5 7 10.8 14 17.4 20.9 13.5-14.2 23.8-28.9 30-43.2H412c-6.6 0-12-5.4-12-12v-16c0-6.6 5.4-12 12-12h64v-16c0-6.6 5.4-12 12-12h16c6.6 0 12 5.4 12 12v16h64c6.6 0 12 5.4 12 12zM0 120v272c0 13.3 10.7 24 24 24h280V96H24c-13.3 0-24 10.7-24 24zm58.9 216.1L116.4 167c1.7-4.9 6.2-8.1 11.4-8.1h32.5c5.1 0 9.7 3.3 11.4 8.1l57.5 169.1c2.6 7.8-3.1 15.9-11.4 15.9h-22.9a12 12 0 0 1-11.5-8.6l-9.4-31.9h-60.2l-9.1 31.8c-1.5 5.1-6.2 8.7-11.5 8.7H70.3c-8.2 0-14-8.1-11.4-15.9z\"]\n  };\n  var faLaptop = {\n    prefix: 'fas',\n    iconName: 'laptop',\n    icon: [640, 512, [], \"f109\", \"M624 416H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33.02-17.47-32.77-32H16c-8.8 0-16 7.2-16 16v16c0 35.2 28.8 64 64 64h512c35.2 0 64-28.8 64-64v-16c0-8.8-7.2-16-16-16zM576 48c0-26.4-21.6-48-48-48H112C85.6 0 64 21.6 64 48v336h512V48zm-64 272H128V64h384v256z\"]\n  };\n  var faLaptopCode = {\n    prefix: 'fas',\n    iconName: 'laptop-code',\n    icon: [640, 512, [], \"f5fc\", \"M255.03 261.65c6.25 6.25 16.38 6.25 22.63 0l11.31-11.31c6.25-6.25 6.25-16.38 0-22.63L253.25 192l35.71-35.72c6.25-6.25 6.25-16.38 0-22.63l-11.31-11.31c-6.25-6.25-16.38-6.25-22.63 0l-58.34 58.34c-6.25 6.25-6.25 16.38 0 22.63l58.35 58.34zm96.01-11.3l11.31 11.31c6.25 6.25 16.38 6.25 22.63 0l58.34-58.34c6.25-6.25 6.25-16.38 0-22.63l-58.34-58.34c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63L386.75 192l-35.71 35.72c-6.25 6.25-6.25 16.38 0 22.63zM624 416H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33.02-17.47-32.77-32H16c-8.8 0-16 7.2-16 16v16c0 35.2 28.8 64 64 64h512c35.2 0 64-28.8 64-64v-16c0-8.8-7.2-16-16-16zM576 48c0-26.4-21.6-48-48-48H112C85.6 0 64 21.6 64 48v336h512V48zm-64 272H128V64h384v256z\"]\n  };\n  var faLaptopMedical = {\n    prefix: 'fas',\n    iconName: 'laptop-medical',\n    icon: [640, 512, [], \"f812\", \"M232 224h56v56a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-56h56a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8h-56v-56a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v56h-56a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8zM576 48a48.14 48.14 0 0 0-48-48H112a48.14 48.14 0 0 0-48 48v336h512zm-64 272H128V64h384zm112 96H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33-17.47-32.77-32H16a16 16 0 0 0-16 16v16a64.19 64.19 0 0 0 64 64h512a64.19 64.19 0 0 0 64-64v-16a16 16 0 0 0-16-16z\"]\n  };\n  var faLaugh = {\n    prefix: 'fas',\n    iconName: 'laugh',\n    icon: [496, 512, [], \"f599\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 152c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm-160 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm88 272h-16c-73.4 0-134-55-142.9-126-1.2-9.5 6.3-18 15.9-18h270c9.6 0 17.1 8.4 15.9 18-8.9 71-69.5 126-142.9 126z\"]\n  };\n  var faLaughBeam = {\n    prefix: 'fas',\n    iconName: 'laugh-beam',\n    icon: [496, 512, [], \"f59a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm24 199.4c3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.7 8.6-10.8 11.9-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.8 4.1-15.1-4.5zm-160 0c3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.7 8.6-10.8 11.9-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.3 7.4-15.8 4-15.1-4.5zM398.9 306C390 377 329.4 432 256 432h-16c-73.4 0-134-55-142.9-126-1.2-9.5 6.3-18 15.9-18h270c9.6 0 17.1 8.4 15.9 18z\"]\n  };\n  var faLaughSquint = {\n    prefix: 'fas',\n    iconName: 'laugh-squint',\n    icon: [496, 512, [], \"f59b\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm33.8 161.7l80-48c11.6-6.9 24 7.7 15.4 18L343.6 180l33.6 40.3c8.7 10.4-3.9 24.8-15.4 18l-80-48c-7.7-4.7-7.7-15.9 0-20.6zm-163-30c-8.6-10.3 3.8-24.9 15.4-18l80 48c7.8 4.7 7.8 15.9 0 20.6l-80 48c-11.5 6.8-24-7.6-15.4-18l33.6-40.3-33.6-40.3zM398.9 306C390 377 329.4 432 256 432h-16c-73.4 0-134-55-142.9-126-1.2-9.5 6.3-18 15.9-18h270c9.6 0 17.1 8.4 15.9 18z\"]\n  };\n  var faLaughWink = {\n    prefix: 'fas',\n    iconName: 'laugh-wink',\n    icon: [496, 512, [], \"f59c\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm20.1 198.1c4-25.2 34.2-42.1 59.9-42.1s55.9 16.9 59.9 42.1c1.7 11.1-11.4 18.3-19.8 10.8l-9.5-8.5c-14.8-13.2-46.2-13.2-61 0L288 217c-8.4 7.4-21.6.3-19.9-10.9zM168 160c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm230.9 146C390 377 329.4 432 256 432h-16c-73.4 0-134-55-142.9-126-1.2-9.5 6.3-18 15.9-18h270c9.6 0 17.1 8.4 15.9 18z\"]\n  };\n  var faLayerGroup = {\n    prefix: 'fas',\n    iconName: 'layer-group',\n    icon: [512, 512, [], \"f5fd\", \"M12.41 148.02l232.94 105.67c6.8 3.09 14.49 3.09 21.29 0l232.94-105.67c16.55-7.51 16.55-32.52 0-40.03L266.65 2.31a25.607 25.607 0 0 0-21.29 0L12.41 107.98c-16.55 7.51-16.55 32.53 0 40.04zm487.18 88.28l-58.09-26.33-161.64 73.27c-7.56 3.43-15.59 5.17-23.86 5.17s-16.29-1.74-23.86-5.17L70.51 209.97l-58.1 26.33c-16.55 7.5-16.55 32.5 0 40l232.94 105.59c6.8 3.08 14.49 3.08 21.29 0L499.59 276.3c16.55-7.5 16.55-32.5 0-40zm0 127.8l-57.87-26.23-161.86 73.37c-7.56 3.43-15.59 5.17-23.86 5.17s-16.29-1.74-23.86-5.17L70.29 337.87 12.41 364.1c-16.55 7.5-16.55 32.5 0 40l232.94 105.59c6.8 3.08 14.49 3.08 21.29 0L499.59 404.1c16.55-7.5 16.55-32.5 0-40z\"]\n  };\n  var faLeaf = {\n    prefix: 'fas',\n    iconName: 'leaf',\n    icon: [576, 512, [], \"f06c\", \"M546.2 9.7c-5.6-12.5-21.6-13-28.3-1.2C486.9 62.4 431.4 96 368 96h-80C182 96 96 182 96 288c0 7 .8 13.7 1.5 20.5C161.3 262.8 253.4 224 384 224c8.8 0 16 7.2 16 16s-7.2 16-16 16C132.6 256 26 410.1 2.4 468c-6.6 16.3 1.2 34.9 17.5 41.6 16.4 6.8 35-1.1 41.8-17.3 1.5-3.6 20.9-47.9 71.9-90.6 32.4 43.9 94 85.8 174.9 77.2C465.5 467.5 576 326.7 576 154.3c0-50.2-10.8-102.2-29.8-144.6z\"]\n  };\n  var faLemon = {\n    prefix: 'fas',\n    iconName: 'lemon',\n    icon: [512, 512, [], \"f094\", \"M489.038 22.963C465.944-.13 434.648-5.93 413.947 6.129c-58.906 34.312-181.25-53.077-321.073 86.746S40.441 355.041 6.129 413.945c-12.059 20.702-6.26 51.999 16.833 75.093 23.095 23.095 54.392 28.891 75.095 16.832 58.901-34.31 181.246 53.079 321.068-86.743S471.56 156.96 505.871 98.056c12.059-20.702 6.261-51.999-16.833-75.093zM243.881 95.522c-58.189 14.547-133.808 90.155-148.358 148.358-1.817 7.27-8.342 12.124-15.511 12.124-1.284 0-2.59-.156-3.893-.481-8.572-2.144-13.784-10.83-11.642-19.403C81.901 166.427 166.316 81.93 236.119 64.478c8.575-2.143 17.261 3.069 19.403 11.642s-3.069 17.259-11.641 19.402z\"]\n  };\n  var faLessThan = {\n    prefix: 'fas',\n    iconName: 'less-than',\n    icon: [384, 512, [], \"f536\", \"M365.46 357.74L147.04 255.89l218.47-101.88c16.02-7.47 22.95-26.51 15.48-42.53l-13.52-29C360 66.46 340.96 59.53 324.94 67L18.48 209.91a32.014 32.014 0 0 0-18.48 29v34.24c0 12.44 7.21 23.75 18.48 29l306.31 142.83c16.06 7.49 35.15.54 42.64-15.52l13.56-29.08c7.49-16.06.54-35.15-15.53-42.64z\"]\n  };\n  var faLessThanEqual = {\n    prefix: 'fas',\n    iconName: 'less-than-equal',\n    icon: [448, 512, [], \"f537\", \"M54.98 214.2l301.41 119.87c18.39 6.03 38.71-2.54 45.38-19.15l12.09-30.08c6.68-16.61-2.82-34.97-21.21-41l-175.44-68.05 175.56-68.09c18.29-6 27.74-24.27 21.1-40.79l-12.03-29.92c-6.64-16.53-26.86-25.06-45.15-19.06L54.98 137.89C41.21 142.41 32 154.5 32 168.07v15.96c0 13.56 9.21 25.65 22.98 30.17zM424 400H24c-13.25 0-24 10.74-24 24v48c0 13.25 10.75 24 24 24h400c13.25 0 24-10.75 24-24v-48c0-13.26-10.75-24-24-24z\"]\n  };\n  var faLevelDownAlt = {\n    prefix: 'fas',\n    iconName: 'level-down-alt',\n    icon: [320, 512, [], \"f3be\", \"M313.553 392.331L209.587 504.334c-9.485 10.214-25.676 10.229-35.174 0L70.438 392.331C56.232 377.031 67.062 352 88.025 352H152V80H68.024a11.996 11.996 0 0 1-8.485-3.515l-56-56C-4.021 12.926 1.333 0 12.024 0H208c13.255 0 24 10.745 24 24v328h63.966c20.878 0 31.851 24.969 17.587 40.331z\"]\n  };\n  var faLevelUpAlt = {\n    prefix: 'fas',\n    iconName: 'level-up-alt',\n    icon: [320, 512, [], \"f3bf\", \"M313.553 119.669L209.587 7.666c-9.485-10.214-25.676-10.229-35.174 0L70.438 119.669C56.232 134.969 67.062 160 88.025 160H152v272H68.024a11.996 11.996 0 0 0-8.485 3.515l-56 56C-4.021 499.074 1.333 512 12.024 512H208c13.255 0 24-10.745 24-24V160h63.966c20.878 0 31.851-24.969 17.587-40.331z\"]\n  };\n  var faLifeRing = {\n    prefix: 'fas',\n    iconName: 'life-ring',\n    icon: [512, 512, [], \"f1cd\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm173.696 119.559l-63.399 63.399c-10.987-18.559-26.67-34.252-45.255-45.255l63.399-63.399a218.396 218.396 0 0 1 45.255 45.255zM256 352c-53.019 0-96-42.981-96-96s42.981-96 96-96 96 42.981 96 96-42.981 96-96 96zM127.559 82.304l63.399 63.399c-18.559 10.987-34.252 26.67-45.255 45.255l-63.399-63.399a218.372 218.372 0 0 1 45.255-45.255zM82.304 384.441l63.399-63.399c10.987 18.559 26.67 34.252 45.255 45.255l-63.399 63.399a218.396 218.396 0 0 1-45.255-45.255zm302.137 45.255l-63.399-63.399c18.559-10.987 34.252-26.67 45.255-45.255l63.399 63.399a218.403 218.403 0 0 1-45.255 45.255z\"]\n  };\n  var faLightbulb = {\n    prefix: 'fas',\n    iconName: 'lightbulb',\n    icon: [352, 512, [], \"f0eb\", \"M96.06 454.35c.01 6.29 1.87 12.45 5.36 17.69l17.09 25.69a31.99 31.99 0 0 0 26.64 14.28h61.71a31.99 31.99 0 0 0 26.64-14.28l17.09-25.69a31.989 31.989 0 0 0 5.36-17.69l.04-38.35H96.01l.05 38.35zM0 176c0 44.37 16.45 84.85 43.56 115.78 16.52 18.85 42.36 58.23 52.21 91.45.04.26.07.52.11.78h160.24c.04-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45C335.55 260.85 352 220.37 352 176 352 78.61 272.91-.3 175.45 0 73.44.31 0 82.97 0 176zm176-80c-44.11 0-80 35.89-80 80 0 8.84-7.16 16-16 16s-16-7.16-16-16c0-61.76 50.24-112 112-112 8.84 0 16 7.16 16 16s-7.16 16-16 16z\"]\n  };\n  var faLink = {\n    prefix: 'fas',\n    iconName: 'link',\n    icon: [512, 512, [], \"f0c1\", \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"]\n  };\n  var faLiraSign = {\n    prefix: 'fas',\n    iconName: 'lira-sign',\n    icon: [384, 512, [], \"f195\", \"M371.994 256h-48.019C317.64 256 312 260.912 312 267.246 312 368 230.179 416 144 416V256.781l134.603-29.912A12 12 0 0 0 288 215.155v-40.976c0-7.677-7.109-13.38-14.603-11.714L144 191.219V160.78l134.603-29.912A12 12 0 0 0 288 119.154V78.179c0-7.677-7.109-13.38-14.603-11.714L144 95.219V44c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v68.997L9.397 125.131A12 12 0 0 0 0 136.845v40.976c0 7.677 7.109 13.38 14.603 11.714L64 178.558v30.439L9.397 221.131A12 12 0 0 0 0 232.845v40.976c0 7.677 7.109 13.38 14.603 11.714L64 274.558V468c0 6.627 5.373 12 12 12h79.583c134.091 0 223.255-77.834 228.408-211.592.261-6.782-5.211-12.408-11.997-12.408z\"]\n  };\n  var faList = {\n    prefix: 'fas',\n    iconName: 'list',\n    icon: [512, 512, [], \"f03a\", \"M128 116V76c0-8.837 7.163-16 16-16h352c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H144c-8.837 0-16-7.163-16-16zm16 176h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM16 144h64c8.837 0 16-7.163 16-16V64c0-8.837-7.163-16-16-16H16C7.163 48 0 55.163 0 64v64c0 8.837 7.163 16 16 16zm0 160h64c8.837 0 16-7.163 16-16v-64c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v64c0 8.837 7.163 16 16 16zm0 160h64c8.837 0 16-7.163 16-16v-64c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v64c0 8.837 7.163 16 16 16z\"]\n  };\n  var faListAlt = {\n    prefix: 'fas',\n    iconName: 'list-alt',\n    icon: [512, 512, [], \"f022\", \"M464 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zM128 120c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm0 96c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm0 96c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm288-136v-32c0-6.627-5.373-12-12-12H204c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h200c6.627 0 12-5.373 12-12zm0 96v-32c0-6.627-5.373-12-12-12H204c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h200c6.627 0 12-5.373 12-12zm0 96v-32c0-6.627-5.373-12-12-12H204c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h200c6.627 0 12-5.373 12-12z\"]\n  };\n  var faListOl = {\n    prefix: 'fas',\n    iconName: 'list-ol',\n    icon: [512, 512, [], \"f0cb\", \"M3.263 139.527c0-7.477 3.917-11.572 11.573-11.572h15.131V88.078c0-5.163.534-10.503.534-10.503h-.356s-1.779 2.67-2.848 3.738c-4.451 4.273-10.504 4.451-15.666-1.068l-5.518-6.231c-5.342-5.341-4.984-11.216.534-16.379l21.72-19.938C32.815 33.602 36.732 32 42.785 32H54.89c7.656 0 11.749 3.916 11.749 11.572v84.384h15.488c7.655 0 11.572 4.094 11.572 11.572v8.901c0 7.477-3.917 11.572-11.572 11.572H14.836c-7.656 0-11.573-4.095-11.573-11.572v-8.902zM2.211 304.591c0-47.278 50.955-56.383 50.955-69.165 0-7.18-5.954-8.755-9.28-8.755-3.153 0-6.479 1.051-9.455 3.852-5.079 4.903-10.507 7.004-16.111 2.451l-8.579-6.829c-5.779-4.553-7.18-9.805-2.803-15.409C13.592 201.981 26.025 192 47.387 192c19.437 0 44.476 10.506 44.476 39.573 0 38.347-46.753 46.402-48.679 56.909h39.049c7.529 0 11.557 4.027 11.557 11.382v8.755c0 7.354-4.028 11.382-11.557 11.382h-67.94c-7.005 0-12.083-4.028-12.083-11.382v-4.028zM5.654 454.61l5.603-9.28c3.853-6.654 9.105-7.004 15.584-3.152 4.903 2.101 9.63 3.152 14.359 3.152 10.155 0 14.358-3.502 14.358-8.23 0-6.654-5.604-9.106-15.934-9.106h-4.728c-5.954 0-9.28-2.101-12.258-7.88l-1.05-1.926c-2.451-4.728-1.226-9.806 2.801-14.884l5.604-7.004c6.829-8.405 12.257-13.483 12.257-13.483v-.35s-4.203 1.051-12.608 1.051H16.685c-7.53 0-11.383-4.028-11.383-11.382v-8.755c0-7.53 3.853-11.382 11.383-11.382h58.484c7.529 0 11.382 4.027 11.382 11.382v3.327c0 5.778-1.401 9.806-5.079 14.183l-17.509 20.137c19.611 5.078 28.716 20.487 28.716 34.845 0 21.363-14.358 44.126-48.503 44.126-16.636 0-28.192-4.728-35.896-9.455-5.779-4.202-6.304-9.805-2.626-15.934zM144 132h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"]\n  };\n  var faListUl = {\n    prefix: 'fas',\n    iconName: 'list-ul',\n    icon: [512, 512, [], \"f0ca\", \"M96 96c0 26.51-21.49 48-48 48S0 122.51 0 96s21.49-48 48-48 48 21.49 48 48zM48 208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm0 160c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm96-236h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"]\n  };\n  var faLocationArrow = {\n    prefix: 'fas',\n    iconName: 'location-arrow',\n    icon: [512, 512, [], \"f124\", \"M444.52 3.52L28.74 195.42c-47.97 22.39-31.98 92.75 19.19 92.75h175.91v175.91c0 51.17 70.36 67.17 92.75 19.19l191.9-415.78c15.99-38.39-25.59-79.97-63.97-63.97z\"]\n  };\n  var faLock = {\n    prefix: 'fas',\n    iconName: 'lock',\n    icon: [448, 512, [], \"f023\", \"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\"]\n  };\n  var faLockOpen = {\n    prefix: 'fas',\n    iconName: 'lock-open',\n    icon: [576, 512, [], \"f3c1\", \"M423.5 0C339.5.3 272 69.5 272 153.5V224H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48h-48v-71.1c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v80c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-80C576 68 507.5-.3 423.5 0z\"]\n  };\n  var faLongArrowAltDown = {\n    prefix: 'fas',\n    iconName: 'long-arrow-alt-down',\n    icon: [256, 512, [], \"f309\", \"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"]\n  };\n  var faLongArrowAltLeft = {\n    prefix: 'fas',\n    iconName: 'long-arrow-alt-left',\n    icon: [448, 512, [], \"f30a\", \"M134.059 296H436c6.627 0 12-5.373 12-12v-56c0-6.627-5.373-12-12-12H134.059v-46.059c0-21.382-25.851-32.09-40.971-16.971L7.029 239.029c-9.373 9.373-9.373 24.569 0 33.941l86.059 86.059c15.119 15.119 40.971 4.411 40.971-16.971V296z\"]\n  };\n  var faLongArrowAltRight = {\n    prefix: 'fas',\n    iconName: 'long-arrow-alt-right',\n    icon: [448, 512, [], \"f30b\", \"M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z\"]\n  };\n  var faLongArrowAltUp = {\n    prefix: 'fas',\n    iconName: 'long-arrow-alt-up',\n    icon: [256, 512, [], \"f30c\", \"M88 166.059V468c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12V166.059h46.059c21.382 0 32.09-25.851 16.971-40.971l-86.059-86.059c-9.373-9.373-24.569-9.373-33.941 0l-86.059 86.059c-15.119 15.119-4.411 40.971 16.971 40.971H88z\"]\n  };\n  var faLowVision = {\n    prefix: 'fas',\n    iconName: 'low-vision',\n    icon: [576, 512, [], \"f2a8\", \"M569.344 231.631C512.96 135.949 407.81 72 288 72c-28.468 0-56.102 3.619-82.451 10.409L152.778 10.24c-7.601-10.858-22.564-13.5-33.423-5.9l-13.114 9.178c-10.86 7.601-13.502 22.566-5.9 33.426l43.131 58.395C89.449 131.73 40.228 174.683 6.682 231.581c-.01.017-.023.033-.034.05-8.765 14.875-8.964 33.528 0 48.739 38.5 65.332 99.742 115.862 172.859 141.349L55.316 244.302A272.194 272.194 0 0 1 83.61 208.39l119.4 170.58h.01l40.63 58.04a330.055 330.055 0 0 0 78.94 1.17l-189.98-271.4a277.628 277.628 0 0 1 38.777-21.563l251.836 356.544c7.601 10.858 22.564 13.499 33.423 5.9l13.114-9.178c10.86-7.601 13.502-22.567 5.9-33.426l-43.12-58.377-.007-.009c57.161-27.978 104.835-72.04 136.81-126.301a47.938 47.938 0 0 0 .001-48.739zM390.026 345.94l-19.066-27.23c24.682-32.567 27.711-76.353 8.8-111.68v.03c0 23.65-19.17 42.82-42.82 42.82-23.828 0-42.82-19.349-42.82-42.82 0-23.65 19.17-42.82 42.82-42.82h.03c-24.75-13.249-53.522-15.643-79.51-7.68l-19.068-27.237C253.758 123.306 270.488 120 288 120c75.162 0 136 60.826 136 136 0 34.504-12.833 65.975-33.974 89.94z\"]\n  };\n  var faLuggageCart = {\n    prefix: 'fas',\n    iconName: 'luggage-cart',\n    icon: [640, 512, [], \"f59d\", \"M224 320h32V96h-32c-17.67 0-32 14.33-32 32v160c0 17.67 14.33 32 32 32zm352-32V128c0-17.67-14.33-32-32-32h-32v224h32c17.67 0 32-14.33 32-32zm48 96H128V16c0-8.84-7.16-16-16-16H16C7.16 0 0 7.16 0 16v32c0 8.84 7.16 16 16 16h48v368c0 8.84 7.16 16 16 16h82.94c-1.79 5.03-2.94 10.36-2.94 16 0 26.51 21.49 48 48 48s48-21.49 48-48c0-5.64-1.15-10.97-2.94-16h197.88c-1.79 5.03-2.94 10.36-2.94 16 0 26.51 21.49 48 48 48s48-21.49 48-48c0-5.64-1.15-10.97-2.94-16H624c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM480 96V48c0-26.51-21.49-48-48-48h-96c-26.51 0-48 21.49-48 48v272h192V96zm-48 0h-96V48h96v48z\"]\n  };\n  var faMagic = {\n    prefix: 'fas',\n    iconName: 'magic',\n    icon: [512, 512, [], \"f0d0\", \"M224 96l16-32 32-16-32-16-16-32-16 32-32 16 32 16 16 32zM80 160l26.66-53.33L160 80l-53.34-26.67L80 0 53.34 53.33 0 80l53.34 26.67L80 160zm352 128l-26.66 53.33L352 368l53.34 26.67L432 448l26.66-53.33L512 368l-53.34-26.67L432 288zm70.62-193.77L417.77 9.38C411.53 3.12 403.34 0 395.15 0c-8.19 0-16.38 3.12-22.63 9.38L9.38 372.52c-12.5 12.5-12.5 32.76 0 45.25l84.85 84.85c6.25 6.25 14.44 9.37 22.62 9.37 8.19 0 16.38-3.12 22.63-9.37l363.14-363.15c12.5-12.48 12.5-32.75 0-45.24zM359.45 203.46l-50.91-50.91 86.6-86.6 50.91 50.91-86.6 86.6z\"]\n  };\n  var faMagnet = {\n    prefix: 'fas',\n    iconName: 'magnet',\n    icon: [512, 512, [], \"f076\", \"M164.07 148.1H12a12 12 0 0 1-12-12v-80a36 36 0 0 1 36-36h104a36 36 0 0 1 36 36v80a11.89 11.89 0 0 1-11.93 12zm347.93-12V56a36 36 0 0 0-36-36H372a36 36 0 0 0-36 36v80a12 12 0 0 0 12 12h152a11.89 11.89 0 0 0 12-11.9zm-164 44a12 12 0 0 0-12 12v52c0 128.1-160 127.9-160 0v-52a12 12 0 0 0-12-12H12.1a12 12 0 0 0-12 12.1c.1 21.4.6 40.3 0 53.3 0 150.6 136.17 246.6 256.75 246.6s255-96 255-246.7c-.6-12.8-.2-33 0-53.2a12 12 0 0 0-12-12.1z\"]\n  };\n  var faMailBulk = {\n    prefix: 'fas',\n    iconName: 'mail-bulk',\n    icon: [576, 512, [], \"f674\", \"M160 448c-25.6 0-51.2-22.4-64-32-64-44.8-83.2-60.8-96-70.4V480c0 17.67 14.33 32 32 32h256c17.67 0 32-14.33 32-32V345.6c-12.8 9.6-32 25.6-96 70.4-12.8 9.6-38.4 32-64 32zm128-192H32c-17.67 0-32 14.33-32 32v16c25.6 19.2 22.4 19.2 115.2 86.4 9.6 6.4 28.8 25.6 44.8 25.6s35.2-19.2 44.8-22.4c92.8-67.2 89.6-67.2 115.2-86.4V288c0-17.67-14.33-32-32-32zm256-96H224c-17.67 0-32 14.33-32 32v32h96c33.21 0 60.59 25.42 63.71 57.82l.29-.22V416h192c17.67 0 32-14.33 32-32V192c0-17.67-14.33-32-32-32zm-32 128h-64v-64h64v64zm-352-96c0-35.29 28.71-64 64-64h224V32c0-17.67-14.33-32-32-32H96C78.33 0 64 14.33 64 32v192h96v-32z\"]\n  };\n  var faMale = {\n    prefix: 'fas',\n    iconName: 'male',\n    icon: [192, 512, [], \"f183\", \"M96 0c35.346 0 64 28.654 64 64s-28.654 64-64 64-64-28.654-64-64S60.654 0 96 0m48 144h-11.36c-22.711 10.443-49.59 10.894-73.28 0H48c-26.51 0-48 21.49-48 48v136c0 13.255 10.745 24 24 24h16v136c0 13.255 10.745 24 24 24h64c13.255 0 24-10.745 24-24V352h16c13.255 0 24-10.745 24-24V192c0-26.51-21.49-48-48-48z\"]\n  };\n  var faMap = {\n    prefix: 'fas',\n    iconName: 'map',\n    icon: [576, 512, [], \"f279\", \"M0 117.66v346.32c0 11.32 11.43 19.06 21.94 14.86L160 416V32L20.12 87.95A32.006 32.006 0 0 0 0 117.66zM192 416l192 64V96L192 32v384zM554.06 33.16L416 96v384l139.88-55.95A31.996 31.996 0 0 0 576 394.34V48.02c0-11.32-11.43-19.06-21.94-14.86z\"]\n  };\n  var faMapMarked = {\n    prefix: 'fas',\n    iconName: 'map-marked',\n    icon: [576, 512, [], \"f59f\", \"M288 0c-69.59 0-126 56.41-126 126 0 56.26 82.35 158.8 113.9 196.02 6.39 7.54 17.82 7.54 24.2 0C331.65 284.8 414 182.26 414 126 414 56.41 357.59 0 288 0zM20.12 215.95A32.006 32.006 0 0 0 0 245.66v250.32c0 11.32 11.43 19.06 21.94 14.86L160 448V214.92c-8.84-15.98-16.07-31.54-21.25-46.42L20.12 215.95zM288 359.67c-14.07 0-27.38-6.18-36.51-16.96-19.66-23.2-40.57-49.62-59.49-76.72v182l192 64V266c-18.92 27.09-39.82 53.52-59.49 76.72-9.13 10.77-22.44 16.95-36.51 16.95zm266.06-198.51L416 224v288l139.88-55.95A31.996 31.996 0 0 0 576 426.34V176.02c0-11.32-11.43-19.06-21.94-14.86z\"]\n  };\n  var faMapMarkedAlt = {\n    prefix: 'fas',\n    iconName: 'map-marked-alt',\n    icon: [576, 512, [], \"f5a0\", \"M288 0c-69.59 0-126 56.41-126 126 0 56.26 82.35 158.8 113.9 196.02 6.39 7.54 17.82 7.54 24.2 0C331.65 284.8 414 182.26 414 126 414 56.41 357.59 0 288 0zm0 168c-23.2 0-42-18.8-42-42s18.8-42 42-42 42 18.8 42 42-18.8 42-42 42zM20.12 215.95A32.006 32.006 0 0 0 0 245.66v250.32c0 11.32 11.43 19.06 21.94 14.86L160 448V214.92c-8.84-15.98-16.07-31.54-21.25-46.42L20.12 215.95zM288 359.67c-14.07 0-27.38-6.18-36.51-16.96-19.66-23.2-40.57-49.62-59.49-76.72v182l192 64V266c-18.92 27.09-39.82 53.52-59.49 76.72-9.13 10.77-22.44 16.95-36.51 16.95zm266.06-198.51L416 224v288l139.88-55.95A31.996 31.996 0 0 0 576 426.34V176.02c0-11.32-11.43-19.06-21.94-14.86z\"]\n  };\n  var faMapMarker = {\n    prefix: 'fas',\n    iconName: 'map-marker',\n    icon: [384, 512, [], \"f041\", \"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0z\"]\n  };\n  var faMapMarkerAlt = {\n    prefix: 'fas',\n    iconName: 'map-marker-alt',\n    icon: [384, 512, [], \"f3c5\", \"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z\"]\n  };\n  var faMapPin = {\n    prefix: 'fas',\n    iconName: 'map-pin',\n    icon: [288, 512, [], \"f276\", \"M112 316.94v156.69l22.02 33.02c4.75 7.12 15.22 7.12 19.97 0L176 473.63V316.94c-10.39 1.92-21.06 3.06-32 3.06s-21.61-1.14-32-3.06zM144 0C64.47 0 0 64.47 0 144s64.47 144 144 144 144-64.47 144-144S223.53 0 144 0zm0 76c-37.5 0-68 30.5-68 68 0 6.62-5.38 12-12 12s-12-5.38-12-12c0-50.73 41.28-92 92-92 6.62 0 12 5.38 12 12s-5.38 12-12 12z\"]\n  };\n  var faMapSigns = {\n    prefix: 'fas',\n    iconName: 'map-signs',\n    icon: [512, 512, [], \"f277\", \"M507.31 84.69L464 41.37c-6-6-14.14-9.37-22.63-9.37H288V16c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v16H56c-13.25 0-24 10.75-24 24v80c0 13.25 10.75 24 24 24h385.37c8.49 0 16.62-3.37 22.63-9.37l43.31-43.31c6.25-6.26 6.25-16.38 0-22.63zM224 496c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V384h-64v112zm232-272H288v-32h-64v32H70.63c-8.49 0-16.62 3.37-22.63 9.37L4.69 276.69c-6.25 6.25-6.25 16.38 0 22.63L48 342.63c6 6 14.14 9.37 22.63 9.37H456c13.25 0 24-10.75 24-24v-80c0-13.25-10.75-24-24-24z\"]\n  };\n  var faMarker = {\n    prefix: 'fas',\n    iconName: 'marker',\n    icon: [512, 512, [], \"f5a1\", \"M93.95 290.03A327.038 327.038 0 0 0 .17 485.11l-.03.23c-1.7 15.28 11.21 28.2 26.49 26.51a327.02 327.02 0 0 0 195.34-93.8l75.4-75.4-128.02-128.02-75.4 75.4zM485.49 26.51c-35.35-35.35-92.67-35.35-128.02 0l-21.76 21.76-36.56-36.55c-15.62-15.62-40.95-15.62-56.56 0L138.47 115.84c-6.25 6.25-6.25 16.38 0 22.63l22.62 22.62c6.25 6.25 16.38 6.25 22.63 0l87.15-87.15 19.59 19.59L191.98 192 320 320.02l165.49-165.49c35.35-35.35 35.35-92.66 0-128.02z\"]\n  };\n  var faMars = {\n    prefix: 'fas',\n    iconName: 'mars',\n    icon: [384, 512, [], \"f222\", \"M372 64h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7c-22.2-14-48.5-22.1-76.7-22.1C64.5 160 0 224.5 0 304s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V76c0-6.6-5.4-12-12-12zM144 384c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"]\n  };\n  var faMarsDouble = {\n    prefix: 'fas',\n    iconName: 'mars-double',\n    icon: [512, 512, [], \"f227\", \"M340 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-48.7 48.7C198.5 72.1 172.2 64 144 64 64.5 64 0 128.5 0 208s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l48.7-48.7 16.9 16.9c2.4 2.4 5.5 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12V12c0-6.6-5.4-12-12-12zM144 288c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80zm356-128.1h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-48.7 48.7c-18.2-11.4-39-18.9-61.5-21.3-2.1 21.8-8.2 43.3-18.4 63.3 1.1 0 2.2-.1 3.2-.1 44.1 0 80 35.9 80 80s-35.9 80-80 80-80-35.9-80-80c0-1.1 0-2.2.1-3.2-20 10.2-41.5 16.4-63.3 18.4C168.4 455.6 229.6 512 304 512c79.5 0 144-64.5 144-144 0-28.2-8.1-54.5-22.1-76.7l48.7-48.7 16.9 16.9c2.4 2.4 5.4 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12v-79c0-6.7-5.4-12.1-12-12.1z\"]\n  };\n  var faMarsStroke = {\n    prefix: 'fas',\n    iconName: 'mars-stroke',\n    icon: [384, 512, [], \"f229\", \"M372 64h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-17.5 17.5-14.1-14.1c-4.7-4.7-12.3-4.7-17 0L224.5 133c-4.7 4.7-4.7 12.3 0 17l14.1 14.1-18 18c-22.2-14-48.5-22.1-76.7-22.1C64.5 160 0 224.5 0 304s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l18-18 14.1 14.1c4.7 4.7 12.3 4.7 17 0l28.3-28.3c4.7-4.7 4.7-12.3 0-17L329.2 164l17.5-17.5 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V76c-.1-6.6-5.5-12-12.1-12zM144 384c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"]\n  };\n  var faMarsStrokeH = {\n    prefix: 'fas',\n    iconName: 'mars-stroke-h',\n    icon: [480, 512, [], \"f22b\", \"M476.2 247.5l-55.9-55.9c-7.6-7.6-20.5-2.2-20.5 8.5V224H376v-20c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v20h-27.6c-5.8-25.6-18.7-49.9-38.6-69.8C189.6 98 98.4 98 42.2 154.2c-56.2 56.2-56.2 147.4 0 203.6 56.2 56.2 147.4 56.2 203.6 0 19.9-19.9 32.8-44.2 38.6-69.8H312v20c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-20h23.9v23.9c0 10.7 12.9 16 20.5 8.5l55.9-55.9c4.6-4.7 4.6-12.3-.1-17zm-275.6 65.1c-31.2 31.2-81.9 31.2-113.1 0-31.2-31.2-31.2-81.9 0-113.1 31.2-31.2 81.9-31.2 113.1 0 31.2 31.1 31.2 81.9 0 113.1z\"]\n  };\n  var faMarsStrokeV = {\n    prefix: 'fas',\n    iconName: 'mars-stroke-v',\n    icon: [288, 512, [], \"f22a\", \"M245.8 234.2c-19.9-19.9-44.2-32.8-69.8-38.6v-25.4h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20V81.4h23.9c10.7 0 16-12.9 8.5-20.5L152.5 5.1c-4.7-4.7-12.3-4.7-17 0L79.6 61c-7.6 7.6-2.2 20.5 8.5 20.5H112v24.7H92c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h20v25.4c-25.6 5.8-49.9 18.7-69.8 38.6-56.2 56.2-56.2 147.4 0 203.6 56.2 56.2 147.4 56.2 203.6 0 56.3-56.2 56.3-147.4 0-203.6zm-45.2 158.4c-31.2 31.2-81.9 31.2-113.1 0-31.2-31.2-31.2-81.9 0-113.1 31.2-31.2 81.9-31.2 113.1 0 31.2 31.1 31.2 81.9 0 113.1z\"]\n  };\n  var faMask = {\n    prefix: 'fas',\n    iconName: 'mask',\n    icon: [640, 512, [], \"f6fa\", \"M320.67 64c-442.6 0-357.57 384-158.46 384 39.9 0 77.47-20.69 101.42-55.86l25.73-37.79c15.66-22.99 46.97-22.99 62.63 0l25.73 37.79C401.66 427.31 439.23 448 479.13 448c189.86 0 290.63-384-158.46-384zM184 308.36c-41.06 0-67.76-25.66-80.08-41.05-5.23-6.53-5.23-16.09 0-22.63 12.32-15.4 39.01-41.05 80.08-41.05s67.76 25.66 80.08 41.05c5.23 6.53 5.23 16.09 0 22.63-12.32 15.4-39.02 41.05-80.08 41.05zm272 0c-41.06 0-67.76-25.66-80.08-41.05-5.23-6.53-5.23-16.09 0-22.63 12.32-15.4 39.01-41.05 80.08-41.05s67.76 25.66 80.08 41.05c5.23 6.53 5.23 16.09 0 22.63-12.32 15.4-39.02 41.05-80.08 41.05z\"]\n  };\n  var faMedal = {\n    prefix: 'fas',\n    iconName: 'medal',\n    icon: [512, 512, [], \"f5a2\", \"M223.75 130.75L154.62 15.54A31.997 31.997 0 0 0 127.18 0H16.03C3.08 0-4.5 14.57 2.92 25.18l111.27 158.96c29.72-27.77 67.52-46.83 109.56-53.39zM495.97 0H384.82c-11.24 0-21.66 5.9-27.44 15.54l-69.13 115.21c42.04 6.56 79.84 25.62 109.56 53.38L509.08 25.18C516.5 14.57 508.92 0 495.97 0zM256 160c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm92.52 157.26l-37.93 36.96 8.97 52.22c1.6 9.36-8.26 16.51-16.65 12.09L256 393.88l-46.9 24.65c-8.4 4.45-18.25-2.74-16.65-12.09l8.97-52.22-37.93-36.96c-6.82-6.64-3.05-18.23 6.35-19.59l52.43-7.64 23.43-47.52c2.11-4.28 6.19-6.39 10.28-6.39 4.11 0 8.22 2.14 10.33 6.39l23.43 47.52 52.43 7.64c9.4 1.36 13.17 12.95 6.35 19.59z\"]\n  };\n  var faMedkit = {\n    prefix: 'fas',\n    iconName: 'medkit',\n    icon: [512, 512, [], \"f0fa\", \"M96 480h320V128h-32V80c0-26.51-21.49-48-48-48H176c-26.51 0-48 21.49-48 48v48H96v352zm96-384h128v32H192V96zm320 80v256c0 26.51-21.49 48-48 48h-16V128h16c26.51 0 48 21.49 48 48zM64 480H48c-26.51 0-48-21.49-48-48V176c0-26.51 21.49-48 48-48h16v352zm288-208v32c0 8.837-7.163 16-16 16h-48v48c0 8.837-7.163 16-16 16h-32c-8.837 0-16-7.163-16-16v-48h-48c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h48v-48c0-8.837 7.163-16 16-16h32c8.837 0 16 7.163 16 16v48h48c8.837 0 16 7.163 16 16z\"]\n  };\n  var faMeh = {\n    prefix: 'fas',\n    iconName: 'meh',\n    icon: [496, 512, [], \"f11a\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm176 192H152c-21.2 0-21.2-32 0-32h192c21.2 0 21.2 32 0 32zm-16-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"]\n  };\n  var faMehBlank = {\n    prefix: 'fas',\n    iconName: 'meh-blank',\n    icon: [496, 512, [], \"f5a4\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm-80 232c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm160 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"]\n  };\n  var faMehRollingEyes = {\n    prefix: 'fas',\n    iconName: 'meh-rolling-eyes',\n    icon: [496, 512, [], \"f5a5\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM88 224c0-24.3 13.7-45.2 33.6-56-.7 2.6-1.6 5.2-1.6 8 0 17.7 14.3 32 32 32s32-14.3 32-32c0-2.8-.9-5.4-1.6-8 19.9 10.8 33.6 31.7 33.6 56 0 35.3-28.7 64-64 64s-64-28.7-64-64zm224 176H184c-21.2 0-21.2-32 0-32h128c21.2 0 21.2 32 0 32zm32-112c-35.3 0-64-28.7-64-64 0-24.3 13.7-45.2 33.6-56-.7 2.6-1.6 5.2-1.6 8 0 17.7 14.3 32 32 32s32-14.3 32-32c0-2.8-.9-5.4-1.6-8 19.9 10.8 33.6 31.7 33.6 56 0 35.3-28.7 64-64 64z\"]\n  };\n  var faMemory = {\n    prefix: 'fas',\n    iconName: 'memory',\n    icon: [640, 512, [], \"f538\", \"M640 130.94V96c0-17.67-14.33-32-32-32H32C14.33 64 0 78.33 0 96v34.94c18.6 6.61 32 24.19 32 45.06s-13.4 38.45-32 45.06V320h640v-98.94c-18.6-6.61-32-24.19-32-45.06s13.4-38.45 32-45.06zM224 256h-64V128h64v128zm128 0h-64V128h64v128zm128 0h-64V128h64v128zM0 448h64v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h128v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h128v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h128v-26.67c0-8.84 7.16-16 16-16s16 7.16 16 16V448h64v-96H0v96z\"]\n  };\n  var faMenorah = {\n    prefix: 'fas',\n    iconName: 'menorah',\n    icon: [640, 512, [], \"f676\", \"M144 128h-32c-8.84 0-16 7.16-16 16v144h64V144c0-8.84-7.16-16-16-16zm96 0h-32c-8.84 0-16 7.16-16 16v144h64V144c0-8.84-7.16-16-16-16zm192 0h-32c-8.84 0-16 7.16-16 16v144h64V144c0-8.84-7.16-16-16-16zm96 0h-32c-8.84 0-16 7.16-16 16v144h64V144c0-8.84-7.16-16-16-16zm80-32c17.67 0 32-14.33 32-32S608 0 608 0s-32 46.33-32 64 14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S512 0 512 0s-32 46.33-32 64 14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S416 0 416 0s-32 46.33-32 64 14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S320 0 320 0s-32 46.33-32 64 14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S224 0 224 0s-32 46.33-32 64 14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S128 0 128 0 96 46.33 96 64s14.33 32 32 32zm-96 0c17.67 0 32-14.33 32-32S32 0 32 0 0 46.33 0 64s14.33 32 32 32zm544 192c0 17.67-14.33 32-32 32H352V144c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v176H96c-17.67 0-32-14.33-32-32V144c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v144c0 53.02 42.98 96 96 96h192v64H112c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16H352v-64h192c53.02 0 96-42.98 96-96V144c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v144z\"]\n  };\n  var faMercury = {\n    prefix: 'fas',\n    iconName: 'mercury',\n    icon: [288, 512, [], \"f223\", \"M288 208c0-44.2-19.9-83.7-51.2-110.1 2.5-1.8 4.9-3.8 7.2-5.8 24.7-21.2 39.8-48.8 43.2-78.8.9-7.1-4.7-13.3-11.9-13.3h-40.5C229 0 224.1 4.1 223 9.8c-2.4 12.5-9.6 24.3-20.7 33.8C187 56.8 166.3 64 144 64s-43-7.2-58.4-20.4C74.5 34.1 67.4 22.3 64.9 9.8 63.8 4.1 58.9 0 53.2 0H12.7C5.5 0-.1 6.2.8 13.3 4.2 43.4 19.2 71 44 92.2c2.3 2 4.7 3.9 7.2 5.8C19.9 124.3 0 163.8 0 208c0 68.5 47.9 125.9 112 140.4V400H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80z\"]\n  };\n  var faMeteor = {\n    prefix: 'fas',\n    iconName: 'meteor',\n    icon: [512, 512, [], \"f753\", \"M491.2.7C452.5 12.3 379.4 35 303.5 62c-2.1-7-4-13.5-5.6-18.6-3-9.7-13.9-14.2-22.9-9.5C232.6 56 122.2 116.5 60.6 176.4c-1.1 1-2.5 2-3.5 3C19 217.4 0 267.3 0 317.2 0 367 19 416.9 57 455c38 38 87.9 57.1 137.8 57 49.9 0 99.8-19 137.9-57.1 1-1 2-2.4 3-3.5 59.8-61.6 120.4-172.1 142.5-214.4 4.7-9 .2-19.9-9.5-22.9-5.2-1.6-11.6-3.5-18.6-5.6 27-76 49.7-149 61.3-187.7C515 8.4 503.6-3 491.2.7zM192 448c-70.7 0-128-57.3-128-128s57.3-128 128-128 128 57.3 128 128-57.3 128-128 128zm-32-192c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm48 96c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16z\"]\n  };\n  var faMicrochip = {\n    prefix: 'fas',\n    iconName: 'microchip',\n    icon: [512, 512, [], \"f2db\", \"M416 48v416c0 26.51-21.49 48-48 48H144c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h224c26.51 0 48 21.49 48 48zm96 58v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42V88h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zm0 96v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42v-48h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zm0 96v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42v-48h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zm0 96v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42v-48h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zM30 376h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6zm0-96h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6zm0-96h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6zm0-96h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6z\"]\n  };\n  var faMicrophone = {\n    prefix: 'fas',\n    iconName: 'microphone',\n    icon: [352, 512, [], \"f130\", \"M176 352c53.02 0 96-42.98 96-96V96c0-53.02-42.98-96-96-96S80 42.98 80 96v160c0 53.02 42.98 96 96 96zm160-160h-16c-8.84 0-16 7.16-16 16v48c0 74.8-64.49 134.82-140.79 127.38C96.71 376.89 48 317.11 48 250.3V208c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v40.16c0 89.64 63.97 169.55 152 181.69V464H96c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16h-56v-33.77C285.71 418.47 352 344.9 352 256v-48c0-8.84-7.16-16-16-16z\"]\n  };\n  var faMicrophoneAlt = {\n    prefix: 'fas',\n    iconName: 'microphone-alt',\n    icon: [352, 512, [], \"f3c9\", \"M336 192h-16c-8.84 0-16 7.16-16 16v48c0 74.8-64.49 134.82-140.79 127.38C96.71 376.89 48 317.11 48 250.3V208c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v40.16c0 89.64 63.97 169.55 152 181.69V464H96c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16h-56v-33.77C285.71 418.47 352 344.9 352 256v-48c0-8.84-7.16-16-16-16zM176 352c53.02 0 96-42.98 96-96h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H272v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H272v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H272c0-53.02-42.98-96-96-96S80 42.98 80 96v160c0 53.02 42.98 96 96 96z\"]\n  };\n  var faMicrophoneAltSlash = {\n    prefix: 'fas',\n    iconName: 'microphone-alt-slash',\n    icon: [640, 512, [], \"f539\", \"M633.82 458.1L476.26 336.33C488.74 312.21 496 284.98 496 256v-48c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v48c0 17.92-3.96 34.8-10.72 50.2l-26.55-20.52c3.1-9.4 5.28-19.22 5.28-29.67h-43.67l-41.4-32H416v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H416v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H416c0-53.02-42.98-96-96-96s-96 42.98-96 96v45.36L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.36 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.41-6.97 4.16-17.02-2.82-22.45zM400 464h-56v-33.78c11.71-1.62 23.1-4.28 33.96-8.08l-50.4-38.96c-6.71.4-13.41.87-20.35.2-55.85-5.45-98.74-48.63-111.18-101.85L144 241.31v6.85c0 89.64 63.97 169.55 152 181.69V464h-56c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16z\"]\n  };\n  var faMicrophoneSlash = {\n    prefix: 'fas',\n    iconName: 'microphone-slash',\n    icon: [640, 512, [], \"f131\", \"M633.82 458.1l-157.8-121.96C488.61 312.13 496 285.01 496 256v-48c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v48c0 17.92-3.96 34.8-10.72 50.2l-26.55-20.52c3.1-9.4 5.28-19.22 5.28-29.67V96c0-53.02-42.98-96-96-96s-96 42.98-96 96v45.36L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.36 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.41-6.97 4.16-17.02-2.82-22.45zM400 464h-56v-33.77c11.66-1.6 22.85-4.54 33.67-8.31l-50.11-38.73c-6.71.4-13.41.87-20.35.2-55.85-5.45-98.74-48.63-111.18-101.85L144 241.31v6.85c0 89.64 63.97 169.55 152 181.69V464h-56c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16z\"]\n  };\n  var faMicroscope = {\n    prefix: 'fas',\n    iconName: 'microscope',\n    icon: [512, 512, [], \"f610\", \"M160 320h12v16c0 8.84 7.16 16 16 16h40c8.84 0 16-7.16 16-16v-16h12c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32V16c0-8.84-7.16-16-16-16h-64c-8.84 0-16 7.16-16 16v16c-17.67 0-32 14.33-32 32v224c0 17.67 14.33 32 32 32zm304 128h-1.29C493.24 413.99 512 369.2 512 320c0-105.88-86.12-192-192-192v64c70.58 0 128 57.42 128 128s-57.42 128-128 128H48c-26.51 0-48 21.49-48 48 0 8.84 7.16 16 16 16h480c8.84 0 16-7.16 16-16 0-26.51-21.49-48-48-48zm-360-32h208c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8H104c-4.42 0-8 3.58-8 8v16c0 4.42 3.58 8 8 8z\"]\n  };\n  var faMinus = {\n    prefix: 'fas',\n    iconName: 'minus',\n    icon: [448, 512, [], \"f068\", \"M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"]\n  };\n  var faMinusCircle = {\n    prefix: 'fas',\n    iconName: 'minus-circle',\n    icon: [512, 512, [], \"f056\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zM124 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H124z\"]\n  };\n  var faMinusSquare = {\n    prefix: 'fas',\n    iconName: 'minus-square',\n    icon: [448, 512, [], \"f146\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z\"]\n  };\n  var faMitten = {\n    prefix: 'fas',\n    iconName: 'mitten',\n    icon: [448, 512, [], \"f7b5\", \"M368 416H48c-8.8 0-16 7.2-16 16v64c0 8.8 7.2 16 16 16h320c8.8 0 16-7.2 16-16v-64c0-8.8-7.2-16-16-16zm57-209.1c-27.2-22.6-67.5-19-90.1 8.2l-20.9 25-29.6-128.4c-18-77.5-95.4-125.9-172.8-108C34.2 21.6-14.2 98.9 3.7 176.4L51.6 384h309l72.5-87c22.7-27.2 19-67.5-8.1-90.1z\"]\n  };\n  var faMobile = {\n    prefix: 'fas',\n    iconName: 'mobile',\n    icon: [320, 512, [], \"f10b\", \"M272 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h224c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM160 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"]\n  };\n  var faMobileAlt = {\n    prefix: 'fas',\n    iconName: 'mobile-alt',\n    icon: [320, 512, [], \"f3cd\", \"M272 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h224c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM160 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm112-108c0 6.6-5.4 12-12 12H60c-6.6 0-12-5.4-12-12V60c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v312z\"]\n  };\n  var faMoneyBill = {\n    prefix: 'fas',\n    iconName: 'money-bill',\n    icon: [640, 512, [], \"f0d6\", \"M608 64H32C14.33 64 0 78.33 0 96v320c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V96c0-17.67-14.33-32-32-32zM48 400v-64c35.35 0 64 28.65 64 64H48zm0-224v-64h64c0 35.35-28.65 64-64 64zm272 176c-44.19 0-80-42.99-80-96 0-53.02 35.82-96 80-96s80 42.98 80 96c0 53.03-35.83 96-80 96zm272 48h-64c0-35.35 28.65-64 64-64v64zm0-224c-35.35 0-64-28.65-64-64h64v64z\"]\n  };\n  var faMoneyBillAlt = {\n    prefix: 'fas',\n    iconName: 'money-bill-alt',\n    icon: [640, 512, [], \"f3d1\", \"M352 288h-16v-88c0-4.42-3.58-8-8-8h-13.58c-4.74 0-9.37 1.4-13.31 4.03l-15.33 10.22a7.994 7.994 0 0 0-2.22 11.09l8.88 13.31a7.994 7.994 0 0 0 11.09 2.22l.47-.31V288h-16c-4.42 0-8 3.58-8 8v16c0 4.42 3.58 8 8 8h64c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8zM608 64H32C14.33 64 0 78.33 0 96v320c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V96c0-17.67-14.33-32-32-32zM48 400v-64c35.35 0 64 28.65 64 64H48zm0-224v-64h64c0 35.35-28.65 64-64 64zm272 192c-53.02 0-96-50.15-96-112 0-61.86 42.98-112 96-112s96 50.14 96 112c0 61.87-43 112-96 112zm272 32h-64c0-35.35 28.65-64 64-64v64zm0-224c-35.35 0-64-28.65-64-64h64v64z\"]\n  };\n  var faMoneyBillWave = {\n    prefix: 'fas',\n    iconName: 'money-bill-wave',\n    icon: [640, 512, [], \"f53a\", \"M621.16 54.46C582.37 38.19 543.55 32 504.75 32c-123.17-.01-246.33 62.34-369.5 62.34-30.89 0-61.76-3.92-92.65-13.72-3.47-1.1-6.95-1.62-10.35-1.62C15.04 79 0 92.32 0 110.81v317.26c0 12.63 7.23 24.6 18.84 29.46C57.63 473.81 96.45 480 135.25 480c123.17 0 246.34-62.35 369.51-62.35 30.89 0 61.76 3.92 92.65 13.72 3.47 1.1 6.95 1.62 10.35 1.62 17.21 0 32.25-13.32 32.25-31.81V83.93c-.01-12.64-7.24-24.6-18.85-29.47zM48 132.22c20.12 5.04 41.12 7.57 62.72 8.93C104.84 170.54 79 192.69 48 192.69v-60.47zm0 285v-47.78c34.37 0 62.18 27.27 63.71 61.4-22.53-1.81-43.59-6.31-63.71-13.62zM320 352c-44.19 0-80-42.99-80-96 0-53.02 35.82-96 80-96s80 42.98 80 96c0 53.03-35.83 96-80 96zm272 27.78c-17.52-4.39-35.71-6.85-54.32-8.44 5.87-26.08 27.5-45.88 54.32-49.28v57.72zm0-236.11c-30.89-3.91-54.86-29.7-55.81-61.55 19.54 2.17 38.09 6.23 55.81 12.66v48.89z\"]\n  };\n  var faMoneyBillWaveAlt = {\n    prefix: 'fas',\n    iconName: 'money-bill-wave-alt',\n    icon: [640, 512, [], \"f53b\", \"M621.16 54.46C582.37 38.19 543.55 32 504.75 32c-123.17-.01-246.33 62.34-369.5 62.34-30.89 0-61.76-3.92-92.65-13.72-3.47-1.1-6.95-1.62-10.35-1.62C15.04 79 0 92.32 0 110.81v317.26c0 12.63 7.23 24.6 18.84 29.46C57.63 473.81 96.45 480 135.25 480c123.17 0 246.34-62.35 369.51-62.35 30.89 0 61.76 3.92 92.65 13.72 3.47 1.1 6.95 1.62 10.35 1.62 17.21 0 32.25-13.32 32.25-31.81V83.93c-.01-12.64-7.24-24.6-18.85-29.47zM320 352c-44.19 0-80-42.99-80-96 0-53.02 35.82-96 80-96s80 42.98 80 96c0 53.03-35.83 96-80 96z\"]\n  };\n  var faMoneyCheck = {\n    prefix: 'fas',\n    iconName: 'money-check',\n    icon: [640, 512, [], \"f53c\", \"M0 448c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V128H0v320zm448-208c0-8.84 7.16-16 16-16h96c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16h-96c-8.84 0-16-7.16-16-16v-32zm0 120c0-4.42 3.58-8 8-8h112c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H456c-4.42 0-8-3.58-8-8v-16zM64 264c0-4.42 3.58-8 8-8h304c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16zm0 96c0-4.42 3.58-8 8-8h176c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16zM624 32H16C7.16 32 0 39.16 0 48v48h640V48c0-8.84-7.16-16-16-16z\"]\n  };\n  var faMoneyCheckAlt = {\n    prefix: 'fas',\n    iconName: 'money-check-alt',\n    icon: [640, 512, [], \"f53d\", \"M608 32H32C14.33 32 0 46.33 0 64v384c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zM176 327.88V344c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-16.29c-11.29-.58-22.27-4.52-31.37-11.35-3.9-2.93-4.1-8.77-.57-12.14l11.75-11.21c2.77-2.64 6.89-2.76 10.13-.73 3.87 2.42 8.26 3.72 12.82 3.72h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V152c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v16.29c11.29.58 22.27 4.51 31.37 11.35 3.9 2.93 4.1 8.77.57 12.14l-11.75 11.21c-2.77 2.64-6.89 2.76-10.13.73-3.87-2.43-8.26-3.72-12.82-3.72h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07zM416 312c0 4.42-3.58 8-8 8H296c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h112c4.42 0 8 3.58 8 8v16zm160 0c0 4.42-3.58 8-8 8h-80c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h80c4.42 0 8 3.58 8 8v16zm0-96c0 4.42-3.58 8-8 8H296c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h272c4.42 0 8 3.58 8 8v16z\"]\n  };\n  var faMonument = {\n    prefix: 'fas',\n    iconName: 'monument',\n    icon: [384, 512, [], \"f5a6\", \"M368 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h352c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm-78.86-347.26a31.97 31.97 0 0 0-9.21-19.44L203.31 4.69c-6.25-6.25-16.38-6.25-22.63 0l-76.6 76.61a31.97 31.97 0 0 0-9.21 19.44L64 416h256l-30.86-315.26zM240 307.2c0 6.4-6.4 12.8-12.8 12.8h-70.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h70.4c6.4 0 12.8 6.4 12.8 12.8v38.4z\"]\n  };\n  var faMoon = {\n    prefix: 'fas',\n    iconName: 'moon',\n    icon: [512, 512, [], \"f186\", \"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"]\n  };\n  var faMortarPestle = {\n    prefix: 'fas',\n    iconName: 'mortar-pestle',\n    icon: [512, 512, [], \"f5a7\", \"M501.54 60.91c17.22-17.22 12.51-46.25-9.27-57.14a35.696 35.696 0 0 0-37.37 3.37L251.09 160h151.37l99.08-99.09zM496 192H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h16c0 80.98 50.2 150.11 121.13 178.32-12.76 16.87-21.72 36.8-24.95 58.69-1.46 9.92 6.04 18.98 16.07 18.98h223.5c10.03 0 17.53-9.06 16.07-18.98-3.22-21.89-12.18-41.82-24.95-58.69C429.8 406.11 480 336.98 480 256h16c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16z\"]\n  };\n  var faMosque = {\n    prefix: 'fas',\n    iconName: 'mosque',\n    icon: [640, 512, [], \"f678\", \"M0 480c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V160H0v320zm579.16-192c17.86-17.39 28.84-37.34 28.84-58.91 0-52.86-41.79-93.79-87.92-122.9-41.94-26.47-80.63-57.77-111.96-96.22L400 0l-8.12 9.97c-31.33 38.45-70.01 69.76-111.96 96.22C233.79 135.3 192 176.23 192 229.09c0 21.57 10.98 41.52 28.84 58.91h358.32zM608 320H192c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h32v-64c0-17.67 14.33-32 32-32s32 14.33 32 32v64h64v-72c0-48 48-72 48-72s48 24 48 72v72h64v-64c0-17.67 14.33-32 32-32s32 14.33 32 32v64h32c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32zM64 0S0 32 0 96v32h128V96c0-64-64-96-64-96z\"]\n  };\n  var faMotorcycle = {\n    prefix: 'fas',\n    iconName: 'motorcycle',\n    icon: [640, 512, [], \"f21c\", \"M512.9 192c-14.9-.1-29.1 2.3-42.4 6.9L437.6 144H520c13.3 0 24-10.7 24-24V88c0-13.3-10.7-24-24-24h-45.3c-6.8 0-13.3 2.9-17.8 7.9l-37.5 41.7-22.8-38C392.2 68.4 384.4 64 376 64h-80c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h66.4l19.2 32H227.9c-17.7-23.1-44.9-40-99.9-40H72.5C59 104 47.7 115 48 128.5c.2 13 10.9 23.5 24 23.5h56c24.5 0 38.7 10.9 47.8 24.8l-11.3 20.5c-13-3.9-26.9-5.7-41.3-5.2C55.9 194.5 1.6 249.6 0 317c-1.6 72.1 56.3 131 128 131 59.6 0 109.7-40.8 124-96h84.2c13.7 0 24.6-11.4 24-25.1-2.1-47.1 17.5-93.7 56.2-125l12.5 20.8c-27.6 23.7-45.1 58.9-44.8 98.2.5 69.6 57.2 126.5 126.8 127.1 71.6.7 129.8-57.5 129.2-129.1-.7-69.6-57.6-126.4-127.2-126.9zM128 400c-44.1 0-80-35.9-80-80s35.9-80 80-80c4.2 0 8.4.3 12.5 1L99 316.4c-8.8 16 2.8 35.6 21 35.6h81.3c-12.4 28.2-40.6 48-73.3 48zm463.9-75.6c-2.2 40.6-35 73.4-75.5 75.5-46.1 2.5-84.4-34.3-84.4-79.9 0-21.4 8.4-40.8 22.1-55.1l49.4 82.4c4.5 7.6 14.4 10 22 5.5l13.7-8.2c7.6-4.5 10-14.4 5.5-22l-48.6-80.9c5.2-1.1 10.5-1.6 15.9-1.6 45.6-.1 82.3 38.2 79.9 84.3z\"]\n  };\n  var faMountain = {\n    prefix: 'fas',\n    iconName: 'mountain',\n    icon: [640, 512, [], \"f6fc\", \"M634.92 462.7l-288-448C341.03 5.54 330.89 0 320 0s-21.03 5.54-26.92 14.7l-288 448a32.001 32.001 0 0 0-1.17 32.64A32.004 32.004 0 0 0 32 512h576c11.71 0 22.48-6.39 28.09-16.67a31.983 31.983 0 0 0-1.17-32.63zM320 91.18L405.39 224H320l-64 64-38.06-38.06L320 91.18z\"]\n  };\n  var faMousePointer = {\n    prefix: 'fas',\n    iconName: 'mouse-pointer',\n    icon: [320, 512, [], \"f245\", \"M302.189 329.126H196.105l55.831 135.993c3.889 9.428-.555 19.999-9.444 23.999l-49.165 21.427c-9.165 4-19.443-.571-23.332-9.714l-53.053-129.136-86.664 89.138C18.729 472.71 0 463.554 0 447.977V18.299C0 1.899 19.921-6.096 30.277 5.443l284.412 292.542c11.472 11.179 3.007 31.141-12.5 31.141z\"]\n  };\n  var faMugHot = {\n    prefix: 'fas',\n    iconName: 'mug-hot',\n    icon: [512, 512, [], \"f7b6\", \"M127.1 146.5c1.3 7.7 8 13.5 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18-3.8-28.2-16.4-54.2-36.6-74.7-14.4-14.7-23.6-33.3-26.4-53.5C111.8 5.9 105 0 96.8 0H80.4C70.6 0 63 8.5 64.1 18c3.9 31.9 18 61.3 40.6 84.4 12 12.2 19.7 27.5 22.4 44.1zm112 0c1.3 7.7 8 13.5 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18-3.8-28.2-16.4-54.2-36.6-74.7-14.4-14.7-23.6-33.3-26.4-53.5C223.8 5.9 217 0 208.8 0h-16.4c-9.8 0-17.5 8.5-16.3 18 3.9 31.9 18 61.3 40.6 84.4 12 12.2 19.7 27.5 22.4 44.1zM400 192H32c-17.7 0-32 14.3-32 32v192c0 53 43 96 96 96h192c53 0 96-43 96-96h16c61.8 0 112-50.2 112-112s-50.2-112-112-112zm0 160h-16v-96h16c26.5 0 48 21.5 48 48s-21.5 48-48 48z\"]\n  };\n  var faMusic = {\n    prefix: 'fas',\n    iconName: 'music',\n    icon: [512, 512, [], \"f001\", \"M511.99 32.01c0-21.71-21.1-37.01-41.6-30.51L150.4 96c-13.3 4.2-22.4 16.5-22.4 30.5v261.42c-10.05-2.38-20.72-3.92-32-3.92-53.02 0-96 28.65-96 64s42.98 64 96 64 96-28.65 96-64V214.31l256-75.02v184.63c-10.05-2.38-20.72-3.92-32-3.92-53.02 0-96 28.65-96 64s42.98 64 96 64 96-28.65 96-64l-.01-351.99z\"]\n  };\n  var faNetworkWired = {\n    prefix: 'fas',\n    iconName: 'network-wired',\n    icon: [640, 512, [], \"f6ff\", \"M640 264v-16c0-8.84-7.16-16-16-16H344v-40h72c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32H224c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h72v40H16c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h104v40H64c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h160c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32h-56v-40h304v40h-56c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h160c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32h-56v-40h104c8.84 0 16-7.16 16-16zM256 128V64h128v64H256zm-64 320H96v-64h96v64zm352 0h-96v-64h96v64z\"]\n  };\n  var faNeuter = {\n    prefix: 'fas',\n    iconName: 'neuter',\n    icon: [288, 512, [], \"f22c\", \"M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V468c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V316.4c64.1-14.5 112-71.9 112-140.4zm-144 80c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"]\n  };\n  var faNewspaper = {\n    prefix: 'fas',\n    iconName: 'newspaper',\n    icon: [576, 512, [], \"f1ea\", \"M552 64H88c-13.255 0-24 10.745-24 24v8H24c-13.255 0-24 10.745-24 24v272c0 30.928 25.072 56 56 56h472c26.51 0 48-21.49 48-48V88c0-13.255-10.745-24-24-24zM56 400a8 8 0 0 1-8-8V144h16v248a8 8 0 0 1-8 8zm236-16H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm-208-96H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm0-96H140c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12z\"]\n  };\n  var faNotEqual = {\n    prefix: 'fas',\n    iconName: 'not-equal',\n    icon: [448, 512, [], \"f53e\", \"M416 208c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32h-23.88l51.87-66.81c5.37-7.02 4.04-17.06-2.97-22.43L415.61 3.3c-7.02-5.38-17.06-4.04-22.44 2.97L311.09 112H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h204.56l-74.53 96H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h55.49l-51.87 66.81c-5.37 7.01-4.04 17.05 2.97 22.43L64 508.7c7.02 5.38 17.06 4.04 22.43-2.97L168.52 400H416c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32H243.05l74.53-96H416z\"]\n  };\n  var faNotesMedical = {\n    prefix: 'fas',\n    iconName: 'notes-medical',\n    icon: [384, 512, [], \"f481\", \"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm96 304c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48zm0-192c0 4.4-3.6 8-8 8H104c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h176c4.4 0 8 3.6 8 8v16z\"]\n  };\n  var faObjectGroup = {\n    prefix: 'fas',\n    iconName: 'object-group',\n    icon: [512, 512, [], \"f247\", \"M480 128V96h20c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v20H64V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v40c0 6.627 5.373 12 12 12h20v320H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-20h384v20c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-20V128zM96 276V140c0-6.627 5.373-12 12-12h168c6.627 0 12 5.373 12 12v136c0 6.627-5.373 12-12 12H108c-6.627 0-12-5.373-12-12zm320 96c0 6.627-5.373 12-12 12H236c-6.627 0-12-5.373-12-12v-52h72c13.255 0 24-10.745 24-24v-72h84c6.627 0 12 5.373 12 12v136z\"]\n  };\n  var faObjectUngroup = {\n    prefix: 'fas',\n    iconName: 'object-ungroup',\n    icon: [576, 512, [], \"f248\", \"M64 320v26a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6v-52a6 6 0 0 1 6-6h26V96H6a6 6 0 0 1-6-6V38a6 6 0 0 1 6-6h52a6 6 0 0 1 6 6v26h288V38a6 6 0 0 1 6-6h52a6 6 0 0 1 6 6v52a6 6 0 0 1-6 6h-26v192h26a6 6 0 0 1 6 6v52a6 6 0 0 1-6 6h-52a6 6 0 0 1-6-6v-26H64zm480-64v-32h26a6 6 0 0 0 6-6v-52a6 6 0 0 0-6-6h-52a6 6 0 0 0-6 6v26H408v72h8c13.255 0 24 10.745 24 24v64c0 13.255-10.745 24-24 24h-64c-13.255 0-24-10.745-24-24v-8H192v72h-26a6 6 0 0 0-6 6v52a6 6 0 0 0 6 6h52a6 6 0 0 0 6-6v-26h288v26a6 6 0 0 0 6 6h52a6 6 0 0 0 6-6v-52a6 6 0 0 0-6-6h-26V256z\"]\n  };\n  var faOilCan = {\n    prefix: 'fas',\n    iconName: 'oil-can',\n    icon: [640, 512, [], \"f613\", \"M629.8 160.31L416 224l-50.49-25.24a64.07 64.07 0 0 0-28.62-6.76H280v-48h56c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16H176c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h56v48h-56L37.72 166.86a31.9 31.9 0 0 0-5.79-.53C14.67 166.33 0 180.36 0 198.34v94.95c0 15.46 11.06 28.72 26.28 31.48L96 337.46V384c0 17.67 14.33 32 32 32h274.63c8.55 0 16.75-3.42 22.76-9.51l212.26-214.75c1.5-1.5 2.34-3.54 2.34-5.66V168c.01-5.31-5.08-9.15-10.19-7.69zM96 288.67l-48-8.73v-62.43l48 8.73v62.43zm453.33 84.66c0 23.56 19.1 42.67 42.67 42.67s42.67-19.1 42.67-42.67S592 288 592 288s-42.67 61.77-42.67 85.33z\"]\n  };\n  var faOm = {\n    prefix: 'fas',\n    iconName: 'om',\n    icon: [512, 512, [], \"f679\", \"M360.6 60.94a10.43 10.43 0 0 0 14.76 0l21.57-21.56a10.43 10.43 0 0 0 0-14.76L375.35 3.06c-4.08-4.07-10.68-4.07-14.76 0l-21.57 21.56a10.43 10.43 0 0 0 0 14.76l21.58 21.56zM412.11 192c-26.69 0-51.77 10.39-70.64 29.25l-24.25 24.25c-6.78 6.77-15.78 10.5-25.38 10.5H245c10.54-22.1 14.17-48.11 7.73-75.23-10.1-42.55-46.36-76.11-89.52-83.19-36.15-5.93-70.9 5.04-96.01 28.78-7.36 6.96-6.97 18.85 1.12 24.93l26.15 19.63c5.72 4.3 13.66 4.32 19.2-.21 8.45-6.9 19.02-10.71 30.27-10.71 26.47 0 48.01 21.53 48.01 48s-21.54 48-48.01 48h-31.9c-11.96 0-19.74 12.58-14.39 23.28l16.09 32.17c2.53 5.06 7.6 8.1 13.17 8.55h33.03c35.3 0 64.01 28.7 64.01 64s-28.71 64-64.01 64c-96.02 0-122.35-54.02-145.15-92.03-4.53-7.55-14.77-3.58-14.79 5.22C-.09 416 41.13 512 159.94 512c70.59 0 128.02-57.42 128.02-128 0-23.42-6.78-45.1-17.81-64h21.69c26.69 0 51.77-10.39 70.64-29.25l24.25-24.25c6.78-6.77 15.78-10.5 25.38-10.5 19.78 0 35.88 16.09 35.88 35.88V392c0 13.23-18.77 24-32.01 24-39.4 0-66.67-24.24-81.82-42.89-4.77-5.87-14.2-2.54-14.2 5.02V416s0 64 96.02 64c48.54 0 96.02-39.47 96.02-88V291.88c0-55.08-44.8-99.88-99.89-99.88zm42.18-124.73c-85.55 65.12-169.05 2.75-172.58.05-6.02-4.62-14.44-4.38-20.14.55-5.74 4.92-7.27 13.17-3.66 19.8 1.61 2.95 40.37 72.34 118.8 72.34 79.92 0 98.78-31.36 101.75-37.66 1.02-2.12 1.53-4.47 1.53-6.83V80c0-13.22-15.14-20.69-25.7-12.73z\"]\n  };\n  var faOtter = {\n    prefix: 'fas',\n    iconName: 'otter',\n    icon: [640, 512, [], \"f700\", \"M608 32h-32l-13.25-13.25A63.97 63.97 0 0 0 517.49 0H497c-11.14 0-22.08 2.91-31.75 8.43L312 96h-56C149.96 96 64 181.96 64 288v1.61c0 32.75-16 62.14-39.56 84.89-18.19 17.58-28.1 43.68-23.19 71.8 6.76 38.8 42.9 65.7 82.28 65.7H192c17.67 0 32-14.33 32-32s-14.33-32-32-32H80c-8.83 0-16-7.17-16-16s7.17-16 16-16h224c8.84 0 16-7.16 16-16v-16c0-17.67-14.33-32-32-32h-64l149.49-80.5L448 416h80c8.84 0 16-7.16 16-16v-16c0-17.67-14.33-32-32-32h-28.22l-55.11-110.21L521.14 192H544c53.02 0 96-42.98 96-96V64c0-17.67-14.33-32-32-32zm-96 16c8.84 0 16 7.16 16 16s-7.16 16-16 16-16-7.16-16-16 7.16-16 16-16zm32 96h-34.96L407.2 198.84l-13.77-27.55L512 112h77.05c-6.62 18.58-24.22 32-45.05 32z\"]\n  };\n  var faOutdent = {\n    prefix: 'fas',\n    iconName: 'outdent',\n    icon: [448, 512, [], \"f03b\", \"M0 84V44c0-8.837 7.163-16 16-16h416c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16zm208 144h224c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H208c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM16 484h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm192-128h224c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H208c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM4.687 267.313l96 95.984C110.734 373.348 128 366.224 128 351.984V160.008c0-14.329-17.325-21.304-27.313-11.313l-96 95.992c-6.249 6.248-6.249 16.378 0 22.626z\"]\n  };\n  var faPager = {\n    prefix: 'fas',\n    iconName: 'pager',\n    icon: [512, 512, [], \"f815\", \"M448 64H64a64 64 0 0 0-64 64v256a64 64 0 0 0 64 64h384a64 64 0 0 0 64-64V128a64 64 0 0 0-64-64zM160 368H80a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h80zm128-16a16 16 0 0 1-16 16h-80v-48h80a16 16 0 0 1 16 16zm160-128a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32v-64a32 32 0 0 1 32-32h320a32 32 0 0 1 32 32z\"]\n  };\n  var faPaintBrush = {\n    prefix: 'fas',\n    iconName: 'paint-brush',\n    icon: [512, 512, [], \"f1fc\", \"M167.02 309.34c-40.12 2.58-76.53 17.86-97.19 72.3-2.35 6.21-8 9.98-14.59 9.98-11.11 0-45.46-27.67-55.25-34.35C0 439.62 37.93 512 128 512c75.86 0 128-43.77 128-120.19 0-3.11-.65-6.08-.97-9.13l-88.01-73.34zM457.89 0c-15.16 0-29.37 6.71-40.21 16.45C213.27 199.05 192 203.34 192 257.09c0 13.7 3.25 26.76 8.73 38.7l63.82 53.18c7.21 1.8 14.64 3.03 22.39 3.03 62.11 0 98.11-45.47 211.16-256.46 7.38-14.35 13.9-29.85 13.9-45.99C512 20.64 486 0 457.89 0z\"]\n  };\n  var faPaintRoller = {\n    prefix: 'fas',\n    iconName: 'paint-roller',\n    icon: [512, 512, [], \"f5aa\", \"M416 128V32c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v96c0 17.67 14.33 32 32 32h352c17.67 0 32-14.33 32-32zm32-64v128c0 17.67-14.33 32-32 32H256c-35.35 0-64 28.65-64 64v32c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32v-32h160c53.02 0 96-42.98 96-96v-64c0-35.35-28.65-64-64-64z\"]\n  };\n  var faPalette = {\n    prefix: 'fas',\n    iconName: 'palette',\n    icon: [512, 512, [], \"f53f\", \"M204.3 5C104.9 24.4 24.8 104.3 5.2 203.4c-37 187 131.7 326.4 258.8 306.7 41.2-6.4 61.4-54.6 42.5-91.7-23.1-45.4 9.9-98.4 60.9-98.4h79.7c35.8 0 64.8-29.6 64.9-65.3C511.5 97.1 368.1-26.9 204.3 5zM96 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm32-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128-64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"]\n  };\n  var faPallet = {\n    prefix: 'fas',\n    iconName: 'pallet',\n    icon: [640, 512, [], \"f482\", \"M144 256h352c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16H384v128l-64-32-64 32V0H144c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16zm480 128c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h48v64H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16h-48v-64h48zm-336 64H128v-64h160v64zm224 0H352v-64h160v64z\"]\n  };\n  var faPaperPlane = {\n    prefix: 'fas',\n    iconName: 'paper-plane',\n    icon: [512, 512, [], \"f1d8\", \"M476 3.2L12.5 270.6c-18.1 10.4-15.8 35.6 2.2 43.2L121 358.4l287.3-253.2c5.5-4.9 13.3 2.6 8.6 8.3L176 407v80.5c0 23.6 28.5 32.9 42.5 15.8L282 426l124.6 52.2c14.2 6 30.4-2.9 33-18.2l72-432C515 7.8 493.3-6.8 476 3.2z\"]\n  };\n  var faPaperclip = {\n    prefix: 'fas',\n    iconName: 'paperclip',\n    icon: [448, 512, [], \"f0c6\", \"M43.246 466.142c-58.43-60.289-57.341-157.511 1.386-217.581L254.392 34c44.316-45.332 116.351-45.336 160.671 0 43.89 44.894 43.943 117.329 0 162.276L232.214 383.128c-29.855 30.537-78.633 30.111-107.982-.998-28.275-29.97-27.368-77.473 1.452-106.953l143.743-146.835c6.182-6.314 16.312-6.422 22.626-.241l22.861 22.379c6.315 6.182 6.422 16.312.241 22.626L171.427 319.927c-4.932 5.045-5.236 13.428-.648 18.292 4.372 4.634 11.245 4.711 15.688.165l182.849-186.851c19.613-20.062 19.613-52.725-.011-72.798-19.189-19.627-49.957-19.637-69.154 0L90.39 293.295c-34.763 35.56-35.299 93.12-1.191 128.313 34.01 35.093 88.985 35.137 123.058.286l172.06-175.999c6.177-6.319 16.307-6.433 22.626-.256l22.877 22.364c6.319 6.177 6.434 16.307.256 22.626l-172.06 175.998c-59.576 60.938-155.943 60.216-214.77-.485z\"]\n  };\n  var faParachuteBox = {\n    prefix: 'fas',\n    iconName: 'parachute-box',\n    icon: [512, 512, [], \"f4cd\", \"M511.9 175c-9.1-75.6-78.4-132.4-158.3-158.7C390 55.7 416 116.9 416 192h28.1L327.5 321.5c-2.5-.6-4.8-1.5-7.5-1.5h-48V192h112C384 76.8 315.1 0 256 0S128 76.8 128 192h112v128h-48c-2.7 0-5 .9-7.5 1.5L67.9 192H96c0-75.1 26-136.3 62.4-175.7C78.5 42.7 9.2 99.5.1 175c-1.1 9.1 6.8 17 16 17h8.7l136.7 151.9c-.7 2.6-1.6 5.2-1.6 8.1v128c0 17.7 14.3 32 32 32h128c17.7 0 32-14.3 32-32V352c0-2.9-.9-5.4-1.6-8.1L487.1 192h8.7c9.3 0 17.2-7.8 16.1-17z\"]\n  };\n  var faParagraph = {\n    prefix: 'fas',\n    iconName: 'paragraph',\n    icon: [448, 512, [], \"f1dd\", \"M408 32H177.531C88.948 32 16.045 103.335 16 191.918 15.956 280.321 87.607 352 176 352v104c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V112h32v344c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V112h40c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24z\"]\n  };\n  var faParking = {\n    prefix: 'fas',\n    iconName: 'parking',\n    icon: [448, 512, [], \"f540\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM240 320h-48v48c0 8.8-7.2 16-16 16h-32c-8.8 0-16-7.2-16-16V144c0-8.8 7.2-16 16-16h96c52.9 0 96 43.1 96 96s-43.1 96-96 96zm0-128h-48v64h48c17.6 0 32-14.4 32-32s-14.4-32-32-32z\"]\n  };\n  var faPassport = {\n    prefix: 'fas',\n    iconName: 'passport',\n    icon: [448, 512, [], \"f5ab\", \"M129.62 176h39.09c1.49-27.03 6.54-51.35 14.21-70.41-27.71 13.24-48.02 39.19-53.3 70.41zm0 32c5.29 31.22 25.59 57.17 53.3 70.41-7.68-19.06-12.72-43.38-14.21-70.41h-39.09zM224 286.69c7.69-7.45 20.77-34.42 23.43-78.69h-46.87c2.67 44.26 15.75 71.24 23.44 78.69zM200.57 176h46.87c-2.66-44.26-15.74-71.24-23.43-78.69-7.7 7.45-20.78 34.43-23.44 78.69zm64.51 102.41c27.71-13.24 48.02-39.19 53.3-70.41h-39.09c-1.49 27.03-6.53 51.35-14.21 70.41zM416 0H64C28.65 0 0 28.65 0 64v384c0 35.35 28.65 64 64 64h352c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32zm-80 416H112c-8.8 0-16-7.2-16-16s7.2-16 16-16h224c8.8 0 16 7.2 16 16s-7.2 16-16 16zm-112-96c-70.69 0-128-57.31-128-128S153.31 64 224 64s128 57.31 128 128-57.31 128-128 128zm41.08-214.41c7.68 19.06 12.72 43.38 14.21 70.41h39.09c-5.28-31.22-25.59-57.17-53.3-70.41z\"]\n  };\n  var faPastafarianism = {\n    prefix: 'fas',\n    iconName: 'pastafarianism',\n    icon: [640, 512, [], \"f67b\", \"M624.54 347.67c-32.7-12.52-57.36 4.25-75.37 16.45-17.06 11.53-23.25 14.42-31.41 11.36-8.12-3.09-10.83-9.38-15.89-29.38-3.33-13.15-7.44-29.32-17.95-42.65 2.24-2.91 4.43-5.79 6.38-8.57C500.47 304.45 513.71 312 532 312c33.95 0 50.87-25.78 62.06-42.83 10.59-16.14 15-21.17 21.94-21.17 13.25 0 24-10.75 24-24s-10.75-24-24-24c-33.95 0-50.87 25.78-62.06 42.83-10.6 16.14-15 21.17-21.94 21.17-17.31 0-37.48-61.43-97.26-101.91l17.25-34.5C485.43 125.5 512 97.98 512 64c0-35.35-28.65-64-64-64s-64 28.65-64 64c0 13.02 3.94 25.1 10.62 35.21l-18.15 36.3c-16.98-4.6-35.6-7.51-56.46-7.51s-39.49 2.91-56.46 7.51l-18.15-36.3C252.06 89.1 256 77.02 256 64c0-35.35-28.65-64-64-64s-64 28.65-64 64c0 33.98 26.56 61.5 60.02 63.6l17.25 34.5C145.68 202.44 125.15 264 108 264c-6.94 0-11.34-5.03-21.94-21.17C74.88 225.78 57.96 200 24 200c-13.25 0-24 10.75-24 24s10.75 24 24 24c6.94 0 11.34 5.03 21.94 21.17C57.13 286.22 74.05 312 108 312c18.29 0 31.53-7.55 41.7-17.11 1.95 2.79 4.14 5.66 6.38 8.57-10.51 13.33-14.62 29.5-17.95 42.65-5.06 20-7.77 26.28-15.89 29.38-8.11 3.06-14.33.17-31.41-11.36-18.03-12.2-42.72-28.92-75.37-16.45-12.39 4.72-18.59 18.58-13.87 30.97 4.72 12.41 18.61 18.61 30.97 13.88 8.16-3.09 14.34-.19 31.39 11.36 13.55 9.16 30.83 20.86 52.42 20.84 7.17 0 14.83-1.28 22.97-4.39 32.66-12.44 39.98-41.33 45.33-62.44 2.21-8.72 3.99-14.49 5.95-18.87 16.62 13.61 36.95 25.88 61.64 34.17-9.96 37-32.18 90.8-60.26 90.8-13.25 0-24 10.75-24 24s10.75 24 24 24c66.74 0 97.05-88.63 107.42-129.14 6.69.6 13.42 1.14 20.58 1.14s13.89-.54 20.58-1.14C350.95 423.37 381.26 512 448 512c13.25 0 24-10.75 24-24s-10.75-24-24-24c-27.94 0-50.21-53.81-60.22-90.81 24.69-8.29 45-20.56 61.62-34.16 1.96 4.38 3.74 10.15 5.95 18.87 5.34 21.11 12.67 50 45.33 62.44 8.14 3.11 15.8 4.39 22.97 4.39 21.59 0 38.87-11.69 52.42-20.84 17.05-11.55 23.28-14.45 31.39-11.36 12.39 4.75 26.27-1.47 30.97-13.88 4.71-12.4-1.49-26.26-13.89-30.98zM448 48c8.82 0 16 7.18 16 16s-7.18 16-16 16-16-7.18-16-16 7.18-16 16-16zm-256 0c8.82 0 16 7.18 16 16s-7.18 16-16 16-16-7.18-16-16 7.18-16 16-16z\"]\n  };\n  var faPaste = {\n    prefix: 'fas',\n    iconName: 'paste',\n    icon: [448, 512, [], \"f0ea\", \"M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z\"]\n  };\n  var faPause = {\n    prefix: 'fas',\n    iconName: 'pause',\n    icon: [448, 512, [], \"f04c\", \"M144 479H48c-26.5 0-48-21.5-48-48V79c0-26.5 21.5-48 48-48h96c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zm304-48V79c0-26.5-21.5-48-48-48h-96c-26.5 0-48 21.5-48 48v352c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48z\"]\n  };\n  var faPauseCircle = {\n    prefix: 'fas',\n    iconName: 'pause-circle',\n    icon: [512, 512, [], \"f28b\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm-16 328c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v160zm112 0c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v160z\"]\n  };\n  var faPaw = {\n    prefix: 'fas',\n    iconName: 'paw',\n    icon: [512, 512, [], \"f1b0\", \"M256 224c-79.41 0-192 122.76-192 200.25 0 34.9 26.81 55.75 71.74 55.75 48.84 0 81.09-25.08 120.26-25.08 39.51 0 71.85 25.08 120.26 25.08 44.93 0 71.74-20.85 71.74-55.75C448 346.76 335.41 224 256 224zm-147.28-12.61c-10.4-34.65-42.44-57.09-71.56-50.13-29.12 6.96-44.29 40.69-33.89 75.34 10.4 34.65 42.44 57.09 71.56 50.13 29.12-6.96 44.29-40.69 33.89-75.34zm84.72-20.78c30.94-8.14 46.42-49.94 34.58-93.36s-46.52-72.01-77.46-63.87-46.42 49.94-34.58 93.36c11.84 43.42 46.53 72.02 77.46 63.87zm281.39-29.34c-29.12-6.96-61.15 15.48-71.56 50.13-10.4 34.65 4.77 68.38 33.89 75.34 29.12 6.96 61.15-15.48 71.56-50.13 10.4-34.65-4.77-68.38-33.89-75.34zm-156.27 29.34c30.94 8.14 65.62-20.45 77.46-63.87 11.84-43.42-3.64-85.21-34.58-93.36s-65.62 20.45-77.46 63.87c-11.84 43.42 3.64 85.22 34.58 93.36z\"]\n  };\n  var faPeace = {\n    prefix: 'fas',\n    iconName: 'peace',\n    icon: [496, 512, [], \"f67c\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm184 248c0 31.93-8.2 61.97-22.57 88.17L280 240.63V74.97c86.23 15.21 152 90.5 152 181.03zM216 437.03c-33.86-5.97-64.49-21.2-89.29-43.02L216 322.57v114.46zm64-114.46L369.29 394c-24.8 21.82-55.43 37.05-89.29 43.02V322.57zm-64-247.6v165.66L86.57 344.17C72.2 317.97 64 287.93 64 256c0-90.53 65.77-165.82 152-181.03z\"]\n  };\n  var faPen = {\n    prefix: 'fas',\n    iconName: 'pen',\n    icon: [512, 512, [], \"f304\", \"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"]\n  };\n  var faPenAlt = {\n    prefix: 'fas',\n    iconName: 'pen-alt',\n    icon: [512, 512, [], \"f305\", \"M497.94 74.17l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.75 18.75-49.15 0-67.91zm-246.8-20.53c-15.62-15.62-40.94-15.62-56.56 0L75.8 172.43c-6.25 6.25-6.25 16.38 0 22.62l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l101.82-101.82 22.63 22.62L93.95 290.03A327.038 327.038 0 0 0 .17 485.11l-.03.23c-1.7 15.28 11.21 28.2 26.49 26.51a327.02 327.02 0 0 0 195.34-93.8l196.79-196.79-82.77-82.77-84.85-84.85z\"]\n  };\n  var faPenFancy = {\n    prefix: 'fas',\n    iconName: 'pen-fancy',\n    icon: [512, 512, [], \"f5ac\", \"M79.18 282.94a32.005 32.005 0 0 0-20.24 20.24L0 480l4.69 4.69 92.89-92.89c-.66-2.56-1.57-5.03-1.57-7.8 0-17.67 14.33-32 32-32s32 14.33 32 32-14.33 32-32 32c-2.77 0-5.24-.91-7.8-1.57l-92.89 92.89L32 512l176.82-58.94a31.983 31.983 0 0 0 20.24-20.24l33.07-84.07-98.88-98.88-84.07 33.07zM369.25 28.32L186.14 227.81l97.85 97.85 199.49-183.11C568.4 67.48 443.73-55.94 369.25 28.32z\"]\n  };\n  var faPenNib = {\n    prefix: 'fas',\n    iconName: 'pen-nib',\n    icon: [512, 512, [], \"f5ad\", \"M136.6 138.79a64.003 64.003 0 0 0-43.31 41.35L0 460l14.69 14.69L164.8 324.58c-2.99-6.26-4.8-13.18-4.8-20.58 0-26.51 21.49-48 48-48s48 21.49 48 48-21.49 48-48 48c-7.4 0-14.32-1.81-20.58-4.8L37.31 497.31 52 512l279.86-93.29a64.003 64.003 0 0 0 41.35-43.31L416 224 288 96l-151.4 42.79zm361.34-64.62l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.75 18.75-49.15 0-67.91z\"]\n  };\n  var faPenSquare = {\n    prefix: 'fas',\n    iconName: 'pen-square',\n    icon: [448, 512, [], \"f14b\", \"M400 480H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zM238.1 177.9L102.4 313.6l-6.3 57.1c-.8 7.6 5.6 14.1 13.3 13.3l57.1-6.3L302.2 242c2.3-2.3 2.3-6.1 0-8.5L246.7 178c-2.5-2.4-6.3-2.4-8.6-.1zM345 165.1L314.9 135c-9.4-9.4-24.6-9.4-33.9 0l-23.1 23.1c-2.3 2.3-2.3 6.1 0 8.5l55.5 55.5c2.3 2.3 6.1 2.3 8.5 0L345 199c9.3-9.3 9.3-24.5 0-33.9z\"]\n  };\n  var faPencilAlt = {\n    prefix: 'fas',\n    iconName: 'pencil-alt',\n    icon: [512, 512, [], \"f303\", \"M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z\"]\n  };\n  var faPencilRuler = {\n    prefix: 'fas',\n    iconName: 'pencil-ruler',\n    icon: [512, 512, [], \"f5ae\", \"M109.46 244.04l134.58-134.56-44.12-44.12-61.68 61.68a7.919 7.919 0 0 1-11.21 0l-11.21-11.21c-3.1-3.1-3.1-8.12 0-11.21l61.68-61.68-33.64-33.65C131.47-3.1 111.39-3.1 99 9.29L9.29 99c-12.38 12.39-12.39 32.47 0 44.86l100.17 100.18zm388.47-116.8c18.76-18.76 18.75-49.17 0-67.93l-45.25-45.25c-18.76-18.76-49.18-18.76-67.95 0l-46.02 46.01 113.2 113.2 46.02-46.03zM316.08 82.71l-297 296.96L.32 487.11c-2.53 14.49 10.09 27.11 24.59 24.56l107.45-18.84L429.28 195.9 316.08 82.71zm186.63 285.43l-33.64-33.64-61.68 61.68c-3.1 3.1-8.12 3.1-11.21 0l-11.21-11.21c-3.09-3.1-3.09-8.12 0-11.21l61.68-61.68-44.14-44.14L267.93 402.5l100.21 100.2c12.39 12.39 32.47 12.39 44.86 0l89.71-89.7c12.39-12.39 12.39-32.47 0-44.86z\"]\n  };\n  var faPeopleCarry = {\n    prefix: 'fas',\n    iconName: 'people-carry',\n    icon: [640, 512, [], \"f4ce\", \"M128 96c26.5 0 48-21.5 48-48S154.5 0 128 0 80 21.5 80 48s21.5 48 48 48zm384 0c26.5 0 48-21.5 48-48S538.5 0 512 0s-48 21.5-48 48 21.5 48 48 48zm125.7 372.1l-44-110-41.1 46.4-2 18.2 27.7 69.2c5 12.5 17 20.1 29.7 20.1 4 0 8-.7 11.9-2.3 16.4-6.6 24.4-25.2 17.8-41.6zm-34.2-209.8L585 178.1c-4.6-20-18.6-36.8-37.5-44.9-18.5-8-39-6.7-56.1 3.3-22.7 13.4-39.7 34.5-48.1 59.4L432 229.8 416 240v-96c0-8.8-7.2-16-16-16H240c-8.8 0-16 7.2-16 16v96l-16.1-10.2-11.3-33.9c-8.3-25-25.4-46-48.1-59.4-17.2-10-37.6-11.3-56.1-3.3-18.9 8.1-32.9 24.9-37.5 44.9l-18.4 80.2c-4.6 20 .7 41.2 14.4 56.7l67.2 75.9 10.1 92.6C130 499.8 143.8 512 160 512c1.2 0 2.3-.1 3.5-.2 17.6-1.9 30.2-17.7 28.3-35.3l-10.1-92.8c-1.5-13-6.9-25.1-15.6-35l-43.3-49 17.6-70.3 6.8 20.4c4.1 12.5 11.9 23.4 24.5 32.6l51.1 32.5c4.6 2.9 12.1 4.6 17.2 5h160c5.1-.4 12.6-2.1 17.2-5l51.1-32.5c12.6-9.2 20.4-20 24.5-32.6l6.8-20.4 17.6 70.3-43.3 49c-8.7 9.9-14.1 22-15.6 35l-10.1 92.8c-1.9 17.6 10.8 33.4 28.3 35.3 1.2.1 2.3.2 3.5.2 16.1 0 30-12.1 31.8-28.5l10.1-92.6 67.2-75.9c13.6-15.5 19-36.7 14.4-56.7zM46.3 358.1l-44 110c-6.6 16.4 1.4 35 17.8 41.6 16.8 6.6 35.1-1.7 41.6-17.8l27.7-69.2-2-18.2-41.1-46.4z\"]\n  };\n  var faPepperHot = {\n    prefix: 'fas',\n    iconName: 'pepper-hot',\n    icon: [512, 512, [], \"f816\", \"M330.67 263.12V173.4l-52.75-24.22C219.44 218.76 197.58 400 56 400a56 56 0 0 0 0 112c212.64 0 370.65-122.87 419.18-210.34l-37.05-38.54zm131.09-128.37C493.92 74.91 477.18 26.48 458.62 3a8 8 0 0 0-11.93-.59l-22.9 23a8.06 8.06 0 0 0-.89 10.23c6.86 10.36 17.05 35.1-1.4 72.32A142.85 142.85 0 0 0 364.34 96c-28 0-54 8.54-76.34 22.59l74.67 34.29v78.24h89.09L506.44 288c3.26-12.62 5.56-25.63 5.56-39.31a154 154 0 0 0-50.24-113.94z\"]\n  };\n  var faPercent = {\n    prefix: 'fas',\n    iconName: 'percent',\n    icon: [448, 512, [], \"f295\", \"M112 224c61.9 0 112-50.1 112-112S173.9 0 112 0 0 50.1 0 112s50.1 112 112 112zm0-160c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48zm224 224c-61.9 0-112 50.1-112 112s50.1 112 112 112 112-50.1 112-112-50.1-112-112-112zm0 160c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zM392.3.2l31.6-.1c19.4-.1 30.9 21.8 19.7 37.8L77.4 501.6a23.95 23.95 0 0 1-19.6 10.2l-33.4.1c-19.5 0-30.9-21.9-19.7-37.8l368-463.7C377.2 4 384.5.2 392.3.2z\"]\n  };\n  var faPercentage = {\n    prefix: 'fas',\n    iconName: 'percentage',\n    icon: [384, 512, [], \"f541\", \"M109.25 173.25c24.99-24.99 24.99-65.52 0-90.51-24.99-24.99-65.52-24.99-90.51 0-24.99 24.99-24.99 65.52 0 90.51 25 25 65.52 25 90.51 0zm256 165.49c-24.99-24.99-65.52-24.99-90.51 0-24.99 24.99-24.99 65.52 0 90.51 24.99 24.99 65.52 24.99 90.51 0 25-24.99 25-65.51 0-90.51zm-1.94-231.43l-22.62-22.62c-12.5-12.5-32.76-12.5-45.25 0L20.69 359.44c-12.5 12.5-12.5 32.76 0 45.25l22.62 22.62c12.5 12.5 32.76 12.5 45.25 0l274.75-274.75c12.5-12.49 12.5-32.75 0-45.25z\"]\n  };\n  var faPersonBooth = {\n    prefix: 'fas',\n    iconName: 'person-booth',\n    icon: [576, 512, [], \"f756\", \"M192 496c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320h-64v176zm32-272h-50.9l-45.2-45.3C115.8 166.6 99.7 160 82.7 160H64c-17.1 0-33.2 6.7-45.3 18.8C6.7 190.9 0 207 0 224.1L.2 320 0 480c0 17.7 14.3 32 31.9 32 17.6 0 32-14.3 32-32l.1-100.7c.9.5 1.6 1.3 2.5 1.7l29.1 43v56c0 17.7 14.3 32 32 32s32-14.3 32-32v-56.5c0-9.9-2.3-19.8-6.7-28.6l-41.2-61.3V253l20.9 20.9c9.1 9.1 21.1 14.1 33.9 14.1H224c17.7 0 32-14.3 32-32s-14.3-32-32-32zM64 128c26.5 0 48-21.5 48-48S90.5 32 64 32 16 53.5 16 80s21.5 48 48 48zm224-96l31.5 223.1-30.9 154.6c-4.3 21.6 13 38.3 31.4 38.3 15.2 0 28-9.1 32.3-30.4.9 16.9 14.6 30.4 31.7 30.4 17.7 0 32-14.3 32-32 0 17.7 14.3 32 32 32s32-14.3 32-32V0H288v32zm-96 0v160h64V0h-32c-17.7 0-32 14.3-32 32zM544 0h-32v496c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V32c0-17.7-14.3-32-32-32z\"]\n  };\n  var faPhone = {\n    prefix: 'fas',\n    iconName: 'phone',\n    icon: [512, 512, [], \"f095\", \"M493.4 24.6l-104-24c-11.3-2.6-22.9 3.3-27.5 13.9l-48 112c-4.2 9.8-1.4 21.3 6.9 28l60.6 49.6c-36 76.7-98.9 140.5-177.2 177.2l-49.6-60.6c-6.8-8.3-18.2-11.1-28-6.9l-112 48C3.9 366.5-2 378.1.6 389.4l24 104C27.1 504.2 36.7 512 48 512c256.1 0 464-207.5 464-464 0-11.2-7.7-20.9-18.6-23.4z\"]\n  };\n  var faPhoneSlash = {\n    prefix: 'fas',\n    iconName: 'phone-slash',\n    icon: [640, 512, [], \"f3dd\", \"M268.2 381.4l-49.6-60.6c-6.8-8.3-18.2-11.1-28-6.9l-112 48c-10.7 4.6-16.5 16.1-13.9 27.5l24 104c2.5 10.8 12.1 18.6 23.4 18.6 100.7 0 193.7-32.4 269.7-86.9l-80-61.8c-10.9 6.5-22.1 12.7-33.6 18.1zm365.6 76.7L475.1 335.5C537.9 256.4 576 156.9 576 48c0-11.2-7.7-20.9-18.6-23.4l-104-24c-11.3-2.6-22.9 3.3-27.5 13.9l-48 112c-4.2 9.8-1.4 21.3 6.9 28l60.6 49.6c-12.2 26.1-27.9 50.3-46 72.8L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3z\"]\n  };\n  var faPhoneSquare = {\n    prefix: 'fas',\n    iconName: 'phone-square',\n    icon: [448, 512, [], \"f098\", \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM94 416c-7.033 0-13.057-4.873-14.616-11.627l-14.998-65a15 15 0 0 1 8.707-17.16l69.998-29.999a15 15 0 0 1 17.518 4.289l30.997 37.885c48.944-22.963 88.297-62.858 110.781-110.78l-37.886-30.997a15.001 15.001 0 0 1-4.289-17.518l30-69.998a15 15 0 0 1 17.16-8.707l65 14.998A14.997 14.997 0 0 1 384 126c0 160.292-129.945 290-290 290z\"]\n  };\n  var faPhoneVolume = {\n    prefix: 'fas',\n    iconName: 'phone-volume',\n    icon: [384, 512, [], \"f2a0\", \"M97.333 506.966c-129.874-129.874-129.681-340.252 0-469.933 5.698-5.698 14.527-6.632 21.263-2.422l64.817 40.513a17.187 17.187 0 0 1 6.849 20.958l-32.408 81.021a17.188 17.188 0 0 1-17.669 10.719l-55.81-5.58c-21.051 58.261-20.612 122.471 0 179.515l55.811-5.581a17.188 17.188 0 0 1 17.669 10.719l32.408 81.022a17.188 17.188 0 0 1-6.849 20.958l-64.817 40.513a17.19 17.19 0 0 1-21.264-2.422zM247.126 95.473c11.832 20.047 11.832 45.008 0 65.055-3.95 6.693-13.108 7.959-18.718 2.581l-5.975-5.726c-3.911-3.748-4.793-9.622-2.261-14.41a32.063 32.063 0 0 0 0-29.945c-2.533-4.788-1.65-10.662 2.261-14.41l5.975-5.726c5.61-5.378 14.768-4.112 18.718 2.581zm91.787-91.187c60.14 71.604 60.092 175.882 0 247.428-4.474 5.327-12.53 5.746-17.552.933l-5.798-5.557c-4.56-4.371-4.977-11.529-.93-16.379 49.687-59.538 49.646-145.933 0-205.422-4.047-4.85-3.631-12.008.93-16.379l5.798-5.557c5.022-4.813 13.078-4.394 17.552.933zm-45.972 44.941c36.05 46.322 36.108 111.149 0 157.546-4.39 5.641-12.697 6.251-17.856 1.304l-5.818-5.579c-4.4-4.219-4.998-11.095-1.285-15.931 26.536-34.564 26.534-82.572 0-117.134-3.713-4.836-3.115-11.711 1.285-15.931l5.818-5.579c5.159-4.947 13.466-4.337 17.856 1.304z\"]\n  };\n  var faPiggyBank = {\n    prefix: 'fas',\n    iconName: 'piggy-bank',\n    icon: [576, 512, [], \"f4d3\", \"M560 224h-29.5c-8.8-20-21.6-37.7-37.4-52.5L512 96h-32c-29.4 0-55.4 13.5-73 34.3-7.6-1.1-15.1-2.3-23-2.3H256c-77.4 0-141.9 55-156.8 128H56c-14.8 0-26.5-13.5-23.5-28.8C34.7 215.8 45.4 208 57 208h1c3.3 0 6-2.7 6-6v-20c0-3.3-2.7-6-6-6-28.5 0-53.9 20.4-57.5 48.6C-3.9 258.8 22.7 288 56 288h40c0 52.2 25.4 98.1 64 127.3V496c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-48h128v48c0 8.8 7.2 16 16 16h64c8.8 0 16-7.2 16-16v-80.7c11.8-8.9 22.3-19.4 31.3-31.3H560c8.8 0 16-7.2 16-16V240c0-8.8-7.2-16-16-16zm-128 64c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zM256 96h128c5.4 0 10.7.4 15.9.8 0-.3.1-.5.1-.8 0-53-43-96-96-96s-96 43-96 96c0 2.1.5 4.1.6 6.2 15.2-3.9 31-6.2 47.4-6.2z\"]\n  };\n  var faPills = {\n    prefix: 'fas',\n    iconName: 'pills',\n    icon: [576, 512, [], \"f484\", \"M112 32C50.1 32 0 82.1 0 144v224c0 61.9 50.1 112 112 112s112-50.1 112-112V144c0-61.9-50.1-112-112-112zm48 224H64V144c0-26.5 21.5-48 48-48s48 21.5 48 48v112zm139.7-29.7c-3.5-3.5-9.4-3.1-12.3.8-45.3 62.5-40.4 150.1 15.9 206.4 56.3 56.3 143.9 61.2 206.4 15.9 4-2.9 4.3-8.8.8-12.3L299.7 226.3zm229.8-19c-56.3-56.3-143.9-61.2-206.4-15.9-4 2.9-4.3 8.8-.8 12.3l210.8 210.8c3.5 3.5 9.4 3.1 12.3-.8 45.3-62.6 40.5-150.1-15.9-206.4z\"]\n  };\n  var faPizzaSlice = {\n    prefix: 'fas',\n    iconName: 'pizza-slice',\n    icon: [512, 512, [], \"f818\", \"M158.87.15c-16.16-1.52-31.2 8.42-35.33 24.12l-14.81 56.27c187.62 5.49 314.54 130.61 322.48 317l56.94-15.78c15.72-4.36 25.49-19.68 23.62-35.9C490.89 165.08 340.78 17.32 158.87.15zm-58.47 112L.55 491.64a16.21 16.21 0 0 0 20 19.75l379-105.1c-4.27-174.89-123.08-292.14-299.15-294.1zM128 416a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm48-152a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm104 104a32 32 0 1 1 32-32 32 32 0 0 1-32 32z\"]\n  };\n  var faPlaceOfWorship = {\n    prefix: 'fas',\n    iconName: 'place-of-worship',\n    icon: [640, 512, [], \"f67f\", \"M620.61 366.55L512 320v192h112c8.84 0 16-7.16 16-16V395.96a32 32 0 0 0-19.39-29.41zM0 395.96V496c0 8.84 7.16 16 16 16h112V320L19.39 366.55A32 32 0 0 0 0 395.96zm464.46-149.28L416 217.6V102.63c0-8.49-3.37-16.62-9.38-22.63L331.31 4.69c-6.25-6.25-16.38-6.25-22.62 0L233.38 80c-6 6-9.38 14.14-9.38 22.63V217.6l-48.46 29.08A31.997 31.997 0 0 0 160 274.12V512h96v-96c0-35.35 28.66-64 64-64s64 28.65 64 64v96h96V274.12c0-11.24-5.9-21.66-15.54-27.44z\"]\n  };\n  var faPlane = {\n    prefix: 'fas',\n    iconName: 'plane',\n    icon: [576, 512, [], \"f072\", \"M480 192H365.71L260.61 8.06A16.014 16.014 0 0 0 246.71 0h-65.5c-10.63 0-18.3 10.17-15.38 20.39L214.86 192H112l-43.2-57.6c-3.02-4.03-7.77-6.4-12.8-6.4H16.01C5.6 128-2.04 137.78.49 147.88L32 256 .49 364.12C-2.04 374.22 5.6 384 16.01 384H56c5.04 0 9.78-2.37 12.8-6.4L112 320h102.86l-49.03 171.6c-2.92 10.22 4.75 20.4 15.38 20.4h65.5c5.74 0 11.04-3.08 13.89-8.06L365.71 320H480c35.35 0 96-28.65 96-64s-60.65-64-96-64z\"]\n  };\n  var faPlaneArrival = {\n    prefix: 'fas',\n    iconName: 'plane-arrival',\n    icon: [640, 512, [], \"f5af\", \"M624 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM44.81 205.66l88.74 80a62.607 62.607 0 0 0 25.47 13.93l287.6 78.35c26.48 7.21 54.56 8.72 81 1.36 29.67-8.27 43.44-21.21 47.25-35.71 3.83-14.5-1.73-32.71-23.37-54.96-19.28-19.82-44.35-32.79-70.83-40l-97.51-26.56L282.8 30.22c-1.51-5.81-5.95-10.35-11.66-11.91L206.05.58c-10.56-2.88-20.9 5.32-20.71 16.44l47.92 164.21-102.2-27.84-27.59-67.88c-1.93-4.89-6.01-8.57-11.02-9.93L52.72 64.75c-10.34-2.82-20.53 5-20.72 15.88l.23 101.78c.19 8.91 6.03 17.34 12.58 23.25z\"]\n  };\n  var faPlaneDeparture = {\n    prefix: 'fas',\n    iconName: 'plane-departure',\n    icon: [640, 512, [], \"f5b0\", \"M624 448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h608c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM80.55 341.27c6.28 6.84 15.1 10.72 24.33 10.71l130.54-.18a65.62 65.62 0 0 0 29.64-7.12l290.96-147.65c26.74-13.57 50.71-32.94 67.02-58.31 18.31-28.48 20.3-49.09 13.07-63.65-7.21-14.57-24.74-25.27-58.25-27.45-29.85-1.94-59.54 5.92-86.28 19.48l-98.51 49.99-218.7-82.06a17.799 17.799 0 0 0-18-1.11L90.62 67.29c-10.67 5.41-13.25 19.65-5.17 28.53l156.22 98.1-103.21 52.38-72.35-36.47a17.804 17.804 0 0 0-16.07.02L9.91 230.22c-10.44 5.3-13.19 19.12-5.57 28.08l76.21 82.97z\"]\n  };\n  var faPlay = {\n    prefix: 'fas',\n    iconName: 'play',\n    icon: [448, 512, [], \"f04b\", \"M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z\"]\n  };\n  var faPlayCircle = {\n    prefix: 'fas',\n    iconName: 'play-circle',\n    icon: [512, 512, [], \"f144\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z\"]\n  };\n  var faPlug = {\n    prefix: 'fas',\n    iconName: 'plug',\n    icon: [384, 512, [], \"f1e6\", \"M256 144V32c0-17.673 14.327-32 32-32s32 14.327 32 32v112h-64zm112 16H16c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h16v32c0 77.406 54.969 141.971 128 156.796V512h64v-99.204c73.031-14.825 128-79.39 128-156.796v-32h16c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16zm-240-16V32c0-17.673-14.327-32-32-32S64 14.327 64 32v112h64z\"]\n  };\n  var faPlus = {\n    prefix: 'fas',\n    iconName: 'plus',\n    icon: [448, 512, [], \"f067\", \"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"]\n  };\n  var faPlusCircle = {\n    prefix: 'fas',\n    iconName: 'plus-circle',\n    icon: [512, 512, [], \"f055\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\"]\n  };\n  var faPlusSquare = {\n    prefix: 'fas',\n    iconName: 'plus-square',\n    icon: [448, 512, [], \"f0fe\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\"]\n  };\n  var faPodcast = {\n    prefix: 'fas',\n    iconName: 'podcast',\n    icon: [448, 512, [], \"f2ce\", \"M267.429 488.563C262.286 507.573 242.858 512 224 512c-18.857 0-38.286-4.427-43.428-23.437C172.927 460.134 160 388.898 160 355.75c0-35.156 31.142-43.75 64-43.75s64 8.594 64 43.75c0 32.949-12.871 104.179-20.571 132.813zM156.867 288.554c-18.693-18.308-29.958-44.173-28.784-72.599 2.054-49.724 42.395-89.956 92.124-91.881C274.862 121.958 320 165.807 320 220c0 26.827-11.064 51.116-28.866 68.552-2.675 2.62-2.401 6.986.628 9.187 9.312 6.765 16.46 15.343 21.234 25.363 1.741 3.654 6.497 4.66 9.449 1.891 28.826-27.043 46.553-65.783 45.511-108.565-1.855-76.206-63.595-138.208-139.793-140.369C146.869 73.753 80 139.215 80 220c0 41.361 17.532 78.7 45.55 104.989 2.953 2.771 7.711 1.77 9.453-1.887 4.774-10.021 11.923-18.598 21.235-25.363 3.029-2.2 3.304-6.566.629-9.185zM224 0C100.204 0 0 100.185 0 224c0 89.992 52.602 165.647 125.739 201.408 4.333 2.118 9.267-1.544 8.535-6.31-2.382-15.512-4.342-30.946-5.406-44.339-.146-1.836-1.149-3.486-2.678-4.512-47.4-31.806-78.564-86.016-78.187-147.347.592-96.237 79.29-174.648 175.529-174.899C320.793 47.747 400 126.797 400 224c0 61.932-32.158 116.49-80.65 147.867-.999 14.037-3.069 30.588-5.624 47.23-.732 4.767 4.203 8.429 8.535 6.31C395.227 389.727 448 314.187 448 224 448 100.205 347.815 0 224 0zm0 160c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64z\"]\n  };\n  var faPoll = {\n    prefix: 'fas',\n    iconName: 'poll',\n    icon: [448, 512, [], \"f681\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM160 368c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16V240c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v128zm96 0c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16V144c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v224zm96 0c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-64c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v64z\"]\n  };\n  var faPollH = {\n    prefix: 'fas',\n    iconName: 'poll-h',\n    icon: [448, 512, [], \"f682\", \"M448 432V80c0-26.5-21.5-48-48-48H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48zM112 192c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h128c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16H112zm0 96c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h224c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16H112zm0 96c-8.84 0-16-7.16-16-16v-32c0-8.84 7.16-16 16-16h64c8.84 0 16 7.16 16 16v32c0 8.84-7.16 16-16 16h-64z\"]\n  };\n  var faPoo = {\n    prefix: 'fas',\n    iconName: 'poo',\n    icon: [512, 512, [], \"f2fe\", \"M451.4 369.1C468.7 356 480 335.4 480 312c0-39.8-32.2-72-72-72h-14.1c13.4-11.7 22.1-28.8 22.1-48 0-35.3-28.7-64-64-64h-5.9c3.6-10.1 5.9-20.7 5.9-32 0-53-43-96-96-96-5.2 0-10.2.7-15.1 1.5C250.3 14.6 256 30.6 256 48c0 44.2-35.8 80-80 80h-16c-35.3 0-64 28.7-64 64 0 19.2 8.7 36.3 22.1 48H104c-39.8 0-72 32.2-72 72 0 23.4 11.3 44 28.6 57.1C26.3 374.6 0 404.1 0 440c0 39.8 32.2 72 72 72h368c39.8 0 72-32.2 72-72 0-35.9-26.3-65.4-60.6-70.9zM192 256c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm159.5 139C341 422.9 293 448 256 448s-85-25.1-95.5-53c-2-5.3 2-11 7.8-11h175.4c5.8 0 9.8 5.7 7.8 11zM320 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"]\n  };\n  var faPooStorm = {\n    prefix: 'fas',\n    iconName: 'poo-storm',\n    icon: [448, 512, [], \"f75a\", \"M308 336h-57.7l17.3-64.9c2-7.6-3.7-15.1-11.6-15.1h-68c-6 0-11.1 4.5-11.9 10.4l-16 120c-1 7.2 4.6 13.6 11.9 13.6h59.3l-23 97.2c-1.8 7.6 4 14.8 11.7 14.8 4.2 0 8.2-2.2 10.4-6l88-152c4.6-8-1.2-18-10.4-18zm66.4-111.3c5.9-9.6 9.6-20.6 9.6-32.7 0-35.3-28.7-64-64-64h-5.9c3.6-10.1 5.9-20.7 5.9-32 0-53-43-96-96-96-5.2 0-10.2.7-15.1 1.5C218.3 14.6 224 30.6 224 48c0 44.2-35.8 80-80 80h-16c-35.3 0-64 28.7-64 64 0 12.1 3.7 23.1 9.6 32.7C32.6 228 0 262.2 0 304c0 44 36 80 80 80h48.3c.1-.6 0-1.2 0-1.8l16-120c3-21.8 21.7-38.2 43.7-38.2h68c13.8 0 26.5 6.3 34.9 17.2s11.2 24.8 7.6 38.1l-6.6 24.7h16c15.7 0 30.3 8.4 38.1 22 7.8 13.6 7.8 30.5 0 44l-8.1 14h30c44 0 80-36 80-80 .1-41.8-32.5-76-73.5-79.3z\"]\n  };\n  var faPoop = {\n    prefix: 'fas',\n    iconName: 'poop',\n    icon: [512, 512, [], \"f619\", \"M451.36 369.14C468.66 355.99 480 335.41 480 312c0-39.77-32.24-72-72-72h-14.07c13.42-11.73 22.07-28.78 22.07-48 0-35.35-28.65-64-64-64h-5.88c3.57-10.05 5.88-20.72 5.88-32 0-53.02-42.98-96-96-96-5.17 0-10.15.74-15.11 1.52C250.31 14.64 256 30.62 256 48c0 44.18-35.82 80-80 80h-16c-35.35 0-64 28.65-64 64 0 19.22 8.65 36.27 22.07 48H104c-39.76 0-72 32.23-72 72 0 23.41 11.34 43.99 28.64 57.14C26.31 374.62 0 404.12 0 440c0 39.76 32.24 72 72 72h368c39.76 0 72-32.24 72-72 0-35.88-26.31-65.38-60.64-70.86z\"]\n  };\n  var faPortrait = {\n    prefix: 'fas',\n    iconName: 'portrait',\n    icon: [384, 512, [], \"f3e0\", \"M336 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM192 128c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H102.4C90 384 80 375.4 80 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5c12.3 5.1 25.7 8 39.8 8s27.6-2.9 39.8-8h5c37.1 0 67.2 25.8 67.2 57.6v19.2z\"]\n  };\n  var faPoundSign = {\n    prefix: 'fas',\n    iconName: 'pound-sign',\n    icon: [320, 512, [], \"f154\", \"M308 352h-45.495c-6.627 0-12 5.373-12 12v50.848H128V288h84c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-84v-63.556c0-32.266 24.562-57.086 61.792-57.086 23.658 0 45.878 11.505 57.652 18.849 5.151 3.213 11.888 2.051 15.688-2.685l28.493-35.513c4.233-5.276 3.279-13.005-2.119-17.081C273.124 54.56 236.576 32 187.931 32 106.026 32 48 84.742 48 157.961V224H20c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h28v128H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h296c6.627 0 12-5.373 12-12V364c0-6.627-5.373-12-12-12z\"]\n  };\n  var faPowerOff = {\n    prefix: 'fas',\n    iconName: 'power-off',\n    icon: [512, 512, [], \"f011\", \"M400 54.1c63 45 104 118.6 104 201.9 0 136.8-110.8 247.7-247.5 248C120 504.3 8.2 393 8 256.4 7.9 173.1 48.9 99.3 111.8 54.2c11.7-8.3 28-4.8 35 7.7L162.6 90c5.9 10.5 3.1 23.8-6.6 31-41.5 30.8-68 79.6-68 134.9-.1 92.3 74.5 168.1 168 168.1 91.6 0 168.6-74.2 168-169.1-.3-51.8-24.7-101.8-68.1-134-9.7-7.2-12.4-20.5-6.5-30.9l15.8-28.1c7-12.4 23.2-16.1 34.8-7.8zM296 264V24c0-13.3-10.7-24-24-24h-32c-13.3 0-24 10.7-24 24v240c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24z\"]\n  };\n  var faPray = {\n    prefix: 'fas',\n    iconName: 'pray',\n    icon: [384, 512, [], \"f683\", \"M256 128c35.35 0 64-28.65 64-64S291.35 0 256 0s-64 28.65-64 64 28.65 64 64 64zm-30.63 169.75c14.06 16.72 39 19.09 55.97 5.22l88-72.02c17.09-13.98 19.59-39.19 5.62-56.28-13.97-17.11-39.19-19.59-56.31-5.62l-57.44 47-38.91-46.31c-15.44-18.39-39.22-27.92-64-25.33-24.19 2.48-45.25 16.27-56.37 36.92l-49.37 92.03c-23.4 43.64-8.69 96.37 34.19 123.75L131.56 432H40c-22.09 0-40 17.91-40 40s17.91 40 40 40h208c34.08 0 53.77-42.79 28.28-68.28L166.42 333.86l34.8-64.87 24.15 28.76z\"]\n  };\n  var faPrayingHands = {\n    prefix: 'fas',\n    iconName: 'praying-hands',\n    icon: [640, 512, [], \"f684\", \"M272 191.91c-17.6 0-32 14.4-32 32v80c0 8.84-7.16 16-16 16s-16-7.16-16-16v-76.55c0-17.39 4.72-34.47 13.69-49.39l77.75-129.59c9.09-15.16 4.19-34.81-10.97-43.91-14.45-8.67-32.72-4.3-42.3 9.21-.2.23-.62.21-.79.48l-117.26 175.9C117.56 205.9 112 224.31 112 243.29v80.23l-90.12 30.04A31.974 31.974 0 0 0 0 383.91v96c0 10.82 8.52 32 32 32 2.69 0 5.41-.34 8.06-1.03l179.19-46.62C269.16 449.99 304 403.8 304 351.91v-128c0-17.6-14.4-32-32-32zm346.12 161.73L528 323.6v-80.23c0-18.98-5.56-37.39-16.12-53.23L394.62 14.25c-.18-.27-.59-.24-.79-.48-9.58-13.51-27.85-17.88-42.3-9.21-15.16 9.09-20.06 28.75-10.97 43.91l77.75 129.59c8.97 14.92 13.69 32 13.69 49.39V304c0 8.84-7.16 16-16 16s-16-7.16-16-16v-80c0-17.6-14.4-32-32-32s-32 14.4-32 32v128c0 51.89 34.84 98.08 84.75 112.34l179.19 46.62c2.66.69 5.38 1.03 8.06 1.03 23.48 0 32-21.18 32-32v-96c0-13.77-8.81-25.99-21.88-30.35z\"]\n  };\n  var faPrescription = {\n    prefix: 'fas',\n    iconName: 'prescription',\n    icon: [384, 512, [], \"f5b1\", \"M301.26 352l78.06-78.06c6.25-6.25 6.25-16.38 0-22.63l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0L256 306.74l-83.96-83.96C219.31 216.8 256 176.89 256 128c0-53.02-42.98-96-96-96H16C7.16 32 0 39.16 0 48v256c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-80h18.75l128 128-78.06 78.06c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0L256 397.25l78.06 78.06c6.25 6.25 16.38 6.25 22.63 0l22.63-22.63c6.25-6.25 6.25-16.38 0-22.63L301.26 352zM64 96h96c17.64 0 32 14.36 32 32s-14.36 32-32 32H64V96z\"]\n  };\n  var faPrescriptionBottle = {\n    prefix: 'fas',\n    iconName: 'prescription-bottle',\n    icon: [384, 512, [], \"f485\", \"M32 192h120c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H32v64h120c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H32v64h120c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H32v64c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32V128H32v64zM360 0H24C10.8 0 0 10.8 0 24v48c0 13.2 10.8 24 24 24h336c13.2 0 24-10.8 24-24V24c0-13.2-10.8-24-24-24z\"]\n  };\n  var faPrescriptionBottleAlt = {\n    prefix: 'fas',\n    iconName: 'prescription-bottle-alt',\n    icon: [384, 512, [], \"f486\", \"M360 0H24C10.8 0 0 10.8 0 24v48c0 13.2 10.8 24 24 24h336c13.2 0 24-10.8 24-24V24c0-13.2-10.8-24-24-24zM32 480c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32V128H32v352zm64-184c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48z\"]\n  };\n  var faPrint = {\n    prefix: 'fas',\n    iconName: 'print',\n    icon: [512, 512, [], \"f02f\", \"M448 192V77.25c0-8.49-3.37-16.62-9.37-22.63L393.37 9.37c-6-6-14.14-9.37-22.63-9.37H96C78.33 0 64 14.33 64 32v160c-35.35 0-64 28.65-64 64v112c0 8.84 7.16 16 16 16h48v96c0 17.67 14.33 32 32 32h320c17.67 0 32-14.33 32-32v-96h48c8.84 0 16-7.16 16-16V256c0-35.35-28.65-64-64-64zm-64 256H128v-96h256v96zm0-224H128V64h192v48c0 8.84 7.16 16 16 16h48v96zm48 72c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z\"]\n  };\n  var faProcedures = {\n    prefix: 'fas',\n    iconName: 'procedures',\n    icon: [640, 512, [], \"f487\", \"M528 224H272c-8.8 0-16 7.2-16 16v144H64V144c0-8.8-7.2-16-16-16H16c-8.8 0-16 7.2-16 16v352c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-48h512v48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V336c0-61.9-50.1-112-112-112zM136 96h126.1l27.6 55.2c5.9 11.8 22.7 11.8 28.6 0L368 51.8 390.1 96H512c8.8 0 16-7.2 16-16s-7.2-16-16-16H409.9L382.3 8.8C376.4-3 359.6-3 353.7 8.8L304 108.2l-19.9-39.8c-1.4-2.7-4.1-4.4-7.2-4.4H136c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8zm24 256c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64z\"]\n  };\n  var faProjectDiagram = {\n    prefix: 'fas',\n    iconName: 'project-diagram',\n    icon: [640, 512, [], \"f542\", \"M384 320H256c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h128c17.67 0 32-14.33 32-32V352c0-17.67-14.33-32-32-32zM192 32c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v128c0 17.67 14.33 32 32 32h95.72l73.16 128.04C211.98 300.98 232.4 288 256 288h.28L192 175.51V128h224V64H192V32zM608 0H480c-17.67 0-32 14.33-32 32v128c0 17.67 14.33 32 32 32h128c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32z\"]\n  };\n  var faPuzzlePiece = {\n    prefix: 'fas',\n    iconName: 'puzzle-piece',\n    icon: [576, 512, [], \"f12e\", \"M519.442 288.651c-41.519 0-59.5 31.593-82.058 31.593C377.409 320.244 432 144 432 144s-196.288 80-196.288-3.297c0-35.827 36.288-46.25 36.288-85.985C272 19.216 243.885 0 210.539 0c-34.654 0-66.366 18.891-66.366 56.346 0 41.364 31.711 59.277 31.711 81.75C175.885 207.719 0 166.758 0 166.758v333.237s178.635 41.047 178.635-28.662c0-22.473-40-40.107-40-81.471 0-37.456 29.25-56.346 63.577-56.346 33.673 0 61.788 19.216 61.788 54.717 0 39.735-36.288 50.158-36.288 85.985 0 60.803 129.675 25.73 181.23 25.73 0 0-34.725-120.101 25.827-120.101 35.962 0 46.423 36.152 86.308 36.152C556.712 416 576 387.99 576 354.443c0-34.199-18.962-65.792-56.558-65.792z\"]\n  };\n  var faQrcode = {\n    prefix: 'fas',\n    iconName: 'qrcode',\n    icon: [448, 512, [], \"f029\", \"M0 224h192V32H0v192zM64 96h64v64H64V96zm192-64v192h192V32H256zm128 128h-64V96h64v64zM0 480h192V288H0v192zm64-128h64v64H64v-64zm352-64h32v128h-96v-32h-32v96h-64V288h96v32h64v-32zm0 160h32v32h-32v-32zm-64 0h32v32h-32v-32z\"]\n  };\n  var faQuestion = {\n    prefix: 'fas',\n    iconName: 'question',\n    icon: [384, 512, [], \"f128\", \"M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z\"]\n  };\n  var faQuestionCircle = {\n    prefix: 'fas',\n    iconName: 'question-circle',\n    icon: [512, 512, [], \"f059\", \"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z\"]\n  };\n  var faQuidditch = {\n    prefix: 'fas',\n    iconName: 'quidditch',\n    icon: [640, 512, [], \"f458\", \"M256.5 216.8L343.2 326s-16.6 102.4-76.6 150.1C206.7 523.8 0 510.2 0 510.2s3.8-23.1 11-55.4l94.6-112.2c4-4.7-.9-11.6-6.6-9.5l-60.4 22.1c14.4-41.7 32.7-80 54.6-97.5 59.9-47.8 163.3-40.9 163.3-40.9zm238 135c-44 0-79.8 35.8-79.8 79.9 0 44.1 35.7 79.9 79.8 79.9 44.1 0 79.8-35.8 79.8-79.9 0-44.2-35.8-79.9-79.8-79.9zM636.5 31L616.7 6c-5.5-6.9-15.5-8-22.4-2.6L361.8 181.3l-34.1-43c-5.1-6.4-15.1-5.2-18.6 2.2l-25.3 54.6 86.7 109.2 58.8-12.4c8-1.7 11.4-11.2 6.3-17.6l-34.1-42.9L634 53.5c6.9-5.5 8-15.6 2.5-22.5z\"]\n  };\n  var faQuoteLeft = {\n    prefix: 'fas',\n    iconName: 'quote-left',\n    icon: [512, 512, [], \"f10d\", \"M464 256h-80v-64c0-35.3 28.7-64 64-64h8c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24h-8c-88.4 0-160 71.6-160 160v240c0 26.5 21.5 48 48 48h128c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48zm-288 0H96v-64c0-35.3 28.7-64 64-64h8c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24h-8C71.6 32 0 103.6 0 192v240c0 26.5 21.5 48 48 48h128c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\"]\n  };\n  var faQuoteRight = {\n    prefix: 'fas',\n    iconName: 'quote-right',\n    icon: [512, 512, [], \"f10e\", \"M464 32H336c-26.5 0-48 21.5-48 48v128c0 26.5 21.5 48 48 48h80v64c0 35.3-28.7 64-64 64h-8c-13.3 0-24 10.7-24 24v48c0 13.3 10.7 24 24 24h8c88.4 0 160-71.6 160-160V80c0-26.5-21.5-48-48-48zm-288 0H48C21.5 32 0 53.5 0 80v128c0 26.5 21.5 48 48 48h80v64c0 35.3-28.7 64-64 64h-8c-13.3 0-24 10.7-24 24v48c0 13.3 10.7 24 24 24h8c88.4 0 160-71.6 160-160V80c0-26.5-21.5-48-48-48z\"]\n  };\n  var faQuran = {\n    prefix: 'fas',\n    iconName: 'quran',\n    icon: [448, 512, [], \"f687\", \"M448 358.4V25.6c0-16-9.6-25.6-25.6-25.6H96C41.6 0 0 41.6 0 96v320c0 54.4 41.6 96 96 96h326.4c12.8 0 25.6-9.6 25.6-25.6v-16c0-6.4-3.2-12.8-9.6-19.2-3.2-16-3.2-60.8 0-73.6 6.4-3.2 9.6-9.6 9.6-19.2zM301.08 145.82c.6-1.21 1.76-1.82 2.92-1.82s2.32.61 2.92 1.82l11.18 22.65 25 3.63c2.67.39 3.74 3.67 1.81 5.56l-18.09 17.63 4.27 24.89c.36 2.11-1.31 3.82-3.21 3.82-.5 0-1.02-.12-1.52-.38L304 211.87l-22.36 11.75c-.5.26-1.02.38-1.52.38-1.9 0-3.57-1.71-3.21-3.82l4.27-24.89-18.09-17.63c-1.94-1.89-.87-5.17 1.81-5.56l24.99-3.63 11.19-22.65zm-57.89-69.01c13.67 0 27.26 2.49 40.38 7.41a6.775 6.775 0 1 1-2.38 13.12c-.67 0-3.09-.21-4.13-.21-52.31 0-94.86 42.55-94.86 94.86 0 52.3 42.55 94.86 94.86 94.86 1.03 0 3.48-.21 4.13-.21 3.93 0 6.8 3.14 6.8 6.78 0 2.98-1.94 5.51-4.62 6.42-13.07 4.87-26.59 7.34-40.19 7.34C179.67 307.19 128 255.51 128 192c0-63.52 51.67-115.19 115.19-115.19zM380.8 448H96c-19.2 0-32-12.8-32-32s16-32 32-32h284.8v64z\"]\n  };\n  var faRadiation = {\n    prefix: 'fas',\n    iconName: 'radiation',\n    icon: [496, 512, [], \"f7b9\", \"M167.8 256.2H16.2C7.1 256.2-.6 263.9 0 273c5.1 75.8 44.4 142.2 102.5 184.2 7.4 5.3 17.9 2.9 22.7-4.8L205.6 324c-22.6-14.3-37.8-39.2-37.8-67.8zm37.8-67.7c12.3-7.7 26.8-12.4 42.4-12.4s30 4.7 42.4 12.4L370.8 60c4.8-7.7 2.4-18.1-5.6-22.4C330.3 18.8 290.4 8 248 8s-82.3 10.8-117.2 29.6c-8 4.3-10.4 14.8-5.6 22.4l80.4 128.5zm42.4 19.7c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm231.8 48H328.2c0 28.6-15.2 53.5-37.8 67.7l80.4 128.4c4.8 7.7 15.3 10.2 22.7 4.8 58.1-42 97.4-108.4 102.5-184.2.6-9-7.1-16.7-16.2-16.7z\"]\n  };\n  var faRadiationAlt = {\n    prefix: 'fas',\n    iconName: 'radiation-alt',\n    icon: [496, 512, [], \"f7ba\", \"M184 256h-79.1c-9.2 0-16.9 7.7-16 16.8 4.6 43.6 27 81.8 59.5 107.8 7.6 6.1 18.8 4.5 24-3.8l41.7-66.8c-18-11.2-30.1-31.2-30.1-54zm97.8-54.1l41.8-66.9c4.9-7.8 2.4-18.4-5.8-22.5C296.7 102.1 273.1 96 248 96s-48.7 6.1-69.9 16.5c-8.2 4.1-10.6 14.7-5.8 22.5l41.8 66.9c9.8-6.2 21.4-9.9 33.8-9.9s24.1 3.7 33.9 9.9zM391.1 256H312c0 22.8-12.1 42.8-30.2 54.1l41.7 66.8c5.2 8.3 16.4 9.9 24 3.8 32.6-26 54.9-64.2 59.5-107.8 1.1-9.2-6.7-16.9-15.9-16.9zM248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 432c-101.5 0-184-82.5-184-184S146.5 72 248 72s184 82.5 184 184-82.5 184-184 184zm0-216c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32z\"]\n  };\n  var faRainbow = {\n    prefix: 'fas',\n    iconName: 'rainbow',\n    icon: [576, 512, [], \"f75b\", \"M268.3 32.7C115.4 42.9 0 176.9 0 330.2V464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320C64 186.8 180.9 80.3 317.5 97.9 430.4 112.4 512 214 512 327.8V464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320c0-165.3-140-298.6-307.7-287.3zm-5.6 96.9C166 142 96 229.1 96 326.7V464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320c0-74.8 64.5-134.8 140.8-127.4 66.5 6.5 115.2 66.2 115.2 133.1V464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320c0-114.2-100.2-205.4-217.3-190.4zm6.2 96.3c-45.6 8.9-76.9 51.5-76.9 97.9V464c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320c0-17.6 14.3-32 32-32s32 14.4 32 32v144c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320c0-59.2-53.8-106-115.1-94.1z\"]\n  };\n  var faRandom = {\n    prefix: 'fas',\n    iconName: 'random',\n    icon: [512, 512, [], \"f074\", \"M504.971 359.029c9.373 9.373 9.373 24.569 0 33.941l-80 79.984c-15.01 15.01-40.971 4.49-40.971-16.971V416h-58.785a12.004 12.004 0 0 1-8.773-3.812l-70.556-75.596 53.333-57.143L352 336h32v-39.981c0-21.438 25.943-31.998 40.971-16.971l80 79.981zM12 176h84l52.781 56.551 53.333-57.143-70.556-75.596A11.999 11.999 0 0 0 122.785 96H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12zm372 0v39.984c0 21.46 25.961 31.98 40.971 16.971l80-79.984c9.373-9.373 9.373-24.569 0-33.941l-80-79.981C409.943 24.021 384 34.582 384 56.019V96h-58.785a12.004 12.004 0 0 0-8.773 3.812L96 336H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h110.785c3.326 0 6.503-1.381 8.773-3.812L352 176h32z\"]\n  };\n  var faReceipt = {\n    prefix: 'fas',\n    iconName: 'receipt',\n    icon: [384, 512, [], \"f543\", \"M358.4 3.2L320 48 265.6 3.2a15.9 15.9 0 0 0-19.2 0L192 48 137.6 3.2a15.9 15.9 0 0 0-19.2 0L64 48 25.6 3.2C15-4.7 0 2.8 0 16v480c0 13.2 15 20.7 25.6 12.8L64 464l54.4 44.8a15.9 15.9 0 0 0 19.2 0L192 464l54.4 44.8a15.9 15.9 0 0 0 19.2 0L320 464l38.4 44.8c10.5 7.9 25.6.4 25.6-12.8V16c0-13.2-15-20.7-25.6-12.8zM320 360c0 4.4-3.6 8-8 8H72c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h240c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H72c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h240c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H72c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h240c4.4 0 8 3.6 8 8v16z\"]\n  };\n  var faRecycle = {\n    prefix: 'fas',\n    iconName: 'recycle',\n    icon: [512, 512, [], \"f1b8\", \"M184.561 261.903c3.232 13.997-12.123 24.635-24.068 17.168l-40.736-25.455-50.867 81.402C55.606 356.273 70.96 384 96.012 384H148c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12H96.115c-75.334 0-121.302-83.048-81.408-146.88l50.822-81.388-40.725-25.448c-12.081-7.547-8.966-25.961 4.879-29.158l110.237-25.45c8.611-1.988 17.201 3.381 19.189 11.99l25.452 110.237zm98.561-182.915l41.289 66.076-40.74 25.457c-12.051 7.528-9 25.953 4.879 29.158l110.237 25.45c8.672 1.999 17.215-3.438 19.189-11.99l25.45-110.237c3.197-13.844-11.99-24.719-24.068-17.168l-40.687 25.424-41.263-66.082c-37.521-60.033-125.209-60.171-162.816 0l-17.963 28.766c-3.51 5.62-1.8 13.021 3.82 16.533l33.919 21.195c5.62 3.512 13.024 1.803 16.536-3.817l17.961-28.743c12.712-20.341 41.973-19.676 54.257-.022zM497.288 301.12l-27.515-44.065c-3.511-5.623-10.916-7.334-16.538-3.821l-33.861 21.159c-5.62 3.512-7.33 10.915-3.818 16.536l27.564 44.112c13.257 21.211-2.057 48.96-27.136 48.96H320V336.02c0-14.213-17.242-21.383-27.313-11.313l-80 79.981c-6.249 6.248-6.249 16.379 0 22.627l80 79.989C302.689 517.308 320 510.3 320 495.989V448h95.88c75.274 0 121.335-82.997 81.408-146.88z\"]\n  };\n  var faRedo = {\n    prefix: 'fas',\n    iconName: 'redo',\n    icon: [512, 512, [], \"f01e\", \"M500.33 0h-47.41a12 12 0 0 0-12 12.57l4 82.76A247.42 247.42 0 0 0 256 8C119.34 8 7.9 119.53 8 256.19 8.1 393.07 119.1 504 256 504a247.1 247.1 0 0 0 166.18-63.91 12 12 0 0 0 .48-17.43l-34-34a12 12 0 0 0-16.38-.55A176 176 0 1 1 402.1 157.8l-101.53-4.87a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12h200.33a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12z\"]\n  };\n  var faRedoAlt = {\n    prefix: 'fas',\n    iconName: 'redo-alt',\n    icon: [512, 512, [], \"f2f9\", \"M256.455 8c66.269.119 126.437 26.233 170.859 68.685l35.715-35.715C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.75c-30.864-28.899-70.801-44.907-113.23-45.273-92.398-.798-170.283 73.977-169.484 169.442C88.764 348.009 162.184 424 256 424c41.127 0 79.997-14.678 110.629-41.556 4.743-4.161 11.906-3.908 16.368.553l39.662 39.662c4.872 4.872 4.631 12.815-.482 17.433C378.202 479.813 319.926 504 256 504 119.034 504 8.001 392.967 8 256.002 7.999 119.193 119.646 7.755 256.455 8z\"]\n  };\n  var faRegistered = {\n    prefix: 'fas',\n    iconName: 'registered',\n    icon: [512, 512, [], \"f25d\", \"M285.363 207.475c0 18.6-9.831 28.431-28.431 28.431h-29.876v-56.14h23.378c28.668 0 34.929 8.773 34.929 27.709zM504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM363.411 360.414c-46.729-84.825-43.299-78.636-44.702-80.98 23.432-15.172 37.945-42.979 37.945-74.486 0-54.244-31.5-89.252-105.498-89.252h-70.667c-13.255 0-24 10.745-24 24V372c0 13.255 10.745 24 24 24h22.567c13.255 0 24-10.745 24-24v-71.663h25.556l44.129 82.937a24.001 24.001 0 0 0 21.188 12.727h24.464c18.261-.001 29.829-19.591 21.018-35.587z\"]\n  };\n  var faReply = {\n    prefix: 'fas',\n    iconName: 'reply',\n    icon: [512, 512, [], \"f3e5\", \"M8.309 189.836L184.313 37.851C199.719 24.546 224 35.347 224 56.015v80.053c160.629 1.839 288 34.032 288 186.258 0 61.441-39.581 122.309-83.333 154.132-13.653 9.931-33.111-2.533-28.077-18.631 45.344-145.012-21.507-183.51-176.59-185.742V360c0 20.7-24.3 31.453-39.687 18.164l-176.004-152c-11.071-9.562-11.086-26.753 0-36.328z\"]\n  };\n  var faReplyAll = {\n    prefix: 'fas',\n    iconName: 'reply-all',\n    icon: [576, 512, [], \"f122\", \"M136.309 189.836L312.313 37.851C327.72 24.546 352 35.348 352 56.015v82.763c129.182 10.231 224 52.212 224 183.548 0 61.441-39.582 122.309-83.333 154.132-13.653 9.931-33.111-2.533-28.077-18.631 38.512-123.162-3.922-169.482-112.59-182.015v84.175c0 20.701-24.3 31.453-39.687 18.164L136.309 226.164c-11.071-9.561-11.086-26.753 0-36.328zm-128 36.328L184.313 378.15C199.7 391.439 224 380.687 224 359.986v-15.818l-108.606-93.785A55.96 55.96 0 0 1 96 207.998a55.953 55.953 0 0 1 19.393-42.38L224 71.832V56.015c0-20.667-24.28-31.469-39.687-18.164L8.309 189.836c-11.086 9.575-11.071 26.767 0 36.328z\"]\n  };\n  var faRepublican = {\n    prefix: 'fas',\n    iconName: 'republican',\n    icon: [640, 512, [], \"f75e\", \"M544 192c0-88.4-71.6-160-160-160H160C71.6 32 0 103.6 0 192v64h544v-64zm-367.7-21.6l-19.8 19.3 4.7 27.3c.8 4.9-4.3 8.6-8.7 6.3L128 210.4l-24.5 12.9c-4.3 2.3-9.5-1.4-8.7-6.3l4.7-27.3-19.8-19.3c-3.6-3.5-1.6-9.5 3.3-10.2l27.4-4 12.2-24.8c2.2-4.5 8.6-4.4 10.7 0l12.2 24.8 27.4 4c5 .7 6.9 6.7 3.4 10.2zm144 0l-19.8 19.3 4.7 27.3c.8 4.9-4.3 8.6-8.7 6.3L272 210.4l-24.5 12.9c-4.3 2.3-9.5-1.4-8.7-6.3l4.7-27.3-19.8-19.3c-3.6-3.5-1.6-9.5 3.3-10.2l27.4-4 12.2-24.8c2.2-4.5 8.6-4.4 10.7 0l12.2 24.8 27.4 4c5 .7 6.9 6.7 3.4 10.2zm144 0l-19.8 19.3 4.7 27.3c.8 4.9-4.3 8.6-8.7 6.3L416 210.4l-24.5 12.9c-4.3 2.3-9.5-1.4-8.7-6.3l4.7-27.3-19.8-19.3c-3.6-3.5-1.6-9.5 3.3-10.2l27.4-4 12.2-24.8c2.2-4.5 8.6-4.4 10.7 0l12.2 24.8 27.4 4c5 .7 6.9 6.7 3.4 10.2zM624 320h-32c-8.8 0-16 7.2-16 16v64c0 8.8-7.2 16-16 16s-16-7.2-16-16V288H0v176c0 8.8 7.2 16 16 16h96c8.8 0 16-7.2 16-16v-80h192v80c0 8.8 7.2 16 16 16h96c8.8 0 16-7.2 16-16V352h32v43.3c0 41.8 30 80.1 71.6 84.3 47.8 4.9 88.4-32.7 88.4-79.6v-64c0-8.8-7.2-16-16-16z\"]\n  };\n  var faRestroom = {\n    prefix: 'fas',\n    iconName: 'restroom',\n    icon: [640, 512, [], \"f7bd\", \"M128 128c35.3 0 64-28.7 64-64S163.3 0 128 0 64 28.7 64 64s28.7 64 64 64zm384 0c35.3 0 64-28.7 64-64S547.3 0 512 0s-64 28.7-64 64 28.7 64 64 64zm127.3 226.5l-45.6-185.8c-3.3-13.5-15.5-23-29.8-24.2-15 9.7-32.8 15.5-52 15.5-19.2 0-37-5.8-52-15.5-14.3 1.2-26.5 10.7-29.8 24.2l-45.6 185.8C381 369.6 393 384 409.2 384H464v104c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24V384h54.8c16.2 0 28.2-14.4 24.5-29.5zM336 0h-32c-8.8 0-16 7.2-16 16v480c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16zM180.1 144.4c-15 9.8-32.9 15.6-52.1 15.6-19.2 0-37.1-5.8-52.1-15.6C51.3 146.5 32 166.9 32 192v136c0 13.3 10.7 24 24 24h8v136c0 13.3 10.7 24 24 24h80c13.3 0 24-10.7 24-24V352h8c13.3 0 24-10.7 24-24V192c0-25.1-19.3-45.5-43.9-47.6z\"]\n  };\n  var faRetweet = {\n    prefix: 'fas',\n    iconName: 'retweet',\n    icon: [640, 512, [], \"f079\", \"M629.657 343.598L528.971 444.284c-9.373 9.372-24.568 9.372-33.941 0L394.343 343.598c-9.373-9.373-9.373-24.569 0-33.941l10.823-10.823c9.562-9.562 25.133-9.34 34.419.492L480 342.118V160H292.451a24.005 24.005 0 0 1-16.971-7.029l-16-16C244.361 121.851 255.069 96 276.451 96H520c13.255 0 24 10.745 24 24v222.118l40.416-42.792c9.285-9.831 24.856-10.054 34.419-.492l10.823 10.823c9.372 9.372 9.372 24.569-.001 33.941zm-265.138 15.431A23.999 23.999 0 0 0 347.548 352H160V169.881l40.416 42.792c9.286 9.831 24.856 10.054 34.419.491l10.822-10.822c9.373-9.373 9.373-24.569 0-33.941L144.971 67.716c-9.373-9.373-24.569-9.373-33.941 0L10.343 168.402c-9.373 9.373-9.373 24.569 0 33.941l10.822 10.822c9.562 9.562 25.133 9.34 34.419-.491L96 169.881V392c0 13.255 10.745 24 24 24h243.549c21.382 0 32.09-25.851 16.971-40.971l-16.001-16z\"]\n  };\n  var faRibbon = {\n    prefix: 'fas',\n    iconName: 'ribbon',\n    icon: [448, 512, [], \"f4d6\", \"M6.1 444.3c-9.6 10.8-7.5 27.6 4.5 35.7l68.8 27.9c9.9 6.7 23.3 5 31.3-3.8l91.8-101.9-79.2-87.9-117.2 130zm435.8 0s-292-324.6-295.4-330.1c15.4-8.4 40.2-17.9 77.5-17.9s62.1 9.5 77.5 17.9c-3.3 5.6-56 64.6-56 64.6l79.1 87.7 34.2-38c28.7-31.9 33.3-78.6 11.4-115.5l-43.7-73.5c-4.3-7.2-9.9-13.3-16.8-18-40.7-27.6-127.4-29.7-171.4 0-6.9 4.7-12.5 10.8-16.8 18l-43.6 73.2c-1.5 2.5-37.1 62.2 11.5 116L337.5 504c8 8.9 21.4 10.5 31.3 3.8l68.8-27.9c11.9-8 14-24.8 4.3-35.6z\"]\n  };\n  var faRing = {\n    prefix: 'fas',\n    iconName: 'ring',\n    icon: [512, 512, [], \"f70b\", \"M256 64C110.06 64 0 125.91 0 208v98.13C0 384.48 114.62 448 256 448s256-63.52 256-141.87V208c0-82.09-110.06-144-256-144zm0 64c106.04 0 192 35.82 192 80 0 9.26-3.97 18.12-10.91 26.39C392.15 208.21 328.23 192 256 192s-136.15 16.21-181.09 42.39C67.97 226.12 64 217.26 64 208c0-44.18 85.96-80 192-80zM120.43 264.64C155.04 249.93 201.64 240 256 240s100.96 9.93 135.57 24.64C356.84 279.07 308.93 288 256 288s-100.84-8.93-135.57-23.36z\"]\n  };\n  var faRoad = {\n    prefix: 'fas',\n    iconName: 'road',\n    icon: [576, 512, [], \"f018\", \"M573.19 402.67l-139.79-320C428.43 71.29 417.6 64 405.68 64h-97.59l2.45 23.16c.5 4.72-3.21 8.84-7.96 8.84h-29.16c-4.75 0-8.46-4.12-7.96-8.84L267.91 64h-97.59c-11.93 0-22.76 7.29-27.73 18.67L2.8 402.67C-6.45 423.86 8.31 448 30.54 448h196.84l10.31-97.68c.86-8.14 7.72-14.32 15.91-14.32h68.8c8.19 0 15.05 6.18 15.91 14.32L348.62 448h196.84c22.23 0 36.99-24.14 27.73-45.33zM260.4 135.16a8 8 0 0 1 7.96-7.16h39.29c4.09 0 7.53 3.09 7.96 7.16l4.6 43.58c.75 7.09-4.81 13.26-11.93 13.26h-40.54c-7.13 0-12.68-6.17-11.93-13.26l4.59-43.58zM315.64 304h-55.29c-9.5 0-16.91-8.23-15.91-17.68l5.07-48c.86-8.14 7.72-14.32 15.91-14.32h45.15c8.19 0 15.05 6.18 15.91 14.32l5.07 48c1 9.45-6.41 17.68-15.91 17.68z\"]\n  };\n  var faRobot = {\n    prefix: 'fas',\n    iconName: 'robot',\n    icon: [640, 512, [], \"f544\", \"M0 256v128c0 17.7 14.3 32 32 32h32V224H32c-17.7 0-32 14.3-32 32zM464 96H352V32c0-17.7-14.3-32-32-32s-32 14.3-32 32v64H176c-44.2 0-80 35.8-80 80v272c0 35.3 28.7 64 64 64h320c35.3 0 64-28.7 64-64V176c0-44.2-35.8-80-80-80zM256 416h-64v-32h64v32zm-32-120c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm128 120h-64v-32h64v32zm96 0h-64v-32h64v32zm-32-120c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm192-72h-32v192h32c17.7 0 32-14.3 32-32V256c0-17.7-14.3-32-32-32z\"]\n  };\n  var faRocket = {\n    prefix: 'fas',\n    iconName: 'rocket',\n    icon: [512, 512, [], \"f135\", \"M505.05 19.1a15.89 15.89 0 0 0-12.2-12.2C460.65 0 435.46 0 410.36 0c-103.2 0-165.1 55.2-211.29 128H94.87A48 48 0 0 0 52 154.49l-49.42 98.8A24 24 0 0 0 24.07 288h103.77l-22.47 22.47a32 32 0 0 0 0 45.25l50.9 50.91a32 32 0 0 0 45.26 0L224 384.16V488a24 24 0 0 0 34.7 21.49l98.7-49.39a47.91 47.91 0 0 0 26.5-42.9V312.79c72.59-46.3 128-108.4 128-211.09.1-25.2.1-50.4-6.85-82.6zM384 168a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\"]\n  };\n  var faRoute = {\n    prefix: 'fas',\n    iconName: 'route',\n    icon: [512, 512, [], \"f4d7\", \"M416 320h-96c-17.6 0-32-14.4-32-32s14.4-32 32-32h96s96-107 96-160-43-96-96-96-96 43-96 96c0 25.5 22.2 63.4 45.3 96H320c-52.9 0-96 43.1-96 96s43.1 96 96 96h96c17.6 0 32 14.4 32 32s-14.4 32-32 32H185.5c-16 24.8-33.8 47.7-47.3 64H416c52.9 0 96-43.1 96-96s-43.1-96-96-96zm0-256c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zM96 256c-53 0-96 43-96 96s96 160 96 160 96-107 96-160-43-96-96-96zm0 128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"]\n  };\n  var faRss = {\n    prefix: 'fas',\n    iconName: 'rss',\n    icon: [448, 512, [], \"f09e\", \"M128.081 415.959c0 35.369-28.672 64.041-64.041 64.041S0 451.328 0 415.959s28.672-64.041 64.041-64.041 64.04 28.673 64.04 64.041zm175.66 47.25c-8.354-154.6-132.185-278.587-286.95-286.95C7.656 175.765 0 183.105 0 192.253v48.069c0 8.415 6.49 15.472 14.887 16.018 111.832 7.284 201.473 96.702 208.772 208.772.547 8.397 7.604 14.887 16.018 14.887h48.069c9.149.001 16.489-7.655 15.995-16.79zm144.249.288C439.596 229.677 251.465 40.445 16.503 32.01 7.473 31.686 0 38.981 0 48.016v48.068c0 8.625 6.835 15.645 15.453 15.999 191.179 7.839 344.627 161.316 352.465 352.465.353 8.618 7.373 15.453 15.999 15.453h48.068c9.034-.001 16.329-7.474 16.005-16.504z\"]\n  };\n  var faRssSquare = {\n    prefix: 'fas',\n    iconName: 'rss-square',\n    icon: [448, 512, [], \"f143\", \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM112 416c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm157.533 0h-34.335c-6.011 0-11.051-4.636-11.442-10.634-5.214-80.05-69.243-143.92-149.123-149.123-5.997-.39-10.633-5.431-10.633-11.441v-34.335c0-6.535 5.468-11.777 11.994-11.425 110.546 5.974 198.997 94.536 204.964 204.964.352 6.526-4.89 11.994-11.425 11.994zm103.027 0h-34.334c-6.161 0-11.175-4.882-11.427-11.038-5.598-136.535-115.204-246.161-251.76-251.76C68.882 152.949 64 147.935 64 141.774V107.44c0-6.454 5.338-11.664 11.787-11.432 167.83 6.025 302.21 141.191 308.205 308.205.232 6.449-4.978 11.787-11.432 11.787z\"]\n  };\n  var faRubleSign = {\n    prefix: 'fas',\n    iconName: 'ruble-sign',\n    icon: [384, 512, [], \"f158\", \"M239.36 320C324.48 320 384 260.542 384 175.071S324.48 32 239.36 32H76c-6.627 0-12 5.373-12 12v206.632H12c-6.627 0-12 5.373-12 12V308c0 6.627 5.373 12 12 12h52v32H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h52v52c0 6.627 5.373 12 12 12h58.56c6.627 0 12-5.373 12-12v-52H308c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12H146.56v-32h92.8zm-92.8-219.252h78.72c46.72 0 74.88 29.11 74.88 74.323 0 45.832-28.16 75.561-76.16 75.561h-77.44V100.748z\"]\n  };\n  var faRuler = {\n    prefix: 'fas',\n    iconName: 'ruler',\n    icon: [640, 512, [], \"f545\", \"M635.7 167.2L556.1 31.7c-8.8-15-28.3-20.1-43.5-11.5l-69 39.1L503.3 161c2.2 3.8.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9L416 75l-55.2 31.3 27.9 47.4c2.2 3.8.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9L333.2 122 278 153.3 337.8 255c2.2 3.7.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9l-59.7-101.7-55.2 31.3 27.9 47.4c2.2 3.8.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9l-27.9-47.5-55.2 31.3 59.7 101.7c2.2 3.7.9 8.5-2.9 10.7l-13.8 7.8c-3.8 2.2-8.7.9-10.9-2.9L84.9 262.9l-69 39.1C.7 310.7-4.6 329.8 4.2 344.8l79.6 135.6c8.8 15 28.3 20.1 43.5 11.5L624.1 210c15.2-8.6 20.4-27.8 11.6-42.8z\"]\n  };\n  var faRulerCombined = {\n    prefix: 'fas',\n    iconName: 'ruler-combined',\n    icon: [512, 512, [], \"f546\", \"M160 288h-56c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h56v-64h-56c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h56V96h-56c-4.42 0-8-3.58-8-8V72c0-4.42 3.58-8 8-8h56V32c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v448c0 2.77.91 5.24 1.57 7.8L160 329.38V288zm320 64h-32v56c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-56h-64v56c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-56h-64v56c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-56h-41.37L24.2 510.43c2.56.66 5.04 1.57 7.8 1.57h448c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32z\"]\n  };\n  var faRulerHorizontal = {\n    prefix: 'fas',\n    iconName: 'ruler-horizontal',\n    icon: [576, 512, [], \"f547\", \"M544 128h-48v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8h-16c-4.42 0-8-3.58-8-8v-88h-64v88c0 4.42-3.58 8-8 8H88c-4.42 0-8-3.58-8-8v-88H32c-17.67 0-32 14.33-32 32v192c0 17.67 14.33 32 32 32h512c17.67 0 32-14.33 32-32V160c0-17.67-14.33-32-32-32z\"]\n  };\n  var faRulerVertical = {\n    prefix: 'fas',\n    iconName: 'ruler-vertical',\n    icon: [256, 512, [], \"f548\", \"M168 416c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88v-64h-88c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88v-64h-88c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88v-64h-88c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h88V32c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v448c0 17.67 14.33 32 32 32h192c17.67 0 32-14.33 32-32v-64h-88z\"]\n  };\n  var faRunning = {\n    prefix: 'fas',\n    iconName: 'running',\n    icon: [416, 512, [], \"f70c\", \"M272 96c26.51 0 48-21.49 48-48S298.51 0 272 0s-48 21.49-48 48 21.49 48 48 48zM113.69 317.47l-14.8 34.52H32c-17.67 0-32 14.33-32 32s14.33 32 32 32h77.45c19.25 0 36.58-11.44 44.11-29.09l8.79-20.52-10.67-6.3c-17.32-10.23-30.06-25.37-37.99-42.61zM384 223.99h-44.03l-26.06-53.25c-12.5-25.55-35.45-44.23-61.78-50.94l-71.08-21.14c-28.3-6.8-57.77-.55-80.84 17.14l-39.67 30.41c-14.03 10.75-16.69 30.83-5.92 44.86s30.84 16.66 44.86 5.92l39.69-30.41c7.67-5.89 17.44-8 25.27-6.14l14.7 4.37-37.46 87.39c-12.62 29.48-1.31 64.01 26.3 80.31l84.98 50.17-27.47 87.73c-5.28 16.86 4.11 34.81 20.97 40.09 3.19 1 6.41 1.48 9.58 1.48 13.61 0 26.23-8.77 30.52-22.45l31.64-101.06c5.91-20.77-2.89-43.08-21.64-54.39l-61.24-36.14 31.31-78.28 20.27 41.43c8 16.34 24.92 26.89 43.11 26.89H384c17.67 0 32-14.33 32-32s-14.33-31.99-32-31.99z\"]\n  };\n  var faRupeeSign = {\n    prefix: 'fas',\n    iconName: 'rupee-sign',\n    icon: [320, 512, [], \"f156\", \"M308 96c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v44.748c0 6.627 5.373 12 12 12h85.28c27.308 0 48.261 9.958 60.97 27.252H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h158.757c-6.217 36.086-32.961 58.632-74.757 58.632H12c-6.627 0-12 5.373-12 12v53.012c0 3.349 1.4 6.546 3.861 8.818l165.052 152.356a12.001 12.001 0 0 0 8.139 3.182h82.562c10.924 0 16.166-13.408 8.139-20.818L116.871 319.906c76.499-2.34 131.144-53.395 138.318-127.906H308c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-58.69c-3.486-11.541-8.28-22.246-14.252-32H308z\"]\n  };\n  var faSadCry = {\n    prefix: 'fas',\n    iconName: 'sad-cry',\n    icon: [496, 512, [], \"f5b3\", \"M248 8C111 8 0 119 0 256c0 90.1 48.2 168.7 120 212.1V288c0-8.8 7.2-16 16-16s16 7.2 16 16v196.7c29.5 12.4 62 19.3 96 19.3s66.5-6.9 96-19.3V288c0-8.8 7.2-16 16-16s16 7.2 16 16v180.1C447.8 424.7 496 346 496 256 496 119 385 8 248 8zm-65.5 216.5c-14.8-13.2-46.2-13.2-61 0L112 233c-3.8 3.3-9.3 4-13.7 1.6-4.4-2.4-6.9-7.4-6.1-12.4 4-25.2 34.2-42.1 59.9-42.1S208 197 212 222.2c.8 5-1.7 10-6.1 12.4-5.8 3.1-11.2.7-13.7-1.6l-9.7-8.5zM248 416c-26.5 0-48-28.7-48-64s21.5-64 48-64 48 28.7 48 64-21.5 64-48 64zm149.8-181.5c-5.8 3.1-11.2.7-13.7-1.6l-9.5-8.5c-14.8-13.2-46.2-13.2-61 0L304 233c-3.8 3.3-9.3 4-13.7 1.6-4.4-2.4-6.9-7.4-6.1-12.4 4-25.2 34.2-42.1 59.9-42.1S400 197 404 222.2c.6 4.9-1.8 9.9-6.2 12.3z\"]\n  };\n  var faSadTear = {\n    prefix: 'fas',\n    iconName: 'sad-tear',\n    icon: [496, 512, [], \"f5b4\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zM152 416c-26.5 0-48-21-48-47 0-20 28.5-60.4 41.6-77.8 3.2-4.3 9.6-4.3 12.8 0C171.5 308.6 200 349 200 369c0 26-21.5 47-48 47zm16-176c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm170.2 154.2C315.8 367.4 282.9 352 248 352c-21.2 0-21.2-32 0-32 44.4 0 86.3 19.6 114.7 53.8 13.8 16.4-11.2 36.5-24.5 20.4z\"]\n  };\n  var faSatellite = {\n    prefix: 'fas',\n    iconName: 'satellite',\n    icon: [512, 512, [], \"f7bf\", \"M502.7 265l-80.3-80.4 47.8-47.9c13.1-13.1 13.1-34.4 0-47.5l-47.5-47.5c-13.1-13.1-34.4-13.1-47.5 0l-47.8 47.9-80.3-80.3C240.8 3.1 232.7 0 224.5 0S208.2 3.1 202 9.3L105.3 106c-12.4 12.4-12.4 32.6 0 45.1l80.3 80.4-9.8 9.8C122.1 217 59.6 218.6 7.3 246.7c-8.5 4.6-9.6 16.4-2.8 23.2L112 377.4l-17.8 17.8c-2.6-.7-5-1.6-7.8-1.6-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32c0-2.8-.9-5.2-1.6-7.8l17.8-17.8 107.5 107.5c6.8 6.8 18.7 5.7 23.2-2.8 28.1-52.3 29.7-114.8 5.4-168.5l9.9-9.9 80.3 80.4c6.2 6.2 14.4 9.3 22.5 9.3s16.3-3.1 22.5-9.3l96.7-96.7c12.5-12.4 12.5-32.6.1-45zm-352-136.5l73.8-73.8 68.9 68.9-73.8 73.8-68.9-68.9zm232.8 232.8l-68.9-68.9 73.8-73.8 68.9 68.9-73.8 73.8z\"]\n  };\n  var faSatelliteDish = {\n    prefix: 'fas',\n    iconName: 'satellite-dish',\n    icon: [512, 512, [], \"f7c0\", \"M188.8 345.9l27.4-27.4c2.6.7 5 1.6 7.8 1.6 17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32c0 2.8.9 5.2 1.6 7.8l-27.4 27.4L49.4 206.5c-7.3-7.3-20.1-6.1-25 3-41.8 77.8-29.9 176.7 35.7 242.3 65.6 65.6 164.6 77.5 242.3 35.7 9.2-4.9 10.4-17.7 3-25L188.8 345.9zM209 0c-9.2-.5-17 6.8-17 16v31.6c0 8.5 6.6 15.5 15 15.9 129.4 7 233.4 112 240.9 241.5.5 8.4 7.5 15 15.9 15h32.1c9.2 0 16.5-7.8 16-17C503.4 139.8 372.2 8.6 209 0zm.3 96c-9.3-.7-17.3 6.7-17.3 16.1v32.1c0 8.4 6.5 15.3 14.8 15.9 76.8 6.3 138 68.2 144.9 145.2.8 8.3 7.6 14.7 15.9 14.7h32.2c9.3 0 16.8-8 16.1-17.3-8.4-110.1-96.5-198.2-206.6-206.7z\"]\n  };\n  var faSave = {\n    prefix: 'fas',\n    iconName: 'save',\n    icon: [448, 512, [], \"f0c7\", \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z\"]\n  };\n  var faSchool = {\n    prefix: 'fas',\n    iconName: 'school',\n    icon: [640, 512, [], \"f549\", \"M0 224v272c0 8.84 7.16 16 16 16h80V192H32c-17.67 0-32 14.33-32 32zm360-48h-24v-40c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8v64c0 4.42 3.58 8 8 8h48c4.42 0 8-3.58 8-8v-16c0-4.42-3.58-8-8-8zm137.75-63.96l-160-106.67a32.02 32.02 0 0 0-35.5 0l-160 106.67A32.002 32.002 0 0 0 128 138.66V512h128V368c0-8.84 7.16-16 16-16h96c8.84 0 16 7.16 16 16v144h128V138.67c0-10.7-5.35-20.7-14.25-26.63zM320 256c-44.18 0-80-35.82-80-80s35.82-80 80-80 80 35.82 80 80-35.82 80-80 80zm288-64h-64v320h80c8.84 0 16-7.16 16-16V224c0-17.67-14.33-32-32-32z\"]\n  };\n  var faScrewdriver = {\n    prefix: 'fas',\n    iconName: 'screwdriver',\n    icon: [512, 512, [], \"f54a\", \"M448 0L320 96v62.06l-83.03 83.03c6.79 4.25 13.27 9.06 19.07 14.87 5.8 5.8 10.62 12.28 14.87 19.07L353.94 192H416l96-128-64-64zM128 278.59L10.92 395.67c-14.55 14.55-14.55 38.15 0 52.71l52.7 52.7c14.56 14.56 38.15 14.56 52.71 0L233.41 384c29.11-29.11 29.11-76.3 0-105.41s-76.3-29.11-105.41 0z\"]\n  };\n  var faScroll = {\n    prefix: 'fas',\n    iconName: 'scroll',\n    icon: [640, 512, [], \"f70e\", \"M48 0C21.53 0 0 21.53 0 48v64c0 8.84 7.16 16 16 16h80V48C96 21.53 74.47 0 48 0zm208 412.57V352h288V96c0-52.94-43.06-96-96-96H111.59C121.74 13.41 128 29.92 128 48v368c0 38.87 34.65 69.65 74.75 63.12C234.22 474 256 444.46 256 412.57zM288 384v32c0 52.93-43.06 96-96 96h336c61.86 0 112-50.14 112-112 0-8.84-7.16-16-16-16H288z\"]\n  };\n  var faSdCard = {\n    prefix: 'fas',\n    iconName: 'sd-card',\n    icon: [384, 512, [], \"f7c2\", \"M320 0H128L0 128v320c0 35.3 28.7 64 64 64h256c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zM160 160h-48V64h48v96zm80 0h-48V64h48v96zm80 0h-48V64h48v96z\"]\n  };\n  var faSearch = {\n    prefix: 'fas',\n    iconName: 'search',\n    icon: [512, 512, [], \"f002\", \"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"]\n  };\n  var faSearchDollar = {\n    prefix: 'fas',\n    iconName: 'search-dollar',\n    icon: [512, 512, [], \"f688\", \"M505.04 442.66l-99.71-99.69c-4.5-4.5-10.6-7-17-7h-16.3c27.6-35.3 44-79.69 44-127.99C416.03 93.09 322.92 0 208.02 0S0 93.09 0 207.98s93.11 207.98 208.02 207.98c48.3 0 92.71-16.4 128.01-44v16.3c0 6.4 2.5 12.5 7 17l99.71 99.69c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.59.1-33.99zm-297.02-90.7c-79.54 0-144-64.34-144-143.98 0-79.53 64.35-143.98 144-143.98 79.54 0 144 64.34 144 143.98 0 79.53-64.35 143.98-144 143.98zm27.11-152.54l-45.01-13.5c-5.16-1.55-8.77-6.78-8.77-12.73 0-7.27 5.3-13.19 11.8-13.19h28.11c4.56 0 8.96 1.29 12.82 3.72 3.24 2.03 7.36 1.91 10.13-.73l11.75-11.21c3.53-3.37 3.33-9.21-.57-12.14-9.1-6.83-20.08-10.77-31.37-11.35V112c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8v16.12c-23.63.63-42.68 20.55-42.68 45.07 0 19.97 12.99 37.81 31.58 43.39l45.01 13.5c5.16 1.55 8.77 6.78 8.77 12.73 0 7.27-5.3 13.19-11.8 13.19h-28.1c-4.56 0-8.96-1.29-12.82-3.72-3.24-2.03-7.36-1.91-10.13.73l-11.75 11.21c-3.53 3.37-3.33 9.21.57 12.14 9.1 6.83 20.08 10.77 31.37 11.35V304c0 4.42 3.58 8 8 8h16c4.42 0 8-3.58 8-8v-16.12c23.63-.63 42.68-20.54 42.68-45.07 0-19.97-12.99-37.81-31.59-43.39z\"]\n  };\n  var faSearchLocation = {\n    prefix: 'fas',\n    iconName: 'search-location',\n    icon: [512, 512, [], \"f689\", \"M505.04 442.66l-99.71-99.69c-4.5-4.5-10.6-7-17-7h-16.3c27.6-35.3 44-79.69 44-127.99C416.03 93.09 322.92 0 208.02 0S0 93.09 0 207.98s93.11 207.98 208.02 207.98c48.3 0 92.71-16.4 128.01-44v16.3c0 6.4 2.5 12.5 7 17l99.71 99.69c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.59.1-33.99zm-297.02-90.7c-79.54 0-144-64.34-144-143.98 0-79.53 64.35-143.98 144-143.98 79.54 0 144 64.34 144 143.98 0 79.53-64.35 143.98-144 143.98zm.02-239.96c-40.78 0-73.84 33.05-73.84 73.83 0 32.96 48.26 93.05 66.75 114.86a9.24 9.24 0 0 0 14.18 0c18.49-21.81 66.75-81.89 66.75-114.86 0-40.78-33.06-73.83-73.84-73.83zm0 96c-13.26 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z\"]\n  };\n  var faSearchMinus = {\n    prefix: 'fas',\n    iconName: 'search-minus',\n    icon: [512, 512, [], \"f010\", \"M304 192v32c0 6.6-5.4 12-12 12H124c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm201 284.7L476.7 505c-9.4 9.4-24.6 9.4-33.9 0L343 405.3c-4.5-4.5-7-10.6-7-17V372c-35.3 27.6-79.7 44-128 44C93.1 416 0 322.9 0 208S93.1 0 208 0s208 93.1 208 208c0 48.3-16.4 92.7-44 128h16.3c6.4 0 12.5 2.5 17 7l99.7 99.7c9.3 9.4 9.3 24.6 0 34zM344 208c0-75.2-60.8-136-136-136S72 132.8 72 208s60.8 136 136 136 136-60.8 136-136z\"]\n  };\n  var faSearchPlus = {\n    prefix: 'fas',\n    iconName: 'search-plus',\n    icon: [512, 512, [], \"f00e\", \"M304 192v32c0 6.6-5.4 12-12 12h-56v56c0 6.6-5.4 12-12 12h-32c-6.6 0-12-5.4-12-12v-56h-56c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h56v-56c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v56h56c6.6 0 12 5.4 12 12zm201 284.7L476.7 505c-9.4 9.4-24.6 9.4-33.9 0L343 405.3c-4.5-4.5-7-10.6-7-17V372c-35.3 27.6-79.7 44-128 44C93.1 416 0 322.9 0 208S93.1 0 208 0s208 93.1 208 208c0 48.3-16.4 92.7-44 128h16.3c6.4 0 12.5 2.5 17 7l99.7 99.7c9.3 9.4 9.3 24.6 0 34zM344 208c0-75.2-60.8-136-136-136S72 132.8 72 208s60.8 136 136 136 136-60.8 136-136z\"]\n  };\n  var faSeedling = {\n    prefix: 'fas',\n    iconName: 'seedling',\n    icon: [512, 512, [], \"f4d8\", \"M64 96H0c0 123.7 100.3 224 224 224v144c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V320C288 196.3 187.7 96 64 96zm384-64c-84.2 0-157.4 46.5-195.7 115.2 27.7 30.2 48.2 66.9 59 107.6C424 243.1 512 147.9 512 32h-64z\"]\n  };\n  var faServer = {\n    prefix: 'fas',\n    iconName: 'server',\n    icon: [512, 512, [], \"f233\", \"M480 160H32c-17.673 0-32-14.327-32-32V64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24z\"]\n  };\n  var faShapes = {\n    prefix: 'fas',\n    iconName: 'shapes',\n    icon: [512, 512, [], \"f61f\", \"M512 320v160c0 17.67-14.33 32-32 32H320c-17.67 0-32-14.33-32-32V320c0-17.67 14.33-32 32-32h160c17.67 0 32 14.33 32 32zm-384-64C57.31 256 0 313.31 0 384s57.31 128 128 128 128-57.31 128-128-57.31-128-128-128zm351.03-32c25.34 0 41.18-26.67 28.51-48L412.51 16c-12.67-21.33-44.35-21.33-57.02 0l-95.03 160c-12.67 21.33 3.17 48 28.51 48h190.06z\"]\n  };\n  var faShare = {\n    prefix: 'fas',\n    iconName: 'share',\n    icon: [512, 512, [], \"f064\", \"M503.691 189.836L327.687 37.851C312.281 24.546 288 35.347 288 56.015v80.053C127.371 137.907 0 170.1 0 322.326c0 61.441 39.581 122.309 83.333 154.132 13.653 9.931 33.111-2.533 28.077-18.631C66.066 312.814 132.917 274.316 288 272.085V360c0 20.7 24.3 31.453 39.687 18.164l176.004-152c11.071-9.562 11.086-26.753 0-36.328z\"]\n  };\n  var faShareAlt = {\n    prefix: 'fas',\n    iconName: 'share-alt',\n    icon: [448, 512, [], \"f1e0\", \"M352 320c-22.608 0-43.387 7.819-59.79 20.895l-102.486-64.054a96.551 96.551 0 0 0 0-41.683l102.486-64.054C308.613 184.181 329.392 192 352 192c53.019 0 96-42.981 96-96S405.019 0 352 0s-96 42.981-96 96c0 7.158.79 14.13 2.276 20.841L155.79 180.895C139.387 167.819 118.608 160 96 160c-53.019 0-96 42.981-96 96s42.981 96 96 96c22.608 0 43.387-7.819 59.79-20.895l102.486 64.054A96.301 96.301 0 0 0 256 416c0 53.019 42.981 96 96 96s96-42.981 96-96-42.981-96-96-96z\"]\n  };\n  var faShareAltSquare = {\n    prefix: 'fas',\n    iconName: 'share-alt-square',\n    icon: [448, 512, [], \"f1e1\", \"M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zM304 296c-14.562 0-27.823 5.561-37.783 14.671l-67.958-40.775a56.339 56.339 0 0 0 0-27.793l67.958-40.775C276.177 210.439 289.438 216 304 216c30.928 0 56-25.072 56-56s-25.072-56-56-56-56 25.072-56 56c0 4.797.605 9.453 1.74 13.897l-67.958 40.775C171.823 205.561 158.562 200 144 200c-30.928 0-56 25.072-56 56s25.072 56 56 56c14.562 0 27.823-5.561 37.783-14.671l67.958 40.775a56.088 56.088 0 0 0-1.74 13.897c0 30.928 25.072 56 56 56s56-25.072 56-56C360 321.072 334.928 296 304 296z\"]\n  };\n  var faShareSquare = {\n    prefix: 'fas',\n    iconName: 'share-square',\n    icon: [576, 512, [], \"f14d\", \"M568.482 177.448L424.479 313.433C409.3 327.768 384 317.14 384 295.985v-71.963c-144.575.97-205.566 35.113-164.775 171.353 4.483 14.973-12.846 26.567-25.006 17.33C155.252 383.105 120 326.488 120 269.339c0-143.937 117.599-172.5 264-173.312V24.012c0-21.174 25.317-31.768 40.479-17.448l144.003 135.988c10.02 9.463 10.028 25.425 0 34.896zM384 379.128V448H64V128h50.916a11.99 11.99 0 0 0 8.648-3.693c14.953-15.568 32.237-27.89 51.014-37.676C185.708 80.83 181.584 64 169.033 64H48C21.49 64 0 85.49 0 112v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48v-88.806c0-8.288-8.197-14.066-16.011-11.302a71.83 71.83 0 0 1-34.189 3.377c-7.27-1.046-13.8 4.514-13.8 11.859z\"]\n  };\n  var faShekelSign = {\n    prefix: 'fas',\n    iconName: 'shekel-sign',\n    icon: [448, 512, [], \"f20b\", \"M248 168v168c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V168c0-75.11-60.89-136-136-136H24C10.75 32 0 42.74 0 56v408c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V112h112c30.93 0 56 25.07 56 56zM432 32h-48c-8.84 0-16 7.16-16 16v296c0 30.93-25.07 56-56 56H200V176c0-8.84-7.16-16-16-16h-48c-8.84 0-16 7.16-16 16v280c0 13.25 10.75 24 24 24h168c75.11 0 136-60.89 136-136V48c0-8.84-7.16-16-16-16z\"]\n  };\n  var faShieldAlt = {\n    prefix: 'fas',\n    iconName: 'shield-alt',\n    icon: [512, 512, [], \"f3ed\", \"M466.5 83.7l-192-80a48.15 48.15 0 0 0-36.9 0l-192 80C27.7 91.1 16 108.6 16 128c0 198.5 114.5 335.7 221.5 380.3 11.8 4.9 25.1 4.9 36.9 0C360.1 472.6 496 349.3 496 128c0-19.4-11.7-36.9-29.5-44.3zM256.1 446.3l-.1-381 175.9 73.3c-3.3 151.4-82.1 261.1-175.8 307.7z\"]\n  };\n  var faShip = {\n    prefix: 'fas',\n    iconName: 'ship',\n    icon: [640, 512, [], \"f21a\", \"M496.616 372.639l70.012-70.012c16.899-16.9 9.942-45.771-12.836-53.092L512 236.102V96c0-17.673-14.327-32-32-32h-64V24c0-13.255-10.745-24-24-24H248c-13.255 0-24 10.745-24 24v40h-64c-17.673 0-32 14.327-32 32v140.102l-41.792 13.433c-22.753 7.313-29.754 36.173-12.836 53.092l70.012 70.012C125.828 416.287 85.587 448 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24 61.023 0 107.499-20.61 143.258-59.396C181.677 487.432 216.021 512 256 512h128c39.979 0 74.323-24.568 88.742-59.396C508.495 491.384 554.968 512 616 512c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24-60.817 0-101.542-31.001-119.384-75.361zM192 128h256v87.531l-118.208-37.995a31.995 31.995 0 0 0-19.584 0L192 215.531V128z\"]\n  };\n  var faShippingFast = {\n    prefix: 'fas',\n    iconName: 'shipping-fast',\n    icon: [640, 512, [], \"f48b\", \"M624 352h-16V243.9c0-12.7-5.1-24.9-14.1-33.9L494 110.1c-9-9-21.2-14.1-33.9-14.1H416V48c0-26.5-21.5-48-48-48H112C85.5 0 64 21.5 64 48v48H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h272c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H40c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h208c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h208c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H64v128c0 53 43 96 96 96s96-43 96-96h128c0 53 43 96 96 96s96-43 96-96h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM160 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm320 0c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-208H416V144h44.1l99.9 99.9V256z\"]\n  };\n  var faShoePrints = {\n    prefix: 'fas',\n    iconName: 'shoe-prints',\n    icon: [640, 512, [], \"f54b\", \"M192 160h32V32h-32c-35.35 0-64 28.65-64 64s28.65 64 64 64zM0 416c0 35.35 28.65 64 64 64h32V352H64c-35.35 0-64 28.65-64 64zm337.46-128c-34.91 0-76.16 13.12-104.73 32-24.79 16.38-44.52 32-104.73 32v128l57.53 15.97c26.21 7.28 53.01 13.12 80.31 15.05 32.69 2.31 65.6.67 97.58-6.2C472.9 481.3 512 429.22 512 384c0-64-84.18-96-174.54-96zM491.42 7.19C459.44.32 426.53-1.33 393.84.99c-27.3 1.93-54.1 7.77-80.31 15.04L256 32v128c60.2 0 79.94 15.62 104.73 32 28.57 18.88 69.82 32 104.73 32C555.82 224 640 192 640 128c0-45.22-39.1-97.3-148.58-120.81z\"]\n  };\n  var faShoppingBag = {\n    prefix: 'fas',\n    iconName: 'shopping-bag',\n    icon: [448, 512, [], \"f290\", \"M352 160v-32C352 57.42 294.579 0 224 0 153.42 0 96 57.42 96 128v32H0v272c0 44.183 35.817 80 80 80h288c44.183 0 80-35.817 80-80V160h-96zm-192-32c0-35.29 28.71-64 64-64s64 28.71 64 64v32H160v-32zm160 120c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zm-192 0c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24z\"]\n  };\n  var faShoppingBasket = {\n    prefix: 'fas',\n    iconName: 'shopping-basket',\n    icon: [576, 512, [], \"f291\", \"M576 216v16c0 13.255-10.745 24-24 24h-8l-26.113 182.788C514.509 462.435 494.257 480 470.37 480H105.63c-23.887 0-44.139-17.565-47.518-41.212L32 256h-8c-13.255 0-24-10.745-24-24v-16c0-13.255 10.745-24 24-24h67.341l106.78-146.821c10.395-14.292 30.407-17.453 44.701-7.058 14.293 10.395 17.453 30.408 7.058 44.701L170.477 192h235.046L326.12 82.821c-10.395-14.292-7.234-34.306 7.059-44.701 14.291-10.395 34.306-7.235 44.701 7.058L484.659 192H552c13.255 0 24 10.745 24 24zM312 392V280c0-13.255-10.745-24-24-24s-24 10.745-24 24v112c0 13.255 10.745 24 24 24s24-10.745 24-24zm112 0V280c0-13.255-10.745-24-24-24s-24 10.745-24 24v112c0 13.255 10.745 24 24 24s24-10.745 24-24zm-224 0V280c0-13.255-10.745-24-24-24s-24 10.745-24 24v112c0 13.255 10.745 24 24 24s24-10.745 24-24z\"]\n  };\n  var faShoppingCart = {\n    prefix: 'fas',\n    iconName: 'shopping-cart',\n    icon: [576, 512, [], \"f07a\", \"M528.12 301.319l47.273-208C578.806 78.301 567.391 64 551.99 64H159.208l-9.166-44.81C147.758 8.021 137.93 0 126.529 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24h69.883l70.248 343.435C147.325 417.1 136 435.222 136 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-15.674-6.447-29.835-16.824-40h209.647C430.447 426.165 424 440.326 424 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-22.172-12.888-41.332-31.579-50.405l5.517-24.276c3.413-15.018-8.002-29.319-23.403-29.319H218.117l-6.545-32h293.145c11.206 0 20.92-7.754 23.403-18.681z\"]\n  };\n  var faShower = {\n    prefix: 'fas',\n    iconName: 'shower',\n    icon: [512, 512, [], \"f2cc\", \"M389.66 135.6L231.6 293.66c-9.37 9.37-24.57 9.37-33.94 0l-11.32-11.32c-9.37-9.37-9.37-24.57 0-33.94l.11-.11c-34.03-40.21-35.16-98.94-3.39-140.38-11.97-7.55-26.14-11.91-41.3-11.91C98.88 96 64 130.88 64 173.76V480H0V173.76C0 95.59 63.59 32 141.76 32c36.93 0 70.61 14.2 95.86 37.42 35.9-11.51 76.5-4.5 106.67 21.03l.11-.11c9.37-9.37 24.57-9.37 33.94 0l11.32 11.32c9.37 9.37 9.37 24.57 0 33.94zM384 208c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm32 0c0-8.837 7.163-16 16-16s16 7.163 16 16-7.163 16-16 16-16-7.163-16-16zm96 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-160 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm48-16c8.837 0 16 7.163 16 16s-7.163 16-16 16-16-7.163-16-16 7.163-16 16-16zm80 16c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-160 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm32 0c0-8.837 7.163-16 16-16s16 7.163 16 16-7.163 16-16 16-16-7.163-16-16zm96 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-128 32c0-8.837 7.163-16 16-16s16 7.163 16 16-7.163 16-16 16-16-7.163-16-16zm96 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-96 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm64 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-32 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-32 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16z\"]\n  };\n  var faShuttleVan = {\n    prefix: 'fas',\n    iconName: 'shuttle-van',\n    icon: [640, 512, [], \"f5b6\", \"M628.88 210.65L494.39 49.27A48.01 48.01 0 0 0 457.52 32H32C14.33 32 0 46.33 0 64v288c0 17.67 14.33 32 32 32h32c0 53.02 42.98 96 96 96s96-42.98 96-96h128c0 53.02 42.98 96 96 96s96-42.98 96-96h32c17.67 0 32-14.33 32-32V241.38c0-11.23-3.94-22.1-11.12-30.73zM64 192V96h96v96H64zm96 240c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm160-240h-96V96h96v96zm160 240c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm-96-240V96h66.02l80 96H384z\"]\n  };\n  var faSign = {\n    prefix: 'fas',\n    iconName: 'sign',\n    icon: [512, 512, [], \"f4d9\", \"M496 64H128V16c0-8.8-7.2-16-16-16H80c-8.8 0-16 7.2-16 16v48H16C7.2 64 0 71.2 0 80v32c0 8.8 7.2 16 16 16h48v368c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V128h368c8.8 0 16-7.2 16-16V80c0-8.8-7.2-16-16-16zM160 384h320V160H160v224z\"]\n  };\n  var faSignInAlt = {\n    prefix: 'fas',\n    iconName: 'sign-in-alt',\n    icon: [512, 512, [], \"f2f6\", \"M416 448h-84c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h84c17.7 0 32-14.3 32-32V160c0-17.7-14.3-32-32-32h-84c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h84c53 0 96 43 96 96v192c0 53-43 96-96 96zm-47-201L201 79c-15-15-41-4.5-41 17v96H24c-13.3 0-24 10.7-24 24v96c0 13.3 10.7 24 24 24h136v96c0 21.5 26 32 41 17l168-168c9.3-9.4 9.3-24.6 0-34z\"]\n  };\n  var faSignLanguage = {\n    prefix: 'fas',\n    iconName: 'sign-language',\n    icon: [448, 512, [], \"f2a7\", \"M91.434 483.987c-.307-16.018 13.109-29.129 29.13-29.129h62.293v-5.714H56.993c-16.021 0-29.437-13.111-29.13-29.129C28.16 404.491 40.835 392 56.428 392h126.429v-5.714H29.136c-16.021 0-29.437-13.111-29.13-29.129.297-15.522 12.973-28.013 28.566-28.013h154.286v-5.714H57.707c-16.021 0-29.437-13.111-29.13-29.129.297-15.522 12.973-28.013 28.566-28.013h168.566l-31.085-22.606c-12.762-9.281-15.583-27.149-6.302-39.912 9.281-12.761 27.15-15.582 39.912-6.302l123.361 89.715a34.287 34.287 0 0 1 14.12 27.728v141.136c0 15.91-10.946 29.73-26.433 33.374l-80.471 18.934a137.16 137.16 0 0 1-31.411 3.646H120c-15.593-.001-28.269-12.492-28.566-28.014zm73.249-225.701h36.423l-11.187-8.136c-18.579-13.511-20.313-40.887-3.17-56.536l-13.004-16.7c-9.843-12.641-28.43-15.171-40.88-5.088-12.065 9.771-14.133 27.447-4.553 39.75l36.371 46.71zm283.298-2.103l-5.003-152.452c-.518-15.771-13.722-28.136-29.493-27.619-15.773.518-28.137 13.722-27.619 29.493l1.262 38.415L283.565 11.019c-9.58-12.303-27.223-14.63-39.653-5.328-12.827 9.599-14.929 28.24-5.086 40.881l76.889 98.745-4.509 3.511-94.79-121.734c-9.58-12.303-27.223-14.63-39.653-5.328-12.827 9.599-14.929 28.24-5.086 40.881l94.443 121.288-4.509 3.511-77.675-99.754c-9.58-12.303-27.223-14.63-39.653-5.328-12.827 9.599-14.929 28.24-5.086 40.881l52.053 66.849c12.497-8.257 29.055-8.285 41.69.904l123.36 89.714c10.904 7.93 17.415 20.715 17.415 34.198v16.999l61.064-47.549a34.285 34.285 0 0 0 13.202-28.177z\"]\n  };\n  var faSignOutAlt = {\n    prefix: 'fas',\n    iconName: 'sign-out-alt',\n    icon: [512, 512, [], \"f2f5\", \"M497 273L329 441c-15 15-41 4.5-41-17v-96H152c-13.3 0-24-10.7-24-24v-96c0-13.3 10.7-24 24-24h136V88c0-21.4 25.9-32 41-17l168 168c9.3 9.4 9.3 24.6 0 34zM192 436v-40c0-6.6-5.4-12-12-12H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h84c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12H96c-53 0-96 43-96 96v192c0 53 43 96 96 96h84c6.6 0 12-5.4 12-12z\"]\n  };\n  var faSignal = {\n    prefix: 'fas',\n    iconName: 'signal',\n    icon: [640, 512, [], \"f012\", \"M216 288h-48c-8.84 0-16 7.16-16 16v192c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V304c0-8.84-7.16-16-16-16zM88 384H40c-8.84 0-16 7.16-16 16v96c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16v-96c0-8.84-7.16-16-16-16zm256-192h-48c-8.84 0-16 7.16-16 16v288c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V208c0-8.84-7.16-16-16-16zm128-96h-48c-8.84 0-16 7.16-16 16v384c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V112c0-8.84-7.16-16-16-16zM600 0h-48c-8.84 0-16 7.16-16 16v480c0 8.84 7.16 16 16 16h48c8.84 0 16-7.16 16-16V16c0-8.84-7.16-16-16-16z\"]\n  };\n  var faSignature = {\n    prefix: 'fas',\n    iconName: 'signature',\n    icon: [640, 512, [], \"f5b7\", \"M623.2 192c-51.8 3.5-125.7 54.7-163.1 71.5-29.1 13.1-54.2 24.4-76.1 24.4-22.6 0-26-16.2-21.3-51.9 1.1-8 11.7-79.2-42.7-76.1-25.1 1.5-64.3 24.8-169.5 126L192 182.2c30.4-75.9-53.2-151.5-129.7-102.8L7.4 116.3C0 121-2.2 130.9 2.5 138.4l17.2 27c4.7 7.5 14.6 9.7 22.1 4.9l58-38.9c18.4-11.7 40.7 7.2 32.7 27.1L34.3 404.1C27.5 421 37 448 64 448c8.3 0 16.5-3.2 22.6-9.4 42.2-42.2 154.7-150.7 211.2-195.8-2.2 28.5-2.1 58.9 20.6 83.8 15.3 16.8 37.3 25.3 65.5 25.3 35.6 0 68-14.6 102.3-30 33-14.8 99-62.6 138.4-65.8 8.5-.7 15.2-7.3 15.2-15.8v-32.1c.2-9.1-7.5-16.8-16.6-16.2z\"]\n  };\n  var faSimCard = {\n    prefix: 'fas',\n    iconName: 'sim-card',\n    icon: [384, 512, [], \"f7c4\", \"M320 0H128L0 128v320c0 35.3 28.7 64 64 64h256c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64zM160 192h64v64h-64v-64zm-96 32c0-17.7 14.3-32 32-32h32v64H64v-32zm64 224H96c-17.7 0-32-14.3-32-32v-32h64v64zm96 0h-64v-64h64v64zm96-32c0 17.7-14.3 32-32 32h-32v-64h64v32zm0-64H64v-64h256v64zm0-96h-64v-64h32c17.7 0 32 14.3 32 32v32z\"]\n  };\n  var faSitemap = {\n    prefix: 'fas',\n    iconName: 'sitemap',\n    icon: [640, 512, [], \"f0e8\", \"M128 352H32c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zm-24-80h192v48h48v-48h192v48h48v-57.59c0-21.17-17.23-38.41-38.41-38.41H344v-64h40c17.67 0 32-14.33 32-32V32c0-17.67-14.33-32-32-32H256c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h40v64H94.41C73.23 224 56 241.23 56 262.41V320h48v-48zm264 80h-96c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32zm240 0h-96c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32z\"]\n  };\n  var faSkating = {\n    prefix: 'fas',\n    iconName: 'skating',\n    icon: [448, 512, [], \"f7c5\", \"M400 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm0 448c-8.8 0-16 7.2-16 16s-7.2 16-16 16h-96c-8.8 0-16 7.2-16 16s7.2 16 16 16h96c26.5 0 48-21.5 48-48 0-8.8-7.2-16-16-16zm-282.2 8.6c-6.2 6.2-16.4 6.3-22.6 0l-67.9-67.9c-6.2-6.2-16.4-6.2-22.6 0s-6.2 16.4 0 22.6l67.9 67.9c9.4 9.4 21.7 14 34 14s24.6-4.7 33.9-14c6.2-6.2 6.2-16.4 0-22.6s-16.4-6.3-22.7 0zm56.1-179.8l-93.7 93.7c-12.5 12.5-12.5 32.8 0 45.2 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4l91.9-91.9-30.2-30.2c-5-5-9.4-10.7-13.2-16.8zM128 160h105.5l-20.1 17.2c-13.5 11.5-21.6 28.4-22.3 46.1-.7 17.8 6.1 35.2 18.7 47.7l78.2 78.2V432c0 17.7 14.3 32 32 32s32-14.3 32-32v-89.4c0-12.6-5.1-25-14.1-33.9l-61-61c.5-.4 1.2-.6 1.7-1.1l82.3-82.3c11.5-11.5 14.9-28.6 8.7-43.6-6.2-15-20.7-24.7-37-24.7H128c-17.7 0-32 14.3-32 32s14.3 32 32 32z\"]\n  };\n  var faSkiing = {\n    prefix: 'fas',\n    iconName: 'skiing',\n    icon: [512, 512, [], \"f7c9\", \"M432 96c26.5 0 48-21.5 48-48S458.5 0 432 0s-48 21.5-48 48 21.5 48 48 48zm73 356.1c-9.4-9.4-24.6-9.4-33.9 0-12.1 12.1-30.5 15.4-45.1 8.7l-135.8-70.2 49.2-73.8c12.7-19 10.2-44.5-6-60.6L293 215.7l-107-53.1c-2.9 19.9 3.4 40 17.7 54.4l75.1 75.2-45.9 68.8L35 258.7c-11.7-6-26.2-1.5-32.3 10.3-6.1 11.8-1.5 26.3 10.3 32.3l391.9 202.5c11.9 5.5 24.5 8.1 37.1 8.1 23.2 0 46-9 63-26 9.3-9.3 9.3-24.5 0-33.8zM120 91.6l-11.5 22.5c14.4 7.3 31.2 4.9 42.8-4.8l47.2 23.4c-.1.1-.1.2-.2.3l114.5 56.8 32.4-13 6.4 19.1c4 12.1 12.6 22 24 27.7l58.1 29c15.9 7.9 35 1.5 42.9-14.3 7.9-15.8 1.5-35-14.3-42.9l-52.1-26.1-17.1-51.2c-8.1-24.2-40.9-56.6-84.5-39.2l-81.2 32.5-62.5-31c.3-14.5-7.2-28.6-20.9-35.6l-11.1 21.7h-.2l-34.4-7c-1.8-.4-3.7.2-5 1.7-1.9 2.2-1.7 5.5.5 7.4l26.2 23z\"]\n  };\n  var faSkiingNordic = {\n    prefix: 'fas',\n    iconName: 'skiing-nordic',\n    icon: [576, 512, [], \"f7ca\", \"M336 96c26.5 0 48-21.5 48-48S362.5 0 336 0s-48 21.5-48 48 21.5 48 48 48zm216 320c-13.2 0-24 10.7-24 24 0 13.2-10.8 24-24 24h-69.5L460 285.6c11.7-4.7 20.1-16.2 20.1-29.6 0-17.7-14.3-32-32-32h-44L378 170.8c-12.5-25.5-35.5-44.2-61.8-50.9L245 98.7c-28.3-6.8-57.8-.5-80.8 17.1l-39.7 30.4c-14 10.7-16.7 30.8-5.9 44.9.7.9 1.7 1.3 2.4 2.1L66.9 464H24c-13.2 0-24 10.7-24 24s10.8 24 24 24h480c39.7 0 72-32.3 72-72 0-13.2-10.8-24-24-24zm-260.5 48h-96.9l43.1-91-22-13c-12.1-7.2-21.9-16.9-29.5-27.8L123.7 464H99.5l52.3-261.4c4.1-1 8.1-2.9 11.7-5.6l39.7-30.4c7.7-5.9 17.4-8 25.3-6.1l14.7 4.4-37.5 87.4c-12.6 29.5-1.3 64 26.3 80.3l85 50.2-25.5 81.2zm110.6 0h-43.6l23.6-75.5c5.9-20.8-2.9-43.1-21.6-54.4L299.3 298l31.3-78.3 20.3 41.4c8 16.3 24.9 26.9 43.1 26.9h33.3l-25.2 176z\"]\n  };\n  var faSkull = {\n    prefix: 'fas',\n    iconName: 'skull',\n    icon: [512, 512, [], \"f54c\", \"M256 0C114.6 0 0 100.3 0 224c0 70.1 36.9 132.6 94.5 173.7 9.6 6.9 15.2 18.1 13.5 29.9l-9.4 66.2c-1.4 9.6 6 18.2 15.7 18.2H192v-56c0-4.4 3.6-8 8-8h16c4.4 0 8 3.6 8 8v56h64v-56c0-4.4 3.6-8 8-8h16c4.4 0 8 3.6 8 8v56h77.7c9.7 0 17.1-8.6 15.7-18.2l-9.4-66.2c-1.7-11.7 3.8-23 13.5-29.9C475.1 356.6 512 294.1 512 224 512 100.3 397.4 0 256 0zm-96 320c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64zm192 0c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64z\"]\n  };\n  var faSkullCrossbones = {\n    prefix: 'fas',\n    iconName: 'skull-crossbones',\n    icon: [448, 512, [], \"f714\", \"M439.15 453.06L297.17 384l141.99-69.06c7.9-3.95 11.11-13.56 7.15-21.46L432 264.85c-3.95-7.9-13.56-11.11-21.47-7.16L224 348.41 37.47 257.69c-7.9-3.95-17.51-.75-21.47 7.16L1.69 293.48c-3.95 7.9-.75 17.51 7.15 21.46L150.83 384 8.85 453.06c-7.9 3.95-11.11 13.56-7.15 21.47l14.31 28.63c3.95 7.9 13.56 11.11 21.47 7.15L224 419.59l186.53 90.72c7.9 3.95 17.51.75 21.47-7.15l14.31-28.63c3.95-7.91.74-17.52-7.16-21.47zM150 237.28l-5.48 25.87c-2.67 12.62 5.42 24.85 16.45 24.85h126.08c11.03 0 19.12-12.23 16.45-24.85l-5.5-25.87c41.78-22.41 70-62.75 70-109.28C368 57.31 303.53 0 224 0S80 57.31 80 128c0 46.53 28.22 86.87 70 109.28zM280 112c17.65 0 32 14.35 32 32s-14.35 32-32 32-32-14.35-32-32 14.35-32 32-32zm-112 0c17.65 0 32 14.35 32 32s-14.35 32-32 32-32-14.35-32-32 14.35-32 32-32z\"]\n  };\n  var faSlash = {\n    prefix: 'fas',\n    iconName: 'slash',\n    icon: [640, 512, [], \"f715\", \"M594.53 508.63L6.18 53.9c-6.97-5.42-8.23-15.47-2.81-22.45L23.01 6.18C28.43-.8 38.49-2.06 45.47 3.37L633.82 458.1c6.97 5.42 8.23 15.47 2.81 22.45l-19.64 25.27c-5.42 6.98-15.48 8.23-22.46 2.81z\"]\n  };\n  var faSleigh = {\n    prefix: 'fas',\n    iconName: 'sleigh',\n    icon: [640, 512, [], \"f7cc\", \"M612.7 350.7l-9.3-7.4c-6.9-5.5-17-4.4-22.5 2.5l-10 12.5c-5.5 6.9-4.4 17 2.5 22.5l9.3 7.4c5.9 4.7 9.2 11.7 9.2 19.2 0 13.6-11 24.6-24.6 24.6H48c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h516c39 0 73.7-29.3 75.9-68.3 1.4-23.8-8.7-46.3-27.2-61zM32 224c0 59.6 40.9 109.2 96 123.5V400h64v-48h192v48h64v-48c53 0 96-43 96-96v-96c17.7 0 32-14.3 32-32s-14.3-32-32-32h-96v64c0 35.3-28.7 64-64 64h-20.7c-65.8 0-125.9-37.2-155.3-96-29.4-58.8-89.6-96-155.3-96H32C14.3 32 0 46.3 0 64s14.3 32 32 32v128z\"]\n  };\n  var faSlidersH = {\n    prefix: 'fas',\n    iconName: 'sliders-h',\n    icon: [512, 512, [], \"f1de\", \"M496 384H160v-16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v16H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h80v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h336c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm0-160h-80v-16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v16H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h336v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h80c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm0-160H288V48c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v16H16C7.2 64 0 71.2 0 80v32c0 8.8 7.2 16 16 16h208v16c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-16h208c8.8 0 16-7.2 16-16V80c0-8.8-7.2-16-16-16z\"]\n  };\n  var faSmile = {\n    prefix: 'fas',\n    iconName: 'smile',\n    icon: [496, 512, [], \"f118\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm80 168c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm-160 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm194.8 170.2C334.3 380.4 292.5 400 248 400s-86.3-19.6-114.8-53.8c-13.6-16.3 11-36.7 24.6-20.5 22.4 26.9 55.2 42.2 90.2 42.2s67.8-15.4 90.2-42.2c13.4-16.2 38.1 4.2 24.6 20.5z\"]\n  };\n  var faSmileBeam = {\n    prefix: 'fas',\n    iconName: 'smile-beam',\n    icon: [496, 512, [], \"f5b8\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM112 223.4c3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.7 8.6-10.8 11.9-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.3 7.4-15.8 4-15.1-4.5zm250.8 122.8C334.3 380.4 292.5 400 248 400s-86.3-19.6-114.8-53.8c-13.5-16.3 11-36.7 24.6-20.5 22.4 26.9 55.2 42.2 90.2 42.2s67.8-15.4 90.2-42.2c13.6-16.2 38.1 4.3 24.6 20.5zm6.2-118.3l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.1 7.3-15.6 4-14.9-4.5 3.3-42.1 32.2-71.4 56-71.4s52.7 29.3 56 71.4c.6 8.6-11 11.9-15.1 4.5z\"]\n  };\n  var faSmileWink = {\n    prefix: 'fas',\n    iconName: 'smile-wink',\n    icon: [496, 512, [], \"f4da\", \"M0 256c0 137 111 248 248 248s248-111 248-248S385 8 248 8 0 119 0 256zm200-48c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32zm158.5 16.5c-14.8-13.2-46.2-13.2-61 0L288 233c-8.3 7.4-21.6.4-19.8-10.8 4-25.2 34.2-42.1 59.9-42.1S384 197 388 222.2c1.7 11.1-11.4 18.3-19.8 10.8l-9.7-8.5zM157.8 325.8C180.2 352.7 213 368 248 368s67.8-15.4 90.2-42.2c13.6-16.2 38.1 4.2 24.6 20.5C334.3 380.4 292.5 400 248 400s-86.3-19.6-114.8-53.8c-13.5-16.3 11.2-36.7 24.6-20.4z\"]\n  };\n  var faSmog = {\n    prefix: 'fas',\n    iconName: 'smog',\n    icon: [640, 512, [], \"f75f\", \"M624 368H80c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h544c8.8 0 16-7.2 16-16v-16c0-8.8-7.2-16-16-16zm-480 96H16c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h128c8.8 0 16-7.2 16-16v-16c0-8.8-7.2-16-16-16zm416 0H224c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h336c8.8 0 16-7.2 16-16v-16c0-8.8-7.2-16-16-16zM144 288h156.1c22.5 19.7 51.6 32 83.9 32s61.3-12.3 83.9-32H528c61.9 0 112-50.1 112-112S589.9 64 528 64c-18 0-34.7 4.6-49.7 12.1C454 31 406.8 0 352 0c-41 0-77.8 17.3-104 44.8C221.8 17.3 185 0 144 0 64.5 0 0 64.5 0 144s64.5 144 144 144z\"]\n  };\n  var faSmoking = {\n    prefix: 'fas',\n    iconName: 'smoking',\n    icon: [640, 512, [], \"f48d\", \"M632 352h-48c-4.4 0-8 3.6-8 8v144c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V360c0-4.4-3.6-8-8-8zM553.3 87.1c-5.7-3.8-9.3-10-9.3-16.8V8c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v62.3c0 22 10.2 43.4 28.6 55.4 42.2 27.3 67.4 73.8 67.4 124V280c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-30.3c0-65.5-32.4-126.2-86.7-162.6zM432 352H48c-26.5 0-48 21.5-48 48v64c0 26.5 21.5 48 48 48h384c8.8 0 16-7.2 16-16V368c0-8.8-7.2-16-16-16zm-32 112H224v-64h176v64zm87.7-322.4C463.8 125 448 99.3 448 70.3V8c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v66.4c0 43.7 24.6 81.6 60.3 106.7 22.4 15.7 35.7 41.2 35.7 68.6V280c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-30.3c0-43.3-21-83.4-56.3-108.1zM536 352h-48c-4.4 0-8 3.6-8 8v144c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V360c0-4.4-3.6-8-8-8z\"]\n  };\n  var faSmokingBan = {\n    prefix: 'fas',\n    iconName: 'smoking-ban',\n    icon: [512, 512, [], \"f54d\", \"M96 304c0 8.8 7.2 16 16 16h117.5l-96-96H112c-8.8 0-16 7.2-16 16v64zM256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zm0 448c-105.9 0-192-86.1-192-192 0-41.4 13.3-79.7 35.7-111.1l267.4 267.4C335.7 434.7 297.4 448 256 448zm45.2-192H384v32h-50.8l-32-32zm111.1 111.1L365.2 320H400c8.8 0 16-7.2 16-16v-64c0-8.8-7.2-16-16-16H269.2L144.9 99.7C176.3 77.3 214.6 64 256 64c105.9 0 192 86.1 192 192 0 41.4-13.3 79.7-35.7 111.1zM320.6 128c-15.6 0-28.6-11.2-31.4-25.9-.7-3.6-4-6.1-7.7-6.1h-16.2c-5 0-8.7 4.5-8 9.4 4.6 30.9 31.2 54.6 63.3 54.6 15.6 0 28.6 11.2 31.4 25.9.7 3.6 4 6.1 7.7 6.1h16.2c5 0 8.7-4.5 8-9.4-4.6-30.9-31.2-54.6-63.3-54.6z\"]\n  };\n  var faSms = {\n    prefix: 'fas',\n    iconName: 'sms',\n    icon: [512, 512, [], \"f7cd\", \"M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7 1.3 3 4.1 4.8 7.3 4.8 66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32zM128.2 304H116c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h12.3c6 0 10.4-3.5 10.4-6.6 0-1.3-.8-2.7-2.1-3.8l-21.9-18.8c-8.5-7.2-13.3-17.5-13.3-28.1 0-21.3 19-38.6 42.4-38.6H156c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8h-12.3c-6 0-10.4 3.5-10.4 6.6 0 1.3.8 2.7 2.1 3.8l21.9 18.8c8.5 7.2 13.3 17.5 13.3 28.1.1 21.3-19 38.6-42.4 38.6zm191.8-8c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8v-68.2l-24.8 55.8c-2.9 5.9-11.4 5.9-14.3 0L224 227.8V296c0 4.4-3.6 8-8 8h-16c-4.4 0-8-3.6-8-8V192c0-8.8 7.2-16 16-16h16c6.1 0 11.6 3.4 14.3 8.8l17.7 35.4 17.7-35.4c2.7-5.4 8.3-8.8 14.3-8.8h16c8.8 0 16 7.2 16 16v104zm48.3 8H356c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h12.3c6 0 10.4-3.5 10.4-6.6 0-1.3-.8-2.7-2.1-3.8l-21.9-18.8c-8.5-7.2-13.3-17.5-13.3-28.1 0-21.3 19-38.6 42.4-38.6H396c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8h-12.3c-6 0-10.4 3.5-10.4 6.6 0 1.3.8 2.7 2.1 3.8l21.9 18.8c8.5 7.2 13.3 17.5 13.3 28.1.1 21.3-18.9 38.6-42.3 38.6z\"]\n  };\n  var faSnowboarding = {\n    prefix: 'fas',\n    iconName: 'snowboarding',\n    icon: [512, 512, [], \"f7ce\", \"M432 96c26.5 0 48-21.5 48-48S458.5 0 432 0s-48 21.5-48 48 21.5 48 48 48zm28.8 153.6c5.8 4.3 12.5 6.4 19.2 6.4 9.7 0 19.3-4.4 25.6-12.8 10.6-14.1 7.8-34.2-6.4-44.8l-111.4-83.5c-13.8-10.3-29.1-18.4-45.4-23.8l-63.7-21.2-26.1-52.1C244.7 2 225.5-4.4 209.7 3.5c-15.8 7.9-22.2 27.1-14.3 42.9l29.1 58.1c5.7 11.4 15.6 19.9 27.7 24l16.4 5.5-41.2 20.6c-21.8 10.9-35.4 32.8-35.4 57.2v53.1l-74.1 24.7c-16.8 5.6-25.8 23.7-20.2 40.5 1.7 5.2 4.9 9.4 8.7 12.9l-38.7-14.1c-9.7-3.5-17.4-10.6-21.8-20-5.6-12-19.9-17.2-31.9-11.6s-17.2 19.9-11.6 31.9c9.8 21 27.1 36.9 48.9 44.8l364.8 132.7c9.7 3.5 19.7 5.3 29.7 5.3 12.5 0 24.9-2.7 36.5-8.2 12-5.6 17.2-19.9 11.6-31.9S474 454.7 462 460.3c-9.3 4.4-19.8 4.8-29.5 1.3l-90.8-33.1c8.7-4.1 15.6-11.8 17.8-21.9l21.9-102c3.9-18.2-3.2-37.2-18.1-48.4l-52-39 66-30.5 83.5 62.9zm-144.4 51.7l-19.7 92c-1.5 7.1-.1 13.9 2.8 20l-169.4-61.6c2.7-.2 5.4-.4 8-1.3l85-28.4c19.6-6.5 32.8-24.8 32.8-45.5V256l60.5 45.3z\"]\n  };\n  var faSnowflake = {\n    prefix: 'fas',\n    iconName: 'snowflake',\n    icon: [448, 512, [], \"f2dc\", \"M440.3 345.2l-33.8-19.5 26-7c8.2-2.2 13.1-10.7 10.9-18.9l-4-14.9c-2.2-8.2-10.7-13.1-18.9-10.9l-70.8 19-63.9-37 63.8-36.9 70.8 19c8.2 2.2 16.7-2.7 18.9-10.9l4-14.9c2.2-8.2-2.7-16.7-10.9-18.9l-26-7 33.8-19.5c7.4-4.3 9.9-13.7 5.7-21.1L430.4 119c-4.3-7.4-13.7-9.9-21.1-5.7l-33.8 19.5 7-26c2.2-8.2-2.7-16.7-10.9-18.9l-14.9-4c-8.2-2.2-16.7 2.7-18.9 10.9l-19 70.8-62.8 36.2v-77.5l53.7-53.7c6.2-6.2 6.2-16.4 0-22.6l-11.3-11.3c-6.2-6.2-16.4-6.2-22.6 0L256 56.4V16c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v40.4l-19.7-19.7c-6.2-6.2-16.4-6.2-22.6 0L138.3 48c-6.3 6.2-6.3 16.4 0 22.6l53.7 53.7v77.5l-62.8-36.2-19-70.8c-2.2-8.2-10.7-13.1-18.9-10.9l-14.9 4c-8.2 2.2-13.1 10.7-10.9 18.9l7 26-33.8-19.5c-7.4-4.3-16.8-1.7-21.1 5.7L2.1 145.7c-4.3 7.4-1.7 16.8 5.7 21.1l33.8 19.5-26 7c-8.3 2.2-13.2 10.7-11 19l4 14.9c2.2 8.2 10.7 13.1 18.9 10.9l70.8-19 63.8 36.9-63.8 36.9-70.8-19c-8.2-2.2-16.7 2.7-18.9 10.9l-4 14.9c-2.2 8.2 2.7 16.7 10.9 18.9l26 7-33.8 19.6c-7.4 4.3-9.9 13.7-5.7 21.1l15.5 26.8c4.3 7.4 13.7 9.9 21.1 5.7l33.8-19.5-7 26c-2.2 8.2 2.7 16.7 10.9 18.9l14.9 4c8.2 2.2 16.7-2.7 18.9-10.9l19-70.8 62.8-36.2v77.5l-53.7 53.7c-6.3 6.2-6.3 16.4 0 22.6l11.3 11.3c6.2 6.2 16.4 6.2 22.6 0l19.7-19.7V496c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-40.4l19.7 19.7c6.2 6.2 16.4 6.2 22.6 0l11.3-11.3c6.2-6.2 6.2-16.4 0-22.6L256 387.7v-77.5l62.8 36.2 19 70.8c2.2 8.2 10.7 13.1 18.9 10.9l14.9-4c8.2-2.2 13.1-10.7 10.9-18.9l-7-26 33.8 19.5c7.4 4.3 16.8 1.7 21.1-5.7l15.5-26.8c4.3-7.3 1.8-16.8-5.6-21z\"]\n  };\n  var faSnowman = {\n    prefix: 'fas',\n    iconName: 'snowman',\n    icon: [512, 512, [], \"f7d0\", \"M510.9 152.3l-5.9-14.5c-3.3-8-12.6-11.9-20.8-8.7L456 140.6v-29c0-8.6-7.2-15.6-16-15.6h-16c-8.8 0-16 7-16 15.6v46.9c0 .5.3 1 .3 1.5l-56.4 23c-5.9-10-13.3-18.9-22-26.6 13.6-16.6 22-37.4 22-60.5 0-53-43-96-96-96s-96 43-96 96c0 23.1 8.5 43.9 22 60.5-8.7 7.7-16 16.6-22 26.6l-56.4-23c.1-.5.3-1 .3-1.5v-46.9C104 103 96.8 96 88 96H72c-8.8 0-16 7-16 15.6v29l-28.1-11.5c-8.2-3.2-17.5.7-20.8 8.7l-5.9 14.5c-3.3 8 .7 17.1 8.9 20.3l135.2 55.2c-.4 4-1.2 8-1.2 12.2 0 10.1 1.7 19.6 4.2 28.9C120.9 296.4 104 334.2 104 376c0 54 28.4 100.9 70.8 127.8 9.3 5.9 20.3 8.2 31.3 8.2h99.2c13.3 0 26.3-4.1 37.2-11.7 46.5-32.3 74.4-89.4 62.9-152.6-5.5-30.2-20.5-57.6-41.6-79 2.5-9.2 4.2-18.7 4.2-28.7 0-4.2-.8-8.1-1.2-12.2L502 172.6c8.1-3.1 12.1-12.2 8.9-20.3zM224 96c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm32 272c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-64c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-64c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm0-88s-16-23.2-16-32 7.2-16 16-16 16 7.2 16 16-16 32-16 32zm32-56c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z\"]\n  };\n  var faSnowplow = {\n    prefix: 'fas',\n    iconName: 'snowplow',\n    icon: [640, 512, [], \"f7d2\", \"M120 376c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm80 0c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm80 0c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm80 0c-13.3 0-24 10.7-24 24s10.7 24 24 24 24-10.7 24-24-10.7-24-24-24zm238.6 49.4c-14.5-14.5-22.6-34.1-22.6-54.6V269.2c0-20.5 8.1-40.1 22.6-54.6l36.7-36.7c6.2-6.2 6.2-16.4 0-22.6l-22.6-22.6c-6.2-6.2-16.4-6.2-22.6 0l-36.7 36.7c-26.5 26.5-41.4 62.4-41.4 99.9V288h-64v-50.9c0-8.7-1.8-17.2-5.2-25.2L364.5 29.1C356.9 11.4 339.6 0 320.3 0H176c-26.5 0-48 21.5-48 48v112h-16c-26.5 0-48 21.5-48 48v91.2C26.3 317.2 0 355.4 0 400c0 61.9 50.1 112 112 112h256c61.9 0 112-50.1 112-112 0-17.3-4.2-33.4-11.2-48H512v18.7c0 37.5 14.9 73.4 41.4 99.9l36.7 36.7c6.2 6.2 16.4 6.2 22.6 0l22.6-22.6c6.2-6.2 6.2-16.4 0-22.6l-36.7-36.7zM192 64h117.8l68.6 160H256l-64-64V64zm176 384H112c-26.5 0-48-21.5-48-48s21.5-48 48-48h256c26.5 0 48 21.5 48 48s-21.5 48-48 48z\"]\n  };\n  var faSocks = {\n    prefix: 'fas',\n    iconName: 'socks',\n    icon: [512, 512, [], \"f696\", \"M214.66 311.01L288 256V96H128v176l-86.65 64.61c-39.4 29.56-53.86 84.42-29.21 127.06C30.39 495.25 63.27 512 96.08 512c20.03 0 40.25-6.25 57.52-19.2l21.86-16.39c-29.85-55.38-13.54-125.84 39.2-165.4zM288 32c0-11.05 3.07-21.3 8.02-30.38C293.4.92 290.85 0 288 0H160c-17.67 0-32 14.33-32 32v32h160V32zM480 0H352c-17.67 0-32 14.33-32 32v32h192V32c0-17.67-14.33-32-32-32zM320 272l-86.13 64.61c-39.4 29.56-53.86 84.42-29.21 127.06 18.25 31.58 50.61 48.33 83.42 48.33 20.03 0 40.25-6.25 57.52-19.2l115.2-86.4A127.997 127.997 0 0 0 512 304V96H320v176z\"]\n  };\n  var faSolarPanel = {\n    prefix: 'fas',\n    iconName: 'solar-panel',\n    icon: [640, 512, [], \"f5ba\", \"M431.98 448.01l-47.97.05V416h-128v32.21l-47.98.05c-8.82.01-15.97 7.16-15.98 15.99l-.05 31.73c-.01 8.85 7.17 16.03 16.02 16.02l223.96-.26c8.82-.01 15.97-7.16 15.98-15.98l.04-31.73c.01-8.85-7.17-16.03-16.02-16.02zM585.2 26.74C582.58 11.31 568.99 0 553.06 0H86.93C71 0 57.41 11.31 54.79 26.74-3.32 369.16.04 348.08.03 352c-.03 17.32 14.29 32 32.6 32h574.74c18.23 0 32.51-14.56 32.59-31.79.02-4.08 3.35 16.95-54.76-325.47zM259.83 64h120.33l9.77 96H250.06l9.77-96zm-75.17 256H71.09L90.1 208h105.97l-11.41 112zm16.29-160H98.24l16.29-96h96.19l-9.77 96zm32.82 160l11.4-112h149.65l11.4 112H233.77zm195.5-256h96.19l16.29 96H439.04l-9.77-96zm26.06 256l-11.4-112H549.9l19.01 112H455.33z\"]\n  };\n  var faSort = {\n    prefix: 'fas',\n    iconName: 'sort',\n    icon: [320, 512, [], \"f0dc\", \"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z\"]\n  };\n  var faSortAlphaDown = {\n    prefix: 'fas',\n    iconName: 'sort-alpha-down',\n    icon: [448, 512, [], \"f15d\", \"M400.7 427.1h-61.1c.7-1 1.5-2 2.3-3.1l67.5-95.7c1.4-2 2.2-4.4 2.2-6.9V300c0-6.6-5.4-12-12-12H274.5c-6.6 0-12 5.4-12 12v28.9c0 6.6 5.4 12 12 12H331c-.7 1-1.5 2-2.3 3.1l-67.2 95.2c-1.4 2-2.2 4.4-2.2 6.9V468c0 6.6 5.4 12 12 12h129.4c6.6 0 12-5.4 12-12v-28.9c0-6.7-5.4-12-12-12zM176 368h-48V48c0-8.8-7.2-16-16-16H80c-8.8 0-16 7.2-16 16v320H16c-14.2 0-21.4 17.2-11.3 27.3l80 80c6.2 6.2 16.4 6.2 22.6 0l80-80c10-10 2.9-27.3-11.3-27.3zm248.2-159.9l-57.1-168c-1.7-4.9-6.2-8.1-11.4-8.1h-39.6c-5.1 0-9.7 3.3-11.4 8.1l-57.1 168c-2.6 7.8 3.1 15.9 11.4 15.9h35.7c5.4 0 10.1-3.5 11.5-8.7l8.1-28.2h42.9l8.3 28.3A12 12 0 0 0 377 224h35.7c8.4 0 14.2-8.1 11.5-15.9zm-95-71.5l6.8-22.9 6.6 22.9z\"]\n  };\n  var faSortAlphaUp = {\n    prefix: 'fas',\n    iconName: 'sort-alpha-up',\n    icon: [448, 512, [], \"f15e\", \"M107.3 36.7c-6.2-6.2-16.4-6.2-22.6 0l-80 80c-10 10-2.9 27.3 11.3 27.3h48v320c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V144h48c14.2 0 21.4-17.2 11.3-27.3zm293.4 390.4h-61.1c.7-1 1.5-2 2.3-3.1l67.5-95.7c1.4-2 2.2-4.4 2.2-6.9V300c0-6.6-5.4-12-12-12H274.5c-6.6 0-12 5.4-12 12v28.9c0 6.6 5.4 12 12 12H331c-.7 1-1.5 2-2.3 3.1l-67.2 95.2c-1.4 2-2.2 4.4-2.2 6.9V468c0 6.6 5.4 12 12 12h129.4c6.6 0 12-5.4 12-12v-28.9c0-6.7-5.4-12-12-12zm23.5-219l-57.1-168c-1.7-4.9-6.2-8.1-11.4-8.1h-39.6c-5.1 0-9.7 3.3-11.4 8.1l-57.1 168c-2.6 7.8 3.1 15.9 11.4 15.9h35.7c5.4 0 10.1-3.5 11.5-8.7l8.1-28.2h42.9l8.3 28.3A12 12 0 0 0 377 224h35.7c8.4 0 14.2-8.1 11.5-15.9zm-95-71.5l6.8-22.9 6.6 22.9z\"]\n  };\n  var faSortAmountDown = {\n    prefix: 'fas',\n    iconName: 'sort-amount-down',\n    icon: [512, 512, [], \"f160\", \"M187.298 395.314l-79.984 80.002c-6.248 6.247-16.383 6.245-22.627 0L4.705 395.314C-5.365 385.244 1.807 368 16.019 368H64V48c0-8.837 7.163-16 16-16h32c8.837 0 16 7.163 16 16v320h47.984c14.241 0 21.363 17.264 11.314 27.314zM240 96h256c8.837 0 16-7.163 16-16V48c0-8.837-7.163-16-16-16H240c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16zm-16 112v-32c0-8.837 7.163-16 16-16h192c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16zm0 256v-32c0-8.837 7.163-16 16-16h64c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-64c-8.837 0-16-7.163-16-16zm0-128v-32c0-8.837 7.163-16 16-16h128c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16z\"]\n  };\n  var faSortAmountUp = {\n    prefix: 'fas',\n    iconName: 'sort-amount-up',\n    icon: [512, 512, [], \"f161\", \"M4.702 116.686l79.984-80.002c6.248-6.247 16.383-6.245 22.627 0l79.981 80.002c10.07 10.07 2.899 27.314-11.314 27.314H128v320c0 8.837-7.163 16-16 16H80c-8.837 0-16-7.163-16-16V144H16.016c-14.241 0-21.363-17.264-11.314-27.314zM240 96h256c8.837 0 16-7.163 16-16V48c0-8.837-7.163-16-16-16H240c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16zm-16 112v-32c0-8.837 7.163-16 16-16h192c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16zm0 256v-32c0-8.837 7.163-16 16-16h64c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-64c-8.837 0-16-7.163-16-16zm0-128v-32c0-8.837 7.163-16 16-16h128c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16z\"]\n  };\n  var faSortDown = {\n    prefix: 'fas',\n    iconName: 'sort-down',\n    icon: [320, 512, [], \"f0dd\", \"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41z\"]\n  };\n  var faSortNumericDown = {\n    prefix: 'fas',\n    iconName: 'sort-numeric-down',\n    icon: [448, 512, [], \"f162\", \"M308.811 113.787l-19.448-20.795c-4.522-4.836-4.274-12.421.556-16.95l43.443-40.741a11.999 11.999 0 0 1 8.209-3.247h31.591c6.627 0 12 5.373 12 12v127.07h25.66c6.627 0 12 5.373 12 12v28.93c0 6.627-5.373 12-12 12H301.649c-6.627 0-12-5.373-12-12v-28.93c0-6.627 5.373-12 12-12h25.414v-57.938c-7.254 6.58-14.211 4.921-18.252.601zm-30.57 238.569c0-32.653 23.865-67.356 68.094-67.356 38.253 0 79.424 28.861 79.424 92.228 0 51.276-32.237 105.772-91.983 105.772-17.836 0-30.546-3.557-38.548-6.781-5.79-2.333-8.789-8.746-6.922-14.703l9.237-29.48c2.035-6.496 9.049-9.983 15.467-7.716 13.029 4.602 27.878 5.275 38.103-4.138-38.742 5.072-72.872-25.36-72.872-67.826zm92.273 19.338c0-22.285-15.302-36.505-25.835-36.505-8.642 0-13.164 7.965-13.164 15.832 0 5.669 1.815 24.168 25.168 24.168 9.973 0 13.377-2.154 13.744-2.731.021-.046.087-.291.087-.764zM175.984 368H128V48c0-8.837-7.163-16-16-16H80c-8.837 0-16 7.163-16 16v320H16.019c-14.212 0-21.384 17.244-11.314 27.314l79.981 80.002c6.245 6.245 16.38 6.247 22.627 0l79.984-80.002c10.05-10.05 2.928-27.314-11.313-27.314z\"]\n  };\n  var faSortNumericUp = {\n    prefix: 'fas',\n    iconName: 'sort-numeric-up',\n    icon: [448, 512, [], \"f163\", \"M308.811 113.787l-19.448-20.795c-4.522-4.836-4.274-12.421.556-16.95l43.443-40.741a11.999 11.999 0 0 1 8.209-3.247h31.591c6.627 0 12 5.373 12 12v127.07h25.66c6.627 0 12 5.373 12 12v28.93c0 6.627-5.373 12-12 12H301.649c-6.627 0-12-5.373-12-12v-28.93c0-6.627 5.373-12 12-12h25.414v-57.938c-7.254 6.58-14.211 4.921-18.252.601zm-30.57 238.569c0-32.653 23.865-67.356 68.094-67.356 38.253 0 79.424 28.861 79.424 92.228 0 51.276-32.237 105.772-91.983 105.772-17.836 0-30.546-3.557-38.548-6.781-5.79-2.333-8.789-8.746-6.922-14.703l9.237-29.48c2.035-6.496 9.049-9.983 15.467-7.716 13.029 4.602 27.878 5.275 38.103-4.138-38.742 5.072-72.872-25.36-72.872-67.826zm92.273 19.338c0-22.285-15.302-36.505-25.835-36.505-8.642 0-13.164 7.965-13.164 15.832 0 5.669 1.815 24.168 25.168 24.168 9.973 0 13.377-2.154 13.744-2.731.021-.046.087-.291.087-.764zM16.016 144H64v320c0 8.837 7.163 16 16 16h32c8.837 0 16-7.163 16-16V144h47.981c14.212 0 21.384-17.244 11.314-27.314l-79.981-80.002c-6.245-6.245-16.38-6.247-22.627 0L4.702 116.686C-5.347 126.736 1.775 144 16.016 144z\"]\n  };\n  var faSortUp = {\n    prefix: 'fas',\n    iconName: 'sort-up',\n    icon: [320, 512, [], \"f0de\", \"M279 224H41c-21.4 0-32.1-25.9-17-41L143 64c9.4-9.4 24.6-9.4 33.9 0l119 119c15.2 15.1 4.5 41-16.9 41z\"]\n  };\n  var faSpa = {\n    prefix: 'fas',\n    iconName: 'spa',\n    icon: [576, 512, [], \"f5bb\", \"M568.25 192c-29.04.13-135.01 6.16-213.84 83-33.12 29.63-53.36 63.3-66.41 94.86-13.05-31.56-33.29-65.23-66.41-94.86-78.83-76.84-184.8-82.87-213.84-83-4.41-.02-7.79 3.4-7.75 7.82.23 27.92 7.14 126.14 88.77 199.3C172.79 480.94 256 480 288 480s115.19.95 199.23-80.88c81.64-73.17 88.54-171.38 88.77-199.3.04-4.42-3.34-7.84-7.75-7.82zM287.98 302.6c12.82-18.85 27.6-35.78 44.09-50.52 19.09-18.61 39.58-33.3 60.26-45.18-16.44-70.5-51.72-133.05-96.73-172.22-4.11-3.58-11.02-3.58-15.14 0-44.99 39.14-80.27 101.63-96.74 172.07 20.37 11.7 40.5 26.14 59.22 44.39a282.768 282.768 0 0 1 45.04 51.46z\"]\n  };\n  var faSpaceShuttle = {\n    prefix: 'fas',\n    iconName: 'space-shuttle',\n    icon: [640, 512, [], \"f197\", \"M592.604 208.244C559.735 192.836 515.777 184 472 184H186.327c-4.952-6.555-10.585-11.978-16.72-16H376C229.157 137.747 219.403 32 96.003 32H96v128H80V32c-26.51 0-48 28.654-48 64v64c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v16c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v64c0 35.346 21.49 64 48 64V352h16v128h.003c123.4 0 133.154-105.747 279.997-136H169.606c6.135-4.022 11.768-9.445 16.72-16H472c43.777 0 87.735-8.836 120.604-24.244C622.282 289.845 640 271.992 640 256s-17.718-33.845-47.396-47.756zM488 296a8 8 0 0 1-8-8v-64a8 8 0 0 1 8-8c31.909 0 31.942 80 0 80z\"]\n  };\n  var faSpider = {\n    prefix: 'fas',\n    iconName: 'spider',\n    icon: [576, 512, [], \"f717\", \"M151.17 167.35L177.1 176h4.67l5.22-26.12c.72-3.58 1.8-7.58 3.21-11.79l-20.29-40.58 23.8-71.39c2.79-8.38-1.73-17.44-10.12-20.24L168.42.82c-8.38-2.8-17.45 1.73-20.24 10.12l-25.89 77.68a32.04 32.04 0 0 0 1.73 24.43l27.15 54.3zm422.14 182.03l-52.75-79.12a32.002 32.002 0 0 0-26.62-14.25H416l68.99-24.36a32.03 32.03 0 0 0 16.51-12.61l53.6-80.41c4.9-7.35 2.91-17.29-4.44-22.19l-13.31-8.88c-7.35-4.9-17.29-2.91-22.19 4.44l-50.56 75.83L404.1 208H368l-10.37-51.85C355.44 145.18 340.26 96 288 96c-52.26 0-67.44 49.18-69.63 60.15L208 208h-36.1l-60.49-20.17L60.84 112c-4.9-7.35-14.83-9.34-22.19-4.44l-13.31 8.88c-7.35 4.9-9.34 14.83-4.44 22.19l53.6 80.41a32.03 32.03 0 0 0 16.51 12.61L160 256H82.06a32.02 32.02 0 0 0-26.63 14.25L2.69 349.38c-4.9 7.35-2.92 17.29 4.44 22.19l13.31 8.88c7.35 4.9 17.29 2.91 22.19-4.44l48-72h47.06l-60.83 97.33A31.988 31.988 0 0 0 72 418.3V496c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-73.11l74.08-118.53c-1.01 14.05-2.08 28.11-2.08 42.21C192 399.64 232.76 448 288 448s96-48.36 96-101.43c0-14.1-1.08-28.16-2.08-42.21L456 422.89V496c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-77.71c0-6-1.69-11.88-4.86-16.96L438.31 304h47.06l48 72c4.9 7.35 14.84 9.34 22.19 4.44l13.31-8.88c7.36-4.9 9.34-14.83 4.44-22.18zM406.09 97.51l-20.29 40.58c1.41 4.21 2.49 8.21 3.21 11.79l5.22 26.12h4.67l25.93-8.65 27.15-54.3a31.995 31.995 0 0 0 1.73-24.43l-25.89-77.68C425.03 2.56 415.96-1.98 407.58.82l-15.17 5.06c-8.38 2.8-12.91 11.86-10.12 20.24l23.8 71.39z\"]\n  };\n  var faSpinner = {\n    prefix: 'fas',\n    iconName: 'spinner',\n    icon: [512, 512, [], \"f110\", \"M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z\"]\n  };\n  var faSplotch = {\n    prefix: 'fas',\n    iconName: 'splotch',\n    icon: [512, 512, [], \"f5bc\", \"M472.29 195.89l-67.06-22.95c-19.28-6.6-33.54-20.92-38.14-38.3L351.1 74.19c-11.58-43.77-76.57-57.13-109.98-22.62l-46.14 47.67c-13.26 13.71-33.54 20.93-54.2 19.31l-71.88-5.62c-52.05-4.07-86.93 44.88-59.03 82.83l38.54 52.42c11.08 15.07 12.82 33.86 4.64 50.24L24.62 355.4c-20.59 41.25 22.84 84.87 73.49 73.81l69.96-15.28c20.11-4.39 41.45 0 57.07 11.73l54.32 40.83c39.32 29.56 101.04 7.57 104.45-37.22l4.7-61.86c1.35-17.79 12.8-33.86 30.63-42.99l62-31.74c44.88-22.96 39.59-80.17-8.95-96.79z\"]\n  };\n  var faSprayCan = {\n    prefix: 'fas',\n    iconName: 'spray-can',\n    icon: [512, 512, [], \"f5bd\", \"M224 32c0-17.67-14.33-32-32-32h-64c-17.67 0-32 14.33-32 32v96h128V32zm256 96c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32zm-256 32H96c-53.02 0-96 42.98-96 96v224c0 17.67 14.33 32 32 32h256c17.67 0 32-14.33 32-32V256c0-53.02-42.98-96-96-96zm-64 256c-44.18 0-80-35.82-80-80s35.82-80 80-80 80 35.82 80 80-35.82 80-80 80zM480 96c17.67 0 32-14.33 32-32s-14.33-32-32-32-32 14.33-32 32 14.33 32 32 32zm-96 32c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32zm-96-96c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32zm96 0c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32zm96 192c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32z\"]\n  };\n  var faSquare = {\n    prefix: 'fas',\n    iconName: 'square',\n    icon: [448, 512, [], \"f0c8\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\"]\n  };\n  var faSquareFull = {\n    prefix: 'fas',\n    iconName: 'square-full',\n    icon: [512, 512, [], \"f45c\", \"M512 512H0V0h512v512z\"]\n  };\n  var faSquareRootAlt = {\n    prefix: 'fas',\n    iconName: 'square-root-alt',\n    icon: [576, 512, [], \"f698\", \"M571.31 251.31l-22.62-22.62c-6.25-6.25-16.38-6.25-22.63 0L480 274.75l-46.06-46.06c-6.25-6.25-16.38-6.25-22.63 0l-22.62 22.62c-6.25 6.25-6.25 16.38 0 22.63L434.75 320l-46.06 46.06c-6.25 6.25-6.25 16.38 0 22.63l22.62 22.62c6.25 6.25 16.38 6.25 22.63 0L480 365.25l46.06 46.06c6.25 6.25 16.38 6.25 22.63 0l22.62-22.62c6.25-6.25 6.25-16.38 0-22.63L525.25 320l46.06-46.06c6.25-6.25 6.25-16.38 0-22.63zM552 0H307.65c-14.54 0-27.26 9.8-30.95 23.87l-84.79 322.8-58.41-106.1A32.008 32.008 0 0 0 105.47 224H24c-13.25 0-24 10.74-24 24v48c0 13.25 10.75 24 24 24h43.62l88.88 163.73C168.99 503.5 186.3 512 204.94 512c17.27 0 44.44-9 54.28-41.48L357.03 96H552c13.25 0 24-10.75 24-24V24c0-13.26-10.75-24-24-24z\"]\n  };\n  var faStamp = {\n    prefix: 'fas',\n    iconName: 'stamp',\n    icon: [512, 512, [], \"f5bf\", \"M32 512h448v-64H32v64zm384-256h-66.56c-16.26 0-29.44-13.18-29.44-29.44v-9.46c0-27.37 8.88-53.41 21.46-77.72 9.11-17.61 12.9-38.39 9.05-60.42-6.77-38.78-38.47-70.7-77.26-77.45C212.62-9.04 160 37.33 160 96c0 14.16 3.12 27.54 8.69 39.58C182.02 164.43 192 194.7 192 226.49v.07c0 16.26-13.18 29.44-29.44 29.44H96c-53.02 0-96 42.98-96 96v32c0 17.67 14.33 32 32 32h448c17.67 0 32-14.33 32-32v-32c0-53.02-42.98-96-96-96z\"]\n  };\n  var faStar = {\n    prefix: 'fas',\n    iconName: 'star',\n    icon: [576, 512, [], \"f005\", \"M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\"]\n  };\n  var faStarAndCrescent = {\n    prefix: 'fas',\n    iconName: 'star-and-crescent',\n    icon: [512, 512, [], \"f699\", \"M340.47 466.36c-1.45 0-6.89.46-9.18.46-116.25 0-210.82-94.57-210.82-210.82S215.04 45.18 331.29 45.18c2.32 0 7.7.46 9.18.46 7.13 0 13.33-5.03 14.75-12.07 1.46-7.25-2.55-14.49-9.47-17.09C316.58 5.54 286.39 0 256 0 114.84 0 0 114.84 0 256s114.84 256 256 256c30.23 0 60.28-5.49 89.32-16.32 5.96-2.02 10.28-7.64 10.28-14.26 0-8.09-6.39-15.06-15.13-15.06zm162.99-252.5l-76.38-11.1-34.16-69.21c-1.83-3.7-5.38-5.55-8.93-5.55s-7.1 1.85-8.93 5.55l-34.16 69.21-76.38 11.1c-8.17 1.18-11.43 11.22-5.52 16.99l55.27 53.87-13.05 76.07c-1.11 6.44 4.01 11.66 9.81 11.66 1.53 0 3.11-.36 4.64-1.17L384 335.37l68.31 35.91c1.53.8 3.11 1.17 4.64 1.17 5.8 0 10.92-5.23 9.81-11.66l-13.05-76.07 55.27-53.87c5.91-5.77 2.65-15.81-5.52-16.99z\"]\n  };\n  var faStarHalf = {\n    prefix: 'fas',\n    iconName: 'star-half',\n    icon: [576, 512, [], \"f089\", \"M288 0c-11.4 0-22.8 5.9-28.7 17.8L194 150.2 47.9 171.4c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.1 23 46 46.4 33.7L288 439.6V0z\"]\n  };\n  var faStarHalfAlt = {\n    prefix: 'fas',\n    iconName: 'star-half-alt',\n    icon: [536, 512, [], \"f5c0\", \"M508.55 171.51L362.18 150.2 296.77 17.81C290.89 5.98 279.42 0 267.95 0c-11.4 0-22.79 5.9-28.69 17.81l-65.43 132.38-146.38 21.29c-26.25 3.8-36.77 36.09-17.74 54.59l105.89 103-25.06 145.48C86.98 495.33 103.57 512 122.15 512c4.93 0 10-1.17 14.87-3.75l130.95-68.68 130.94 68.7c4.86 2.55 9.92 3.71 14.83 3.71 18.6 0 35.22-16.61 31.66-37.4l-25.03-145.49 105.91-102.98c19.04-18.5 8.52-50.8-17.73-54.6zm-121.74 123.2l-18.12 17.62 4.28 24.88 19.52 113.45-102.13-53.59-22.38-11.74.03-317.19 51.03 103.29 11.18 22.63 25.01 3.64 114.23 16.63-82.65 80.38z\"]\n  };\n  var faStarOfDavid = {\n    prefix: 'fas',\n    iconName: 'star-of-david',\n    icon: [464, 512, [], \"f69a\", \"M405.68 256l53.21-89.39C473.3 142.4 455.48 112 426.88 112H319.96l-55.95-93.98C256.86 6.01 244.43 0 232 0s-24.86 6.01-32.01 18.02L144.04 112H37.11c-28.6 0-46.42 30.4-32.01 54.61L58.32 256 5.1 345.39C-9.31 369.6 8.51 400 37.11 400h106.93l55.95 93.98C207.14 505.99 219.57 512 232 512s24.86-6.01 32.01-18.02L319.96 400h106.93c28.6 0 46.42-30.4 32.01-54.61L405.68 256zm-12.78-88l-19.8 33.26L353.3 168h39.6zm-52.39 88l-52.39 88H175.88l-52.39-88 52.38-88h112.25l52.39 88zM232 73.72L254.79 112h-45.57L232 73.72zM71.1 168h39.6l-19.8 33.26L71.1 168zm0 176l19.8-33.26L110.7 344H71.1zM232 438.28L209.21 400h45.57L232 438.28zM353.29 344l19.8-33.26L392.9 344h-39.61z\"]\n  };\n  var faStarOfLife = {\n    prefix: 'fas',\n    iconName: 'star-of-life',\n    icon: [480, 512, [], \"f621\", \"M471.99 334.43L336.06 256l135.93-78.43c7.66-4.42 10.28-14.2 5.86-21.86l-32.02-55.43c-4.42-7.65-14.21-10.28-21.87-5.86l-135.93 78.43V16c0-8.84-7.17-16-16.01-16h-64.04c-8.84 0-16.01 7.16-16.01 16v156.86L56.04 94.43c-7.66-4.42-17.45-1.79-21.87 5.86L2.15 155.71c-4.42 7.65-1.8 17.44 5.86 21.86L143.94 256 8.01 334.43c-7.66 4.42-10.28 14.21-5.86 21.86l32.02 55.43c4.42 7.65 14.21 10.27 21.87 5.86l135.93-78.43V496c0 8.84 7.17 16 16.01 16h64.04c8.84 0 16.01-7.16 16.01-16V339.14l135.93 78.43c7.66 4.42 17.45 1.8 21.87-5.86l32.02-55.43c4.42-7.65 1.8-17.43-5.86-21.85z\"]\n  };\n  var faStepBackward = {\n    prefix: 'fas',\n    iconName: 'step-backward',\n    icon: [448, 512, [], \"f048\", \"M64 468V44c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12v176.4l195.5-181C352.1 22.3 384 36.6 384 64v384c0 27.4-31.9 41.7-52.5 24.6L136 292.7V468c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12z\"]\n  };\n  var faStepForward = {\n    prefix: 'fas',\n    iconName: 'step-forward',\n    icon: [448, 512, [], \"f051\", \"M384 44v424c0 6.6-5.4 12-12 12h-48c-6.6 0-12-5.4-12-12V291.6l-195.5 181C95.9 489.7 64 475.4 64 448V64c0-27.4 31.9-41.7 52.5-24.6L312 219.3V44c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12z\"]\n  };\n  var faStethoscope = {\n    prefix: 'fas',\n    iconName: 'stethoscope',\n    icon: [512, 512, [], \"f0f1\", \"M447.1 112c-34.2.5-62.3 28.4-63 62.6-.5 24.3 12.5 45.6 32 56.8V344c0 57.3-50.2 104-112 104-60 0-109.2-44.1-111.9-99.2C265 333.8 320 269.2 320 192V36.6c0-11.4-8.1-21.3-19.3-23.5L237.8.5c-13-2.6-25.6 5.8-28.2 18.8L206.4 35c-2.6 13 5.8 25.6 18.8 28.2l30.7 6.1v121.4c0 52.9-42.2 96.7-95.1 97.2-53.4.5-96.9-42.7-96.9-96V69.4l30.7-6.1c13-2.6 21.4-15.2 18.8-28.2l-3.1-15.7C107.7 6.4 95.1-2 82.1.6L19.3 13C8.1 15.3 0 25.1 0 36.6V192c0 77.3 55.1 142 128.1 156.8C130.7 439.2 208.6 512 304 512c97 0 176-75.4 176-168V231.4c19.1-11.1 32-31.7 32-55.4 0-35.7-29.2-64.5-64.9-64zm.9 80c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z\"]\n  };\n  var faStickyNote = {\n    prefix: 'fas',\n    iconName: 'sticky-note',\n    icon: [448, 512, [], \"f249\", \"M312 320h136V56c0-13.3-10.7-24-24-24H24C10.7 32 0 42.7 0 56v400c0 13.3 10.7 24 24 24h264V344c0-13.2 10.8-24 24-24zm129 55l-98 98c-4.5 4.5-10.6 7-17 7h-6V352h128v6.1c0 6.3-2.5 12.4-7 16.9z\"]\n  };\n  var faStop = {\n    prefix: 'fas',\n    iconName: 'stop',\n    icon: [448, 512, [], \"f04d\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\"]\n  };\n  var faStopCircle = {\n    prefix: 'fas',\n    iconName: 'stop-circle',\n    icon: [512, 512, [], \"f28d\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm96 328c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16v160z\"]\n  };\n  var faStopwatch = {\n    prefix: 'fas',\n    iconName: 'stopwatch',\n    icon: [448, 512, [], \"f2f2\", \"M432 304c0 114.9-93.1 208-208 208S16 418.9 16 304c0-104 76.3-190.2 176-205.5V64h-28c-6.6 0-12-5.4-12-12V12c0-6.6 5.4-12 12-12h120c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-28v34.5c37.5 5.8 71.7 21.6 99.7 44.6l27.5-27.5c4.7-4.7 12.3-4.7 17 0l28.3 28.3c4.7 4.7 4.7 12.3 0 17l-29.4 29.4-.6.6C419.7 223.3 432 262.2 432 304zm-176 36V188.5c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12V340c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"]\n  };\n  var faStore = {\n    prefix: 'fas',\n    iconName: 'store',\n    icon: [616, 512, [], \"f54e\", \"M602 118.6L537.1 15C531.3 5.7 521 0 510 0H106C95 0 84.7 5.7 78.9 15L14 118.6c-33.5 53.5-3.8 127.9 58.8 136.4 4.5.6 9.1.9 13.7.9 29.6 0 55.8-13 73.8-33.1 18 20.1 44.3 33.1 73.8 33.1 29.6 0 55.8-13 73.8-33.1 18 20.1 44.3 33.1 73.8 33.1 29.6 0 55.8-13 73.8-33.1 18.1 20.1 44.3 33.1 73.8 33.1 4.7 0 9.2-.3 13.7-.9 62.8-8.4 92.6-82.8 59-136.4zM529.5 288c-10 0-19.9-1.5-29.5-3.8V384H116v-99.8c-9.6 2.2-19.5 3.8-29.5 3.8-6 0-12.1-.4-18-1.2-5.6-.8-11.1-2.1-16.4-3.6V480c0 17.7 14.3 32 32 32h448c17.7 0 32-14.3 32-32V283.2c-5.4 1.6-10.8 2.9-16.4 3.6-6.1.8-12.1 1.2-18.2 1.2z\"]\n  };\n  var faStoreAlt = {\n    prefix: 'fas',\n    iconName: 'store-alt',\n    icon: [640, 512, [], \"f54f\", \"M320 384H128V224H64v256c0 17.7 14.3 32 32 32h256c17.7 0 32-14.3 32-32V224h-64v160zm314.6-241.8l-85.3-128c-6-8.9-16-14.2-26.7-14.2H117.4c-10.7 0-20.7 5.3-26.6 14.2l-85.3 128c-14.2 21.3 1 49.8 26.6 49.8H608c25.5 0 40.7-28.5 26.6-49.8zM512 496c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V224h-64v272z\"]\n  };\n  var faStream = {\n    prefix: 'fas',\n    iconName: 'stream',\n    icon: [512, 512, [], \"f550\", \"M16 128h416c8.84 0 16-7.16 16-16V48c0-8.84-7.16-16-16-16H16C7.16 32 0 39.16 0 48v64c0 8.84 7.16 16 16 16zm480 80H80c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16zm-64 176H16c-8.84 0-16 7.16-16 16v64c0 8.84 7.16 16 16 16h416c8.84 0 16-7.16 16-16v-64c0-8.84-7.16-16-16-16z\"]\n  };\n  var faStreetView = {\n    prefix: 'fas',\n    iconName: 'street-view',\n    icon: [512, 512, [], \"f21d\", \"M367.9 329.76c-4.62 5.3-9.78 10.1-15.9 13.65v22.94c66.52 9.34 112 28.05 112 49.65 0 30.93-93.12 56-208 56S48 446.93 48 416c0-21.6 45.48-40.3 112-49.65v-22.94c-6.12-3.55-11.28-8.35-15.9-13.65C58.87 345.34 0 378.05 0 416c0 53.02 114.62 96 256 96s256-42.98 256-96c0-37.95-58.87-70.66-144.1-86.24zM256 128c35.35 0 64-28.65 64-64S291.35 0 256 0s-64 28.65-64 64 28.65 64 64 64zm-64 192v96c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-96c17.67 0 32-14.33 32-32v-96c0-26.51-21.49-48-48-48h-11.8c-11.07 5.03-23.26 8-36.2 8s-25.13-2.97-36.2-8H208c-26.51 0-48 21.49-48 48v96c0 17.67 14.33 32 32 32z\"]\n  };\n  var faStrikethrough = {\n    prefix: 'fas',\n    iconName: 'strikethrough',\n    icon: [512, 512, [], \"f0cc\", \"M496 288H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h480c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16zm-214.666 16c27.258 12.937 46.524 28.683 46.524 56.243 0 33.108-28.977 53.676-75.621 53.676-32.325 0-76.874-12.08-76.874-44.271V368c0-8.837-7.164-16-16-16H113.75c-8.836 0-16 7.163-16 16v19.204c0 66.845 77.717 101.82 154.487 101.82 88.578 0 162.013-45.438 162.013-134.424 0-19.815-3.618-36.417-10.143-50.6H281.334zm-30.952-96c-32.422-13.505-56.836-28.946-56.836-59.683 0-33.92 30.901-47.406 64.962-47.406 42.647 0 64.962 16.593 64.962 32.985V136c0 8.837 7.164 16 16 16h45.613c8.836 0 16-7.163 16-16v-30.318c0-52.438-71.725-79.875-142.575-79.875-85.203 0-150.726 40.972-150.726 125.646 0 22.71 4.665 41.176 12.777 56.547h129.823z\"]\n  };\n  var faStroopwafel = {\n    prefix: 'fas',\n    iconName: 'stroopwafel',\n    icon: [512, 512, [], \"f551\", \"M188.12 210.74L142.86 256l45.25 45.25L233.37 256l-45.25-45.26zm113.13-22.62L256 142.86l-45.25 45.25L256 233.37l45.25-45.25zm-90.5 135.76L256 369.14l45.26-45.26L256 278.63l-45.25 45.25zM256 0C114.62 0 0 114.62 0 256s114.62 256 256 256 256-114.62 256-256S397.38 0 256 0zm186.68 295.6l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-28.29-28.29-45.25 45.25 33.94 33.94 16.97-16.97c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-16.97 16.97 16.97 16.97c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-16.97-16.97-16.97 16.97c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l16.97-16.97-33.94-33.94-45.26 45.26 28.29 28.29c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0L256 414.39l-28.29 28.29c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l28.29-28.29-45.25-45.26-33.94 33.94 16.97 16.97c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-16.97-16.97-16.97 16.97c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l16.97-16.97-16.97-16.97c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l16.97 16.97 33.94-33.94-45.25-45.25-28.29 28.29c-3.12 3.12-8.19 3.12-11.31 0L69.32 295.6c-3.12-3.12-3.12-8.19 0-11.31L97.61 256l-28.29-28.29c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l28.29 28.29 45.25-45.26-33.94-33.94-16.97 16.97c-3.12 3.12-8.19 3.12-11.31 0l-11.31-11.31c-3.12-3.12-3.12-8.19 0-11.31l16.97-16.97-16.97-16.97c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l16.97 16.97 16.97-16.97c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-16.97 16.97 33.94 33.94 45.26-45.25-28.29-28.29c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0L256 97.61l28.29-28.29c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-28.29 28.29 45.26 45.25 33.94-33.94-16.97-16.97c-3.12-3.12-3.12-8.19 0-11.31l11.31-11.31c3.12-3.12 8.19-3.12 11.31 0l16.97 16.97 16.97-16.97c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31l-16.97 16.97 16.97 16.97c3.12 3.12 3.12 8.19 0 11.31l-11.31 11.31c-3.12 3.12-8.19 3.12-11.31 0l-16.97-16.97-33.94 33.94 45.25 45.26 28.29-28.29c3.12-3.12 8.19-3.12 11.31 0l11.31 11.31c3.12 3.12 3.12 8.19 0 11.31L414.39 256l28.29 28.28a8.015 8.015 0 0 1 0 11.32zM278.63 256l45.26 45.25L369.14 256l-45.25-45.26L278.63 256z\"]\n  };\n  var faSubscript = {\n    prefix: 'fas',\n    iconName: 'subscript',\n    icon: [512, 512, [], \"f12c\", \"M272 32h-67.8c-5.5 0-10.7 2.9-13.6 7.6l-40.3 65c-2.3 3.6-4.5 7.3-6.2 10.5-1.7-3.2-3.7-6.8-5.7-10.4L98.5 39.6c-2.9-4.7-8.1-7.6-13.6-7.6H16C7.2 32 0 39.2 0 48v32c0 8.8 7.2 16 16 16h30.1l52.8 77.3L42.3 256H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h64c5.5 0 10.7-2.9 13.6-7.6l44.7-72.1c2.2-3.6 4.2-7.3 5.9-10.6 1.8 3.2 3.9 6.9 6.2 10.2l45.7 72.6c2.9 4.7 8 7.5 13.5 7.5H272c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16h-22l-58.6-84.3L244 96h28c8.8 0 16-7.2 16-16V48c0-8.8-7.2-16-16-16zm224 384H395.2c3.5-10.5 18.8-21.3 36.3-32.4 16.6-10.6 35.5-22.6 50.3-38.9 17.5-19.1 25.9-40.2 25.9-64.6 0-60.6-50.7-88.1-97.8-88.1-42.5 0-76.4 22-94.4 50.4-4.7 7.3-2.6 17 4.6 21.9l30.3 20.3c7 4.7 16.5 3.1 21.6-3.6 8-10.4 18.8-18.2 31.7-18.2 19.4 0 26.3 12.9 26.3 23.9 0 36.2-119.4 57-119.4 160 0 6.7.6 13 1.4 19.3 1.1 8 7.8 13.9 15.9 13.9H496c8.8 0 16-7.2 16-16v-32c0-8.7-7.2-15.9-16-15.9z\"]\n  };\n  var faSubway = {\n    prefix: 'fas',\n    iconName: 'subway',\n    icon: [448, 512, [], \"f239\", \"M448 96v256c0 51.815-61.624 96-130.022 96l62.98 49.721C386.905 502.417 383.562 512 376 512H72c-7.578 0-10.892-9.594-4.957-14.279L130.022 448C61.82 448 0 403.954 0 352V96C0 42.981 64 0 128 0h192c65 0 128 42.981 128 96zM200 232V120c0-13.255-10.745-24-24-24H72c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h104c13.255 0 24-10.745 24-24zm200 0V120c0-13.255-10.745-24-24-24H272c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h104c13.255 0 24-10.745 24-24zm-48 56c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm-256 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z\"]\n  };\n  var faSuitcase = {\n    prefix: 'fas',\n    iconName: 'suitcase',\n    icon: [512, 512, [], \"f0f2\", \"M128 480h256V80c0-26.5-21.5-48-48-48H176c-26.5 0-48 21.5-48 48v400zm64-384h128v32H192V96zm320 80v256c0 26.5-21.5 48-48 48h-48V128h48c26.5 0 48 21.5 48 48zM96 480H48c-26.5 0-48-21.5-48-48V176c0-26.5 21.5-48 48-48h48v352z\"]\n  };\n  var faSuitcaseRolling = {\n    prefix: 'fas',\n    iconName: 'suitcase-rolling',\n    icon: [384, 512, [], \"f5c1\", \"M336 160H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h16v16c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-16h128v16c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-16h16c26.51 0 48-21.49 48-48V208c0-26.51-21.49-48-48-48zm-16 216c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h240c4.42 0 8 3.58 8 8v16zm0-96c0 4.42-3.58 8-8 8H72c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h240c4.42 0 8 3.58 8 8v16zM144 48h96v80h48V48c0-26.51-21.49-48-48-48h-96c-26.51 0-48 21.49-48 48v80h48V48z\"]\n  };\n  var faSun = {\n    prefix: 'fas',\n    iconName: 'sun',\n    icon: [512, 512, [], \"f185\", \"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"]\n  };\n  var faSuperscript = {\n    prefix: 'fas',\n    iconName: 'superscript',\n    icon: [512, 512, [], \"f12b\", \"M272 192h-67.8c-5.5 0-10.7 2.9-13.6 7.6l-40.3 65c-2.3 3.6-4.5 7.3-6.2 10.5-1.7-3.2-3.7-6.8-5.7-10.4l-39.9-65.1c-2.9-4.7-8.1-7.6-13.6-7.6H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h30.1l52.8 77.3L42.3 416H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h64c5.5 0 10.7-2.9 13.6-7.6l44.7-72.1c2.2-3.6 4.2-7.3 5.9-10.6 1.8 3.2 3.9 6.9 6.2 10.2l45.7 72.6c2.9 4.7 8 7.5 13.5 7.5H272c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16h-22l-58.6-84.3L244 256h28c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm224 64H395.2c3.5-10.5 18.8-21.3 36.3-32.4 16.6-10.6 35.5-22.6 50.3-38.9 17.5-19.1 25.9-40.2 25.9-64.6 0-60.6-50.7-88.1-97.8-88.1-42.5 0-76.4 22-94.4 50.4-4.7 7.3-2.6 17 4.6 21.9l30.3 20.3c7 4.7 16.5 3.1 21.6-3.6 8-10.4 18.8-18.2 31.7-18.2 19.4 0 26.3 12.9 26.3 23.9 0 36.2-119.4 57-119.4 160 0 6.7.6 13 1.4 19.3 1.1 8 7.8 13.9 15.9 13.9H496c8.8 0 16-7.2 16-16v-32c0-8.7-7.2-15.9-16-15.9z\"]\n  };\n  var faSurprise = {\n    prefix: 'fas',\n    iconName: 'surprise',\n    icon: [496, 512, [], \"f5c2\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM136 208c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32zm112 208c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.7 64-64 64zm80-176c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"]\n  };\n  var faSwatchbook = {\n    prefix: 'fas',\n    iconName: 'swatchbook',\n    icon: [511, 512, [], \"f5c3\", \"M479.06 320H372.29L186.15 506.51c-2.06 2.07-4.49 3.58-6.67 5.49h299.58c17.64 0 31.94-14.33 31.94-32V352c0-17.67-14.3-32-31.94-32zm-44.5-152.9l-90.33-90.51c-12.47-12.5-32.69-12.5-45.17 0l-75.5 75.65V416c0 2.96-.67 5.73-.87 8.64l211.87-212.28c12.47-12.5 12.47-32.77 0-45.26zM191.62 32c0-17.67-14.3-32-31.94-32H31.94C14.3 0 0 14.33 0 32v384c0 53.02 42.9 96 95.81 96s95.81-42.98 95.81-96V32zM95.81 440c-13.23 0-23.95-10.75-23.95-24 0-13.26 10.73-24 23.95-24s23.95 10.74 23.95 24c.01 13.25-10.72 24-23.95 24zm31.94-184H63.88v-64h63.88v64zm0-128H63.88V64h63.88v64z\"]\n  };\n  var faSwimmer = {\n    prefix: 'fas',\n    iconName: 'swimmer',\n    icon: [640, 512, [], \"f5c4\", \"M189.61 310.58c3.54 3.26 15.27 9.42 34.39 9.42s30.86-6.16 34.39-9.42c16.02-14.77 34.5-22.58 53.46-22.58h16.3c18.96 0 37.45 7.81 53.46 22.58 3.54 3.26 15.27 9.42 34.39 9.42s30.86-6.16 34.39-9.42c14.86-13.71 31.88-21.12 49.39-22.16l-112.84-80.6 18-12.86c3.64-2.58 8.28-3.52 12.62-2.61l100.35 21.53c25.91 5.53 51.44-10.97 57-36.88 5.55-25.92-10.95-51.44-36.88-57L437.68 98.47c-30.73-6.58-63.02.12-88.56 18.38l-80.02 57.17c-10.38 7.39-19.36 16.44-26.72 26.94L173.75 299c5.47 3.23 10.82 6.93 15.86 11.58zM624 352h-16c-26.04 0-45.8-8.42-56.09-17.9-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C461.8 343.58 442.04 352 416 352s-45.8-8.42-56.09-17.9c-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C269.8 343.58 250.04 352 224 352s-45.8-8.42-56.09-17.9c-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C77.8 343.58 58.04 352 32 352H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h16c38.62 0 72.72-12.19 96-31.84 23.28 19.66 57.38 31.84 96 31.84s72.72-12.19 96-31.84c23.28 19.66 57.38 31.84 96 31.84s72.72-12.19 96-31.84c23.28 19.66 57.38 31.84 96 31.84h16c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm-512-96c44.18 0 80-35.82 80-80s-35.82-80-80-80-80 35.82-80 80 35.82 80 80 80z\"]\n  };\n  var faSwimmingPool = {\n    prefix: 'fas',\n    iconName: 'swimming-pool',\n    icon: [640, 512, [], \"f5c5\", \"M624 416h-16c-26.04 0-45.8-8.42-56.09-17.9-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C461.8 407.58 442.04 416 416 416s-45.8-8.42-56.09-17.9c-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C269.8 407.58 250.04 416 224 416s-45.8-8.42-56.09-17.9c-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C77.8 407.58 58.04 416 32 416H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h16c38.62 0 72.72-12.19 96-31.84 23.28 19.66 57.38 31.84 96 31.84s72.72-12.19 96-31.84c23.28 19.66 57.38 31.84 96 31.84s72.72-12.19 96-31.84c23.28 19.66 57.38 31.84 96 31.84h16c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm-400-32v-96h192v96c19.12 0 30.86-6.16 34.39-9.42 9.17-8.46 19.2-14.34 29.61-18.07V128c0-17.64 14.36-32 32-32s32 14.36 32 32v16c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-16c0-52.94-43.06-96-96-96s-96 43.06-96 96v96H224v-96c0-17.64 14.36-32 32-32s32 14.36 32 32v16c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-16c0-52.94-43.06-96-96-96s-96 43.06-96 96v228.5c10.41 3.73 20.44 9.62 29.61 18.07 3.53 3.27 15.27 9.43 34.39 9.43z\"]\n  };\n  var faSynagogue = {\n    prefix: 'fas',\n    iconName: 'synagogue',\n    icon: [640, 512, [], \"f69b\", \"M70 196.51L6.67 268.29A26.643 26.643 0 0 0 0 285.93V512h128V239.58l-38-43.07c-5.31-6.01-14.69-6.01-20 0zm563.33 71.78L570 196.51c-5.31-6.02-14.69-6.02-20 0l-38 43.07V512h128V285.93c0-6.5-2.37-12.77-6.67-17.64zM339.99 7.01c-11.69-9.35-28.29-9.35-39.98 0l-128 102.4A32.005 32.005 0 0 0 160 134.4V512h96v-92.57c0-31.88 21.78-61.43 53.25-66.55C349.34 346.35 384 377.13 384 416v96h96V134.4c0-9.72-4.42-18.92-12.01-24.99l-128-102.4zm52.07 215.55c1.98 3.15-.29 7.24-4 7.24h-38.94L324 269.79c-1.85 2.95-6.15 2.95-8 0l-25.12-39.98h-38.94c-3.72 0-5.98-4.09-4-7.24l19.2-30.56-19.2-30.56c-1.98-3.15.29-7.24 4-7.24h38.94l25.12-40c1.85-2.95 6.15-2.95 8 0l25.12 39.98h38.95c3.71 0 5.98 4.09 4 7.24L372.87 192l19.19 30.56z\"]\n  };\n  var faSync = {\n    prefix: 'fas',\n    iconName: 'sync',\n    icon: [512, 512, [], \"f021\", \"M440.65 12.57l4 82.77A247.16 247.16 0 0 0 255.83 8C134.73 8 33.91 94.92 12.29 209.82A12 12 0 0 0 24.09 224h49.05a12 12 0 0 0 11.67-9.26 175.91 175.91 0 0 1 317-56.94l-101.46-4.86a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12H500a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12h-47.37a12 12 0 0 0-11.98 12.57zM255.83 432a175.61 175.61 0 0 1-146-77.8l101.8 4.87a12 12 0 0 0 12.57-12v-47.4a12 12 0 0 0-12-12H12a12 12 0 0 0-12 12V500a12 12 0 0 0 12 12h47.35a12 12 0 0 0 12-12.6l-4.15-82.57A247.17 247.17 0 0 0 255.83 504c121.11 0 221.93-86.92 243.55-201.82a12 12 0 0 0-11.8-14.18h-49.05a12 12 0 0 0-11.67 9.26A175.86 175.86 0 0 1 255.83 432z\"]\n  };\n  var faSyncAlt = {\n    prefix: 'fas',\n    iconName: 'sync-alt',\n    icon: [512, 512, [], \"f2f1\", \"M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z\"]\n  };\n  var faSyringe = {\n    prefix: 'fas',\n    iconName: 'syringe',\n    icon: [512, 512, [], \"f48e\", \"M201.5 174.8l55.7 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-55.7-55.8-45.3 45.3 55.8 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L111 265.2l-26.4 26.4c-17.3 17.3-25.6 41.1-23 65.4l7.1 63.6L2.3 487c-3.1 3.1-3.1 8.2 0 11.3l11.3 11.3c3.1 3.1 8.2 3.1 11.3 0l66.3-66.3 63.6 7.1c23.9 2.6 47.9-5.4 65.4-23l181.9-181.9-135.7-135.7-64.9 65zm308.2-93.3L430.5 2.3c-3.1-3.1-8.2-3.1-11.3 0l-11.3 11.3c-3.1 3.1-3.1 8.2 0 11.3l28.3 28.3-45.3 45.3-56.6-56.6-17-17c-3.1-3.1-8.2-3.1-11.3 0l-33.9 33.9c-3.1 3.1-3.1 8.2 0 11.3l17 17L424.8 223l17 17c3.1 3.1 8.2 3.1 11.3 0l33.9-34c3.1-3.1 3.1-8.2 0-11.3l-73.5-73.5 45.3-45.3 28.3 28.3c3.1 3.1 8.2 3.1 11.3 0l11.3-11.3c3.1-3.2 3.1-8.2 0-11.4z\"]\n  };\n  var faTable = {\n    prefix: 'fas',\n    iconName: 'table',\n    icon: [512, 512, [], \"f0ce\", \"M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64v-96h160v96zm0-160H64v-96h160v96zm224 160H288v-96h160v96zm0-160H288v-96h160v96z\"]\n  };\n  var faTableTennis = {\n    prefix: 'fas',\n    iconName: 'table-tennis',\n    icon: [512, 512, [], \"f45d\", \"M496.2 296.5C527.7 218.7 512 126.2 449 63.1 365.1-21 229-21 145.1 63.1l-56 56.1 211.5 211.5c46.1-62.1 131.5-77.4 195.6-34.2zm-217.9 79.7L57.9 155.9c-27.3 45.3-21.7 105 17.3 144.1l34.5 34.6L6.7 424c-8.6 7.5-9.1 20.7-1 28.8l53.4 53.5c8 8.1 21.2 7.6 28.7-1L177.1 402l35.7 35.7c19.7 19.7 44.6 30.5 70.3 33.3-7.1-17-11-35.6-11-55.1-.1-13.8 2.5-27 6.2-39.7zM416 320c-53 0-96 43-96 96s43 96 96 96 96-43 96-96-43-96-96-96z\"]\n  };\n  var faTablet = {\n    prefix: 'fas',\n    iconName: 'tablet',\n    icon: [448, 512, [], \"f10a\", \"M400 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM224 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"]\n  };\n  var faTabletAlt = {\n    prefix: 'fas',\n    iconName: 'tablet-alt',\n    icon: [448, 512, [], \"f3fa\", \"M400 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM224 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm176-108c0 6.6-5.4 12-12 12H60c-6.6 0-12-5.4-12-12V60c0-6.6 5.4-12 12-12h328c6.6 0 12 5.4 12 12v312z\"]\n  };\n  var faTablets = {\n    prefix: 'fas',\n    iconName: 'tablets',\n    icon: [640, 512, [], \"f490\", \"M160 192C78.9 192 12.5 250.5.1 326.7c-.8 4.8 3.3 9.3 8.3 9.3h303.3c5 0 9.1-4.5 8.3-9.3C307.5 250.5 241.1 192 160 192zm151.6 176H8.4c-5 0-9.1 4.5-8.3 9.3C12.5 453.5 78.9 512 160 512s147.5-58.5 159.9-134.7c.8-4.8-3.3-9.3-8.3-9.3zM593.4 46.6c-56.5-56.5-144.2-61.4-206.9-16-4 2.9-4.3 8.9-.8 12.3L597 254.3c3.5 3.5 9.5 3.2 12.3-.8 45.5-62.7 40.6-150.4-15.9-206.9zM363 65.7c-3.5-3.5-9.5-3.2-12.3.8-45.4 62.7-40.5 150.4 15.9 206.9 56.5 56.5 144.2 61.4 206.9 15.9 4-2.9 4.3-8.9.8-12.3L363 65.7z\"]\n  };\n  var faTachometerAlt = {\n    prefix: 'fas',\n    iconName: 'tachometer-alt',\n    icon: [576, 512, [], \"f3fd\", \"M288 32C128.94 32 0 160.94 0 320c0 52.8 14.25 102.26 39.06 144.8 5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2C561.75 422.26 576 372.8 576 320c0-159.06-128.94-288-288-288zm0 64c14.71 0 26.58 10.13 30.32 23.65-1.11 2.26-2.64 4.23-3.45 6.67l-9.22 27.67c-5.13 3.49-10.97 6.01-17.64 6.01-17.67 0-32-14.33-32-32S270.33 96 288 96zM96 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm48-160c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm246.77-72.41l-61.33 184C343.13 347.33 352 364.54 352 384c0 11.72-3.38 22.55-8.88 32H232.88c-5.5-9.45-8.88-20.28-8.88-32 0-33.94 26.5-61.43 59.9-63.59l61.34-184.01c4.17-12.56 17.73-19.45 30.36-15.17 12.57 4.19 19.35 17.79 15.17 30.36zm14.66 57.2l15.52-46.55c3.47-1.29 7.13-2.23 11.05-2.23 17.67 0 32 14.33 32 32s-14.33 32-32 32c-11.38-.01-20.89-6.28-26.57-15.22zM480 384c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"]\n  };\n  var faTag = {\n    prefix: 'fas',\n    iconName: 'tag',\n    icon: [512, 512, [], \"f02b\", \"M0 252.118V48C0 21.49 21.49 0 48 0h204.118a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882L293.823 497.941c-18.745 18.745-49.137 18.745-67.882 0L14.059 286.059A48 48 0 0 1 0 252.118zM112 64c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z\"]\n  };\n  var faTags = {\n    prefix: 'fas',\n    iconName: 'tags',\n    icon: [640, 512, [], \"f02c\", \"M497.941 225.941L286.059 14.059A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v204.118a48 48 0 0 0 14.059 33.941l211.882 211.882c18.744 18.745 49.136 18.746 67.882 0l204.118-204.118c18.745-18.745 18.745-49.137 0-67.882zM112 160c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm513.941 133.823L421.823 497.941c-18.745 18.745-49.137 18.745-67.882 0l-.36-.36L527.64 323.522c16.999-16.999 26.36-39.6 26.36-63.64s-9.362-46.641-26.36-63.64L331.397 0h48.721a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882z\"]\n  };\n  var faTape = {\n    prefix: 'fas',\n    iconName: 'tape',\n    icon: [640, 512, [], \"f4db\", \"M224 192c-35.3 0-64 28.7-64 64s28.7 64 64 64 64-28.7 64-64-28.7-64-64-64zm400 224H380.6c41.5-40.7 67.4-97.3 67.4-160 0-123.7-100.3-224-224-224S0 132.3 0 256s100.3 224 224 224h400c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400-64c-53 0-96-43-96-96s43-96 96-96 96 43 96 96-43 96-96 96z\"]\n  };\n  var faTasks = {\n    prefix: 'fas',\n    iconName: 'tasks',\n    icon: [512, 512, [], \"f0ae\", \"M208 132h288c8.8 0 16-7.2 16-16V76c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zM64 368c-26.5 0-48.6 21.5-48.6 48s22.1 48 48.6 48 48-21.5 48-48-21.5-48-48-48zm92.5-299l-72.2 72.2-15.6 15.6c-4.7 4.7-12.9 4.7-17.6 0L3.5 109.4c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.3c4.7-4.7 12.3-4.7 17 0l17 16.5c4.6 4.7 4.6 12.3-.1 17zm0 159.6l-72.2 72.2-15.7 15.7c-4.7 4.7-12.9 4.7-17.6 0L3.5 269c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.7c4.7-4.7 12.3-4.7 17 0l17 17c4.6 4.6 4.6 12.2-.1 16.9z\"]\n  };\n  var faTaxi = {\n    prefix: 'fas',\n    iconName: 'taxi',\n    icon: [512, 512, [], \"f1ba\", \"M462 241.64l-22-84.84c-9.6-35.2-41.6-60.8-76.8-60.8H352V64c0-17.67-14.33-32-32-32H192c-17.67 0-32 14.33-32 32v32h-11.2c-35.2 0-67.2 25.6-76.8 60.8l-22 84.84C21.41 248.04 0 273.47 0 304v48c0 23.63 12.95 44.04 32 55.12V448c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-32h256v32c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32v-40.88c19.05-11.09 32-31.5 32-55.12v-48c0-30.53-21.41-55.96-50-62.36zM96 352c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm20.55-112l17.2-66.36c2.23-8.16 9.59-13.64 15.06-13.64h214.4c5.47 0 12.83 5.48 14.85 12.86L395.45 240h-278.9zM416 352c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"]\n  };\n  var faTeeth = {\n    prefix: 'fas',\n    iconName: 'teeth',\n    icon: [640, 512, [], \"f62e\", \"M544 0H96C42.98 0 0 42.98 0 96v320c0 53.02 42.98 96 96 96h448c53.02 0 96-42.98 96-96V96c0-53.02-42.98-96-96-96zM160 368c0 26.51-21.49 48-48 48s-48-21.49-48-48v-64c0-8.84 7.16-16 16-16h64c8.84 0 16 7.16 16 16v64zm0-128c0 8.84-7.16 16-16 16H80c-8.84 0-16-7.16-16-16v-64c0-26.51 21.49-48 48-48s48 21.49 48 48v64zm144 120c0 30.93-25.07 56-56 56s-56-25.07-56-56v-56c0-8.84 7.16-16 16-16h80c8.84 0 16 7.16 16 16v56zm0-120c0 8.84-7.16 16-16 16h-80c-8.84 0-16-7.16-16-16v-88c0-30.93 25.07-56 56-56s56 25.07 56 56v88zm144 120c0 30.93-25.07 56-56 56s-56-25.07-56-56v-56c0-8.84 7.16-16 16-16h80c8.84 0 16 7.16 16 16v56zm0-120c0 8.84-7.16 16-16 16h-80c-8.84 0-16-7.16-16-16v-88c0-30.93 25.07-56 56-56s56 25.07 56 56v88zm128 128c0 26.51-21.49 48-48 48s-48-21.49-48-48v-64c0-8.84 7.16-16 16-16h64c8.84 0 16 7.16 16 16v64zm0-128c0 8.84-7.16 16-16 16h-64c-8.84 0-16-7.16-16-16v-64c0-26.51 21.49-48 48-48s48 21.49 48 48v64z\"]\n  };\n  var faTeethOpen = {\n    prefix: 'fas',\n    iconName: 'teeth-open',\n    icon: [640, 512, [], \"f62f\", \"M544 0H96C42.98 0 0 42.98 0 96v64c0 35.35 28.66 64 64 64h512c35.34 0 64-28.65 64-64V96c0-53.02-42.98-96-96-96zM160 176c0 8.84-7.16 16-16 16H80c-8.84 0-16-7.16-16-16v-32c0-26.51 21.49-48 48-48s48 21.49 48 48v32zm144 0c0 8.84-7.16 16-16 16h-80c-8.84 0-16-7.16-16-16v-56c0-30.93 25.07-56 56-56s56 25.07 56 56v56zm144 0c0 8.84-7.16 16-16 16h-80c-8.84 0-16-7.16-16-16v-56c0-30.93 25.07-56 56-56s56 25.07 56 56v56zm128 0c0 8.84-7.16 16-16 16h-64c-8.84 0-16-7.16-16-16v-32c0-26.51 21.49-48 48-48s48 21.49 48 48v32zm0 144H64c-35.34 0-64 28.65-64 64v32c0 53.02 42.98 96 96 96h448c53.02 0 96-42.98 96-96v-32c0-35.35-28.66-64-64-64zm-416 80c0 26.51-21.49 48-48 48s-48-21.49-48-48v-32c0-8.84 7.16-16 16-16h64c8.84 0 16 7.16 16 16v32zm144-8c0 30.93-25.07 56-56 56s-56-25.07-56-56v-24c0-8.84 7.16-16 16-16h80c8.84 0 16 7.16 16 16v24zm144 0c0 30.93-25.07 56-56 56s-56-25.07-56-56v-24c0-8.84 7.16-16 16-16h80c8.84 0 16 7.16 16 16v24zm128 8c0 26.51-21.49 48-48 48s-48-21.49-48-48v-32c0-8.84 7.16-16 16-16h64c8.84 0 16 7.16 16 16v32z\"]\n  };\n  var faTemperatureHigh = {\n    prefix: 'fas',\n    iconName: 'temperature-high',\n    icon: [512, 512, [], \"f769\", \"M416 0c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm0 128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm-160-16C256 50.1 205.9 0 144 0S32 50.1 32 112v166.5C12.3 303.2 0 334 0 368c0 79.5 64.5 144 144 144s144-64.5 144-144c0-34-12.3-64.9-32-89.5V112zM144 448c-44.1 0-80-35.9-80-80 0-25.5 12.2-48.9 32-63.8V112c0-26.5 21.5-48 48-48s48 21.5 48 48v192.2c19.8 14.8 32 38.3 32 63.8 0 44.1-35.9 80-80 80zm16-125.1V112c0-8.8-7.2-16-16-16s-16 7.2-16 16v210.9c-18.6 6.6-32 24.2-32 45.1 0 26.5 21.5 48 48 48s48-21.5 48-48c0-20.9-13.4-38.5-32-45.1z\"]\n  };\n  var faTemperatureLow = {\n    prefix: 'fas',\n    iconName: 'temperature-low',\n    icon: [512, 512, [], \"f76b\", \"M416 0c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm0 128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm-160-16C256 50.1 205.9 0 144 0S32 50.1 32 112v166.5C12.3 303.2 0 334 0 368c0 79.5 64.5 144 144 144s144-64.5 144-144c0-34-12.3-64.9-32-89.5V112zM144 448c-44.1 0-80-35.9-80-80 0-25.5 12.2-48.9 32-63.8V112c0-26.5 21.5-48 48-48s48 21.5 48 48v192.2c19.8 14.8 32 38.3 32 63.8 0 44.1-35.9 80-80 80zm16-125.1V304c0-8.8-7.2-16-16-16s-16 7.2-16 16v18.9c-18.6 6.6-32 24.2-32 45.1 0 26.5 21.5 48 48 48s48-21.5 48-48c0-20.9-13.4-38.5-32-45.1z\"]\n  };\n  var faTenge = {\n    prefix: 'fas',\n    iconName: 'tenge',\n    icon: [384, 512, [], \"f7d7\", \"M372 160H12c-6.6 0-12 5.4-12 12v56c0 6.6 5.4 12 12 12h140v228c0 6.6 5.4 12 12 12h56c6.6 0 12-5.4 12-12V240h140c6.6 0 12-5.4 12-12v-56c0-6.6-5.4-12-12-12zm0-128H12C5.4 32 0 37.4 0 44v56c0 6.6 5.4 12 12 12h360c6.6 0 12-5.4 12-12V44c0-6.6-5.4-12-12-12z\"]\n  };\n  var faTerminal = {\n    prefix: 'fas',\n    iconName: 'terminal',\n    icon: [640, 512, [], \"f120\", \"M257.981 272.971L63.638 467.314c-9.373 9.373-24.569 9.373-33.941 0L7.029 444.647c-9.357-9.357-9.375-24.522-.04-33.901L161.011 256 6.99 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L257.981 239.03c9.373 9.372 9.373 24.568 0 33.941zM640 456v-32c0-13.255-10.745-24-24-24H312c-13.255 0-24 10.745-24 24v32c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24z\"]\n  };\n  var faTextHeight = {\n    prefix: 'fas',\n    iconName: 'text-height',\n    icon: [576, 512, [], \"f034\", \"M16 32h288c8.837 0 16 7.163 16 16v96c0 8.837-7.163 16-16 16h-35.496c-8.837 0-16-7.163-16-16V96h-54.761v320H232c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H88c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h34.257V96H67.496v48c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16V48c0-8.837 7.163-16 16-16zm475.308 4.685l79.995 80.001C581.309 126.693 574.297 144 559.99 144H512v224h48c15.639 0 20.635 17.991 11.313 27.314l-79.995 80.001c-6.247 6.247-16.381 6.245-22.626 0l-79.995-80.001C378.691 385.307 385.703 368 400.01 368H448V144h-48c-15.639 0-20.635-17.991-11.313-27.314l79.995-80.001c6.247-6.248 16.381-6.245 22.626 0z\"]\n  };\n  var faTextWidth = {\n    prefix: 'fas',\n    iconName: 'text-width',\n    icon: [448, 512, [], \"f035\", \"M16 32h416c8.837 0 16 7.163 16 16v96c0 8.837-7.163 16-16 16h-35.496c-8.837 0-16-7.163-16-16V96H261.743v128H296c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H152c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h34.257V96H67.496v48c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16V48c0-8.837 7.163-16 16-16zm427.315 340.682l-80.001-79.995C353.991 283.365 336 288.362 336 304v48H112v-47.99c0-14.307-17.307-21.319-27.314-11.313L4.685 372.692c-6.245 6.245-6.247 16.379 0 22.626l80.001 79.995C94.009 484.635 112 479.638 112 464v-48h224v47.99c0 14.307 17.307 21.319 27.314 11.313l80.001-79.995c6.245-6.245 6.248-16.379 0-22.626z\"]\n  };\n  var faTh = {\n    prefix: 'fas',\n    iconName: 'th',\n    icon: [512, 512, [], \"f00a\", \"M149.333 56v80c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24h101.333c13.255 0 24 10.745 24 24zm181.334 240v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h101.333c13.256 0 24.001-10.745 24.001-24zm32-240v80c0 13.255 10.745 24 24 24H488c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H386.667c-13.255 0-24 10.745-24 24zm-32 80V56c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h101.333c13.256 0 24.001-10.745 24.001-24zm-205.334 56H24c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24zM0 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zm386.667-56H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H386.667c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zm0 160H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H386.667c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zM181.333 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24z\"]\n  };\n  var faThLarge = {\n    prefix: 'fas',\n    iconName: 'th-large',\n    icon: [512, 512, [], \"f009\", \"M296 32h192c13.255 0 24 10.745 24 24v160c0 13.255-10.745 24-24 24H296c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24zm-80 0H24C10.745 32 0 42.745 0 56v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24zM0 296v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zm296 184h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H296c-13.255 0-24 10.745-24 24v160c0 13.255 10.745 24 24 24z\"]\n  };\n  var faThList = {\n    prefix: 'fas',\n    iconName: 'th-list',\n    icon: [512, 512, [], \"f00b\", \"M149.333 216v80c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24v-80c0-13.255 10.745-24 24-24h101.333c13.255 0 24 10.745 24 24zM0 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zM125.333 32H24C10.745 32 0 42.745 0 56v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24zm80 448H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zm-24-424v80c0 13.255 10.745 24 24 24H488c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24zm24 264H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24z\"]\n  };\n  var faTheaterMasks = {\n    prefix: 'fas',\n    iconName: 'theater-masks',\n    icon: [640, 512, [], \"f630\", \"M206.86 245.15c-35.88 10.45-59.95 41.2-57.53 74.1 11.4-12.72 28.81-23.7 49.9-30.92l7.63-43.18zM95.81 295L64.08 115.49c-.29-1.62.28-2.62.24-2.65 57.76-32.06 123.12-49.01 189.01-49.01 1.61 0 3.23.17 4.85.19 13.95-13.47 31.73-22.83 51.59-26 18.89-3.02 38.05-4.55 57.18-5.32-9.99-13.95-24.48-24.23-41.77-27C301.27 1.89 277.24 0 253.32 0 176.66 0 101.02 19.42 33.2 57.06 9.03 70.48-3.92 98.48 1.05 126.58l31.73 179.51c14.23 80.52 136.33 142.08 204.45 142.08 3.59 0 6.75-.46 10.01-.8-13.52-17.08-28.94-40.48-39.5-67.58-47.61-12.98-106.06-51.62-111.93-84.79zm97.55-137.46c-.73-4.12-2.23-7.87-4.07-11.4-8.25 8.91-20.67 15.75-35.32 18.32-14.65 2.58-28.67.4-39.48-5.17-.52 3.94-.64 7.98.09 12.1 3.84 21.7 24.58 36.19 46.34 32.37 21.75-3.82 36.28-24.52 32.44-46.22zM606.8 120.9c-88.98-49.38-191.43-67.41-291.98-51.35-27.31 4.36-49.08 26.26-54.04 54.36l-31.73 179.51c-15.39 87.05 95.28 196.27 158.31 207.35 63.03 11.09 204.47-53.79 219.86-140.84l31.73-179.51c4.97-28.11-7.98-56.11-32.15-69.52zm-273.24 96.8c3.84-21.7 24.58-36.19 46.34-32.36 21.76 3.83 36.28 24.52 32.45 46.22-.73 4.12-2.23 7.87-4.07 11.4-8.25-8.91-20.67-15.75-35.32-18.32-14.65-2.58-28.67-.4-39.48 5.17-.53-3.95-.65-7.99.08-12.11zm70.47 198.76c-55.68-9.79-93.52-59.27-89.04-112.9 20.6 25.54 56.21 46.17 99.49 53.78 43.28 7.61 83.82.37 111.93-16.6-14.18 51.94-66.71 85.51-122.38 75.72zm130.3-151.34c-8.25-8.91-20.68-15.75-35.33-18.32-14.65-2.58-28.67-.4-39.48 5.17-.52-3.94-.64-7.98.09-12.1 3.84-21.7 24.58-36.19 46.34-32.37 21.75 3.83 36.28 24.52 32.45 46.22-.73 4.13-2.23 7.88-4.07 11.4z\"]\n  };\n  var faThermometer = {\n    prefix: 'fas',\n    iconName: 'thermometer',\n    icon: [512, 512, [], \"f491\", \"M476.8 20.4c-37.5-30.7-95.5-26.3-131.9 10.2l-45.7 46 50.5 50.5c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-50.4-50.5-45.1 45.4 50.3 50.4c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L209 167.4l-45.1 45.4L214 263c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-50.1-50.2L96 281.1V382L7 471c-9.4 9.4-9.4 24.6 0 33.9 9.4 9.4 24.6 9.4 33.9 0l89-89h99.9L484 162.6c34.9-34.9 42.2-101.5-7.2-142.2z\"]\n  };\n  var faThermometerEmpty = {\n    prefix: 'fas',\n    iconName: 'thermometer-empty',\n    icon: [256, 512, [], \"f2cb\", \"M192 384c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-35.346 28.654-64 64-64s64 28.654 64 64zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"]\n  };\n  var faThermometerFull = {\n    prefix: 'fas',\n    iconName: 'thermometer-full',\n    icon: [256, 512, [], \"f2c7\", \"M224 96c0-53.019-42.981-96-96-96S32 42.981 32 96v203.347C12.225 321.756.166 351.136.002 383.333c-.359 70.303 56.787 128.176 127.089 128.664.299.002.61.003.909.003 70.698 0 128-57.304 128-128 0-32.459-12.088-62.09-32-84.653V96zm-96 368l-.576-.002c-43.86-.304-79.647-36.544-79.423-80.42.173-33.98 19.266-51.652 31.999-66.08V96c0-26.467 21.533-48 48-48s48 21.533 48 48v221.498c12.63 14.312 32 32.164 32 66.502 0 44.112-35.888 80-80 80zm64-80c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-23.685 12.876-44.349 32-55.417V96c0-17.673 14.327-32 32-32s32 14.327 32 32v232.583c19.124 11.068 32 31.732 32 55.417z\"]\n  };\n  var faThermometerHalf = {\n    prefix: 'fas',\n    iconName: 'thermometer-half',\n    icon: [256, 512, [], \"f2c9\", \"M192 384c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-23.685 12.876-44.349 32-55.417V224c0-17.673 14.327-32 32-32s32 14.327 32 32v104.583c19.124 11.068 32 31.732 32 55.417zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"]\n  };\n  var faThermometerQuarter = {\n    prefix: 'fas',\n    iconName: 'thermometer-quarter',\n    icon: [256, 512, [], \"f2ca\", \"M192 384c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-23.685 12.876-44.349 32-55.417V288c0-17.673 14.327-32 32-32s32 14.327 32 32v40.583c19.124 11.068 32 31.732 32 55.417zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"]\n  };\n  var faThermometerThreeQuarters = {\n    prefix: 'fas',\n    iconName: 'thermometer-three-quarters',\n    icon: [256, 512, [], \"f2c8\", \"M192 384c0 35.346-28.654 64-64 64-35.346 0-64-28.654-64-64 0-23.685 12.876-44.349 32-55.417V160c0-17.673 14.327-32 32-32s32 14.327 32 32v168.583c19.124 11.068 32 31.732 32 55.417zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"]\n  };\n  var faThumbsDown = {\n    prefix: 'fas',\n    iconName: 'thumbs-down',\n    icon: [512, 512, [], \"f165\", \"M0 56v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H24C10.745 32 0 42.745 0 56zm40 200c0-13.255 10.745-24 24-24s24 10.745 24 24-10.745 24-24 24-24-10.745-24-24zm272 256c-20.183 0-29.485-39.293-33.931-57.795-5.206-21.666-10.589-44.07-25.393-58.902-32.469-32.524-49.503-73.967-89.117-113.111a11.98 11.98 0 0 1-3.558-8.521V59.901c0-6.541 5.243-11.878 11.783-11.998 15.831-.29 36.694-9.079 52.651-16.178C256.189 17.598 295.709.017 343.995 0h2.844c42.777 0 93.363.413 113.774 29.737 8.392 12.057 10.446 27.034 6.148 44.632 16.312 17.053 25.063 48.863 16.382 74.757 17.544 23.432 19.143 56.132 9.308 79.469l.11.11c11.893 11.949 19.523 31.259 19.439 49.197-.156 30.352-26.157 58.098-59.553 58.098H350.723C358.03 364.34 384 388.132 384 430.548 384 504 336 512 312 512z\"]\n  };\n  var faThumbsUp = {\n    prefix: 'fas',\n    iconName: 'thumbs-up',\n    icon: [512, 512, [], \"f164\", \"M104 224H24c-13.255 0-24 10.745-24 24v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V248c0-13.255-10.745-24-24-24zM64 472c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zM384 81.452c0 42.416-25.97 66.208-33.277 94.548h101.723c33.397 0 59.397 27.746 59.553 58.098.084 17.938-7.546 37.249-19.439 49.197l-.11.11c9.836 23.337 8.237 56.037-9.308 79.469 8.681 25.895-.069 57.704-16.382 74.757 4.298 17.598 2.244 32.575-6.148 44.632C440.202 511.587 389.616 512 346.839 512l-2.845-.001c-48.287-.017-87.806-17.598-119.56-31.725-15.957-7.099-36.821-15.887-52.651-16.178-6.54-.12-11.783-5.457-11.783-11.998v-213.77c0-3.2 1.282-6.271 3.558-8.521 39.614-39.144 56.648-80.587 89.117-113.111 14.804-14.832 20.188-37.236 25.393-58.902C282.515 39.293 291.817 0 312 0c24 0 72 8 72 81.452z\"]\n  };\n  var faThumbtack = {\n    prefix: 'fas',\n    iconName: 'thumbtack',\n    icon: [384, 512, [], \"f08d\", \"M298.028 214.267L285.793 96H328c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H56C42.745 0 32 10.745 32 24v48c0 13.255 10.745 24 24 24h42.207L85.972 214.267C37.465 236.82 0 277.261 0 328c0 13.255 10.745 24 24 24h136v104.007c0 1.242.289 2.467.845 3.578l24 48c2.941 5.882 11.364 5.893 14.311 0l24-48a8.008 8.008 0 0 0 .845-3.578V352h136c13.255 0 24-10.745 24-24-.001-51.183-37.983-91.42-85.973-113.733z\"]\n  };\n  var faTicketAlt = {\n    prefix: 'fas',\n    iconName: 'ticket-alt',\n    icon: [576, 512, [], \"f3ff\", \"M128 160h320v192H128V160zm400 96c0 26.51 21.49 48 48 48v96c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48v-96c26.51 0 48-21.49 48-48s-21.49-48-48-48v-96c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48v96c-26.51 0-48 21.49-48 48zm-48-104c0-13.255-10.745-24-24-24H120c-13.255 0-24 10.745-24 24v208c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V152z\"]\n  };\n  var faTimes = {\n    prefix: 'fas',\n    iconName: 'times',\n    icon: [352, 512, [], \"f00d\", \"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"]\n  };\n  var faTimesCircle = {\n    prefix: 'fas',\n    iconName: 'times-circle',\n    icon: [512, 512, [], \"f057\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"]\n  };\n  var faTint = {\n    prefix: 'fas',\n    iconName: 'tint',\n    icon: [352, 512, [], \"f043\", \"M205.22 22.09c-7.94-28.78-49.44-30.12-58.44 0C100.01 179.85 0 222.72 0 333.91 0 432.35 78.72 512 176 512s176-79.65 176-178.09c0-111.75-99.79-153.34-146.78-311.82zM176 448c-61.75 0-112-50.25-112-112 0-8.84 7.16-16 16-16s16 7.16 16 16c0 44.11 35.89 80 80 80 8.84 0 16 7.16 16 16s-7.16 16-16 16z\"]\n  };\n  var faTintSlash = {\n    prefix: 'fas',\n    iconName: 'tint-slash',\n    icon: [640, 512, [], \"f5c7\", \"M633.82 458.1L494.97 350.78c.52-5.57 1.03-11.16 1.03-16.87 0-111.76-99.79-153.34-146.78-311.82-7.94-28.78-49.44-30.12-58.44 0-15.52 52.34-36.87 91.96-58.49 125.68L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.36 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.41-6.97 4.16-17.02-2.82-22.45zM144 333.91C144 432.35 222.72 512 320 512c44.71 0 85.37-16.96 116.4-44.7L162.72 255.78c-11.41 23.5-18.72 48.35-18.72 78.13z\"]\n  };\n  var faTired = {\n    prefix: 'fas',\n    iconName: 'tired',\n    icon: [496, 512, [], \"f5c8\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm33.8 189.7l80-48c11.6-6.9 24 7.7 15.4 18L343.6 208l33.6 40.3c8.7 10.4-3.9 24.8-15.4 18l-80-48c-7.7-4.7-7.7-15.9 0-20.6zm-163-30c-8.6-10.3 3.8-24.9 15.4-18l80 48c7.8 4.7 7.8 15.9 0 20.6l-80 48c-11.5 6.8-24-7.6-15.4-18l33.6-40.3-33.6-40.3zM248 288c51.9 0 115.3 43.8 123.2 106.7 1.7 13.6-8 24.6-17.7 20.4-25.9-11.1-64.4-17.4-105.5-17.4s-79.6 6.3-105.5 17.4c-9.8 4.2-19.4-7-17.7-20.4C132.7 331.8 196.1 288 248 288z\"]\n  };\n  var faToggleOff = {\n    prefix: 'fas',\n    iconName: 'toggle-off',\n    icon: [576, 512, [], \"f204\", \"M384 64H192C85.961 64 0 149.961 0 256s85.961 192 192 192h192c106.039 0 192-85.961 192-192S490.039 64 384 64zM64 256c0-70.741 57.249-128 128-128 70.741 0 128 57.249 128 128 0 70.741-57.249 128-128 128-70.741 0-128-57.249-128-128zm320 128h-48.905c65.217-72.858 65.236-183.12 0-256H384c70.741 0 128 57.249 128 128 0 70.74-57.249 128-128 128z\"]\n  };\n  var faToggleOn = {\n    prefix: 'fas',\n    iconName: 'toggle-on',\n    icon: [576, 512, [], \"f205\", \"M384 64H192C86 64 0 150 0 256s86 192 192 192h192c106 0 192-86 192-192S490 64 384 64zm0 320c-70.8 0-128-57.3-128-128 0-70.8 57.3-128 128-128 70.8 0 128 57.3 128 128 0 70.8-57.3 128-128 128z\"]\n  };\n  var faToilet = {\n    prefix: 'fas',\n    iconName: 'toilet',\n    icon: [384, 512, [], \"f7d8\", \"M368 48c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16H16C7.2 0 0 7.2 0 16v16c0 8.8 7.2 16 16 16h16v156.7C11.8 214.8 0 226.9 0 240c0 67.2 34.6 126.2 86.8 160.5l-21.4 70.2C59.1 491.2 74.5 512 96 512h192c21.5 0 36.9-20.8 30.6-41.3l-21.4-70.2C349.4 366.2 384 307.2 384 240c0-13.1-11.8-25.2-32-35.3V48h16zM80 72c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H88c-4.4 0-8-3.6-8-8V72zm112 200c-77.1 0-139.6-14.3-139.6-32s62.5-32 139.6-32 139.6 14.3 139.6 32-62.5 32-139.6 32z\"]\n  };\n  var faToiletPaper = {\n    prefix: 'fas',\n    iconName: 'toilet-paper',\n    icon: [576, 512, [], \"f71e\", \"M128 0C74.98 0 32 85.96 32 192v172.07c0 41.12-9.8 62.77-31.17 126.87C-2.62 501.3 5.09 512 16.01 512h280.92c13.77 0 26-8.81 30.36-21.88 12.83-38.48 24.71-72.4 24.71-126.05V192c0-83.6 23.67-153.52 60.44-192H128zM96 224c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zm64 0c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zm64 0c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zm64 0c-8.84 0-16-7.16-16-16s7.16-16 16-16 16 7.16 16 16-7.16 16-16 16zM480 0c-53.02 0-96 85.96-96 192s42.98 192 96 192 96-85.96 96-192S533.02 0 480 0zm0 256c-17.67 0-32-28.65-32-64s14.33-64 32-64 32 28.65 32 64-14.33 64-32 64z\"]\n  };\n  var faToolbox = {\n    prefix: 'fas',\n    iconName: 'toolbox',\n    icon: [512, 512, [], \"f552\", \"M502.63 214.63l-45.25-45.25c-6-6-14.14-9.37-22.63-9.37H384V80c0-26.51-21.49-48-48-48H176c-26.51 0-48 21.49-48 48v80H77.25c-8.49 0-16.62 3.37-22.63 9.37L9.37 214.63c-6 6-9.37 14.14-9.37 22.63V320h128v-16c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v16h128v-16c0-8.84 7.16-16 16-16h32c8.84 0 16 7.16 16 16v16h128v-82.75c0-8.48-3.37-16.62-9.37-22.62zM320 160H192V96h128v64zm64 208c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-16H192v16c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-16H0v96c0 17.67 14.33 32 32 32h448c17.67 0 32-14.33 32-32v-96H384v16z\"]\n  };\n  var faTools = {\n    prefix: 'fas',\n    iconName: 'tools',\n    icon: [512, 512, [], \"f7d9\", \"M501.1 395.7L384 278.6c-23.1-23.1-57.6-27.6-85.4-13.9L192 158.1V96L64 0 0 64l96 128h62.1l106.6 106.6c-13.6 27.8-9.2 62.3 13.9 85.4l117.1 117.1c14.6 14.6 38.2 14.6 52.7 0l52.7-52.7c14.5-14.6 14.5-38.2 0-52.7zM331.7 225c28.3 0 54.9 11 74.9 31l19.4 19.4c15.8-6.9 30.8-16.5 43.8-29.5 37.1-37.1 49.7-89.3 37.9-136.7-2.2-9-13.5-12.1-20.1-5.5l-74.4 74.4-67.9-11.3L334 98.9l74.4-74.4c6.6-6.6 3.4-17.9-5.7-20.2-47.4-11.7-99.6.9-136.6 37.9-28.5 28.5-41.9 66.1-41.2 103.6l82.1 82.1c8.1-1.9 16.5-2.9 24.7-2.9zm-103.9 82l-56.7-56.7L18.7 402.8c-25 25-25 65.5 0 90.5s65.5 25 90.5 0l123.6-123.6c-7.6-19.9-9.9-41.6-5-62.7zM64 472c-13.2 0-24-10.8-24-24 0-13.3 10.7-24 24-24s24 10.7 24 24c0 13.2-10.7 24-24 24z\"]\n  };\n  var faTooth = {\n    prefix: 'fas',\n    iconName: 'tooth',\n    icon: [448, 512, [], \"f5c9\", \"M443.98 96.25c-11.01-45.22-47.11-82.06-92.01-93.72-32.19-8.36-63 5.1-89.14 24.33-3.25 2.39-6.96 3.73-10.5 5.48l28.32 18.21c7.42 4.77 9.58 14.67 4.8 22.11-4.46 6.95-14.27 9.86-22.11 4.8L162.83 12.84c-20.7-10.85-43.38-16.4-66.81-10.31-44.9 11.67-81 48.5-92.01 93.72-10.13 41.62-.42 80.81 21.5 110.43 23.36 31.57 32.68 68.66 36.29 107.35 4.4 47.16 10.33 94.16 20.94 140.32l7.8 33.95c3.19 13.87 15.49 23.7 29.67 23.7 13.97 0 26.15-9.55 29.54-23.16l34.47-138.42c4.56-18.32 20.96-31.16 39.76-31.16s35.2 12.85 39.76 31.16l34.47 138.42c3.39 13.61 15.57 23.16 29.54 23.16 14.18 0 26.48-9.83 29.67-23.7l7.8-33.95c10.61-46.15 16.53-93.16 20.94-140.32 3.61-38.7 12.93-75.78 36.29-107.35 21.95-29.61 31.66-68.8 21.53-110.43z\"]\n  };\n  var faTorah = {\n    prefix: 'fas',\n    iconName: 'torah',\n    icon: [640, 512, [], \"f6a0\", \"M48 0A48.05 48.05 0 0 0 0 48v64a16 16 0 0 0 16 16h80V48A48.05 48.05 0 0 0 48 0zm347.14 228.56h34.91l-17.47-29.17zm-59.09 52.07l16.78-28.07h-33.58zM242 228.56h34.9l-17.48-29.19zm188-105.12h-34.9l17.48 29.19zM256 412.57V352h288V96a96.1 96.1 0 0 0-96-96H111.59A79.24 79.24 0 0 1 128 48v368a64 64 0 0 0 74.75 63.12C234.22 474 256 444.46 256 412.57zm-38.59-303a20.11 20.11 0 0 1 17.5-10.15h56.3L318.8 53.3a20 20 0 0 1 17.25-9.82 19.66 19.66 0 0 1 17 9.68l27.7 46.28h56.36a20 20 0 0 1 17.14 30.29L426.57 176l27.79 46.43a19.6 19.6 0 0 1 .23 20 20.11 20.11 0 0 1-17.5 10.15h-56.3L353.2 298.7a20 20 0 0 1-17.2 9.82 19.66 19.66 0 0 1-17-9.68l-27.7-46.28h-56.39a20 20 0 0 1-17.14-30.29L245.43 176l-27.79-46.43a19.6 19.6 0 0 1-.23-19.98zM624 384H288v32a96.11 96.11 0 0 1-96 96h336a112 112 0 0 0 112-112 16 16 0 0 0-16-16zM276.86 123.44H242l17.47 29.17zM336 71.38l-16.83 28.06h33.58zm-31.12 157.18h62.3L398.59 176l-31.47-52.58h-62.3L273.41 176z\"]\n  };\n  var faToriiGate = {\n    prefix: 'fas',\n    iconName: 'torii-gate',\n    icon: [512, 512, [], \"f6a1\", \"M376.45 32h-240.9A303.17 303.17 0 0 1 0 0v96c0 17.67 14.33 32 32 32h32v64H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h48v240c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V256h256v240c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V256h48c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16h-48v-64h32c17.67 0 32-14.33 32-32V0a303.17 303.17 0 0 1-135.55 32zM128 128h96v64h-96v-64zm256 64h-96v-64h96v64z\"]\n  };\n  var faTractor = {\n    prefix: 'fas',\n    iconName: 'tractor',\n    icon: [640, 512, [], \"f722\", \"M528 336c-48.6 0-88 39.4-88 88s39.4 88 88 88 88-39.4 88-88-39.4-88-88-88zm0 112c-13.23 0-24-10.77-24-24s10.77-24 24-24 24 10.77 24 24-10.77 24-24 24zm80-288h-64v-40.2c0-14.12 4.7-27.76 13.15-38.84 4.42-5.8 3.55-14.06-1.32-19.49L534.2 37.3c-6.66-7.45-18.32-6.92-24.7.78C490.58 60.9 480 89.81 480 119.8V160H377.67L321.58 29.14A47.914 47.914 0 0 0 277.45 0H144c-26.47 0-48 21.53-48 48v146.52c-8.63-6.73-20.96-6.46-28.89 1.47L36 227.1c-8.59 8.59-8.59 22.52 0 31.11l5.06 5.06c-4.99 9.26-8.96 18.82-11.91 28.72H22c-12.15 0-22 9.85-22 22v44c0 12.15 9.85 22 22 22h7.14c2.96 9.91 6.92 19.46 11.91 28.73l-5.06 5.06c-8.59 8.59-8.59 22.52 0 31.11L67.1 476c8.59 8.59 22.52 8.59 31.11 0l5.06-5.06c9.26 4.99 18.82 8.96 28.72 11.91V490c0 12.15 9.85 22 22 22h44c12.15 0 22-9.85 22-22v-7.14c9.9-2.95 19.46-6.92 28.72-11.91l5.06 5.06c8.59 8.59 22.52 8.59 31.11 0l31.11-31.11c8.59-8.59 8.59-22.52 0-31.11l-5.06-5.06c4.99-9.26 8.96-18.82 11.91-28.72H330c12.15 0 22-9.85 22-22v-6h80.54c21.91-28.99 56.32-48 95.46-48 18.64 0 36.07 4.61 51.8 12.2l50.82-50.82c6-6 9.37-14.14 9.37-22.63V192c.01-17.67-14.32-32-31.99-32zM176 416c-44.18 0-80-35.82-80-80s35.82-80 80-80 80 35.82 80 80-35.82 80-80 80zm22-256h-38V64h106.89l41.15 96H198z\"]\n  };\n  var faTrademark = {\n    prefix: 'fas',\n    iconName: 'trademark',\n    icon: [640, 512, [], \"f25c\", \"M260.6 96H12c-6.6 0-12 5.4-12 12v43.1c0 6.6 5.4 12 12 12h85.1V404c0 6.6 5.4 12 12 12h54.3c6.6 0 12-5.4 12-12V163.1h85.1c6.6 0 12-5.4 12-12V108c.1-6.6-5.3-12-11.9-12zM640 403l-24-296c-.5-6.2-5.7-11-12-11h-65.4c-5.1 0-9.7 3.3-11.3 8.1l-43.8 127.1c-7.2 20.6-16.1 52.8-16.1 52.8h-.9s-8.9-32.2-16.1-52.8l-43.8-127.1c-1.7-4.8-6.2-8.1-11.3-8.1h-65.4c-6.2 0-11.4 4.8-12 11l-24.4 296c-.6 7 4.9 13 12 13H360c6.3 0 11.5-4.9 12-11.2l9.1-132.9c1.8-24.2 0-53.7 0-53.7h.9s10.7 33.6 17.9 53.7l30.7 84.7c1.7 4.7 6.2 7.9 11.3 7.9h50.3c5.1 0 9.6-3.2 11.3-7.9l30.7-84.7c7.2-20.1 17.9-53.7 17.9-53.7h.9s-1.8 29.5 0 53.7l9.1 132.9c.4 6.3 5.7 11.2 12 11.2H628c7 0 12.5-6 12-13z\"]\n  };\n  var faTrafficLight = {\n    prefix: 'fas',\n    iconName: 'traffic-light',\n    icon: [384, 512, [], \"f637\", \"M384 192h-64v-37.88c37.2-13.22 64-48.38 64-90.12h-64V32c0-17.67-14.33-32-32-32H96C78.33 0 64 14.33 64 32v32H0c0 41.74 26.8 76.9 64 90.12V192H0c0 41.74 26.8 76.9 64 90.12V320H0c0 42.84 28.25 78.69 66.99 91.05C79.42 468.72 130.6 512 192 512s112.58-43.28 125.01-100.95C355.75 398.69 384 362.84 384 320h-64v-37.88c37.2-13.22 64-48.38 64-90.12zM192 416c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm0-128c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm0-128c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48z\"]\n  };\n  var faTrain = {\n    prefix: 'fas',\n    iconName: 'train',\n    icon: [448, 512, [], \"f238\", \"M448 96v256c0 51.815-61.624 96-130.022 96l62.98 49.721C386.905 502.417 383.562 512 376 512H72c-7.578 0-10.892-9.594-4.957-14.279L130.022 448C61.82 448 0 403.954 0 352V96C0 42.981 64 0 128 0h192c65 0 128 42.981 128 96zm-48 136V120c0-13.255-10.745-24-24-24H72c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24zm-176 64c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56z\"]\n  };\n  var faTram = {\n    prefix: 'fas',\n    iconName: 'tram',\n    icon: [512, 512, [], \"f7da\", \"M288 64c17.7 0 32-14.3 32-32S305.7 0 288 0s-32 14.3-32 32 14.3 32 32 32zm223.5-12.1c-2.3-8.6-11-13.6-19.6-11.3l-480 128c-8.5 2.3-13.6 11-11.3 19.6C2.5 195.3 8.9 200 16 200c1.4 0 2.8-.2 4.1-.5L240 140.8V224H64c-17.7 0-32 14.3-32 32v224c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V256c0-17.7-14.3-32-32-32H272v-91.7l228.1-60.8c8.6-2.3 13.6-11.1 11.4-19.6zM176 384H80v-96h96v96zm160-96h96v96h-96v-96zm-32 0v96h-96v-96h96zM192 96c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32z\"]\n  };\n  var faTransgender = {\n    prefix: 'fas',\n    iconName: 'transgender',\n    icon: [384, 512, [], \"f224\", \"M372 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7C198.5 104.1 172.2 96 144 96 64.5 96 0 160.5 0 240c0 68.5 47.9 125.9 112 140.4V408H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v28c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-28h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-27.6c64.1-14.6 112-71.9 112-140.4 0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V12c0-6.6-5.4-12-12-12zM144 320c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"]\n  };\n  var faTransgenderAlt = {\n    prefix: 'fas',\n    iconName: 'transgender-alt',\n    icon: [480, 512, [], \"f225\", \"M468 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7C294.5 104.1 268.2 96 240 96c-28.2 0-54.5 8.1-76.7 22.1l-16.5-16.5 19.8-19.8c4.7-4.7 4.7-12.3 0-17l-28.3-28.3c-4.7-4.7-12.3-4.7-17 0l-19.8 19.8-19-19 16.9-16.9C107.1 12.9 101.7 0 91 0H12C5.4 0 0 5.4 0 12v79c0 10.7 12.9 16 20.5 8.5l16.9-16.9 19 19-19.8 19.8c-4.7 4.7-4.7 12.3 0 17l28.3 28.3c4.7 4.7 12.3 4.7 17 0l19.8-19.8 16.5 16.5C104.1 185.5 96 211.8 96 240c0 68.5 47.9 125.9 112 140.4V408h-36c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v28c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-28h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-27.6c64.1-14.6 112-71.9 112-140.4 0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V12c0-6.6-5.4-12-12-12zM240 320c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"]\n  };\n  var faTrash = {\n    prefix: 'fas',\n    iconName: 'trash',\n    icon: [448, 512, [], \"f1f8\", \"M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z\"]\n  };\n  var faTrashAlt = {\n    prefix: 'fas',\n    iconName: 'trash-alt',\n    icon: [448, 512, [], \"f2ed\", \"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"]\n  };\n  var faTrashRestore = {\n    prefix: 'fas',\n    iconName: 'trash-restore',\n    icon: [448, 512, [], \"f829\", \"M53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32zm70.11-175.8l89.38-94.26a15.41 15.41 0 0 1 22.62 0l89.38 94.26c10.08 10.62 2.94 28.8-11.32 28.8H256v112a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V320h-57.37c-14.26 0-21.4-18.18-11.32-28.8zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"]\n  };\n  var faTrashRestoreAlt = {\n    prefix: 'fas',\n    iconName: 'trash-restore-alt',\n    icon: [448, 512, [], \"f82a\", \"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm91.31-172.8l89.38-94.26a15.41 15.41 0 0 1 22.62 0l89.38 94.26c10.08 10.62 2.94 28.8-11.32 28.8H256v112a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V320h-57.37c-14.26 0-21.4-18.18-11.32-28.8zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"]\n  };\n  var faTree = {\n    prefix: 'fas',\n    iconName: 'tree',\n    icon: [384, 512, [], \"f1bb\", \"M378.31 378.49L298.42 288h30.63c9.01 0 16.98-5 20.78-13.06 3.8-8.04 2.55-17.26-3.28-24.05L268.42 160h28.89c9.1 0 17.3-5.35 20.86-13.61 3.52-8.13 1.86-17.59-4.24-24.08L203.66 4.83c-6.03-6.45-17.28-6.45-23.32 0L70.06 122.31c-6.1 6.49-7.75 15.95-4.24 24.08C69.38 154.65 77.59 160 86.69 160h28.89l-78.14 90.91c-5.81 6.78-7.06 15.99-3.27 24.04C37.97 283 45.93 288 54.95 288h30.63L5.69 378.49c-6 6.79-7.36 16.09-3.56 24.26 3.75 8.05 12 13.25 21.01 13.25H160v24.45l-30.29 48.4c-5.32 10.64 2.42 23.16 14.31 23.16h95.96c11.89 0 19.63-12.52 14.31-23.16L224 440.45V416h136.86c9.01 0 17.26-5.2 21.01-13.25 3.8-8.17 2.44-17.47-3.56-24.26z\"]\n  };\n  var faTrophy = {\n    prefix: 'fas',\n    iconName: 'trophy',\n    icon: [576, 512, [], \"f091\", \"M552 64H448V24c0-13.3-10.7-24-24-24H152c-13.3 0-24 10.7-24 24v40H24C10.7 64 0 74.7 0 88v56c0 35.7 22.5 72.4 61.9 100.7 31.5 22.7 69.8 37.1 110 41.7C203.3 338.5 240 360 240 360v72h-48c-35.3 0-64 20.7-64 56v12c0 6.6 5.4 12 12 12h296c6.6 0 12-5.4 12-12v-12c0-35.3-28.7-56-64-56h-48v-72s36.7-21.5 68.1-73.6c40.3-4.6 78.6-19 110-41.7 39.3-28.3 61.9-65 61.9-100.7V88c0-13.3-10.7-24-24-24zM99.3 192.8C74.9 175.2 64 155.6 64 144v-16h64.2c1 32.6 5.8 61.2 12.8 86.2-15.1-5.2-29.2-12.4-41.7-21.4zM512 144c0 16.1-17.7 36.1-35.3 48.8-12.5 9-26.7 16.2-41.8 21.4 7-25 11.8-53.6 12.8-86.2H512v16z\"]\n  };\n  var faTruck = {\n    prefix: 'fas',\n    iconName: 'truck',\n    icon: [640, 512, [], \"f0d1\", \"M624 352h-16V243.9c0-12.7-5.1-24.9-14.1-33.9L494 110.1c-9-9-21.2-14.1-33.9-14.1H416V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h16c0 53 43 96 96 96s96-43 96-96h128c0 53 43 96 96 96s96-43 96-96h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM160 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm320 0c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-208H416V144h44.1l99.9 99.9V256z\"]\n  };\n  var faTruckLoading = {\n    prefix: 'fas',\n    iconName: 'truck-loading',\n    icon: [640, 512, [], \"f4de\", \"M50.2 375.6c2.3 8.5 11.1 13.6 19.6 11.3l216.4-58c8.5-2.3 13.6-11.1 11.3-19.6l-49.7-185.5c-2.3-8.5-11.1-13.6-19.6-11.3L151 133.3l24.8 92.7-61.8 16.5-24.8-92.7-77.3 20.7C3.4 172.8-1.7 181.6.6 190.1l49.6 185.5zM384 0c-17.7 0-32 14.3-32 32v323.6L5.9 450c-4.3 1.2-6.8 5.6-5.6 9.8l12.6 46.3c1.2 4.3 5.6 6.8 9.8 5.6l393.7-107.4C418.8 464.1 467.6 512 528 512c61.9 0 112-50.1 112-112V0H384zm144 448c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"]\n  };\n  var faTruckMonster = {\n    prefix: 'fas',\n    iconName: 'truck-monster',\n    icon: [640, 512, [], \"f63b\", \"M624 224h-16v-64c0-17.67-14.33-32-32-32h-73.6L419.22 24.02A64.025 64.025 0 0 0 369.24 0H256c-17.67 0-32 14.33-32 32v96H48c-8.84 0-16 7.16-16 16v80H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h16.72c29.21-38.65 75.1-64 127.28-64s98.07 25.35 127.28 64h65.45c29.21-38.65 75.1-64 127.28-64s98.07 25.35 127.28 64H624c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zm-336-96V64h81.24l51.2 64H288zm304 224h-5.2c-2.2-7.33-5.07-14.28-8.65-20.89l3.67-3.67c6.25-6.25 6.25-16.38 0-22.63l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-3.67 3.67A110.85 110.85 0 0 0 512 277.2V272c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v5.2c-7.33 2.2-14.28 5.07-20.89 8.65l-3.67-3.67c-6.25-6.25-16.38-6.25-22.63 0l-22.63 22.63c-6.25 6.25-6.25 16.38 0 22.63l3.67 3.67A110.85 110.85 0 0 0 373.2 352H368c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h5.2c2.2 7.33 5.07 14.28 8.65 20.89l-3.67 3.67c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l3.67-3.67c6.61 3.57 13.57 6.45 20.9 8.65v5.2c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-5.2c7.33-2.2 14.28-5.07 20.9-8.65l3.67 3.67c6.25 6.25 16.38 6.25 22.63 0l22.63-22.63c6.25-6.25 6.25-16.38 0-22.63l-3.67-3.67a110.85 110.85 0 0 0 8.65-20.89h5.2c8.84 0 16-7.16 16-16v-32c-.02-8.84-7.18-16-16.02-16zm-112 80c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm-208-80h-5.2c-2.2-7.33-5.07-14.28-8.65-20.89l3.67-3.67c6.25-6.25 6.25-16.38 0-22.63l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-3.67 3.67A110.85 110.85 0 0 0 192 277.2V272c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v5.2c-7.33 2.2-14.28 5.07-20.89 8.65l-3.67-3.67c-6.25-6.25-16.38-6.25-22.63 0L58.18 304.8c-6.25 6.25-6.25 16.38 0 22.63l3.67 3.67a110.85 110.85 0 0 0-8.65 20.89H48c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h5.2c2.2 7.33 5.07 14.28 8.65 20.89l-3.67 3.67c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l3.67-3.67c6.61 3.57 13.57 6.45 20.9 8.65v5.2c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-5.2c7.33-2.2 14.28-5.07 20.9-8.65l3.67 3.67c6.25 6.25 16.38 6.25 22.63 0l22.63-22.63c6.25-6.25 6.25-16.38 0-22.63l-3.67-3.67a110.85 110.85 0 0 0 8.65-20.89h5.2c8.84 0 16-7.16 16-16v-32C288 359.16 280.84 352 272 352zm-112 80c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48z\"]\n  };\n  var faTruckMoving = {\n    prefix: 'fas',\n    iconName: 'truck-moving',\n    icon: [640, 512, [], \"f4df\", \"M621.3 237.3l-58.5-58.5c-12-12-28.3-18.7-45.3-18.7H480V64c0-17.7-14.3-32-32-32H32C14.3 32 0 46.3 0 64v336c0 44.2 35.8 80 80 80 26.3 0 49.4-12.9 64-32.4 14.6 19.6 37.7 32.4 64 32.4 44.2 0 80-35.8 80-80 0-5.5-.6-10.8-1.6-16h163.2c-1.1 5.2-1.6 10.5-1.6 16 0 44.2 35.8 80 80 80s80-35.8 80-80c0-5.5-.6-10.8-1.6-16H624c8.8 0 16-7.2 16-16v-85.5c0-17-6.7-33.2-18.7-45.2zM80 432c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32zm128 0c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32zm272-224h37.5c4.3 0 8.3 1.7 11.3 4.7l43.3 43.3H480v-48zm48 224c-17.6 0-32-14.4-32-32s14.4-32 32-32 32 14.4 32 32-14.4 32-32 32z\"]\n  };\n  var faTruckPickup = {\n    prefix: 'fas',\n    iconName: 'truck-pickup',\n    icon: [640, 512, [], \"f63c\", \"M624 288h-16v-64c0-17.67-14.33-32-32-32h-48L419.22 56.02A64.025 64.025 0 0 0 369.24 32H256c-17.67 0-32 14.33-32 32v128H64c-17.67 0-32 14.33-32 32v64H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h49.61c-.76 5.27-1.61 10.52-1.61 16 0 61.86 50.14 112 112 112s112-50.14 112-112c0-5.48-.85-10.73-1.61-16h67.23c-.76 5.27-1.61 10.52-1.61 16 0 61.86 50.14 112 112 112s112-50.14 112-112c0-5.48-.85-10.73-1.61-16H624c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM288 96h81.24l76.8 96H288V96zM176 416c-26.47 0-48-21.53-48-48s21.53-48 48-48 48 21.53 48 48-21.53 48-48 48zm288 0c-26.47 0-48-21.53-48-48s21.53-48 48-48 48 21.53 48 48-21.53 48-48 48z\"]\n  };\n  var faTshirt = {\n    prefix: 'fas',\n    iconName: 'tshirt',\n    icon: [640, 512, [], \"f553\", \"M631.2 96.5L436.5 0C416.4 27.8 371.9 47.2 320 47.2S223.6 27.8 203.5 0L8.8 96.5c-7.9 4-11.1 13.6-7.2 21.5l57.2 114.5c4 7.9 13.6 11.1 21.5 7.2l56.6-27.7c10.6-5.2 23 2.5 23 14.4V480c0 17.7 14.3 32 32 32h256c17.7 0 32-14.3 32-32V226.3c0-11.8 12.4-19.6 23-14.4l56.6 27.7c7.9 4 17.5.8 21.5-7.2L638.3 118c4-7.9.8-17.6-7.1-21.5z\"]\n  };\n  var faTty = {\n    prefix: 'fas',\n    iconName: 'tty',\n    icon: [512, 512, [], \"f1e4\", \"M5.37 103.822c138.532-138.532 362.936-138.326 501.262 0 6.078 6.078 7.074 15.496 2.583 22.681l-43.214 69.138a18.332 18.332 0 0 1-22.356 7.305l-86.422-34.569a18.335 18.335 0 0 1-11.434-18.846L351.741 90c-62.145-22.454-130.636-21.986-191.483 0l5.953 59.532a18.331 18.331 0 0 1-11.434 18.846l-86.423 34.568a18.334 18.334 0 0 1-22.356-7.305L2.787 126.502a18.333 18.333 0 0 1 2.583-22.68zM96 308v-40c0-6.627-5.373-12-12-12H44c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12H92c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zM96 500v-40c0-6.627-5.373-12-12-12H44c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm288 0v-40c0-6.627-5.373-12-12-12H140c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h232c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z\"]\n  };\n  var faTv = {\n    prefix: 'fas',\n    iconName: 'tv',\n    icon: [640, 512, [], \"f26c\", \"M592 0H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h245.1v32h-160c-17.7 0-32 14.3-32 32s14.3 32 32 32h384c17.7 0 32-14.3 32-32s-14.3-32-32-32h-160v-32H592c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm-16 352H64V64h512v288z\"]\n  };\n  var faUmbrella = {\n    prefix: 'fas',\n    iconName: 'umbrella',\n    icon: [576, 512, [], \"f0e9\", \"M575.7 280.8C547.1 144.5 437.3 62.6 320 49.9V32c0-17.7-14.3-32-32-32s-32 14.3-32 32v17.9C138.3 62.6 29.5 144.5.3 280.8c-2.2 10.1 8.5 21.3 18.7 11.4 52-55 107.7-52.4 158.6 37 5.3 9.5 14.9 8.6 19.7 0 20.2-35.4 44.9-73.2 90.7-73.2 58.5 0 88.2 68.8 90.7 73.2 4.8 8.6 14.4 9.5 19.7 0 51-89.5 107.1-91.4 158.6-37 10.3 10 20.9-1.3 18.7-11.4zM256 301.7V432c0 8.8-7.2 16-16 16-7.8 0-13.2-5.3-15.1-10.7-5.9-16.7-24.1-25.4-40.8-19.5-16.7 5.9-25.4 24.2-19.5 40.8 11.2 31.9 41.6 53.3 75.4 53.3 44.1 0 80-35.9 80-80V301.6c-9.1-7.9-19.8-13.6-32-13.6-12.3.1-22.4 4.8-32 13.7z\"]\n  };\n  var faUmbrellaBeach = {\n    prefix: 'fas',\n    iconName: 'umbrella-beach',\n    icon: [640, 512, [], \"f5ca\", \"M115.38 136.9l102.11 37.18c35.19-81.54 86.21-144.29 139-173.7-95.88-4.89-188.78 36.96-248.53 111.8-6.69 8.4-2.66 21.05 7.42 24.72zm132.25 48.16l238.48 86.83c35.76-121.38 18.7-231.66-42.63-253.98-7.4-2.7-15.13-4-23.09-4-58.02.01-128.27 69.17-172.76 171.15zM521.48 60.5c6.22 16.3 10.83 34.6 13.2 55.19 5.74 49.89-1.42 108.23-18.95 166.98l102.62 37.36c10.09 3.67 21.31-3.43 21.57-14.17 2.32-95.69-41.91-187.44-118.44-245.36zM560 447.98H321.06L386 269.5l-60.14-21.9-72.9 200.37H16c-8.84 0-16 7.16-16 16.01v32.01C0 504.83 7.16 512 16 512h544c8.84 0 16-7.17 16-16.01v-32.01c0-8.84-7.16-16-16-16z\"]\n  };\n  var faUnderline = {\n    prefix: 'fas',\n    iconName: 'underline',\n    icon: [448, 512, [], \"f0cd\", \"M224.264 388.24c-91.669 0-156.603-51.165-156.603-151.392V64H39.37c-8.837 0-16-7.163-16-16V16c0-8.837 7.163-16 16-16h137.39c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-28.813v172.848c0 53.699 28.314 79.444 76.317 79.444 46.966 0 75.796-25.434 75.796-79.965V64h-28.291c-8.837 0-16-7.163-16-16V16c0-8.837 7.163-16 16-16h136.868c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-28.291v172.848c0 99.405-64.881 151.392-156.082 151.392zM16 448h416c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16z\"]\n  };\n  var faUndo = {\n    prefix: 'fas',\n    iconName: 'undo',\n    icon: [512, 512, [], \"f0e2\", \"M212.333 224.333H12c-6.627 0-12-5.373-12-12V12C0 5.373 5.373 0 12 0h48c6.627 0 12 5.373 12 12v78.112C117.773 39.279 184.26 7.47 258.175 8.007c136.906.994 246.448 111.623 246.157 248.532C504.041 393.258 393.12 504 256.333 504c-64.089 0-122.496-24.313-166.51-64.215-5.099-4.622-5.334-12.554-.467-17.42l33.967-33.967c4.474-4.474 11.662-4.717 16.401-.525C170.76 415.336 211.58 432 256.333 432c97.268 0 176-78.716 176-176 0-97.267-78.716-176-176-176-58.496 0-110.28 28.476-142.274 72.333h98.274c6.627 0 12 5.373 12 12v48c0 6.627-5.373 12-12 12z\"]\n  };\n  var faUndoAlt = {\n    prefix: 'fas',\n    iconName: 'undo-alt',\n    icon: [512, 512, [], \"f2ea\", \"M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z\"]\n  };\n  var faUniversalAccess = {\n    prefix: 'fas',\n    iconName: 'universal-access',\n    icon: [512, 512, [], \"f29a\", \"M256 48c114.953 0 208 93.029 208 208 0 114.953-93.029 208-208 208-114.953 0-208-93.029-208-208 0-114.953 93.029-208 208-208m0-40C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 56C149.961 64 64 149.961 64 256s85.961 192 192 192 192-85.961 192-192S362.039 64 256 64zm0 44c19.882 0 36 16.118 36 36s-16.118 36-36 36-36-16.118-36-36 16.118-36 36-36zm117.741 98.023c-28.712 6.779-55.511 12.748-82.14 15.807.851 101.023 12.306 123.052 25.037 155.621 3.617 9.26-.957 19.698-10.217 23.315-9.261 3.617-19.699-.957-23.316-10.217-8.705-22.308-17.086-40.636-22.261-78.549h-9.686c-5.167 37.851-13.534 56.208-22.262 78.549-3.615 9.255-14.05 13.836-23.315 10.217-9.26-3.617-13.834-14.056-10.217-23.315 12.713-32.541 24.185-54.541 25.037-155.621-26.629-3.058-53.428-9.027-82.141-15.807-8.6-2.031-13.926-10.648-11.895-19.249s10.647-13.926 19.249-11.895c96.686 22.829 124.283 22.783 220.775 0 8.599-2.03 17.218 3.294 19.249 11.895 2.029 8.601-3.297 17.219-11.897 19.249z\"]\n  };\n  var faUniversity = {\n    prefix: 'fas',\n    iconName: 'university',\n    icon: [512, 512, [], \"f19c\", \"M496 128v16a8 8 0 0 1-8 8h-24v12c0 6.627-5.373 12-12 12H60c-6.627 0-12-5.373-12-12v-12H24a8 8 0 0 1-8-8v-16a8 8 0 0 1 4.941-7.392l232-88a7.996 7.996 0 0 1 6.118 0l232 88A8 8 0 0 1 496 128zm-24 304H40c-13.255 0-24 10.745-24 24v16a8 8 0 0 0 8 8h464a8 8 0 0 0 8-8v-16c0-13.255-10.745-24-24-24zM96 192v192H60c-6.627 0-12 5.373-12 12v20h416v-20c0-6.627-5.373-12-12-12h-36V192h-64v192h-64V192h-64v192h-64V192H96z\"]\n  };\n  var faUnlink = {\n    prefix: 'fas',\n    iconName: 'unlink',\n    icon: [512, 512, [], \"f127\", \"M304.083 405.907c4.686 4.686 4.686 12.284 0 16.971l-44.674 44.674c-59.263 59.262-155.693 59.266-214.961 0-59.264-59.265-59.264-155.696 0-214.96l44.675-44.675c4.686-4.686 12.284-4.686 16.971 0l39.598 39.598c4.686 4.686 4.686 12.284 0 16.971l-44.675 44.674c-28.072 28.073-28.072 73.75 0 101.823 28.072 28.072 73.75 28.073 101.824 0l44.674-44.674c4.686-4.686 12.284-4.686 16.971 0l39.597 39.598zm-56.568-260.216c4.686 4.686 12.284 4.686 16.971 0l44.674-44.674c28.072-28.075 73.75-28.073 101.824 0 28.072 28.073 28.072 73.75 0 101.823l-44.675 44.674c-4.686 4.686-4.686 12.284 0 16.971l39.598 39.598c4.686 4.686 12.284 4.686 16.971 0l44.675-44.675c59.265-59.265 59.265-155.695 0-214.96-59.266-59.264-155.695-59.264-214.961 0l-44.674 44.674c-4.686 4.686-4.686 12.284 0 16.971l39.597 39.598zm234.828 359.28l22.627-22.627c9.373-9.373 9.373-24.569 0-33.941L63.598 7.029c-9.373-9.373-24.569-9.373-33.941 0L7.029 29.657c-9.373 9.373-9.373 24.569 0 33.941l441.373 441.373c9.373 9.372 24.569 9.372 33.941 0z\"]\n  };\n  var faUnlock = {\n    prefix: 'fas',\n    iconName: 'unlock',\n    icon: [448, 512, [], \"f09c\", \"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\"]\n  };\n  var faUnlockAlt = {\n    prefix: 'fas',\n    iconName: 'unlock-alt',\n    icon: [448, 512, [], \"f13e\", \"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48zM264 408c0 22.1-17.9 40-40 40s-40-17.9-40-40v-48c0-22.1 17.9-40 40-40s40 17.9 40 40v48z\"]\n  };\n  var faUpload = {\n    prefix: 'fas',\n    iconName: 'upload',\n    icon: [512, 512, [], \"f093\", \"M296 384h-80c-13.3 0-24-10.7-24-24V192h-87.7c-17.8 0-26.7-21.5-14.1-34.1L242.3 5.7c7.5-7.5 19.8-7.5 27.3 0l152.2 152.2c12.6 12.6 3.7 34.1-14.1 34.1H320v168c0 13.3-10.7 24-24 24zm216-8v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h136v8c0 30.9 25.1 56 56 56h80c30.9 0 56-25.1 56-56v-8h136c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z\"]\n  };\n  var faUser = {\n    prefix: 'fas',\n    iconName: 'user',\n    icon: [448, 512, [], \"f007\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"]\n  };\n  var faUserAlt = {\n    prefix: 'fas',\n    iconName: 'user-alt',\n    icon: [512, 512, [], \"f406\", \"M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z\"]\n  };\n  var faUserAltSlash = {\n    prefix: 'fas',\n    iconName: 'user-alt-slash',\n    icon: [640, 512, [], \"f4fa\", \"M633.8 458.1L389.6 269.3C433.8 244.7 464 198.1 464 144 464 64.5 399.5 0 320 0c-67.1 0-123 46.1-139 108.2L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3zM198.4 320C124.2 320 64 380.2 64 454.4v9.6c0 26.5 21.5 48 48 48h382.2L245.8 320h-47.4z\"]\n  };\n  var faUserAstronaut = {\n    prefix: 'fas',\n    iconName: 'user-astronaut',\n    icon: [448, 512, [], \"f4fb\", \"M64 224h13.5c24.7 56.5 80.9 96 146.5 96s121.8-39.5 146.5-96H384c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-13.5C345.8 39.5 289.6 0 224 0S102.2 39.5 77.5 96H64c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zm40-88c0-22.1 21.5-40 48-40h144c26.5 0 48 17.9 48 40v24c0 53-43 96-96 96h-48c-53 0-96-43-96-96v-24zm72 72l12-36 36-12-36-12-12-36-12 36-36 12 36 12 12 36zm151.6 113.4C297.7 340.7 262.2 352 224 352s-73.7-11.3-103.6-30.6C52.9 328.5 0 385 0 454.4v9.6c0 26.5 21.5 48 48 48h80v-64c0-17.7 14.3-32 32-32h128c17.7 0 32 14.3 32 32v64h80c26.5 0 48-21.5 48-48v-9.6c0-69.4-52.9-125.9-120.4-133zM272 448c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm-96 0c-8.8 0-16 7.2-16 16v48h32v-48c0-8.8-7.2-16-16-16z\"]\n  };\n  var faUserCheck = {\n    prefix: 'fas',\n    iconName: 'user-check',\n    icon: [640, 512, [], \"f4fc\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4zm323-128.4l-27.8-28.1c-4.6-4.7-12.1-4.7-16.8-.1l-104.8 104-45.5-45.8c-4.6-4.7-12.1-4.7-16.8-.1l-28.1 27.9c-4.7 4.6-4.7 12.1-.1 16.8l81.7 82.3c4.6 4.7 12.1 4.7 16.8.1l141.3-140.2c4.6-4.7 4.7-12.2.1-16.8z\"]\n  };\n  var faUserCircle = {\n    prefix: 'fas',\n    iconName: 'user-circle',\n    icon: [496, 512, [], \"f2bd\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 96c48.6 0 88 39.4 88 88s-39.4 88-88 88-88-39.4-88-88 39.4-88 88-88zm0 344c-58.7 0-111.3-26.6-146.5-68.2 18.8-35.4 55.6-59.8 98.5-59.8 2.4 0 4.8.4 7.1 1.1 13 4.2 26.6 6.9 40.9 6.9 14.3 0 28-2.7 40.9-6.9 2.3-.7 4.7-1.1 7.1-1.1 42.9 0 79.7 24.4 98.5 59.8C359.3 421.4 306.7 448 248 448z\"]\n  };\n  var faUserClock = {\n    prefix: 'fas',\n    iconName: 'user-clock',\n    icon: [640, 512, [], \"f4fd\", \"M496 224c-79.6 0-144 64.4-144 144s64.4 144 144 144 144-64.4 144-144-64.4-144-144-144zm64 150.3c0 5.3-4.4 9.7-9.7 9.7h-60.6c-5.3 0-9.7-4.4-9.7-9.7v-76.6c0-5.3 4.4-9.7 9.7-9.7h12.6c5.3 0 9.7 4.4 9.7 9.7V352h38.3c5.3 0 9.7 4.4 9.7 9.7v12.6zM320 368c0-27.8 6.7-54.1 18.2-77.5-8-1.5-16.2-2.5-24.6-2.5h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h347.1c-45.3-31.9-75.1-84.5-75.1-144zm-96-112c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128z\"]\n  };\n  var faUserCog = {\n    prefix: 'fas',\n    iconName: 'user-cog',\n    icon: [640, 512, [], \"f4fe\", \"M610.5 373.3c2.6-14.1 2.6-28.5 0-42.6l25.8-14.9c3-1.7 4.3-5.2 3.3-8.5-6.7-21.6-18.2-41.2-33.2-57.4-2.3-2.5-6-3.1-9-1.4l-25.8 14.9c-10.9-9.3-23.4-16.5-36.9-21.3v-29.8c0-3.4-2.4-6.4-5.7-7.1-22.3-5-45-4.8-66.2 0-3.3.7-5.7 3.7-5.7 7.1v29.8c-13.5 4.8-26 12-36.9 21.3l-25.8-14.9c-2.9-1.7-6.7-1.1-9 1.4-15 16.2-26.5 35.8-33.2 57.4-1 3.3.4 6.8 3.3 8.5l25.8 14.9c-2.6 14.1-2.6 28.5 0 42.6l-25.8 14.9c-3 1.7-4.3 5.2-3.3 8.5 6.7 21.6 18.2 41.1 33.2 57.4 2.3 2.5 6 3.1 9 1.4l25.8-14.9c10.9 9.3 23.4 16.5 36.9 21.3v29.8c0 3.4 2.4 6.4 5.7 7.1 22.3 5 45 4.8 66.2 0 3.3-.7 5.7-3.7 5.7-7.1v-29.8c13.5-4.8 26-12 36.9-21.3l25.8 14.9c2.9 1.7 6.7 1.1 9-1.4 15-16.2 26.5-35.8 33.2-57.4 1-3.3-.4-6.8-3.3-8.5l-25.8-14.9zM496 400.5c-26.8 0-48.5-21.8-48.5-48.5s21.8-48.5 48.5-48.5 48.5 21.8 48.5 48.5-21.7 48.5-48.5 48.5zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm201.2 226.5c-2.3-1.2-4.6-2.6-6.8-3.9l-7.9 4.6c-6 3.4-12.8 5.3-19.6 5.3-10.9 0-21.4-4.6-28.9-12.6-18.3-19.8-32.3-43.9-40.2-69.6-5.5-17.7 1.9-36.4 17.9-45.7l7.9-4.6c-.1-2.6-.1-5.2 0-7.8l-7.9-4.6c-16-9.2-23.4-28-17.9-45.7.9-2.9 2.2-5.8 3.2-8.7-3.8-.3-7.5-1.2-11.4-1.2h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c10.1 0 19.5-3.2 27.2-8.5-1.2-3.8-2-7.7-2-11.8v-9.2z\"]\n  };\n  var faUserEdit = {\n    prefix: 'fas',\n    iconName: 'user-edit',\n    icon: [640, 512, [], \"f4ff\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h274.9c-2.4-6.8-3.4-14-2.6-21.3l6.8-60.9 1.2-11.1 7.9-7.9 77.3-77.3c-24.5-27.7-60-45.5-99.9-45.5zm45.3 145.3l-6.8 61c-1.1 10.2 7.5 18.8 17.6 17.6l60.9-6.8 137.9-137.9-71.7-71.7-137.9 137.8zM633 268.9L595.1 231c-9.3-9.3-24.5-9.3-33.8 0l-37.8 37.8-4.1 4.1 71.8 71.7 41.8-41.8c9.3-9.4 9.3-24.5 0-33.9z\"]\n  };\n  var faUserFriends = {\n    prefix: 'fas',\n    iconName: 'user-friends',\n    icon: [640, 512, [], \"f500\", \"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\"]\n  };\n  var faUserGraduate = {\n    prefix: 'fas',\n    iconName: 'user-graduate',\n    icon: [448, 512, [], \"f501\", \"M319.4 320.6L224 416l-95.4-95.4C57.1 323.7 0 382.2 0 454.4v9.6c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-9.6c0-72.2-57.1-130.7-128.6-133.8zM13.6 79.8l6.4 1.5v58.4c-7 4.2-12 11.5-12 20.3 0 8.4 4.6 15.4 11.1 19.7L3.5 242c-1.7 6.9 2.1 14 7.6 14h41.8c5.5 0 9.3-7.1 7.6-14l-15.6-62.3C51.4 175.4 56 168.4 56 160c0-8.8-5-16.1-12-20.3V87.1l66 15.9c-8.6 17.2-14 36.4-14 57 0 70.7 57.3 128 128 128s128-57.3 128-128c0-20.6-5.3-39.8-14-57l96.3-23.2c18.2-4.4 18.2-27.1 0-31.5l-190.4-46c-13-3.1-26.7-3.1-39.7 0L13.6 48.2c-18.1 4.4-18.1 27.2 0 31.6z\"]\n  };\n  var faUserInjured = {\n    prefix: 'fas',\n    iconName: 'user-injured',\n    icon: [448, 512, [], \"f728\", \"M277.37 11.98C261.08 4.47 243.11 0 224 0c-53.69 0-99.5 33.13-118.51 80h81.19l90.69-68.02zM342.51 80c-7.9-19.47-20.67-36.2-36.49-49.52L239.99 80h102.52zM224 256c70.69 0 128-57.31 128-128 0-5.48-.95-10.7-1.61-16H97.61c-.67 5.3-1.61 10.52-1.61 16 0 70.69 57.31 128 128 128zM80 299.7V512h128.26l-98.45-221.52A132.835 132.835 0 0 0 80 299.7zM0 464c0 26.51 21.49 48 48 48V320.24C18.88 344.89 0 381.26 0 422.4V464zm256-48h-55.38l42.67 96H256c26.47 0 48-21.53 48-48s-21.53-48-48-48zm57.6-128h-16.71c-22.24 10.18-46.88 16-72.89 16s-50.65-5.82-72.89-16h-7.37l42.67 96H256c44.11 0 80 35.89 80 80 0 18.08-6.26 34.59-16.41 48H400c26.51 0 48-21.49 48-48v-41.6c0-74.23-60.17-134.4-134.4-134.4z\"]\n  };\n  var faUserLock = {\n    prefix: 'fas',\n    iconName: 'user-lock',\n    icon: [640, 512, [], \"f502\", \"M320 320c0-11.1 3.1-21.4 8.1-30.5-4.8-.5-9.5-1.5-14.5-1.5h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h280.9c-5.5-9.5-8.9-20.3-8.9-32V320zm-96-64c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm384 32h-32v-48c0-44.2-35.8-80-80-80s-80 35.8-80 80v48h-32c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h224c17.7 0 32-14.3 32-32V320c0-17.7-14.3-32-32-32zm-80 0h-64v-48c0-17.6 14.4-32 32-32s32 14.4 32 32v48z\"]\n  };\n  var faUserMd = {\n    prefix: 'fas',\n    iconName: 'user-md',\n    icon: [448, 512, [], \"f0f0\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zM104 424c0 13.3 10.7 24 24 24s24-10.7 24-24-10.7-24-24-24-24 10.7-24 24zm216-135.4v49c36.5 7.4 64 39.8 64 78.4v41.7c0 7.6-5.4 14.2-12.9 15.7l-32.2 6.4c-4.3.9-8.5-1.9-9.4-6.3l-3.1-15.7c-.9-4.3 1.9-8.6 6.3-9.4l19.3-3.9V416c0-62.8-96-65.1-96 1.9v26.7l19.3 3.9c4.3.9 7.1 5.1 6.3 9.4l-3.1 15.7c-.9 4.3-5.1 7.1-9.4 6.3l-31.2-4.2c-7.9-1.1-13.8-7.8-13.8-15.9V416c0-38.6 27.5-70.9 64-78.4v-45.2c-2.2.7-4.4 1.1-6.6 1.9-18 6.3-37.3 9.8-57.4 9.8s-39.4-3.5-57.4-9.8c-7.4-2.6-14.9-4.2-22.6-5.2v81.6c23.1 6.9 40 28.1 40 53.4 0 30.9-25.1 56-56 56s-56-25.1-56-56c0-25.3 16.9-46.5 40-53.4v-80.4C48.5 301 0 355.8 0 422.4v44.8C0 491.9 20.1 512 44.8 512h358.4c24.7 0 44.8-20.1 44.8-44.8v-44.8c0-72-56.8-130.3-128-133.8z\"]\n  };\n  var faUserMinus = {\n    prefix: 'fas',\n    iconName: 'user-minus',\n    icon: [640, 512, [], \"f503\", \"M624 208H432c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h192c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400 48c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"]\n  };\n  var faUserNinja = {\n    prefix: 'fas',\n    iconName: 'user-ninja',\n    icon: [448, 512, [], \"f504\", \"M325.4 289.2L224 390.6 122.6 289.2C54 295.3 0 352.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-70.2-54-127.1-122.6-133.2zM32 192c27.3 0 51.8-11.5 69.2-29.7 15.1 53.9 64 93.7 122.8 93.7 70.7 0 128-57.3 128-128S294.7 0 224 0c-50.4 0-93.6 29.4-114.5 71.8C92.1 47.8 64 32 32 32c0 33.4 17.1 62.8 43.1 80-26 17.2-43.1 46.6-43.1 80zm144-96h96c17.7 0 32 14.3 32 32H144c0-17.7 14.3-32 32-32z\"]\n  };\n  var faUserNurse = {\n    prefix: 'fas',\n    iconName: 'user-nurse',\n    icon: [448, 512, [], \"f82f\", \"M57.78 288h82.36c22.51 19.68 51.62 32 83.86 32s61.35-12.32 83.86-32h82.36a16 16 0 0 0 14.28-23.18c-15.23-29.85-31.28-62.23-42.15-95.54C354.78 146.09 352 121.59 352 97.2V48L224 0 96 48v49.2c0 24.39-2.75 48.89-10.33 72.08C74.78 202.59 58.73 235 43.5 264.82A16 16 0 0 0 57.78 288zM184 71.67a5 5 0 0 1 5-5h21.67V45a5 5 0 0 1 5-5h16.66a5 5 0 0 1 5 5v21.67H259a5 5 0 0 1 5 5v16.66a5 5 0 0 1-5 5h-21.67V115a5 5 0 0 1-5 5h-16.66a5 5 0 0 1-5-5V93.33H189a5 5 0 0 1-5-5zM144 160h160v32a80 80 0 0 1-160 0zm175.41 160L224 415.39 128.59 320C57.1 323.1 0 381.6 0 453.79A58.21 58.21 0 0 0 58.21 512h331.58A58.21 58.21 0 0 0 448 453.79C448 381.6 390.9 323.1 319.41 320z\"]\n  };\n  var faUserPlus = {\n    prefix: 'fas',\n    iconName: 'user-plus',\n    icon: [640, 512, [], \"f234\", \"M624 208h-64v-64c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v64h-64c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h64v64c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-64h64c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400 48c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"]\n  };\n  var faUserSecret = {\n    prefix: 'fas',\n    iconName: 'user-secret',\n    icon: [448, 512, [], \"f21b\", \"M383.9 308.3l23.9-62.6c4-10.5-3.7-21.7-15-21.7h-58.5c11-18.9 17.8-40.6 17.8-64v-.3c39.2-7.8 64-19.1 64-31.7 0-13.3-27.3-25.1-70.1-33-9.2-32.8-27-65.8-40.6-82.8-9.5-11.9-25.9-15.6-39.5-8.8l-27.6 13.8c-9 4.5-19.6 4.5-28.6 0L182.1 3.4c-13.6-6.8-30-3.1-39.5 8.8-13.5 17-31.4 50-40.6 82.8-42.7 7.9-70 19.7-70 33 0 12.6 24.8 23.9 64 31.7v.3c0 23.4 6.8 45.1 17.8 64H56.3c-11.5 0-19.2 11.7-14.7 22.3l25.8 60.2C27.3 329.8 0 372.7 0 422.4v44.8C0 491.9 20.1 512 44.8 512h358.4c24.7 0 44.8-20.1 44.8-44.8v-44.8c0-48.4-25.8-90.4-64.1-114.1zM176 480l-41.6-192 49.6 32 24 40-32 120zm96 0l-32-120 24-40 49.6-32L272 480zm41.7-298.5c-3.9 11.9-7 24.6-16.5 33.4-10.1 9.3-48 22.4-64-25-2.8-8.4-15.4-8.4-18.3 0-17 50.2-56 32.4-64 25-9.5-8.8-12.7-21.5-16.5-33.4-.8-2.5-6.3-5.7-6.3-5.8v-10.8c28.3 3.6 61 5.8 96 5.8s67.7-2.1 96-5.8v10.8c-.1.1-5.6 3.2-6.4 5.8z\"]\n  };\n  var faUserShield = {\n    prefix: 'fas',\n    iconName: 'user-shield',\n    icon: [640, 512, [], \"f505\", \"M622.3 271.1l-115.2-45c-4.1-1.6-12.6-3.7-22.2 0l-115.2 45c-10.7 4.2-17.7 14-17.7 24.9 0 111.6 68.7 188.8 132.9 213.9 9.6 3.7 18 1.6 22.2 0C558.4 489.9 640 420.5 640 296c0-10.9-7-20.7-17.7-24.9zM496 462.4V273.3l95.5 37.3c-5.6 87.1-60.9 135.4-95.5 151.8zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm96 40c0-2.5.8-4.8 1.1-7.2-2.5-.1-4.9-.8-7.5-.8h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c6.8 0 13.3-1.5 19.2-4-54-42.9-99.2-116.7-99.2-212z\"]\n  };\n  var faUserSlash = {\n    prefix: 'fas',\n    iconName: 'user-slash',\n    icon: [640, 512, [], \"f506\", \"M633.8 458.1L362.3 248.3C412.1 230.7 448 183.8 448 128 448 57.3 390.7 0 320 0c-67.1 0-121.5 51.8-126.9 117.4L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3zM96 422.4V464c0 26.5 21.5 48 48 48h350.2L207.4 290.3C144.2 301.3 96 356 96 422.4z\"]\n  };\n  var faUserTag = {\n    prefix: 'fas',\n    iconName: 'user-tag',\n    icon: [640, 512, [], \"f507\", \"M630.6 364.9l-90.3-90.2c-12-12-28.3-18.7-45.3-18.7h-79.3c-17.7 0-32 14.3-32 32v79.2c0 17 6.7 33.2 18.7 45.2l90.3 90.2c12.5 12.5 32.8 12.5 45.3 0l92.5-92.5c12.6-12.5 12.6-32.7.1-45.2zm-182.8-21c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24c0 13.2-10.7 24-24 24zm-223.8-88c70.7 0 128-57.3 128-128C352 57.3 294.7 0 224 0S96 57.3 96 128c0 70.6 57.3 127.9 128 127.9zm127.8 111.2V294c-12.2-3.6-24.9-6.2-38.2-6.2h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 287.9 0 348.1 0 422.3v41.6c0 26.5 21.5 48 48 48h352c15.5 0 29.1-7.5 37.9-18.9l-58-58c-18.1-18.1-28.1-42.2-28.1-67.9z\"]\n  };\n  var faUserTie = {\n    prefix: 'fas',\n    iconName: 'user-tie',\n    icon: [448, 512, [], \"f508\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm95.8 32.6L272 480l-32-136 32-56h-96l32 56-32 136-47.8-191.4C56.9 292 0 350.3 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-72.1-56.9-130.4-128.2-133.8z\"]\n  };\n  var faUserTimes = {\n    prefix: 'fas',\n    iconName: 'user-times',\n    icon: [640, 512, [], \"f235\", \"M589.6 240l45.6-45.6c6.3-6.3 6.3-16.5 0-22.8l-22.8-22.8c-6.3-6.3-16.5-6.3-22.8 0L544 194.4l-45.6-45.6c-6.3-6.3-16.5-6.3-22.8 0l-22.8 22.8c-6.3 6.3-6.3 16.5 0 22.8l45.6 45.6-45.6 45.6c-6.3 6.3-6.3 16.5 0 22.8l22.8 22.8c6.3 6.3 16.5 6.3 22.8 0l45.6-45.6 45.6 45.6c6.3 6.3 16.5 6.3 22.8 0l22.8-22.8c6.3-6.3 6.3-16.5 0-22.8L589.6 240zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"]\n  };\n  var faUsers = {\n    prefix: 'fas',\n    iconName: 'users',\n    icon: [640, 512, [], \"f0c0\", \"M96 224c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm448 0c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm32 32h-64c-17.6 0-33.5 7.1-45.1 18.6 40.3 22.1 68.9 62 75.1 109.4h66c17.7 0 32-14.3 32-32v-32c0-35.3-28.7-64-64-64zm-256 0c61.9 0 112-50.1 112-112S381.9 32 320 32 208 82.1 208 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C179.6 288 128 339.6 128 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zm-223.7-13.4C161.5 263.1 145.6 256 128 256H64c-35.3 0-64 28.7-64 64v32c0 17.7 14.3 32 32 32h65.9c6.3-47.4 34.9-87.3 75.2-109.4z\"]\n  };\n  var faUsersCog = {\n    prefix: 'fas',\n    iconName: 'users-cog',\n    icon: [640, 512, [], \"f509\", \"M610.5 341.3c2.6-14.1 2.6-28.5 0-42.6l25.8-14.9c3-1.7 4.3-5.2 3.3-8.5-6.7-21.6-18.2-41.2-33.2-57.4-2.3-2.5-6-3.1-9-1.4l-25.8 14.9c-10.9-9.3-23.4-16.5-36.9-21.3v-29.8c0-3.4-2.4-6.4-5.7-7.1-22.3-5-45-4.8-66.2 0-3.3.7-5.7 3.7-5.7 7.1v29.8c-13.5 4.8-26 12-36.9 21.3l-25.8-14.9c-2.9-1.7-6.7-1.1-9 1.4-15 16.2-26.5 35.8-33.2 57.4-1 3.3.4 6.8 3.3 8.5l25.8 14.9c-2.6 14.1-2.6 28.5 0 42.6l-25.8 14.9c-3 1.7-4.3 5.2-3.3 8.5 6.7 21.6 18.2 41.1 33.2 57.4 2.3 2.5 6 3.1 9 1.4l25.8-14.9c10.9 9.3 23.4 16.5 36.9 21.3v29.8c0 3.4 2.4 6.4 5.7 7.1 22.3 5 45 4.8 66.2 0 3.3-.7 5.7-3.7 5.7-7.1v-29.8c13.5-4.8 26-12 36.9-21.3l25.8 14.9c2.9 1.7 6.7 1.1 9-1.4 15-16.2 26.5-35.8 33.2-57.4 1-3.3-.4-6.8-3.3-8.5l-25.8-14.9zM496 368.5c-26.8 0-48.5-21.8-48.5-48.5s21.8-48.5 48.5-48.5 48.5 21.8 48.5 48.5-21.7 48.5-48.5 48.5zM96 224c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm224 32c1.9 0 3.7-.5 5.6-.6 8.3-21.7 20.5-42.1 36.3-59.2 7.4-8 17.9-12.6 28.9-12.6 6.9 0 13.7 1.8 19.6 5.3l7.9 4.6c.8-.5 1.6-.9 2.4-1.4 7-14.6 11.2-30.8 11.2-48 0-61.9-50.1-112-112-112S208 82.1 208 144c0 61.9 50.1 112 112 112zm105.2 194.5c-2.3-1.2-4.6-2.6-6.8-3.9-8.2 4.8-15.3 9.8-27.5 9.8-10.9 0-21.4-4.6-28.9-12.6-18.3-19.8-32.3-43.9-40.2-69.6-10.7-34.5 24.9-49.7 25.8-50.3-.1-2.6-.1-5.2 0-7.8l-7.9-4.6c-3.8-2.2-7-5-9.8-8.1-3.3.2-6.5.6-9.8.6-24.6 0-47.6-6-68.5-16h-8.3C179.6 288 128 339.6 128 403.2V432c0 26.5 21.5 48 48 48h255.4c-3.7-6-6.2-12.8-6.2-20.3v-9.2zM173.1 274.6C161.5 263.1 145.6 256 128 256H64c-35.3 0-64 28.7-64 64v32c0 17.7 14.3 32 32 32h65.9c6.3-47.4 34.9-87.3 75.2-109.4z\"]\n  };\n  var faUtensilSpoon = {\n    prefix: 'fas',\n    iconName: 'utensil-spoon',\n    icon: [512, 512, [], \"f2e5\", \"M480.1 31.9c-55-55.1-164.9-34.5-227.8 28.5-49.3 49.3-55.1 110-28.8 160.4L9 413.2c-11.6 10.5-12.1 28.5-1 39.5L59.3 504c11 11 29.1 10.5 39.5-1.1l192.4-214.4c50.4 26.3 111.1 20.5 160.4-28.8 63-62.9 83.6-172.8 28.5-227.8z\"]\n  };\n  var faUtensils = {\n    prefix: 'fas',\n    iconName: 'utensils',\n    icon: [416, 512, [], \"f2e7\", \"M207.9 15.2c.8 4.7 16.1 94.5 16.1 128.8 0 52.3-27.8 89.6-68.9 104.6L168 486.7c.7 13.7-10.2 25.3-24 25.3H80c-13.7 0-24.7-11.5-24-25.3l12.9-238.1C27.7 233.6 0 196.2 0 144 0 109.6 15.3 19.9 16.1 15.2 19.3-5.1 61.4-5.4 64 16.3v141.2c1.3 3.4 15.1 3.2 16 0 1.4-25.3 7.9-139.2 8-141.8 3.3-20.8 44.7-20.8 47.9 0 .2 2.7 6.6 116.5 8 141.8.9 3.2 14.8 3.4 16 0V16.3c2.6-21.6 44.8-21.4 48-1.1zm119.2 285.7l-15 185.1c-1.2 14 9.9 26 23.9 26h56c13.3 0 24-10.7 24-24V24c0-13.2-10.7-24-24-24-82.5 0-221.4 178.5-64.9 300.9z\"]\n  };\n  var faVectorSquare = {\n    prefix: 'fas',\n    iconName: 'vector-square',\n    icon: [512, 512, [], \"f5cb\", \"M512 128V32c0-17.67-14.33-32-32-32h-96c-17.67 0-32 14.33-32 32H160c0-17.67-14.33-32-32-32H32C14.33 0 0 14.33 0 32v96c0 17.67 14.33 32 32 32v192c-17.67 0-32 14.33-32 32v96c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32h192c0 17.67 14.33 32 32 32h96c17.67 0 32-14.33 32-32v-96c0-17.67-14.33-32-32-32V160c17.67 0 32-14.33 32-32zm-96-64h32v32h-32V64zM64 64h32v32H64V64zm32 384H64v-32h32v32zm352 0h-32v-32h32v32zm-32-96h-32c-17.67 0-32 14.33-32 32v32H160v-32c0-17.67-14.33-32-32-32H96V160h32c17.67 0 32-14.33 32-32V96h192v32c0 17.67 14.33 32 32 32h32v192z\"]\n  };\n  var faVenus = {\n    prefix: 'fas',\n    iconName: 'venus',\n    icon: [288, 512, [], \"f221\", \"M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V368H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80z\"]\n  };\n  var faVenusDouble = {\n    prefix: 'fas',\n    iconName: 'venus-double',\n    icon: [512, 512, [], \"f226\", \"M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V368H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80zm336 140.4V368h36c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-36v36c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-36h-36c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h36v-51.6c-21.2-4.8-40.6-14.3-57.2-27.3 14-16.7 25-36 32.1-57.1 14.5 14.8 34.7 24 57.1 24 44.1 0 80-35.9 80-80s-35.9-80-80-80c-22.3 0-42.6 9.2-57.1 24-7.1-21.1-18-40.4-32.1-57.1C303.4 43.6 334.3 32 368 32c79.5 0 144 64.5 144 144 0 68.5-47.9 125.9-112 140.4z\"]\n  };\n  var faVenusMars = {\n    prefix: 'fas',\n    iconName: 'venus-mars',\n    icon: [576, 512, [], \"f228\", \"M564 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-48.7 48.7C422.5 72.1 396.2 64 368 64c-33.7 0-64.6 11.6-89.2 30.9 14 16.7 25 36 32.1 57.1 14.5-14.8 34.7-24 57.1-24 44.1 0 80 35.9 80 80s-35.9 80-80 80c-22.3 0-42.6-9.2-57.1-24-7.1 21.1-18 40.4-32.1 57.1 24.5 19.4 55.5 30.9 89.2 30.9 79.5 0 144-64.5 144-144 0-28.2-8.1-54.5-22.1-76.7l48.7-48.7 16.9 16.9c2.4 2.4 5.4 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12V12c0-6.6-5.4-12-12-12zM144 64C64.5 64 0 128.5 0 208c0 68.5 47.9 125.9 112 140.4V400H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.6 112-71.9 112-140.4 0-79.5-64.5-144-144-144zm0 224c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"]\n  };\n  var faVial = {\n    prefix: 'fas',\n    iconName: 'vial',\n    icon: [480, 512, [], \"f492\", \"M477.7 186.1L309.5 18.3c-3.1-3.1-8.2-3.1-11.3 0l-34 33.9c-3.1 3.1-3.1 8.2 0 11.3l11.2 11.1L33 316.5c-38.8 38.7-45.1 102-9.4 143.5 20.6 24 49.5 36 78.4 35.9 26.4 0 52.8-10 72.9-30.1l246.3-245.7 11.2 11.1c3.1 3.1 8.2 3.1 11.3 0l34-33.9c3.1-3 3.1-8.1 0-11.2zM318 256H161l148-147.7 78.5 78.3L318 256z\"]\n  };\n  var faVials = {\n    prefix: 'fas',\n    iconName: 'vials',\n    icon: [640, 512, [], \"f493\", \"M72 64h24v240c0 44.1 35.9 80 80 80s80-35.9 80-80V64h24c4.4 0 8-3.6 8-8V8c0-4.4-3.6-8-8-8H72c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm72 0h64v96h-64V64zm480 384H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM360 64h24v240c0 44.1 35.9 80 80 80s80-35.9 80-80V64h24c4.4 0 8-3.6 8-8V8c0-4.4-3.6-8-8-8H360c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm72 0h64v96h-64V64z\"]\n  };\n  var faVideo = {\n    prefix: 'fas',\n    iconName: 'video',\n    icon: [576, 512, [], \"f03d\", \"M336.2 64H47.8C21.4 64 0 85.4 0 111.8v288.4C0 426.6 21.4 448 47.8 448h288.4c26.4 0 47.8-21.4 47.8-47.8V111.8c0-26.4-21.4-47.8-47.8-47.8zm189.4 37.7L416 177.3v157.4l109.6 75.5c21.2 14.6 50.4-.3 50.4-25.8V127.5c0-25.4-29.1-40.4-50.4-25.8z\"]\n  };\n  var faVideoSlash = {\n    prefix: 'fas',\n    iconName: 'video-slash',\n    icon: [640, 512, [], \"f4e2\", \"M633.8 458.1l-55-42.5c15.4-1.4 29.2-13.7 29.2-31.1v-257c0-25.5-29.1-40.4-50.4-25.8L448 177.3v137.2l-32-24.7v-178c0-26.4-21.4-47.8-47.8-47.8H123.9L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4L42.7 82 416 370.6l178.5 138c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.5-6.9 4.2-17-2.8-22.4zM32 400.2c0 26.4 21.4 47.8 47.8 47.8h288.4c11.2 0 21.4-4 29.6-10.5L32 154.7v245.5z\"]\n  };\n  var faVihara = {\n    prefix: 'fas',\n    iconName: 'vihara',\n    icon: [640, 512, [], \"f6a7\", \"M632.88 400.71L544 352v-64l55.16-17.69c11.79-5.9 11.79-22.72 0-28.62L480 192v-64l27.31-16.3c7.72-7.72 5.61-20.74-4.16-25.62L320 0 136.85 86.07c-9.77 4.88-11.88 17.9-4.16 25.62L160 128v64L40.84 241.69c-11.79 5.9-11.79 22.72 0 28.62L96 288v64L7.12 400.71c-5.42 3.62-7.7 9.63-7 15.29.62 5.01 3.57 9.75 8.72 12.33L64 448v48c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-48h160v48c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-48h160v48c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16v-48l55.15-19.67c5.16-2.58 8.1-7.32 8.72-12.33.71-5.67-1.57-11.68-6.99-15.29zM224 128h192v64H224v-64zm-64 224v-64h320v64H160z\"]\n  };\n  var faVolleyballBall = {\n    prefix: 'fas',\n    iconName: 'volleyball-ball',\n    icon: [512, 512, [], \"f45f\", \"M231.39 243.48a285.56 285.56 0 0 0-22.7-105.7c-90.8 42.4-157.5 122.4-180.3 216.8a249 249 0 0 0 56.9 81.1 333.87 333.87 0 0 1 146.1-192.2zm-36.9-134.4a284.23 284.23 0 0 0-57.4-70.7c-91 49.8-144.8 152.9-125 262.2 33.4-83.1 98.4-152 182.4-191.5zm187.6 165.1c8.6-99.8-27.3-197.5-97.5-264.4-14.7-1.7-51.6-5.5-98.9 8.5A333.87 333.87 0 0 1 279.19 241a285 285 0 0 0 102.9 33.18zm-124.7 9.5a286.33 286.33 0 0 0-80.2 72.6c82 57.3 184.5 75.1 277.5 47.8a247.15 247.15 0 0 0 42.2-89.9 336.1 336.1 0 0 1-80.9 10.4c-54.6-.1-108.9-14.1-158.6-40.9zm-98.3 99.7c-15.2 26-25.7 54.4-32.1 84.2a247.07 247.07 0 0 0 289-22.1c-112.9 16.1-203.3-24.8-256.9-62.1zm180.3-360.6c55.3 70.4 82.5 161.2 74.6 253.6a286.59 286.59 0 0 0 89.7-14.2c0-2 .3-4 .3-6 0-107.8-68.7-199.1-164.6-233.4z\"]\n  };\n  var faVolumeDown = {\n    prefix: 'fas',\n    iconName: 'volume-down',\n    icon: [384, 512, [], \"f027\", \"M215.03 72.04L126.06 161H24c-13.26 0-24 10.74-24 24v144c0 13.25 10.74 24 24 24h102.06l88.97 88.95c15.03 15.03 40.97 4.47 40.97-16.97V89.02c0-21.47-25.96-31.98-40.97-16.98zm123.2 108.08c-11.58-6.33-26.19-2.16-32.61 9.45-6.39 11.61-2.16 26.2 9.45 32.61C327.98 229.28 336 242.62 336 257c0 14.38-8.02 27.72-20.92 34.81-11.61 6.41-15.84 21-9.45 32.61 6.43 11.66 21.05 15.8 32.61 9.45 28.23-15.55 45.77-45 45.77-76.88s-17.54-61.32-45.78-76.87z\"]\n  };\n  var faVolumeMute = {\n    prefix: 'fas',\n    iconName: 'volume-mute',\n    icon: [512, 512, [], \"f6a9\", \"M215.03 71.05L126.06 160H24c-13.26 0-24 10.74-24 24v144c0 13.25 10.74 24 24 24h102.06l88.97 88.95c15.03 15.03 40.97 4.47 40.97-16.97V88.02c0-21.46-25.96-31.98-40.97-16.97zM461.64 256l45.64-45.64c6.3-6.3 6.3-16.52 0-22.82l-22.82-22.82c-6.3-6.3-16.52-6.3-22.82 0L416 210.36l-45.64-45.64c-6.3-6.3-16.52-6.3-22.82 0l-22.82 22.82c-6.3 6.3-6.3 16.52 0 22.82L370.36 256l-45.63 45.63c-6.3 6.3-6.3 16.52 0 22.82l22.82 22.82c6.3 6.3 16.52 6.3 22.82 0L416 301.64l45.64 45.64c6.3 6.3 16.52 6.3 22.82 0l22.82-22.82c6.3-6.3 6.3-16.52 0-22.82L461.64 256z\"]\n  };\n  var faVolumeOff = {\n    prefix: 'fas',\n    iconName: 'volume-off',\n    icon: [256, 512, [], \"f026\", \"M215 71l-89 89H24a24 24 0 0 0-24 24v144a24 24 0 0 0 24 24h102.06L215 441c15 15 41 4.47 41-17V88c0-21.47-26-32-41-17z\"]\n  };\n  var faVolumeUp = {\n    prefix: 'fas',\n    iconName: 'volume-up',\n    icon: [576, 512, [], \"f028\", \"M215.03 71.05L126.06 160H24c-13.26 0-24 10.74-24 24v144c0 13.25 10.74 24 24 24h102.06l88.97 88.95c15.03 15.03 40.97 4.47 40.97-16.97V88.02c0-21.46-25.96-31.98-40.97-16.97zm233.32-51.08c-11.17-7.33-26.18-4.24-33.51 6.95-7.34 11.17-4.22 26.18 6.95 33.51 66.27 43.49 105.82 116.6 105.82 195.58 0 78.98-39.55 152.09-105.82 195.58-11.17 7.32-14.29 22.34-6.95 33.5 7.04 10.71 21.93 14.56 33.51 6.95C528.27 439.58 576 351.33 576 256S528.27 72.43 448.35 19.97zM480 256c0-63.53-32.06-121.94-85.77-156.24-11.19-7.14-26.03-3.82-33.12 7.46s-3.78 26.21 7.41 33.36C408.27 165.97 432 209.11 432 256s-23.73 90.03-63.48 115.42c-11.19 7.14-14.5 22.07-7.41 33.36 6.51 10.36 21.12 15.14 33.12 7.46C447.94 377.94 480 319.54 480 256zm-141.77-76.87c-11.58-6.33-26.19-2.16-32.61 9.45-6.39 11.61-2.16 26.2 9.45 32.61C327.98 228.28 336 241.63 336 256c0 14.38-8.02 27.72-20.92 34.81-11.61 6.41-15.84 21-9.45 32.61 6.43 11.66 21.05 15.8 32.61 9.45 28.23-15.55 45.77-45 45.77-76.88s-17.54-61.32-45.78-76.86z\"]\n  };\n  var faVoteYea = {\n    prefix: 'fas',\n    iconName: 'vote-yea',\n    icon: [640, 512, [], \"f772\", \"M608 320h-64v64h22.4c5.3 0 9.6 3.6 9.6 8v16c0 4.4-4.3 8-9.6 8H73.6c-5.3 0-9.6-3.6-9.6-8v-16c0-4.4 4.3-8 9.6-8H96v-64H32c-17.7 0-32 14.3-32 32v96c0 17.7 14.3 32 32 32h576c17.7 0 32-14.3 32-32v-96c0-17.7-14.3-32-32-32zm-96 64V64.3c0-17.9-14.5-32.3-32.3-32.3H160.4C142.5 32 128 46.5 128 64.3V384h384zM211.2 202l25.5-25.3c4.2-4.2 11-4.2 15.2.1l41.3 41.6 95.2-94.4c4.2-4.2 11-4.2 15.2.1l25.3 25.5c4.2 4.2 4.2 11-.1 15.2L300.5 292c-4.2 4.2-11 4.2-15.2-.1l-74.1-74.7c-4.3-4.2-4.2-11 0-15.2z\"]\n  };\n  var faVrCardboard = {\n    prefix: 'fas',\n    iconName: 'vr-cardboard',\n    icon: [640, 512, [], \"f729\", \"M608 64H32C14.33 64 0 78.33 0 96v320c0 17.67 14.33 32 32 32h160.22c25.19 0 48.03-14.77 58.36-37.74l27.74-61.64C286.21 331.08 302.35 320 320 320s33.79 11.08 41.68 28.62l27.74 61.64C399.75 433.23 422.6 448 447.78 448H608c17.67 0 32-14.33 32-32V96c0-17.67-14.33-32-32-32zM160 304c-35.35 0-64-28.65-64-64s28.65-64 64-64 64 28.65 64 64-28.65 64-64 64zm320 0c-35.35 0-64-28.65-64-64s28.65-64 64-64 64 28.65 64 64-28.65 64-64 64z\"]\n  };\n  var faWalking = {\n    prefix: 'fas',\n    iconName: 'walking',\n    icon: [320, 512, [], \"f554\", \"M208 96c26.5 0 48-21.5 48-48S234.5 0 208 0s-48 21.5-48 48 21.5 48 48 48zm94.5 149.1l-23.3-11.8-9.7-29.4c-14.7-44.6-55.7-75.8-102.2-75.9-36-.1-55.9 10.1-93.3 25.2-21.6 8.7-39.3 25.2-49.7 46.2L17.6 213c-7.8 15.8-1.5 35 14.2 42.9 15.6 7.9 34.6 1.5 42.5-14.3L81 228c3.5-7 9.3-12.5 16.5-15.4l26.8-10.8-15.2 60.7c-5.2 20.8.4 42.9 14.9 58.8l59.9 65.4c7.2 7.9 12.3 17.4 14.9 27.7l18.3 73.3c4.3 17.1 21.7 27.6 38.8 23.3 17.1-4.3 27.6-21.7 23.3-38.8l-22.2-89c-2.6-10.3-7.7-19.9-14.9-27.7l-45.5-49.7 17.2-68.7 5.5 16.5c5.3 16.1 16.7 29.4 31.7 37l23.3 11.8c15.6 7.9 34.6 1.5 42.5-14.3 7.7-15.7 1.4-35.1-14.3-43zM73.6 385.8c-3.2 8.1-8 15.4-14.2 21.5l-50 50.1c-12.5 12.5-12.5 32.8 0 45.3s32.7 12.5 45.2 0l59.4-59.4c6.1-6.1 10.9-13.4 14.2-21.5l13.5-33.8c-55.3-60.3-38.7-41.8-47.4-53.7l-20.7 51.5z\"]\n  };\n  var faWallet = {\n    prefix: 'fas',\n    iconName: 'wallet',\n    icon: [512, 512, [], \"f555\", \"M461.2 128H80c-8.84 0-16-7.16-16-16s7.16-16 16-16h384c8.84 0 16-7.16 16-16 0-26.51-21.49-48-48-48H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h397.2c28.02 0 50.8-21.53 50.8-48V176c0-26.47-22.78-48-50.8-48zM416 336c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"]\n  };\n  var faWarehouse = {\n    prefix: 'fas',\n    iconName: 'warehouse',\n    icon: [640, 512, [], \"f494\", \"M504 352H136.4c-4.4 0-8 3.6-8 8l-.1 48c0 4.4 3.6 8 8 8H504c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm0 96H136.1c-4.4 0-8 3.6-8 8l-.1 48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm0-192H136.6c-4.4 0-8 3.6-8 8l-.1 48c0 4.4 3.6 8 8 8H504c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm106.5-139L338.4 3.7a48.15 48.15 0 0 0-36.9 0L29.5 117C11.7 124.5 0 141.9 0 161.3V504c0 4.4 3.6 8 8 8h80c4.4 0 8-3.6 8-8V256c0-17.6 14.6-32 32.6-32h382.8c18 0 32.6 14.4 32.6 32v248c0 4.4 3.6 8 8 8h80c4.4 0 8-3.6 8-8V161.3c0-19.4-11.7-36.8-29.5-44.3z\"]\n  };\n  var faWater = {\n    prefix: 'fas',\n    iconName: 'water',\n    icon: [576, 512, [], \"f773\", \"M562.1 383.9c-21.5-2.4-42.1-10.5-57.9-22.9-14.1-11.1-34.2-11.3-48.2 0-37.9 30.4-107.2 30.4-145.7-1.5-13.5-11.2-33-9.1-46.7 1.8-38 30.1-106.9 30-145.2-1.7-13.5-11.2-33.3-8.9-47.1 2-15.5 12.2-36 20.1-57.7 22.4-7.9.8-13.6 7.8-13.6 15.7v32.2c0 9.1 7.6 16.8 16.7 16 28.8-2.5 56.1-11.4 79.4-25.9 56.5 34.6 137 34.1 192 0 56.5 34.6 137 34.1 192 0 23.3 14.2 50.9 23.3 79.1 25.8 9.1.8 16.7-6.9 16.7-16v-31.6c.1-8-5.7-15.4-13.8-16.3zm0-144c-21.5-2.4-42.1-10.5-57.9-22.9-14.1-11.1-34.2-11.3-48.2 0-37.9 30.4-107.2 30.4-145.7-1.5-13.5-11.2-33-9.1-46.7 1.8-38 30.1-106.9 30-145.2-1.7-13.5-11.2-33.3-8.9-47.1 2-15.5 12.2-36 20.1-57.7 22.4-7.9.8-13.6 7.8-13.6 15.7v32.2c0 9.1 7.6 16.8 16.7 16 28.8-2.5 56.1-11.4 79.4-25.9 56.5 34.6 137 34.1 192 0 56.5 34.6 137 34.1 192 0 23.3 14.2 50.9 23.3 79.1 25.8 9.1.8 16.7-6.9 16.7-16v-31.6c.1-8-5.7-15.4-13.8-16.3zm0-144C540.6 93.4 520 85.4 504.2 73 490.1 61.9 470 61.7 456 73c-37.9 30.4-107.2 30.4-145.7-1.5-13.5-11.2-33-9.1-46.7 1.8-38 30.1-106.9 30-145.2-1.7-13.5-11.2-33.3-8.9-47.1 2-15.5 12.2-36 20.1-57.7 22.4-7.9.8-13.6 7.8-13.6 15.7v32.2c0 9.1 7.6 16.8 16.7 16 28.8-2.5 56.1-11.4 79.4-25.9 56.5 34.6 137 34.1 192 0 56.5 34.6 137 34.1 192 0 23.3 14.2 50.9 23.3 79.1 25.8 9.1.8 16.7-6.9 16.7-16v-31.6c.1-8-5.7-15.4-13.8-16.3z\"]\n  };\n  var faWaveSquare = {\n    prefix: 'fas',\n    iconName: 'wave-square',\n    icon: [640, 512, [], \"f83e\", \"M476 480H324a36 36 0 0 1-36-36V96h-96v156a36 36 0 0 1-36 36H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h112V68a36 36 0 0 1 36-36h152a36 36 0 0 1 36 36v348h96V260a36 36 0 0 1 36-36h140a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H512v156a36 36 0 0 1-36 36z\"]\n  };\n  var faWeight = {\n    prefix: 'fas',\n    iconName: 'weight',\n    icon: [512, 512, [], \"f496\", \"M448 64h-25.98C438.44 92.28 448 125.01 448 160c0 105.87-86.13 192-192 192S64 265.87 64 160c0-34.99 9.56-67.72 25.98-96H64C28.71 64 0 92.71 0 128v320c0 35.29 28.71 64 64 64h384c35.29 0 64-28.71 64-64V128c0-35.29-28.71-64-64-64zM256 320c88.37 0 160-71.63 160-160S344.37 0 256 0 96 71.63 96 160s71.63 160 160 160zm-.3-151.94l33.58-78.36c3.5-8.17 12.94-11.92 21.03-8.41 8.12 3.48 11.88 12.89 8.41 21l-33.67 78.55C291.73 188 296 197.45 296 208c0 22.09-17.91 40-40 40s-40-17.91-40-40c0-21.98 17.76-39.77 39.7-39.94z\"]\n  };\n  var faWeightHanging = {\n    prefix: 'fas',\n    iconName: 'weight-hanging',\n    icon: [512, 512, [], \"f5cd\", \"M510.28 445.86l-73.03-292.13c-3.8-15.19-16.44-25.72-30.87-25.72h-60.25c3.57-10.05 5.88-20.72 5.88-32 0-53.02-42.98-96-96-96s-96 42.98-96 96c0 11.28 2.3 21.95 5.88 32h-60.25c-14.43 0-27.08 10.54-30.87 25.72L1.72 445.86C-6.61 479.17 16.38 512 48.03 512h415.95c31.64 0 54.63-32.83 46.3-66.14zM256 128c-17.64 0-32-14.36-32-32s14.36-32 32-32 32 14.36 32 32-14.36 32-32 32z\"]\n  };\n  var faWheelchair = {\n    prefix: 'fas',\n    iconName: 'wheelchair',\n    icon: [512, 512, [], \"f193\", \"M496.101 385.669l14.227 28.663c3.929 7.915.697 17.516-7.218 21.445l-65.465 32.886c-16.049 7.967-35.556 1.194-43.189-15.055L331.679 320H192c-15.925 0-29.426-11.71-31.679-27.475C126.433 55.308 128.38 70.044 128 64c0-36.358 30.318-65.635 67.052-63.929 33.271 1.545 60.048 28.905 60.925 62.201.868 32.933-23.152 60.423-54.608 65.039l4.67 32.69H336c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H215.182l4.572 32H352a32 32 0 0 1 28.962 18.392L438.477 396.8l36.178-18.349c7.915-3.929 17.517-.697 21.446 7.218zM311.358 352h-24.506c-7.788 54.204-54.528 96-110.852 96-61.757 0-112-50.243-112-112 0-41.505 22.694-77.809 56.324-97.156-3.712-25.965-6.844-47.86-9.488-66.333C45.956 198.464 0 261.963 0 336c0 97.047 78.953 176 176 176 71.87 0 133.806-43.308 161.11-105.192L311.358 352z\"]\n  };\n  var faWifi = {\n    prefix: 'fas',\n    iconName: 'wifi',\n    icon: [640, 512, [], \"f1eb\", \"M634.91 154.88C457.74-8.99 182.19-8.93 5.09 154.88c-6.66 6.16-6.79 16.59-.35 22.98l34.24 33.97c6.14 6.1 16.02 6.23 22.4.38 145.92-133.68 371.3-133.71 517.25 0 6.38 5.85 16.26 5.71 22.4-.38l34.24-33.97c6.43-6.39 6.3-16.82-.36-22.98zM320 352c-35.35 0-64 28.65-64 64s28.65 64 64 64 64-28.65 64-64-28.65-64-64-64zm202.67-83.59c-115.26-101.93-290.21-101.82-405.34 0-6.9 6.1-7.12 16.69-.57 23.15l34.44 33.99c6 5.92 15.66 6.32 22.05.8 83.95-72.57 209.74-72.41 293.49 0 6.39 5.52 16.05 5.13 22.05-.8l34.44-33.99c6.56-6.46 6.33-17.06-.56-23.15z\"]\n  };\n  var faWind = {\n    prefix: 'fas',\n    iconName: 'wind',\n    icon: [512, 512, [], \"f72e\", \"M156.7 256H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h142.2c15.9 0 30.8 10.9 33.4 26.6 3.3 20-12.1 37.4-31.6 37.4-14.1 0-26.1-9.2-30.4-21.9-2.1-6.3-8.6-10.1-15.2-10.1H81.6c-9.8 0-17.7 8.8-15.9 18.4 8.6 44.1 47.6 77.6 94.2 77.6 57.1 0 102.7-50.1 95.2-108.6C249 291 205.4 256 156.7 256zM16 224h336c59.7 0 106.8-54.8 93.8-116.7-7.6-36.2-36.9-65.5-73.1-73.1-55.4-11.6-105.1 24.9-114.9 75.5-1.9 9.6 6.1 18.3 15.8 18.3h32.8c6.7 0 13.1-3.8 15.2-10.1C325.9 105.2 337.9 96 352 96c19.4 0 34.9 17.4 31.6 37.4-2.6 15.7-17.4 26.6-33.4 26.6H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16zm384 32H243.7c19.3 16.6 33.2 38.8 39.8 64H400c26.5 0 48 21.5 48 48s-21.5 48-48 48c-17.9 0-33.3-9.9-41.6-24.4-2.9-5-8.7-7.6-14.5-7.6h-33.8c-10.9 0-19 10.8-15.3 21.1 17.8 50.6 70.5 84.8 129.4 72.3 41.2-8.7 75.1-41.6 84.7-82.7C526 321.5 470.5 256 400 256z\"]\n  };\n  var faWindowClose = {\n    prefix: 'fas',\n    iconName: 'window-close',\n    icon: [512, 512, [], \"f410\", \"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-83.6 290.5c4.8 4.8 4.8 12.6 0 17.4l-40.5 40.5c-4.8 4.8-12.6 4.8-17.4 0L256 313.3l-66.5 67.1c-4.8 4.8-12.6 4.8-17.4 0l-40.5-40.5c-4.8-4.8-4.8-12.6 0-17.4l67.1-66.5-67.1-66.5c-4.8-4.8-4.8-12.6 0-17.4l40.5-40.5c4.8-4.8 12.6-4.8 17.4 0l66.5 67.1 66.5-67.1c4.8-4.8 12.6-4.8 17.4 0l40.5 40.5c4.8 4.8 4.8 12.6 0 17.4L313.3 256l67.1 66.5z\"]\n  };\n  var faWindowMaximize = {\n    prefix: 'fas',\n    iconName: 'window-maximize',\n    icon: [512, 512, [], \"f2d0\", \"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-16 160H64v-84c0-6.6 5.4-12 12-12h360c6.6 0 12 5.4 12 12v84z\"]\n  };\n  var faWindowMinimize = {\n    prefix: 'fas',\n    iconName: 'window-minimize',\n    icon: [512, 512, [], \"f2d1\", \"M464 352H48c-26.5 0-48 21.5-48 48v32c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-32c0-26.5-21.5-48-48-48z\"]\n  };\n  var faWindowRestore = {\n    prefix: 'fas',\n    iconName: 'window-restore',\n    icon: [512, 512, [], \"f2d2\", \"M512 48v288c0 26.5-21.5 48-48 48h-48V176c0-44.1-35.9-80-80-80H128V48c0-26.5 21.5-48 48-48h288c26.5 0 48 21.5 48 48zM384 176v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V176c0-26.5 21.5-48 48-48h288c26.5 0 48 21.5 48 48zm-68 28c0-6.6-5.4-12-12-12H76c-6.6 0-12 5.4-12 12v52h252v-52z\"]\n  };\n  var faWineBottle = {\n    prefix: 'fas',\n    iconName: 'wine-bottle',\n    icon: [512, 512, [], \"f72f\", \"M507.31 72.57L439.43 4.69c-6.25-6.25-16.38-6.25-22.63 0l-22.63 22.63c-6.25 6.25-6.25 16.38 0 22.63l-76.67 76.67c-46.58-19.7-102.4-10.73-140.37 27.23L18.75 312.23c-24.99 24.99-24.99 65.52 0 90.51l90.51 90.51c24.99 24.99 65.52 24.99 90.51 0l158.39-158.39c37.96-37.96 46.93-93.79 27.23-140.37l76.67-76.67c6.25 6.25 16.38 6.25 22.63 0l22.63-22.63c6.24-6.24 6.24-16.37-.01-22.62zM179.22 423.29l-90.51-90.51 122.04-122.04 90.51 90.51-122.04 122.04z\"]\n  };\n  var faWineGlass = {\n    prefix: 'fas',\n    iconName: 'wine-glass',\n    icon: [288, 512, [], \"f4e3\", \"M216 464h-40V346.81c68.47-15.89 118.05-79.91 111.4-154.16l-15.95-178.1C270.71 6.31 263.9 0 255.74 0H32.26c-8.15 0-14.97 6.31-15.7 14.55L.6 192.66C-6.05 266.91 43.53 330.93 112 346.82V464H72c-22.09 0-40 17.91-40 40 0 4.42 3.58 8 8 8h208c4.42 0 8-3.58 8-8 0-22.09-17.91-40-40-40z\"]\n  };\n  var faWineGlassAlt = {\n    prefix: 'fas',\n    iconName: 'wine-glass-alt',\n    icon: [288, 512, [], \"f5ce\", \"M216 464h-40V346.81c68.47-15.89 118.05-79.91 111.4-154.16l-15.95-178.1C270.71 6.31 263.9 0 255.74 0H32.26c-8.15 0-14.97 6.31-15.7 14.55L.6 192.66C-6.05 266.91 43.53 330.93 112 346.82V464H72c-22.09 0-40 17.91-40 40 0 4.42 3.58 8 8 8h208c4.42 0 8-3.58 8-8 0-22.09-17.91-40-40-40zM61.75 48h164.5l7.17 80H54.58l7.17-80z\"]\n  };\n  var faWonSign = {\n    prefix: 'fas',\n    iconName: 'won-sign',\n    icon: [576, 512, [], \"f159\", \"M564 192c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-48l18.6-80.6c1.7-7.5-4-14.7-11.7-14.7h-46.1c-5.7 0-10.6 4-11.7 9.5L450.7 128H340.8l-19.7-86c-1.3-5.5-6.1-9.3-11.7-9.3h-44c-5.6 0-10.4 3.8-11.7 9.3l-20 86H125l-17.5-85.7c-1.1-5.6-6.1-9.6-11.8-9.6H53.6c-7.7 0-13.4 7.1-11.7 14.6L60 128H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h62.3l7.2 32H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h83.9l40.9 182.6c1.2 5.5 6.1 9.4 11.7 9.4h56.8c5.6 0 10.4-3.9 11.7-9.3L259.3 288h55.1l42.4 182.7c1.3 5.4 6.1 9.3 11.7 9.3h56.8c5.6 0 10.4-3.9 11.7-9.3L479.1 288H564c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-70.1l7.4-32zM183.8 342c-6.2 25.8-6.8 47.2-7.3 47.2h-1.1s-1.7-22-6.8-47.2l-11-54h38.8zm27.5-118h-66.8l-6.5-32h80.8zm62.9 0l2-8.6c1.9-8 3.5-16 4.8-23.4h11.8c1.3 7.4 2.9 15.4 4.8 23.4l2 8.6zm130.9 118c-5.1 25.2-6.8 47.2-6.8 47.2h-1.1c-.6 0-1.1-21.4-7.3-47.2l-12.4-54h39.1zm25.2-118h-67.4l-7.3-32h81.6z\"]\n  };\n  var faWrench = {\n    prefix: 'fas',\n    iconName: 'wrench',\n    icon: [512, 512, [], \"f0ad\", \"M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z\"]\n  };\n  var faXRay = {\n    prefix: 'fas',\n    iconName: 'x-ray',\n    icon: [640, 512, [], \"f497\", \"M240 384c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm160 32c8.8 0 16-7.2 16-16s-7.2-16-16-16-16 7.2-16 16 7.2 16 16 16zM624 0H16C7.2 0 0 7.2 0 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16zm0 448h-48V96H64v352H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM480 248c0 4.4-3.6 8-8 8H336v32h104c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H336v32h64c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48v-16h-64v16c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48h64v-32H200c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h104v-32H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h136v-32H200c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h104v-24c0-4.4 3.6-8 8-8h16c4.4 0 8 3.6 8 8v24h104c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H336v32h136c4.4 0 8 3.6 8 8v16z\"]\n  };\n  var faYenSign = {\n    prefix: 'fas',\n    iconName: 'yen-sign',\n    icon: [384, 512, [], \"f157\", \"M351.2 32h-65.3c-4.6 0-8.8 2.6-10.8 6.7l-55.4 113.2c-14.5 34.7-27.1 71.9-27.1 71.9h-1.3s-12.6-37.2-27.1-71.9L108.8 38.7c-2-4.1-6.2-6.7-10.8-6.7H32.8c-9.1 0-14.8 9.7-10.6 17.6L102.3 200H44c-6.6 0-12 5.4-12 12v32c0 6.6 5.4 12 12 12h88.2l19.8 37.2V320H44c-6.6 0-12 5.4-12 12v32c0 6.6 5.4 12 12 12h108v92c0 6.6 5.4 12 12 12h56c6.6 0 12-5.4 12-12v-92h108c6.6 0 12-5.4 12-12v-32c0-6.6-5.4-12-12-12H232v-26.8l19.8-37.2H340c6.6 0 12-5.4 12-12v-32c0-6.6-5.4-12-12-12h-58.3l80.1-150.4c4.3-7.9-1.5-17.6-10.6-17.6z\"]\n  };\n  var faYinYang = {\n    prefix: 'fas',\n    iconName: 'yin-yang',\n    icon: [496, 512, [], \"f6ad\", \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 376c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm0-128c-53.02 0-96 42.98-96 96s42.98 96 96 96c-106.04 0-192-85.96-192-192S141.96 64 248 64c53.02 0 96 42.98 96 96s-42.98 96-96 96zm0-128c-17.67 0-32 14.33-32 32s14.33 32 32 32 32-14.33 32-32-14.33-32-32-32z\"]\n  };\n  var _iconsCache = {\n    faAd: faAd,\n    faAddressBook: faAddressBook,\n    faAddressCard: faAddressCard,\n    faAdjust: faAdjust,\n    faAirFreshener: faAirFreshener,\n    faAlignCenter: faAlignCenter,\n    faAlignJustify: faAlignJustify,\n    faAlignLeft: faAlignLeft,\n    faAlignRight: faAlignRight,\n    faAllergies: faAllergies,\n    faAmbulance: faAmbulance,\n    faAmericanSignLanguageInterpreting: faAmericanSignLanguageInterpreting,\n    faAnchor: faAnchor,\n    faAngleDoubleDown: faAngleDoubleDown,\n    faAngleDoubleLeft: faAngleDoubleLeft,\n    faAngleDoubleRight: faAngleDoubleRight,\n    faAngleDoubleUp: faAngleDoubleUp,\n    faAngleDown: faAngleDown,\n    faAngleLeft: faAngleLeft,\n    faAngleRight: faAngleRight,\n    faAngleUp: faAngleUp,\n    faAngry: faAngry,\n    faAnkh: faAnkh,\n    faAppleAlt: faAppleAlt,\n    faArchive: faArchive,\n    faArchway: faArchway,\n    faArrowAltCircleDown: faArrowAltCircleDown,\n    faArrowAltCircleLeft: faArrowAltCircleLeft,\n    faArrowAltCircleRight: faArrowAltCircleRight,\n    faArrowAltCircleUp: faArrowAltCircleUp,\n    faArrowCircleDown: faArrowCircleDown,\n    faArrowCircleLeft: faArrowCircleLeft,\n    faArrowCircleRight: faArrowCircleRight,\n    faArrowCircleUp: faArrowCircleUp,\n    faArrowDown: faArrowDown,\n    faArrowLeft: faArrowLeft,\n    faArrowRight: faArrowRight,\n    faArrowUp: faArrowUp,\n    faArrowsAlt: faArrowsAlt,\n    faArrowsAltH: faArrowsAltH,\n    faArrowsAltV: faArrowsAltV,\n    faAssistiveListeningSystems: faAssistiveListeningSystems,\n    faAsterisk: faAsterisk,\n    faAt: faAt,\n    faAtlas: faAtlas,\n    faAtom: faAtom,\n    faAudioDescription: faAudioDescription,\n    faAward: faAward,\n    faBaby: faBaby,\n    faBabyCarriage: faBabyCarriage,\n    faBackspace: faBackspace,\n    faBackward: faBackward,\n    faBacon: faBacon,\n    faBalanceScale: faBalanceScale,\n    faBan: faBan,\n    faBandAid: faBandAid,\n    faBarcode: faBarcode,\n    faBars: faBars,\n    faBaseballBall: faBaseballBall,\n    faBasketballBall: faBasketballBall,\n    faBath: faBath,\n    faBatteryEmpty: faBatteryEmpty,\n    faBatteryFull: faBatteryFull,\n    faBatteryHalf: faBatteryHalf,\n    faBatteryQuarter: faBatteryQuarter,\n    faBatteryThreeQuarters: faBatteryThreeQuarters,\n    faBed: faBed,\n    faBeer: faBeer,\n    faBell: faBell,\n    faBellSlash: faBellSlash,\n    faBezierCurve: faBezierCurve,\n    faBible: faBible,\n    faBicycle: faBicycle,\n    faBinoculars: faBinoculars,\n    faBiohazard: faBiohazard,\n    faBirthdayCake: faBirthdayCake,\n    faBlender: faBlender,\n    faBlenderPhone: faBlenderPhone,\n    faBlind: faBlind,\n    faBlog: faBlog,\n    faBold: faBold,\n    faBolt: faBolt,\n    faBomb: faBomb,\n    faBone: faBone,\n    faBong: faBong,\n    faBook: faBook,\n    faBookDead: faBookDead,\n    faBookMedical: faBookMedical,\n    faBookOpen: faBookOpen,\n    faBookReader: faBookReader,\n    faBookmark: faBookmark,\n    faBowlingBall: faBowlingBall,\n    faBox: faBox,\n    faBoxOpen: faBoxOpen,\n    faBoxes: faBoxes,\n    faBraille: faBraille,\n    faBrain: faBrain,\n    faBreadSlice: faBreadSlice,\n    faBriefcase: faBriefcase,\n    faBriefcaseMedical: faBriefcaseMedical,\n    faBroadcastTower: faBroadcastTower,\n    faBroom: faBroom,\n    faBrush: faBrush,\n    faBug: faBug,\n    faBuilding: faBuilding,\n    faBullhorn: faBullhorn,\n    faBullseye: faBullseye,\n    faBurn: faBurn,\n    faBus: faBus,\n    faBusAlt: faBusAlt,\n    faBusinessTime: faBusinessTime,\n    faCalculator: faCalculator,\n    faCalendar: faCalendar,\n    faCalendarAlt: faCalendarAlt,\n    faCalendarCheck: faCalendarCheck,\n    faCalendarDay: faCalendarDay,\n    faCalendarMinus: faCalendarMinus,\n    faCalendarPlus: faCalendarPlus,\n    faCalendarTimes: faCalendarTimes,\n    faCalendarWeek: faCalendarWeek,\n    faCamera: faCamera,\n    faCameraRetro: faCameraRetro,\n    faCampground: faCampground,\n    faCandyCane: faCandyCane,\n    faCannabis: faCannabis,\n    faCapsules: faCapsules,\n    faCar: faCar,\n    faCarAlt: faCarAlt,\n    faCarBattery: faCarBattery,\n    faCarCrash: faCarCrash,\n    faCarSide: faCarSide,\n    faCaretDown: faCaretDown,\n    faCaretLeft: faCaretLeft,\n    faCaretRight: faCaretRight,\n    faCaretSquareDown: faCaretSquareDown,\n    faCaretSquareLeft: faCaretSquareLeft,\n    faCaretSquareRight: faCaretSquareRight,\n    faCaretSquareUp: faCaretSquareUp,\n    faCaretUp: faCaretUp,\n    faCarrot: faCarrot,\n    faCartArrowDown: faCartArrowDown,\n    faCartPlus: faCartPlus,\n    faCashRegister: faCashRegister,\n    faCat: faCat,\n    faCertificate: faCertificate,\n    faChair: faChair,\n    faChalkboard: faChalkboard,\n    faChalkboardTeacher: faChalkboardTeacher,\n    faChargingStation: faChargingStation,\n    faChartArea: faChartArea,\n    faChartBar: faChartBar,\n    faChartLine: faChartLine,\n    faChartPie: faChartPie,\n    faCheck: faCheck,\n    faCheckCircle: faCheckCircle,\n    faCheckDouble: faCheckDouble,\n    faCheckSquare: faCheckSquare,\n    faCheese: faCheese,\n    faChess: faChess,\n    faChessBishop: faChessBishop,\n    faChessBoard: faChessBoard,\n    faChessKing: faChessKing,\n    faChessKnight: faChessKnight,\n    faChessPawn: faChessPawn,\n    faChessQueen: faChessQueen,\n    faChessRook: faChessRook,\n    faChevronCircleDown: faChevronCircleDown,\n    faChevronCircleLeft: faChevronCircleLeft,\n    faChevronCircleRight: faChevronCircleRight,\n    faChevronCircleUp: faChevronCircleUp,\n    faChevronDown: faChevronDown,\n    faChevronLeft: faChevronLeft,\n    faChevronRight: faChevronRight,\n    faChevronUp: faChevronUp,\n    faChild: faChild,\n    faChurch: faChurch,\n    faCircle: faCircle,\n    faCircleNotch: faCircleNotch,\n    faCity: faCity,\n    faClinicMedical: faClinicMedical,\n    faClipboard: faClipboard,\n    faClipboardCheck: faClipboardCheck,\n    faClipboardList: faClipboardList,\n    faClock: faClock,\n    faClone: faClone,\n    faClosedCaptioning: faClosedCaptioning,\n    faCloud: faCloud,\n    faCloudDownloadAlt: faCloudDownloadAlt,\n    faCloudMeatball: faCloudMeatball,\n    faCloudMoon: faCloudMoon,\n    faCloudMoonRain: faCloudMoonRain,\n    faCloudRain: faCloudRain,\n    faCloudShowersHeavy: faCloudShowersHeavy,\n    faCloudSun: faCloudSun,\n    faCloudSunRain: faCloudSunRain,\n    faCloudUploadAlt: faCloudUploadAlt,\n    faCocktail: faCocktail,\n    faCode: faCode,\n    faCodeBranch: faCodeBranch,\n    faCoffee: faCoffee,\n    faCog: faCog,\n    faCogs: faCogs,\n    faCoins: faCoins,\n    faColumns: faColumns,\n    faComment: faComment,\n    faCommentAlt: faCommentAlt,\n    faCommentDollar: faCommentDollar,\n    faCommentDots: faCommentDots,\n    faCommentMedical: faCommentMedical,\n    faCommentSlash: faCommentSlash,\n    faComments: faComments,\n    faCommentsDollar: faCommentsDollar,\n    faCompactDisc: faCompactDisc,\n    faCompass: faCompass,\n    faCompress: faCompress,\n    faCompressArrowsAlt: faCompressArrowsAlt,\n    faConciergeBell: faConciergeBell,\n    faCookie: faCookie,\n    faCookieBite: faCookieBite,\n    faCopy: faCopy,\n    faCopyright: faCopyright,\n    faCouch: faCouch,\n    faCreditCard: faCreditCard,\n    faCrop: faCrop,\n    faCropAlt: faCropAlt,\n    faCross: faCross,\n    faCrosshairs: faCrosshairs,\n    faCrow: faCrow,\n    faCrown: faCrown,\n    faCrutch: faCrutch,\n    faCube: faCube,\n    faCubes: faCubes,\n    faCut: faCut,\n    faDatabase: faDatabase,\n    faDeaf: faDeaf,\n    faDemocrat: faDemocrat,\n    faDesktop: faDesktop,\n    faDharmachakra: faDharmachakra,\n    faDiagnoses: faDiagnoses,\n    faDice: faDice,\n    faDiceD20: faDiceD20,\n    faDiceD6: faDiceD6,\n    faDiceFive: faDiceFive,\n    faDiceFour: faDiceFour,\n    faDiceOne: faDiceOne,\n    faDiceSix: faDiceSix,\n    faDiceThree: faDiceThree,\n    faDiceTwo: faDiceTwo,\n    faDigitalTachograph: faDigitalTachograph,\n    faDirections: faDirections,\n    faDivide: faDivide,\n    faDizzy: faDizzy,\n    faDna: faDna,\n    faDog: faDog,\n    faDollarSign: faDollarSign,\n    faDolly: faDolly,\n    faDollyFlatbed: faDollyFlatbed,\n    faDonate: faDonate,\n    faDoorClosed: faDoorClosed,\n    faDoorOpen: faDoorOpen,\n    faDotCircle: faDotCircle,\n    faDove: faDove,\n    faDownload: faDownload,\n    faDraftingCompass: faDraftingCompass,\n    faDragon: faDragon,\n    faDrawPolygon: faDrawPolygon,\n    faDrum: faDrum,\n    faDrumSteelpan: faDrumSteelpan,\n    faDrumstickBite: faDrumstickBite,\n    faDumbbell: faDumbbell,\n    faDumpster: faDumpster,\n    faDumpsterFire: faDumpsterFire,\n    faDungeon: faDungeon,\n    faEdit: faEdit,\n    faEgg: faEgg,\n    faEject: faEject,\n    faEllipsisH: faEllipsisH,\n    faEllipsisV: faEllipsisV,\n    faEnvelope: faEnvelope,\n    faEnvelopeOpen: faEnvelopeOpen,\n    faEnvelopeOpenText: faEnvelopeOpenText,\n    faEnvelopeSquare: faEnvelopeSquare,\n    faEquals: faEquals,\n    faEraser: faEraser,\n    faEthernet: faEthernet,\n    faEuroSign: faEuroSign,\n    faExchangeAlt: faExchangeAlt,\n    faExclamation: faExclamation,\n    faExclamationCircle: faExclamationCircle,\n    faExclamationTriangle: faExclamationTriangle,\n    faExpand: faExpand,\n    faExpandArrowsAlt: faExpandArrowsAlt,\n    faExternalLinkAlt: faExternalLinkAlt,\n    faExternalLinkSquareAlt: faExternalLinkSquareAlt,\n    faEye: faEye,\n    faEyeDropper: faEyeDropper,\n    faEyeSlash: faEyeSlash,\n    faFastBackward: faFastBackward,\n    faFastForward: faFastForward,\n    faFax: faFax,\n    faFeather: faFeather,\n    faFeatherAlt: faFeatherAlt,\n    faFemale: faFemale,\n    faFighterJet: faFighterJet,\n    faFile: faFile,\n    faFileAlt: faFileAlt,\n    faFileArchive: faFileArchive,\n    faFileAudio: faFileAudio,\n    faFileCode: faFileCode,\n    faFileContract: faFileContract,\n    faFileCsv: faFileCsv,\n    faFileDownload: faFileDownload,\n    faFileExcel: faFileExcel,\n    faFileExport: faFileExport,\n    faFileImage: faFileImage,\n    faFileImport: faFileImport,\n    faFileInvoice: faFileInvoice,\n    faFileInvoiceDollar: faFileInvoiceDollar,\n    faFileMedical: faFileMedical,\n    faFileMedicalAlt: faFileMedicalAlt,\n    faFilePdf: faFilePdf,\n    faFilePowerpoint: faFilePowerpoint,\n    faFilePrescription: faFilePrescription,\n    faFileSignature: faFileSignature,\n    faFileUpload: faFileUpload,\n    faFileVideo: faFileVideo,\n    faFileWord: faFileWord,\n    faFill: faFill,\n    faFillDrip: faFillDrip,\n    faFilm: faFilm,\n    faFilter: faFilter,\n    faFingerprint: faFingerprint,\n    faFire: faFire,\n    faFireAlt: faFireAlt,\n    faFireExtinguisher: faFireExtinguisher,\n    faFirstAid: faFirstAid,\n    faFish: faFish,\n    faFistRaised: faFistRaised,\n    faFlag: faFlag,\n    faFlagCheckered: faFlagCheckered,\n    faFlagUsa: faFlagUsa,\n    faFlask: faFlask,\n    faFlushed: faFlushed,\n    faFolder: faFolder,\n    faFolderMinus: faFolderMinus,\n    faFolderOpen: faFolderOpen,\n    faFolderPlus: faFolderPlus,\n    faFont: faFont,\n    faFontAwesomeLogoFull: faFontAwesomeLogoFull,\n    faFootballBall: faFootballBall,\n    faForward: faForward,\n    faFrog: faFrog,\n    faFrown: faFrown,\n    faFrownOpen: faFrownOpen,\n    faFunnelDollar: faFunnelDollar,\n    faFutbol: faFutbol,\n    faGamepad: faGamepad,\n    faGasPump: faGasPump,\n    faGavel: faGavel,\n    faGem: faGem,\n    faGenderless: faGenderless,\n    faGhost: faGhost,\n    faGift: faGift,\n    faGifts: faGifts,\n    faGlassCheers: faGlassCheers,\n    faGlassMartini: faGlassMartini,\n    faGlassMartiniAlt: faGlassMartiniAlt,\n    faGlassWhiskey: faGlassWhiskey,\n    faGlasses: faGlasses,\n    faGlobe: faGlobe,\n    faGlobeAfrica: faGlobeAfrica,\n    faGlobeAmericas: faGlobeAmericas,\n    faGlobeAsia: faGlobeAsia,\n    faGlobeEurope: faGlobeEurope,\n    faGolfBall: faGolfBall,\n    faGopuram: faGopuram,\n    faGraduationCap: faGraduationCap,\n    faGreaterThan: faGreaterThan,\n    faGreaterThanEqual: faGreaterThanEqual,\n    faGrimace: faGrimace,\n    faGrin: faGrin,\n    faGrinAlt: faGrinAlt,\n    faGrinBeam: faGrinBeam,\n    faGrinBeamSweat: faGrinBeamSweat,\n    faGrinHearts: faGrinHearts,\n    faGrinSquint: faGrinSquint,\n    faGrinSquintTears: faGrinSquintTears,\n    faGrinStars: faGrinStars,\n    faGrinTears: faGrinTears,\n    faGrinTongue: faGrinTongue,\n    faGrinTongueSquint: faGrinTongueSquint,\n    faGrinTongueWink: faGrinTongueWink,\n    faGrinWink: faGrinWink,\n    faGripHorizontal: faGripHorizontal,\n    faGripLines: faGripLines,\n    faGripLinesVertical: faGripLinesVertical,\n    faGripVertical: faGripVertical,\n    faGuitar: faGuitar,\n    faHSquare: faHSquare,\n    faHamburger: faHamburger,\n    faHammer: faHammer,\n    faHamsa: faHamsa,\n    faHandHolding: faHandHolding,\n    faHandHoldingHeart: faHandHoldingHeart,\n    faHandHoldingUsd: faHandHoldingUsd,\n    faHandLizard: faHandLizard,\n    faHandMiddleFinger: faHandMiddleFinger,\n    faHandPaper: faHandPaper,\n    faHandPeace: faHandPeace,\n    faHandPointDown: faHandPointDown,\n    faHandPointLeft: faHandPointLeft,\n    faHandPointRight: faHandPointRight,\n    faHandPointUp: faHandPointUp,\n    faHandPointer: faHandPointer,\n    faHandRock: faHandRock,\n    faHandScissors: faHandScissors,\n    faHandSpock: faHandSpock,\n    faHands: faHands,\n    faHandsHelping: faHandsHelping,\n    faHandshake: faHandshake,\n    faHanukiah: faHanukiah,\n    faHardHat: faHardHat,\n    faHashtag: faHashtag,\n    faHatWizard: faHatWizard,\n    faHaykal: faHaykal,\n    faHdd: faHdd,\n    faHeading: faHeading,\n    faHeadphones: faHeadphones,\n    faHeadphonesAlt: faHeadphonesAlt,\n    faHeadset: faHeadset,\n    faHeart: faHeart,\n    faHeartBroken: faHeartBroken,\n    faHeartbeat: faHeartbeat,\n    faHelicopter: faHelicopter,\n    faHighlighter: faHighlighter,\n    faHiking: faHiking,\n    faHippo: faHippo,\n    faHistory: faHistory,\n    faHockeyPuck: faHockeyPuck,\n    faHollyBerry: faHollyBerry,\n    faHome: faHome,\n    faHorse: faHorse,\n    faHorseHead: faHorseHead,\n    faHospital: faHospital,\n    faHospitalAlt: faHospitalAlt,\n    faHospitalSymbol: faHospitalSymbol,\n    faHotTub: faHotTub,\n    faHotdog: faHotdog,\n    faHotel: faHotel,\n    faHourglass: faHourglass,\n    faHourglassEnd: faHourglassEnd,\n    faHourglassHalf: faHourglassHalf,\n    faHourglassStart: faHourglassStart,\n    faHouseDamage: faHouseDamage,\n    faHryvnia: faHryvnia,\n    faICursor: faICursor,\n    faIceCream: faIceCream,\n    faIcicles: faIcicles,\n    faIdBadge: faIdBadge,\n    faIdCard: faIdCard,\n    faIdCardAlt: faIdCardAlt,\n    faIgloo: faIgloo,\n    faImage: faImage,\n    faImages: faImages,\n    faInbox: faInbox,\n    faIndent: faIndent,\n    faIndustry: faIndustry,\n    faInfinity: faInfinity,\n    faInfo: faInfo,\n    faInfoCircle: faInfoCircle,\n    faItalic: faItalic,\n    faJedi: faJedi,\n    faJoint: faJoint,\n    faJournalWhills: faJournalWhills,\n    faKaaba: faKaaba,\n    faKey: faKey,\n    faKeyboard: faKeyboard,\n    faKhanda: faKhanda,\n    faKiss: faKiss,\n    faKissBeam: faKissBeam,\n    faKissWinkHeart: faKissWinkHeart,\n    faKiwiBird: faKiwiBird,\n    faLandmark: faLandmark,\n    faLanguage: faLanguage,\n    faLaptop: faLaptop,\n    faLaptopCode: faLaptopCode,\n    faLaptopMedical: faLaptopMedical,\n    faLaugh: faLaugh,\n    faLaughBeam: faLaughBeam,\n    faLaughSquint: faLaughSquint,\n    faLaughWink: faLaughWink,\n    faLayerGroup: faLayerGroup,\n    faLeaf: faLeaf,\n    faLemon: faLemon,\n    faLessThan: faLessThan,\n    faLessThanEqual: faLessThanEqual,\n    faLevelDownAlt: faLevelDownAlt,\n    faLevelUpAlt: faLevelUpAlt,\n    faLifeRing: faLifeRing,\n    faLightbulb: faLightbulb,\n    faLink: faLink,\n    faLiraSign: faLiraSign,\n    faList: faList,\n    faListAlt: faListAlt,\n    faListOl: faListOl,\n    faListUl: faListUl,\n    faLocationArrow: faLocationArrow,\n    faLock: faLock,\n    faLockOpen: faLockOpen,\n    faLongArrowAltDown: faLongArrowAltDown,\n    faLongArrowAltLeft: faLongArrowAltLeft,\n    faLongArrowAltRight: faLongArrowAltRight,\n    faLongArrowAltUp: faLongArrowAltUp,\n    faLowVision: faLowVision,\n    faLuggageCart: faLuggageCart,\n    faMagic: faMagic,\n    faMagnet: faMagnet,\n    faMailBulk: faMailBulk,\n    faMale: faMale,\n    faMap: faMap,\n    faMapMarked: faMapMarked,\n    faMapMarkedAlt: faMapMarkedAlt,\n    faMapMarker: faMapMarker,\n    faMapMarkerAlt: faMapMarkerAlt,\n    faMapPin: faMapPin,\n    faMapSigns: faMapSigns,\n    faMarker: faMarker,\n    faMars: faMars,\n    faMarsDouble: faMarsDouble,\n    faMarsStroke: faMarsStroke,\n    faMarsStrokeH: faMarsStrokeH,\n    faMarsStrokeV: faMarsStrokeV,\n    faMask: faMask,\n    faMedal: faMedal,\n    faMedkit: faMedkit,\n    faMeh: faMeh,\n    faMehBlank: faMehBlank,\n    faMehRollingEyes: faMehRollingEyes,\n    faMemory: faMemory,\n    faMenorah: faMenorah,\n    faMercury: faMercury,\n    faMeteor: faMeteor,\n    faMicrochip: faMicrochip,\n    faMicrophone: faMicrophone,\n    faMicrophoneAlt: faMicrophoneAlt,\n    faMicrophoneAltSlash: faMicrophoneAltSlash,\n    faMicrophoneSlash: faMicrophoneSlash,\n    faMicroscope: faMicroscope,\n    faMinus: faMinus,\n    faMinusCircle: faMinusCircle,\n    faMinusSquare: faMinusSquare,\n    faMitten: faMitten,\n    faMobile: faMobile,\n    faMobileAlt: faMobileAlt,\n    faMoneyBill: faMoneyBill,\n    faMoneyBillAlt: faMoneyBillAlt,\n    faMoneyBillWave: faMoneyBillWave,\n    faMoneyBillWaveAlt: faMoneyBillWaveAlt,\n    faMoneyCheck: faMoneyCheck,\n    faMoneyCheckAlt: faMoneyCheckAlt,\n    faMonument: faMonument,\n    faMoon: faMoon,\n    faMortarPestle: faMortarPestle,\n    faMosque: faMosque,\n    faMotorcycle: faMotorcycle,\n    faMountain: faMountain,\n    faMousePointer: faMousePointer,\n    faMugHot: faMugHot,\n    faMusic: faMusic,\n    faNetworkWired: faNetworkWired,\n    faNeuter: faNeuter,\n    faNewspaper: faNewspaper,\n    faNotEqual: faNotEqual,\n    faNotesMedical: faNotesMedical,\n    faObjectGroup: faObjectGroup,\n    faObjectUngroup: faObjectUngroup,\n    faOilCan: faOilCan,\n    faOm: faOm,\n    faOtter: faOtter,\n    faOutdent: faOutdent,\n    faPager: faPager,\n    faPaintBrush: faPaintBrush,\n    faPaintRoller: faPaintRoller,\n    faPalette: faPalette,\n    faPallet: faPallet,\n    faPaperPlane: faPaperPlane,\n    faPaperclip: faPaperclip,\n    faParachuteBox: faParachuteBox,\n    faParagraph: faParagraph,\n    faParking: faParking,\n    faPassport: faPassport,\n    faPastafarianism: faPastafarianism,\n    faPaste: faPaste,\n    faPause: faPause,\n    faPauseCircle: faPauseCircle,\n    faPaw: faPaw,\n    faPeace: faPeace,\n    faPen: faPen,\n    faPenAlt: faPenAlt,\n    faPenFancy: faPenFancy,\n    faPenNib: faPenNib,\n    faPenSquare: faPenSquare,\n    faPencilAlt: faPencilAlt,\n    faPencilRuler: faPencilRuler,\n    faPeopleCarry: faPeopleCarry,\n    faPepperHot: faPepperHot,\n    faPercent: faPercent,\n    faPercentage: faPercentage,\n    faPersonBooth: faPersonBooth,\n    faPhone: faPhone,\n    faPhoneSlash: faPhoneSlash,\n    faPhoneSquare: faPhoneSquare,\n    faPhoneVolume: faPhoneVolume,\n    faPiggyBank: faPiggyBank,\n    faPills: faPills,\n    faPizzaSlice: faPizzaSlice,\n    faPlaceOfWorship: faPlaceOfWorship,\n    faPlane: faPlane,\n    faPlaneArrival: faPlaneArrival,\n    faPlaneDeparture: faPlaneDeparture,\n    faPlay: faPlay,\n    faPlayCircle: faPlayCircle,\n    faPlug: faPlug,\n    faPlus: faPlus,\n    faPlusCircle: faPlusCircle,\n    faPlusSquare: faPlusSquare,\n    faPodcast: faPodcast,\n    faPoll: faPoll,\n    faPollH: faPollH,\n    faPoo: faPoo,\n    faPooStorm: faPooStorm,\n    faPoop: faPoop,\n    faPortrait: faPortrait,\n    faPoundSign: faPoundSign,\n    faPowerOff: faPowerOff,\n    faPray: faPray,\n    faPrayingHands: faPrayingHands,\n    faPrescription: faPrescription,\n    faPrescriptionBottle: faPrescriptionBottle,\n    faPrescriptionBottleAlt: faPrescriptionBottleAlt,\n    faPrint: faPrint,\n    faProcedures: faProcedures,\n    faProjectDiagram: faProjectDiagram,\n    faPuzzlePiece: faPuzzlePiece,\n    faQrcode: faQrcode,\n    faQuestion: faQuestion,\n    faQuestionCircle: faQuestionCircle,\n    faQuidditch: faQuidditch,\n    faQuoteLeft: faQuoteLeft,\n    faQuoteRight: faQuoteRight,\n    faQuran: faQuran,\n    faRadiation: faRadiation,\n    faRadiationAlt: faRadiationAlt,\n    faRainbow: faRainbow,\n    faRandom: faRandom,\n    faReceipt: faReceipt,\n    faRecycle: faRecycle,\n    faRedo: faRedo,\n    faRedoAlt: faRedoAlt,\n    faRegistered: faRegistered,\n    faReply: faReply,\n    faReplyAll: faReplyAll,\n    faRepublican: faRepublican,\n    faRestroom: faRestroom,\n    faRetweet: faRetweet,\n    faRibbon: faRibbon,\n    faRing: faRing,\n    faRoad: faRoad,\n    faRobot: faRobot,\n    faRocket: faRocket,\n    faRoute: faRoute,\n    faRss: faRss,\n    faRssSquare: faRssSquare,\n    faRubleSign: faRubleSign,\n    faRuler: faRuler,\n    faRulerCombined: faRulerCombined,\n    faRulerHorizontal: faRulerHorizontal,\n    faRulerVertical: faRulerVertical,\n    faRunning: faRunning,\n    faRupeeSign: faRupeeSign,\n    faSadCry: faSadCry,\n    faSadTear: faSadTear,\n    faSatellite: faSatellite,\n    faSatelliteDish: faSatelliteDish,\n    faSave: faSave,\n    faSchool: faSchool,\n    faScrewdriver: faScrewdriver,\n    faScroll: faScroll,\n    faSdCard: faSdCard,\n    faSearch: faSearch,\n    faSearchDollar: faSearchDollar,\n    faSearchLocation: faSearchLocation,\n    faSearchMinus: faSearchMinus,\n    faSearchPlus: faSearchPlus,\n    faSeedling: faSeedling,\n    faServer: faServer,\n    faShapes: faShapes,\n    faShare: faShare,\n    faShareAlt: faShareAlt,\n    faShareAltSquare: faShareAltSquare,\n    faShareSquare: faShareSquare,\n    faShekelSign: faShekelSign,\n    faShieldAlt: faShieldAlt,\n    faShip: faShip,\n    faShippingFast: faShippingFast,\n    faShoePrints: faShoePrints,\n    faShoppingBag: faShoppingBag,\n    faShoppingBasket: faShoppingBasket,\n    faShoppingCart: faShoppingCart,\n    faShower: faShower,\n    faShuttleVan: faShuttleVan,\n    faSign: faSign,\n    faSignInAlt: faSignInAlt,\n    faSignLanguage: faSignLanguage,\n    faSignOutAlt: faSignOutAlt,\n    faSignal: faSignal,\n    faSignature: faSignature,\n    faSimCard: faSimCard,\n    faSitemap: faSitemap,\n    faSkating: faSkating,\n    faSkiing: faSkiing,\n    faSkiingNordic: faSkiingNordic,\n    faSkull: faSkull,\n    faSkullCrossbones: faSkullCrossbones,\n    faSlash: faSlash,\n    faSleigh: faSleigh,\n    faSlidersH: faSlidersH,\n    faSmile: faSmile,\n    faSmileBeam: faSmileBeam,\n    faSmileWink: faSmileWink,\n    faSmog: faSmog,\n    faSmoking: faSmoking,\n    faSmokingBan: faSmokingBan,\n    faSms: faSms,\n    faSnowboarding: faSnowboarding,\n    faSnowflake: faSnowflake,\n    faSnowman: faSnowman,\n    faSnowplow: faSnowplow,\n    faSocks: faSocks,\n    faSolarPanel: faSolarPanel,\n    faSort: faSort,\n    faSortAlphaDown: faSortAlphaDown,\n    faSortAlphaUp: faSortAlphaUp,\n    faSortAmountDown: faSortAmountDown,\n    faSortAmountUp: faSortAmountUp,\n    faSortDown: faSortDown,\n    faSortNumericDown: faSortNumericDown,\n    faSortNumericUp: faSortNumericUp,\n    faSortUp: faSortUp,\n    faSpa: faSpa,\n    faSpaceShuttle: faSpaceShuttle,\n    faSpider: faSpider,\n    faSpinner: faSpinner,\n    faSplotch: faSplotch,\n    faSprayCan: faSprayCan,\n    faSquare: faSquare,\n    faSquareFull: faSquareFull,\n    faSquareRootAlt: faSquareRootAlt,\n    faStamp: faStamp,\n    faStar: faStar,\n    faStarAndCrescent: faStarAndCrescent,\n    faStarHalf: faStarHalf,\n    faStarHalfAlt: faStarHalfAlt,\n    faStarOfDavid: faStarOfDavid,\n    faStarOfLife: faStarOfLife,\n    faStepBackward: faStepBackward,\n    faStepForward: faStepForward,\n    faStethoscope: faStethoscope,\n    faStickyNote: faStickyNote,\n    faStop: faStop,\n    faStopCircle: faStopCircle,\n    faStopwatch: faStopwatch,\n    faStore: faStore,\n    faStoreAlt: faStoreAlt,\n    faStream: faStream,\n    faStreetView: faStreetView,\n    faStrikethrough: faStrikethrough,\n    faStroopwafel: faStroopwafel,\n    faSubscript: faSubscript,\n    faSubway: faSubway,\n    faSuitcase: faSuitcase,\n    faSuitcaseRolling: faSuitcaseRolling,\n    faSun: faSun,\n    faSuperscript: faSuperscript,\n    faSurprise: faSurprise,\n    faSwatchbook: faSwatchbook,\n    faSwimmer: faSwimmer,\n    faSwimmingPool: faSwimmingPool,\n    faSynagogue: faSynagogue,\n    faSync: faSync,\n    faSyncAlt: faSyncAlt,\n    faSyringe: faSyringe,\n    faTable: faTable,\n    faTableTennis: faTableTennis,\n    faTablet: faTablet,\n    faTabletAlt: faTabletAlt,\n    faTablets: faTablets,\n    faTachometerAlt: faTachometerAlt,\n    faTag: faTag,\n    faTags: faTags,\n    faTape: faTape,\n    faTasks: faTasks,\n    faTaxi: faTaxi,\n    faTeeth: faTeeth,\n    faTeethOpen: faTeethOpen,\n    faTemperatureHigh: faTemperatureHigh,\n    faTemperatureLow: faTemperatureLow,\n    faTenge: faTenge,\n    faTerminal: faTerminal,\n    faTextHeight: faTextHeight,\n    faTextWidth: faTextWidth,\n    faTh: faTh,\n    faThLarge: faThLarge,\n    faThList: faThList,\n    faTheaterMasks: faTheaterMasks,\n    faThermometer: faThermometer,\n    faThermometerEmpty: faThermometerEmpty,\n    faThermometerFull: faThermometerFull,\n    faThermometerHalf: faThermometerHalf,\n    faThermometerQuarter: faThermometerQuarter,\n    faThermometerThreeQuarters: faThermometerThreeQuarters,\n    faThumbsDown: faThumbsDown,\n    faThumbsUp: faThumbsUp,\n    faThumbtack: faThumbtack,\n    faTicketAlt: faTicketAlt,\n    faTimes: faTimes,\n    faTimesCircle: faTimesCircle,\n    faTint: faTint,\n    faTintSlash: faTintSlash,\n    faTired: faTired,\n    faToggleOff: faToggleOff,\n    faToggleOn: faToggleOn,\n    faToilet: faToilet,\n    faToiletPaper: faToiletPaper,\n    faToolbox: faToolbox,\n    faTools: faTools,\n    faTooth: faTooth,\n    faTorah: faTorah,\n    faToriiGate: faToriiGate,\n    faTractor: faTractor,\n    faTrademark: faTrademark,\n    faTrafficLight: faTrafficLight,\n    faTrain: faTrain,\n    faTram: faTram,\n    faTransgender: faTransgender,\n    faTransgenderAlt: faTransgenderAlt,\n    faTrash: faTrash,\n    faTrashAlt: faTrashAlt,\n    faTrashRestore: faTrashRestore,\n    faTrashRestoreAlt: faTrashRestoreAlt,\n    faTree: faTree,\n    faTrophy: faTrophy,\n    faTruck: faTruck,\n    faTruckLoading: faTruckLoading,\n    faTruckMonster: faTruckMonster,\n    faTruckMoving: faTruckMoving,\n    faTruckPickup: faTruckPickup,\n    faTshirt: faTshirt,\n    faTty: faTty,\n    faTv: faTv,\n    faUmbrella: faUmbrella,\n    faUmbrellaBeach: faUmbrellaBeach,\n    faUnderline: faUnderline,\n    faUndo: faUndo,\n    faUndoAlt: faUndoAlt,\n    faUniversalAccess: faUniversalAccess,\n    faUniversity: faUniversity,\n    faUnlink: faUnlink,\n    faUnlock: faUnlock,\n    faUnlockAlt: faUnlockAlt,\n    faUpload: faUpload,\n    faUser: faUser,\n    faUserAlt: faUserAlt,\n    faUserAltSlash: faUserAltSlash,\n    faUserAstronaut: faUserAstronaut,\n    faUserCheck: faUserCheck,\n    faUserCircle: faUserCircle,\n    faUserClock: faUserClock,\n    faUserCog: faUserCog,\n    faUserEdit: faUserEdit,\n    faUserFriends: faUserFriends,\n    faUserGraduate: faUserGraduate,\n    faUserInjured: faUserInjured,\n    faUserLock: faUserLock,\n    faUserMd: faUserMd,\n    faUserMinus: faUserMinus,\n    faUserNinja: faUserNinja,\n    faUserNurse: faUserNurse,\n    faUserPlus: faUserPlus,\n    faUserSecret: faUserSecret,\n    faUserShield: faUserShield,\n    faUserSlash: faUserSlash,\n    faUserTag: faUserTag,\n    faUserTie: faUserTie,\n    faUserTimes: faUserTimes,\n    faUsers: faUsers,\n    faUsersCog: faUsersCog,\n    faUtensilSpoon: faUtensilSpoon,\n    faUtensils: faUtensils,\n    faVectorSquare: faVectorSquare,\n    faVenus: faVenus,\n    faVenusDouble: faVenusDouble,\n    faVenusMars: faVenusMars,\n    faVial: faVial,\n    faVials: faVials,\n    faVideo: faVideo,\n    faVideoSlash: faVideoSlash,\n    faVihara: faVihara,\n    faVolleyballBall: faVolleyballBall,\n    faVolumeDown: faVolumeDown,\n    faVolumeMute: faVolumeMute,\n    faVolumeOff: faVolumeOff,\n    faVolumeUp: faVolumeUp,\n    faVoteYea: faVoteYea,\n    faVrCardboard: faVrCardboard,\n    faWalking: faWalking,\n    faWallet: faWallet,\n    faWarehouse: faWarehouse,\n    faWater: faWater,\n    faWaveSquare: faWaveSquare,\n    faWeight: faWeight,\n    faWeightHanging: faWeightHanging,\n    faWheelchair: faWheelchair,\n    faWifi: faWifi,\n    faWind: faWind,\n    faWindowClose: faWindowClose,\n    faWindowMaximize: faWindowMaximize,\n    faWindowMinimize: faWindowMinimize,\n    faWindowRestore: faWindowRestore,\n    faWineBottle: faWineBottle,\n    faWineGlass: faWineGlass,\n    faWineGlassAlt: faWineGlassAlt,\n    faWonSign: faWonSign,\n    faWrench: faWrench,\n    faXRay: faXRay,\n    faYenSign: faYenSign,\n    faYinYang: faYinYang\n  };\n\n  exports.fas = _iconsCache;\n  exports.prefix = prefix;\n  exports.faAd = faAd;\n  exports.faAddressBook = faAddressBook;\n  exports.faAddressCard = faAddressCard;\n  exports.faAdjust = faAdjust;\n  exports.faAirFreshener = faAirFreshener;\n  exports.faAlignCenter = faAlignCenter;\n  exports.faAlignJustify = faAlignJustify;\n  exports.faAlignLeft = faAlignLeft;\n  exports.faAlignRight = faAlignRight;\n  exports.faAllergies = faAllergies;\n  exports.faAmbulance = faAmbulance;\n  exports.faAmericanSignLanguageInterpreting = faAmericanSignLanguageInterpreting;\n  exports.faAnchor = faAnchor;\n  exports.faAngleDoubleDown = faAngleDoubleDown;\n  exports.faAngleDoubleLeft = faAngleDoubleLeft;\n  exports.faAngleDoubleRight = faAngleDoubleRight;\n  exports.faAngleDoubleUp = faAngleDoubleUp;\n  exports.faAngleDown = faAngleDown;\n  exports.faAngleLeft = faAngleLeft;\n  exports.faAngleRight = faAngleRight;\n  exports.faAngleUp = faAngleUp;\n  exports.faAngry = faAngry;\n  exports.faAnkh = faAnkh;\n  exports.faAppleAlt = faAppleAlt;\n  exports.faArchive = faArchive;\n  exports.faArchway = faArchway;\n  exports.faArrowAltCircleDown = faArrowAltCircleDown;\n  exports.faArrowAltCircleLeft = faArrowAltCircleLeft;\n  exports.faArrowAltCircleRight = faArrowAltCircleRight;\n  exports.faArrowAltCircleUp = faArrowAltCircleUp;\n  exports.faArrowCircleDown = faArrowCircleDown;\n  exports.faArrowCircleLeft = faArrowCircleLeft;\n  exports.faArrowCircleRight = faArrowCircleRight;\n  exports.faArrowCircleUp = faArrowCircleUp;\n  exports.faArrowDown = faArrowDown;\n  exports.faArrowLeft = faArrowLeft;\n  exports.faArrowRight = faArrowRight;\n  exports.faArrowUp = faArrowUp;\n  exports.faArrowsAlt = faArrowsAlt;\n  exports.faArrowsAltH = faArrowsAltH;\n  exports.faArrowsAltV = faArrowsAltV;\n  exports.faAssistiveListeningSystems = faAssistiveListeningSystems;\n  exports.faAsterisk = faAsterisk;\n  exports.faAt = faAt;\n  exports.faAtlas = faAtlas;\n  exports.faAtom = faAtom;\n  exports.faAudioDescription = faAudioDescription;\n  exports.faAward = faAward;\n  exports.faBaby = faBaby;\n  exports.faBabyCarriage = faBabyCarriage;\n  exports.faBackspace = faBackspace;\n  exports.faBackward = faBackward;\n  exports.faBacon = faBacon;\n  exports.faBalanceScale = faBalanceScale;\n  exports.faBan = faBan;\n  exports.faBandAid = faBandAid;\n  exports.faBarcode = faBarcode;\n  exports.faBars = faBars;\n  exports.faBaseballBall = faBaseballBall;\n  exports.faBasketballBall = faBasketballBall;\n  exports.faBath = faBath;\n  exports.faBatteryEmpty = faBatteryEmpty;\n  exports.faBatteryFull = faBatteryFull;\n  exports.faBatteryHalf = faBatteryHalf;\n  exports.faBatteryQuarter = faBatteryQuarter;\n  exports.faBatteryThreeQuarters = faBatteryThreeQuarters;\n  exports.faBed = faBed;\n  exports.faBeer = faBeer;\n  exports.faBell = faBell;\n  exports.faBellSlash = faBellSlash;\n  exports.faBezierCurve = faBezierCurve;\n  exports.faBible = faBible;\n  exports.faBicycle = faBicycle;\n  exports.faBinoculars = faBinoculars;\n  exports.faBiohazard = faBiohazard;\n  exports.faBirthdayCake = faBirthdayCake;\n  exports.faBlender = faBlender;\n  exports.faBlenderPhone = faBlenderPhone;\n  exports.faBlind = faBlind;\n  exports.faBlog = faBlog;\n  exports.faBold = faBold;\n  exports.faBolt = faBolt;\n  exports.faBomb = faBomb;\n  exports.faBone = faBone;\n  exports.faBong = faBong;\n  exports.faBook = faBook;\n  exports.faBookDead = faBookDead;\n  exports.faBookMedical = faBookMedical;\n  exports.faBookOpen = faBookOpen;\n  exports.faBookReader = faBookReader;\n  exports.faBookmark = faBookmark;\n  exports.faBowlingBall = faBowlingBall;\n  exports.faBox = faBox;\n  exports.faBoxOpen = faBoxOpen;\n  exports.faBoxes = faBoxes;\n  exports.faBraille = faBraille;\n  exports.faBrain = faBrain;\n  exports.faBreadSlice = faBreadSlice;\n  exports.faBriefcase = faBriefcase;\n  exports.faBriefcaseMedical = faBriefcaseMedical;\n  exports.faBroadcastTower = faBroadcastTower;\n  exports.faBroom = faBroom;\n  exports.faBrush = faBrush;\n  exports.faBug = faBug;\n  exports.faBuilding = faBuilding;\n  exports.faBullhorn = faBullhorn;\n  exports.faBullseye = faBullseye;\n  exports.faBurn = faBurn;\n  exports.faBus = faBus;\n  exports.faBusAlt = faBusAlt;\n  exports.faBusinessTime = faBusinessTime;\n  exports.faCalculator = faCalculator;\n  exports.faCalendar = faCalendar;\n  exports.faCalendarAlt = faCalendarAlt;\n  exports.faCalendarCheck = faCalendarCheck;\n  exports.faCalendarDay = faCalendarDay;\n  exports.faCalendarMinus = faCalendarMinus;\n  exports.faCalendarPlus = faCalendarPlus;\n  exports.faCalendarTimes = faCalendarTimes;\n  exports.faCalendarWeek = faCalendarWeek;\n  exports.faCamera = faCamera;\n  exports.faCameraRetro = faCameraRetro;\n  exports.faCampground = faCampground;\n  exports.faCandyCane = faCandyCane;\n  exports.faCannabis = faCannabis;\n  exports.faCapsules = faCapsules;\n  exports.faCar = faCar;\n  exports.faCarAlt = faCarAlt;\n  exports.faCarBattery = faCarBattery;\n  exports.faCarCrash = faCarCrash;\n  exports.faCarSide = faCarSide;\n  exports.faCaretDown = faCaretDown;\n  exports.faCaretLeft = faCaretLeft;\n  exports.faCaretRight = faCaretRight;\n  exports.faCaretSquareDown = faCaretSquareDown;\n  exports.faCaretSquareLeft = faCaretSquareLeft;\n  exports.faCaretSquareRight = faCaretSquareRight;\n  exports.faCaretSquareUp = faCaretSquareUp;\n  exports.faCaretUp = faCaretUp;\n  exports.faCarrot = faCarrot;\n  exports.faCartArrowDown = faCartArrowDown;\n  exports.faCartPlus = faCartPlus;\n  exports.faCashRegister = faCashRegister;\n  exports.faCat = faCat;\n  exports.faCertificate = faCertificate;\n  exports.faChair = faChair;\n  exports.faChalkboard = faChalkboard;\n  exports.faChalkboardTeacher = faChalkboardTeacher;\n  exports.faChargingStation = faChargingStation;\n  exports.faChartArea = faChartArea;\n  exports.faChartBar = faChartBar;\n  exports.faChartLine = faChartLine;\n  exports.faChartPie = faChartPie;\n  exports.faCheck = faCheck;\n  exports.faCheckCircle = faCheckCircle;\n  exports.faCheckDouble = faCheckDouble;\n  exports.faCheckSquare = faCheckSquare;\n  exports.faCheese = faCheese;\n  exports.faChess = faChess;\n  exports.faChessBishop = faChessBishop;\n  exports.faChessBoard = faChessBoard;\n  exports.faChessKing = faChessKing;\n  exports.faChessKnight = faChessKnight;\n  exports.faChessPawn = faChessPawn;\n  exports.faChessQueen = faChessQueen;\n  exports.faChessRook = faChessRook;\n  exports.faChevronCircleDown = faChevronCircleDown;\n  exports.faChevronCircleLeft = faChevronCircleLeft;\n  exports.faChevronCircleRight = faChevronCircleRight;\n  exports.faChevronCircleUp = faChevronCircleUp;\n  exports.faChevronDown = faChevronDown;\n  exports.faChevronLeft = faChevronLeft;\n  exports.faChevronRight = faChevronRight;\n  exports.faChevronUp = faChevronUp;\n  exports.faChild = faChild;\n  exports.faChurch = faChurch;\n  exports.faCircle = faCircle;\n  exports.faCircleNotch = faCircleNotch;\n  exports.faCity = faCity;\n  exports.faClinicMedical = faClinicMedical;\n  exports.faClipboard = faClipboard;\n  exports.faClipboardCheck = faClipboardCheck;\n  exports.faClipboardList = faClipboardList;\n  exports.faClock = faClock;\n  exports.faClone = faClone;\n  exports.faClosedCaptioning = faClosedCaptioning;\n  exports.faCloud = faCloud;\n  exports.faCloudDownloadAlt = faCloudDownloadAlt;\n  exports.faCloudMeatball = faCloudMeatball;\n  exports.faCloudMoon = faCloudMoon;\n  exports.faCloudMoonRain = faCloudMoonRain;\n  exports.faCloudRain = faCloudRain;\n  exports.faCloudShowersHeavy = faCloudShowersHeavy;\n  exports.faCloudSun = faCloudSun;\n  exports.faCloudSunRain = faCloudSunRain;\n  exports.faCloudUploadAlt = faCloudUploadAlt;\n  exports.faCocktail = faCocktail;\n  exports.faCode = faCode;\n  exports.faCodeBranch = faCodeBranch;\n  exports.faCoffee = faCoffee;\n  exports.faCog = faCog;\n  exports.faCogs = faCogs;\n  exports.faCoins = faCoins;\n  exports.faColumns = faColumns;\n  exports.faComment = faComment;\n  exports.faCommentAlt = faCommentAlt;\n  exports.faCommentDollar = faCommentDollar;\n  exports.faCommentDots = faCommentDots;\n  exports.faCommentMedical = faCommentMedical;\n  exports.faCommentSlash = faCommentSlash;\n  exports.faComments = faComments;\n  exports.faCommentsDollar = faCommentsDollar;\n  exports.faCompactDisc = faCompactDisc;\n  exports.faCompass = faCompass;\n  exports.faCompress = faCompress;\n  exports.faCompressArrowsAlt = faCompressArrowsAlt;\n  exports.faConciergeBell = faConciergeBell;\n  exports.faCookie = faCookie;\n  exports.faCookieBite = faCookieBite;\n  exports.faCopy = faCopy;\n  exports.faCopyright = faCopyright;\n  exports.faCouch = faCouch;\n  exports.faCreditCard = faCreditCard;\n  exports.faCrop = faCrop;\n  exports.faCropAlt = faCropAlt;\n  exports.faCross = faCross;\n  exports.faCrosshairs = faCrosshairs;\n  exports.faCrow = faCrow;\n  exports.faCrown = faCrown;\n  exports.faCrutch = faCrutch;\n  exports.faCube = faCube;\n  exports.faCubes = faCubes;\n  exports.faCut = faCut;\n  exports.faDatabase = faDatabase;\n  exports.faDeaf = faDeaf;\n  exports.faDemocrat = faDemocrat;\n  exports.faDesktop = faDesktop;\n  exports.faDharmachakra = faDharmachakra;\n  exports.faDiagnoses = faDiagnoses;\n  exports.faDice = faDice;\n  exports.faDiceD20 = faDiceD20;\n  exports.faDiceD6 = faDiceD6;\n  exports.faDiceFive = faDiceFive;\n  exports.faDiceFour = faDiceFour;\n  exports.faDiceOne = faDiceOne;\n  exports.faDiceSix = faDiceSix;\n  exports.faDiceThree = faDiceThree;\n  exports.faDiceTwo = faDiceTwo;\n  exports.faDigitalTachograph = faDigitalTachograph;\n  exports.faDirections = faDirections;\n  exports.faDivide = faDivide;\n  exports.faDizzy = faDizzy;\n  exports.faDna = faDna;\n  exports.faDog = faDog;\n  exports.faDollarSign = faDollarSign;\n  exports.faDolly = faDolly;\n  exports.faDollyFlatbed = faDollyFlatbed;\n  exports.faDonate = faDonate;\n  exports.faDoorClosed = faDoorClosed;\n  exports.faDoorOpen = faDoorOpen;\n  exports.faDotCircle = faDotCircle;\n  exports.faDove = faDove;\n  exports.faDownload = faDownload;\n  exports.faDraftingCompass = faDraftingCompass;\n  exports.faDragon = faDragon;\n  exports.faDrawPolygon = faDrawPolygon;\n  exports.faDrum = faDrum;\n  exports.faDrumSteelpan = faDrumSteelpan;\n  exports.faDrumstickBite = faDrumstickBite;\n  exports.faDumbbell = faDumbbell;\n  exports.faDumpster = faDumpster;\n  exports.faDumpsterFire = faDumpsterFire;\n  exports.faDungeon = faDungeon;\n  exports.faEdit = faEdit;\n  exports.faEgg = faEgg;\n  exports.faEject = faEject;\n  exports.faEllipsisH = faEllipsisH;\n  exports.faEllipsisV = faEllipsisV;\n  exports.faEnvelope = faEnvelope;\n  exports.faEnvelopeOpen = faEnvelopeOpen;\n  exports.faEnvelopeOpenText = faEnvelopeOpenText;\n  exports.faEnvelopeSquare = faEnvelopeSquare;\n  exports.faEquals = faEquals;\n  exports.faEraser = faEraser;\n  exports.faEthernet = faEthernet;\n  exports.faEuroSign = faEuroSign;\n  exports.faExchangeAlt = faExchangeAlt;\n  exports.faExclamation = faExclamation;\n  exports.faExclamationCircle = faExclamationCircle;\n  exports.faExclamationTriangle = faExclamationTriangle;\n  exports.faExpand = faExpand;\n  exports.faExpandArrowsAlt = faExpandArrowsAlt;\n  exports.faExternalLinkAlt = faExternalLinkAlt;\n  exports.faExternalLinkSquareAlt = faExternalLinkSquareAlt;\n  exports.faEye = faEye;\n  exports.faEyeDropper = faEyeDropper;\n  exports.faEyeSlash = faEyeSlash;\n  exports.faFastBackward = faFastBackward;\n  exports.faFastForward = faFastForward;\n  exports.faFax = faFax;\n  exports.faFeather = faFeather;\n  exports.faFeatherAlt = faFeatherAlt;\n  exports.faFemale = faFemale;\n  exports.faFighterJet = faFighterJet;\n  exports.faFile = faFile;\n  exports.faFileAlt = faFileAlt;\n  exports.faFileArchive = faFileArchive;\n  exports.faFileAudio = faFileAudio;\n  exports.faFileCode = faFileCode;\n  exports.faFileContract = faFileContract;\n  exports.faFileCsv = faFileCsv;\n  exports.faFileDownload = faFileDownload;\n  exports.faFileExcel = faFileExcel;\n  exports.faFileExport = faFileExport;\n  exports.faFileImage = faFileImage;\n  exports.faFileImport = faFileImport;\n  exports.faFileInvoice = faFileInvoice;\n  exports.faFileInvoiceDollar = faFileInvoiceDollar;\n  exports.faFileMedical = faFileMedical;\n  exports.faFileMedicalAlt = faFileMedicalAlt;\n  exports.faFilePdf = faFilePdf;\n  exports.faFilePowerpoint = faFilePowerpoint;\n  exports.faFilePrescription = faFilePrescription;\n  exports.faFileSignature = faFileSignature;\n  exports.faFileUpload = faFileUpload;\n  exports.faFileVideo = faFileVideo;\n  exports.faFileWord = faFileWord;\n  exports.faFill = faFill;\n  exports.faFillDrip = faFillDrip;\n  exports.faFilm = faFilm;\n  exports.faFilter = faFilter;\n  exports.faFingerprint = faFingerprint;\n  exports.faFire = faFire;\n  exports.faFireAlt = faFireAlt;\n  exports.faFireExtinguisher = faFireExtinguisher;\n  exports.faFirstAid = faFirstAid;\n  exports.faFish = faFish;\n  exports.faFistRaised = faFistRaised;\n  exports.faFlag = faFlag;\n  exports.faFlagCheckered = faFlagCheckered;\n  exports.faFlagUsa = faFlagUsa;\n  exports.faFlask = faFlask;\n  exports.faFlushed = faFlushed;\n  exports.faFolder = faFolder;\n  exports.faFolderMinus = faFolderMinus;\n  exports.faFolderOpen = faFolderOpen;\n  exports.faFolderPlus = faFolderPlus;\n  exports.faFont = faFont;\n  exports.faFontAwesomeLogoFull = faFontAwesomeLogoFull;\n  exports.faFootballBall = faFootballBall;\n  exports.faForward = faForward;\n  exports.faFrog = faFrog;\n  exports.faFrown = faFrown;\n  exports.faFrownOpen = faFrownOpen;\n  exports.faFunnelDollar = faFunnelDollar;\n  exports.faFutbol = faFutbol;\n  exports.faGamepad = faGamepad;\n  exports.faGasPump = faGasPump;\n  exports.faGavel = faGavel;\n  exports.faGem = faGem;\n  exports.faGenderless = faGenderless;\n  exports.faGhost = faGhost;\n  exports.faGift = faGift;\n  exports.faGifts = faGifts;\n  exports.faGlassCheers = faGlassCheers;\n  exports.faGlassMartini = faGlassMartini;\n  exports.faGlassMartiniAlt = faGlassMartiniAlt;\n  exports.faGlassWhiskey = faGlassWhiskey;\n  exports.faGlasses = faGlasses;\n  exports.faGlobe = faGlobe;\n  exports.faGlobeAfrica = faGlobeAfrica;\n  exports.faGlobeAmericas = faGlobeAmericas;\n  exports.faGlobeAsia = faGlobeAsia;\n  exports.faGlobeEurope = faGlobeEurope;\n  exports.faGolfBall = faGolfBall;\n  exports.faGopuram = faGopuram;\n  exports.faGraduationCap = faGraduationCap;\n  exports.faGreaterThan = faGreaterThan;\n  exports.faGreaterThanEqual = faGreaterThanEqual;\n  exports.faGrimace = faGrimace;\n  exports.faGrin = faGrin;\n  exports.faGrinAlt = faGrinAlt;\n  exports.faGrinBeam = faGrinBeam;\n  exports.faGrinBeamSweat = faGrinBeamSweat;\n  exports.faGrinHearts = faGrinHearts;\n  exports.faGrinSquint = faGrinSquint;\n  exports.faGrinSquintTears = faGrinSquintTears;\n  exports.faGrinStars = faGrinStars;\n  exports.faGrinTears = faGrinTears;\n  exports.faGrinTongue = faGrinTongue;\n  exports.faGrinTongueSquint = faGrinTongueSquint;\n  exports.faGrinTongueWink = faGrinTongueWink;\n  exports.faGrinWink = faGrinWink;\n  exports.faGripHorizontal = faGripHorizontal;\n  exports.faGripLines = faGripLines;\n  exports.faGripLinesVertical = faGripLinesVertical;\n  exports.faGripVertical = faGripVertical;\n  exports.faGuitar = faGuitar;\n  exports.faHSquare = faHSquare;\n  exports.faHamburger = faHamburger;\n  exports.faHammer = faHammer;\n  exports.faHamsa = faHamsa;\n  exports.faHandHolding = faHandHolding;\n  exports.faHandHoldingHeart = faHandHoldingHeart;\n  exports.faHandHoldingUsd = faHandHoldingUsd;\n  exports.faHandLizard = faHandLizard;\n  exports.faHandMiddleFinger = faHandMiddleFinger;\n  exports.faHandPaper = faHandPaper;\n  exports.faHandPeace = faHandPeace;\n  exports.faHandPointDown = faHandPointDown;\n  exports.faHandPointLeft = faHandPointLeft;\n  exports.faHandPointRight = faHandPointRight;\n  exports.faHandPointUp = faHandPointUp;\n  exports.faHandPointer = faHandPointer;\n  exports.faHandRock = faHandRock;\n  exports.faHandScissors = faHandScissors;\n  exports.faHandSpock = faHandSpock;\n  exports.faHands = faHands;\n  exports.faHandsHelping = faHandsHelping;\n  exports.faHandshake = faHandshake;\n  exports.faHanukiah = faHanukiah;\n  exports.faHardHat = faHardHat;\n  exports.faHashtag = faHashtag;\n  exports.faHatWizard = faHatWizard;\n  exports.faHaykal = faHaykal;\n  exports.faHdd = faHdd;\n  exports.faHeading = faHeading;\n  exports.faHeadphones = faHeadphones;\n  exports.faHeadphonesAlt = faHeadphonesAlt;\n  exports.faHeadset = faHeadset;\n  exports.faHeart = faHeart;\n  exports.faHeartBroken = faHeartBroken;\n  exports.faHeartbeat = faHeartbeat;\n  exports.faHelicopter = faHelicopter;\n  exports.faHighlighter = faHighlighter;\n  exports.faHiking = faHiking;\n  exports.faHippo = faHippo;\n  exports.faHistory = faHistory;\n  exports.faHockeyPuck = faHockeyPuck;\n  exports.faHollyBerry = faHollyBerry;\n  exports.faHome = faHome;\n  exports.faHorse = faHorse;\n  exports.faHorseHead = faHorseHead;\n  exports.faHospital = faHospital;\n  exports.faHospitalAlt = faHospitalAlt;\n  exports.faHospitalSymbol = faHospitalSymbol;\n  exports.faHotTub = faHotTub;\n  exports.faHotdog = faHotdog;\n  exports.faHotel = faHotel;\n  exports.faHourglass = faHourglass;\n  exports.faHourglassEnd = faHourglassEnd;\n  exports.faHourglassHalf = faHourglassHalf;\n  exports.faHourglassStart = faHourglassStart;\n  exports.faHouseDamage = faHouseDamage;\n  exports.faHryvnia = faHryvnia;\n  exports.faICursor = faICursor;\n  exports.faIceCream = faIceCream;\n  exports.faIcicles = faIcicles;\n  exports.faIdBadge = faIdBadge;\n  exports.faIdCard = faIdCard;\n  exports.faIdCardAlt = faIdCardAlt;\n  exports.faIgloo = faIgloo;\n  exports.faImage = faImage;\n  exports.faImages = faImages;\n  exports.faInbox = faInbox;\n  exports.faIndent = faIndent;\n  exports.faIndustry = faIndustry;\n  exports.faInfinity = faInfinity;\n  exports.faInfo = faInfo;\n  exports.faInfoCircle = faInfoCircle;\n  exports.faItalic = faItalic;\n  exports.faJedi = faJedi;\n  exports.faJoint = faJoint;\n  exports.faJournalWhills = faJournalWhills;\n  exports.faKaaba = faKaaba;\n  exports.faKey = faKey;\n  exports.faKeyboard = faKeyboard;\n  exports.faKhanda = faKhanda;\n  exports.faKiss = faKiss;\n  exports.faKissBeam = faKissBeam;\n  exports.faKissWinkHeart = faKissWinkHeart;\n  exports.faKiwiBird = faKiwiBird;\n  exports.faLandmark = faLandmark;\n  exports.faLanguage = faLanguage;\n  exports.faLaptop = faLaptop;\n  exports.faLaptopCode = faLaptopCode;\n  exports.faLaptopMedical = faLaptopMedical;\n  exports.faLaugh = faLaugh;\n  exports.faLaughBeam = faLaughBeam;\n  exports.faLaughSquint = faLaughSquint;\n  exports.faLaughWink = faLaughWink;\n  exports.faLayerGroup = faLayerGroup;\n  exports.faLeaf = faLeaf;\n  exports.faLemon = faLemon;\n  exports.faLessThan = faLessThan;\n  exports.faLessThanEqual = faLessThanEqual;\n  exports.faLevelDownAlt = faLevelDownAlt;\n  exports.faLevelUpAlt = faLevelUpAlt;\n  exports.faLifeRing = faLifeRing;\n  exports.faLightbulb = faLightbulb;\n  exports.faLink = faLink;\n  exports.faLiraSign = faLiraSign;\n  exports.faList = faList;\n  exports.faListAlt = faListAlt;\n  exports.faListOl = faListOl;\n  exports.faListUl = faListUl;\n  exports.faLocationArrow = faLocationArrow;\n  exports.faLock = faLock;\n  exports.faLockOpen = faLockOpen;\n  exports.faLongArrowAltDown = faLongArrowAltDown;\n  exports.faLongArrowAltLeft = faLongArrowAltLeft;\n  exports.faLongArrowAltRight = faLongArrowAltRight;\n  exports.faLongArrowAltUp = faLongArrowAltUp;\n  exports.faLowVision = faLowVision;\n  exports.faLuggageCart = faLuggageCart;\n  exports.faMagic = faMagic;\n  exports.faMagnet = faMagnet;\n  exports.faMailBulk = faMailBulk;\n  exports.faMale = faMale;\n  exports.faMap = faMap;\n  exports.faMapMarked = faMapMarked;\n  exports.faMapMarkedAlt = faMapMarkedAlt;\n  exports.faMapMarker = faMapMarker;\n  exports.faMapMarkerAlt = faMapMarkerAlt;\n  exports.faMapPin = faMapPin;\n  exports.faMapSigns = faMapSigns;\n  exports.faMarker = faMarker;\n  exports.faMars = faMars;\n  exports.faMarsDouble = faMarsDouble;\n  exports.faMarsStroke = faMarsStroke;\n  exports.faMarsStrokeH = faMarsStrokeH;\n  exports.faMarsStrokeV = faMarsStrokeV;\n  exports.faMask = faMask;\n  exports.faMedal = faMedal;\n  exports.faMedkit = faMedkit;\n  exports.faMeh = faMeh;\n  exports.faMehBlank = faMehBlank;\n  exports.faMehRollingEyes = faMehRollingEyes;\n  exports.faMemory = faMemory;\n  exports.faMenorah = faMenorah;\n  exports.faMercury = faMercury;\n  exports.faMeteor = faMeteor;\n  exports.faMicrochip = faMicrochip;\n  exports.faMicrophone = faMicrophone;\n  exports.faMicrophoneAlt = faMicrophoneAlt;\n  exports.faMicrophoneAltSlash = faMicrophoneAltSlash;\n  exports.faMicrophoneSlash = faMicrophoneSlash;\n  exports.faMicroscope = faMicroscope;\n  exports.faMinus = faMinus;\n  exports.faMinusCircle = faMinusCircle;\n  exports.faMinusSquare = faMinusSquare;\n  exports.faMitten = faMitten;\n  exports.faMobile = faMobile;\n  exports.faMobileAlt = faMobileAlt;\n  exports.faMoneyBill = faMoneyBill;\n  exports.faMoneyBillAlt = faMoneyBillAlt;\n  exports.faMoneyBillWave = faMoneyBillWave;\n  exports.faMoneyBillWaveAlt = faMoneyBillWaveAlt;\n  exports.faMoneyCheck = faMoneyCheck;\n  exports.faMoneyCheckAlt = faMoneyCheckAlt;\n  exports.faMonument = faMonument;\n  exports.faMoon = faMoon;\n  exports.faMortarPestle = faMortarPestle;\n  exports.faMosque = faMosque;\n  exports.faMotorcycle = faMotorcycle;\n  exports.faMountain = faMountain;\n  exports.faMousePointer = faMousePointer;\n  exports.faMugHot = faMugHot;\n  exports.faMusic = faMusic;\n  exports.faNetworkWired = faNetworkWired;\n  exports.faNeuter = faNeuter;\n  exports.faNewspaper = faNewspaper;\n  exports.faNotEqual = faNotEqual;\n  exports.faNotesMedical = faNotesMedical;\n  exports.faObjectGroup = faObjectGroup;\n  exports.faObjectUngroup = faObjectUngroup;\n  exports.faOilCan = faOilCan;\n  exports.faOm = faOm;\n  exports.faOtter = faOtter;\n  exports.faOutdent = faOutdent;\n  exports.faPager = faPager;\n  exports.faPaintBrush = faPaintBrush;\n  exports.faPaintRoller = faPaintRoller;\n  exports.faPalette = faPalette;\n  exports.faPallet = faPallet;\n  exports.faPaperPlane = faPaperPlane;\n  exports.faPaperclip = faPaperclip;\n  exports.faParachuteBox = faParachuteBox;\n  exports.faParagraph = faParagraph;\n  exports.faParking = faParking;\n  exports.faPassport = faPassport;\n  exports.faPastafarianism = faPastafarianism;\n  exports.faPaste = faPaste;\n  exports.faPause = faPause;\n  exports.faPauseCircle = faPauseCircle;\n  exports.faPaw = faPaw;\n  exports.faPeace = faPeace;\n  exports.faPen = faPen;\n  exports.faPenAlt = faPenAlt;\n  exports.faPenFancy = faPenFancy;\n  exports.faPenNib = faPenNib;\n  exports.faPenSquare = faPenSquare;\n  exports.faPencilAlt = faPencilAlt;\n  exports.faPencilRuler = faPencilRuler;\n  exports.faPeopleCarry = faPeopleCarry;\n  exports.faPepperHot = faPepperHot;\n  exports.faPercent = faPercent;\n  exports.faPercentage = faPercentage;\n  exports.faPersonBooth = faPersonBooth;\n  exports.faPhone = faPhone;\n  exports.faPhoneSlash = faPhoneSlash;\n  exports.faPhoneSquare = faPhoneSquare;\n  exports.faPhoneVolume = faPhoneVolume;\n  exports.faPiggyBank = faPiggyBank;\n  exports.faPills = faPills;\n  exports.faPizzaSlice = faPizzaSlice;\n  exports.faPlaceOfWorship = faPlaceOfWorship;\n  exports.faPlane = faPlane;\n  exports.faPlaneArrival = faPlaneArrival;\n  exports.faPlaneDeparture = faPlaneDeparture;\n  exports.faPlay = faPlay;\n  exports.faPlayCircle = faPlayCircle;\n  exports.faPlug = faPlug;\n  exports.faPlus = faPlus;\n  exports.faPlusCircle = faPlusCircle;\n  exports.faPlusSquare = faPlusSquare;\n  exports.faPodcast = faPodcast;\n  exports.faPoll = faPoll;\n  exports.faPollH = faPollH;\n  exports.faPoo = faPoo;\n  exports.faPooStorm = faPooStorm;\n  exports.faPoop = faPoop;\n  exports.faPortrait = faPortrait;\n  exports.faPoundSign = faPoundSign;\n  exports.faPowerOff = faPowerOff;\n  exports.faPray = faPray;\n  exports.faPrayingHands = faPrayingHands;\n  exports.faPrescription = faPrescription;\n  exports.faPrescriptionBottle = faPrescriptionBottle;\n  exports.faPrescriptionBottleAlt = faPrescriptionBottleAlt;\n  exports.faPrint = faPrint;\n  exports.faProcedures = faProcedures;\n  exports.faProjectDiagram = faProjectDiagram;\n  exports.faPuzzlePiece = faPuzzlePiece;\n  exports.faQrcode = faQrcode;\n  exports.faQuestion = faQuestion;\n  exports.faQuestionCircle = faQuestionCircle;\n  exports.faQuidditch = faQuidditch;\n  exports.faQuoteLeft = faQuoteLeft;\n  exports.faQuoteRight = faQuoteRight;\n  exports.faQuran = faQuran;\n  exports.faRadiation = faRadiation;\n  exports.faRadiationAlt = faRadiationAlt;\n  exports.faRainbow = faRainbow;\n  exports.faRandom = faRandom;\n  exports.faReceipt = faReceipt;\n  exports.faRecycle = faRecycle;\n  exports.faRedo = faRedo;\n  exports.faRedoAlt = faRedoAlt;\n  exports.faRegistered = faRegistered;\n  exports.faReply = faReply;\n  exports.faReplyAll = faReplyAll;\n  exports.faRepublican = faRepublican;\n  exports.faRestroom = faRestroom;\n  exports.faRetweet = faRetweet;\n  exports.faRibbon = faRibbon;\n  exports.faRing = faRing;\n  exports.faRoad = faRoad;\n  exports.faRobot = faRobot;\n  exports.faRocket = faRocket;\n  exports.faRoute = faRoute;\n  exports.faRss = faRss;\n  exports.faRssSquare = faRssSquare;\n  exports.faRubleSign = faRubleSign;\n  exports.faRuler = faRuler;\n  exports.faRulerCombined = faRulerCombined;\n  exports.faRulerHorizontal = faRulerHorizontal;\n  exports.faRulerVertical = faRulerVertical;\n  exports.faRunning = faRunning;\n  exports.faRupeeSign = faRupeeSign;\n  exports.faSadCry = faSadCry;\n  exports.faSadTear = faSadTear;\n  exports.faSatellite = faSatellite;\n  exports.faSatelliteDish = faSatelliteDish;\n  exports.faSave = faSave;\n  exports.faSchool = faSchool;\n  exports.faScrewdriver = faScrewdriver;\n  exports.faScroll = faScroll;\n  exports.faSdCard = faSdCard;\n  exports.faSearch = faSearch;\n  exports.faSearchDollar = faSearchDollar;\n  exports.faSearchLocation = faSearchLocation;\n  exports.faSearchMinus = faSearchMinus;\n  exports.faSearchPlus = faSearchPlus;\n  exports.faSeedling = faSeedling;\n  exports.faServer = faServer;\n  exports.faShapes = faShapes;\n  exports.faShare = faShare;\n  exports.faShareAlt = faShareAlt;\n  exports.faShareAltSquare = faShareAltSquare;\n  exports.faShareSquare = faShareSquare;\n  exports.faShekelSign = faShekelSign;\n  exports.faShieldAlt = faShieldAlt;\n  exports.faShip = faShip;\n  exports.faShippingFast = faShippingFast;\n  exports.faShoePrints = faShoePrints;\n  exports.faShoppingBag = faShoppingBag;\n  exports.faShoppingBasket = faShoppingBasket;\n  exports.faShoppingCart = faShoppingCart;\n  exports.faShower = faShower;\n  exports.faShuttleVan = faShuttleVan;\n  exports.faSign = faSign;\n  exports.faSignInAlt = faSignInAlt;\n  exports.faSignLanguage = faSignLanguage;\n  exports.faSignOutAlt = faSignOutAlt;\n  exports.faSignal = faSignal;\n  exports.faSignature = faSignature;\n  exports.faSimCard = faSimCard;\n  exports.faSitemap = faSitemap;\n  exports.faSkating = faSkating;\n  exports.faSkiing = faSkiing;\n  exports.faSkiingNordic = faSkiingNordic;\n  exports.faSkull = faSkull;\n  exports.faSkullCrossbones = faSkullCrossbones;\n  exports.faSlash = faSlash;\n  exports.faSleigh = faSleigh;\n  exports.faSlidersH = faSlidersH;\n  exports.faSmile = faSmile;\n  exports.faSmileBeam = faSmileBeam;\n  exports.faSmileWink = faSmileWink;\n  exports.faSmog = faSmog;\n  exports.faSmoking = faSmoking;\n  exports.faSmokingBan = faSmokingBan;\n  exports.faSms = faSms;\n  exports.faSnowboarding = faSnowboarding;\n  exports.faSnowflake = faSnowflake;\n  exports.faSnowman = faSnowman;\n  exports.faSnowplow = faSnowplow;\n  exports.faSocks = faSocks;\n  exports.faSolarPanel = faSolarPanel;\n  exports.faSort = faSort;\n  exports.faSortAlphaDown = faSortAlphaDown;\n  exports.faSortAlphaUp = faSortAlphaUp;\n  exports.faSortAmountDown = faSortAmountDown;\n  exports.faSortAmountUp = faSortAmountUp;\n  exports.faSortDown = faSortDown;\n  exports.faSortNumericDown = faSortNumericDown;\n  exports.faSortNumericUp = faSortNumericUp;\n  exports.faSortUp = faSortUp;\n  exports.faSpa = faSpa;\n  exports.faSpaceShuttle = faSpaceShuttle;\n  exports.faSpider = faSpider;\n  exports.faSpinner = faSpinner;\n  exports.faSplotch = faSplotch;\n  exports.faSprayCan = faSprayCan;\n  exports.faSquare = faSquare;\n  exports.faSquareFull = faSquareFull;\n  exports.faSquareRootAlt = faSquareRootAlt;\n  exports.faStamp = faStamp;\n  exports.faStar = faStar;\n  exports.faStarAndCrescent = faStarAndCrescent;\n  exports.faStarHalf = faStarHalf;\n  exports.faStarHalfAlt = faStarHalfAlt;\n  exports.faStarOfDavid = faStarOfDavid;\n  exports.faStarOfLife = faStarOfLife;\n  exports.faStepBackward = faStepBackward;\n  exports.faStepForward = faStepForward;\n  exports.faStethoscope = faStethoscope;\n  exports.faStickyNote = faStickyNote;\n  exports.faStop = faStop;\n  exports.faStopCircle = faStopCircle;\n  exports.faStopwatch = faStopwatch;\n  exports.faStore = faStore;\n  exports.faStoreAlt = faStoreAlt;\n  exports.faStream = faStream;\n  exports.faStreetView = faStreetView;\n  exports.faStrikethrough = faStrikethrough;\n  exports.faStroopwafel = faStroopwafel;\n  exports.faSubscript = faSubscript;\n  exports.faSubway = faSubway;\n  exports.faSuitcase = faSuitcase;\n  exports.faSuitcaseRolling = faSuitcaseRolling;\n  exports.faSun = faSun;\n  exports.faSuperscript = faSuperscript;\n  exports.faSurprise = faSurprise;\n  exports.faSwatchbook = faSwatchbook;\n  exports.faSwimmer = faSwimmer;\n  exports.faSwimmingPool = faSwimmingPool;\n  exports.faSynagogue = faSynagogue;\n  exports.faSync = faSync;\n  exports.faSyncAlt = faSyncAlt;\n  exports.faSyringe = faSyringe;\n  exports.faTable = faTable;\n  exports.faTableTennis = faTableTennis;\n  exports.faTablet = faTablet;\n  exports.faTabletAlt = faTabletAlt;\n  exports.faTablets = faTablets;\n  exports.faTachometerAlt = faTachometerAlt;\n  exports.faTag = faTag;\n  exports.faTags = faTags;\n  exports.faTape = faTape;\n  exports.faTasks = faTasks;\n  exports.faTaxi = faTaxi;\n  exports.faTeeth = faTeeth;\n  exports.faTeethOpen = faTeethOpen;\n  exports.faTemperatureHigh = faTemperatureHigh;\n  exports.faTemperatureLow = faTemperatureLow;\n  exports.faTenge = faTenge;\n  exports.faTerminal = faTerminal;\n  exports.faTextHeight = faTextHeight;\n  exports.faTextWidth = faTextWidth;\n  exports.faTh = faTh;\n  exports.faThLarge = faThLarge;\n  exports.faThList = faThList;\n  exports.faTheaterMasks = faTheaterMasks;\n  exports.faThermometer = faThermometer;\n  exports.faThermometerEmpty = faThermometerEmpty;\n  exports.faThermometerFull = faThermometerFull;\n  exports.faThermometerHalf = faThermometerHalf;\n  exports.faThermometerQuarter = faThermometerQuarter;\n  exports.faThermometerThreeQuarters = faThermometerThreeQuarters;\n  exports.faThumbsDown = faThumbsDown;\n  exports.faThumbsUp = faThumbsUp;\n  exports.faThumbtack = faThumbtack;\n  exports.faTicketAlt = faTicketAlt;\n  exports.faTimes = faTimes;\n  exports.faTimesCircle = faTimesCircle;\n  exports.faTint = faTint;\n  exports.faTintSlash = faTintSlash;\n  exports.faTired = faTired;\n  exports.faToggleOff = faToggleOff;\n  exports.faToggleOn = faToggleOn;\n  exports.faToilet = faToilet;\n  exports.faToiletPaper = faToiletPaper;\n  exports.faToolbox = faToolbox;\n  exports.faTools = faTools;\n  exports.faTooth = faTooth;\n  exports.faTorah = faTorah;\n  exports.faToriiGate = faToriiGate;\n  exports.faTractor = faTractor;\n  exports.faTrademark = faTrademark;\n  exports.faTrafficLight = faTrafficLight;\n  exports.faTrain = faTrain;\n  exports.faTram = faTram;\n  exports.faTransgender = faTransgender;\n  exports.faTransgenderAlt = faTransgenderAlt;\n  exports.faTrash = faTrash;\n  exports.faTrashAlt = faTrashAlt;\n  exports.faTrashRestore = faTrashRestore;\n  exports.faTrashRestoreAlt = faTrashRestoreAlt;\n  exports.faTree = faTree;\n  exports.faTrophy = faTrophy;\n  exports.faTruck = faTruck;\n  exports.faTruckLoading = faTruckLoading;\n  exports.faTruckMonster = faTruckMonster;\n  exports.faTruckMoving = faTruckMoving;\n  exports.faTruckPickup = faTruckPickup;\n  exports.faTshirt = faTshirt;\n  exports.faTty = faTty;\n  exports.faTv = faTv;\n  exports.faUmbrella = faUmbrella;\n  exports.faUmbrellaBeach = faUmbrellaBeach;\n  exports.faUnderline = faUnderline;\n  exports.faUndo = faUndo;\n  exports.faUndoAlt = faUndoAlt;\n  exports.faUniversalAccess = faUniversalAccess;\n  exports.faUniversity = faUniversity;\n  exports.faUnlink = faUnlink;\n  exports.faUnlock = faUnlock;\n  exports.faUnlockAlt = faUnlockAlt;\n  exports.faUpload = faUpload;\n  exports.faUser = faUser;\n  exports.faUserAlt = faUserAlt;\n  exports.faUserAltSlash = faUserAltSlash;\n  exports.faUserAstronaut = faUserAstronaut;\n  exports.faUserCheck = faUserCheck;\n  exports.faUserCircle = faUserCircle;\n  exports.faUserClock = faUserClock;\n  exports.faUserCog = faUserCog;\n  exports.faUserEdit = faUserEdit;\n  exports.faUserFriends = faUserFriends;\n  exports.faUserGraduate = faUserGraduate;\n  exports.faUserInjured = faUserInjured;\n  exports.faUserLock = faUserLock;\n  exports.faUserMd = faUserMd;\n  exports.faUserMinus = faUserMinus;\n  exports.faUserNinja = faUserNinja;\n  exports.faUserNurse = faUserNurse;\n  exports.faUserPlus = faUserPlus;\n  exports.faUserSecret = faUserSecret;\n  exports.faUserShield = faUserShield;\n  exports.faUserSlash = faUserSlash;\n  exports.faUserTag = faUserTag;\n  exports.faUserTie = faUserTie;\n  exports.faUserTimes = faUserTimes;\n  exports.faUsers = faUsers;\n  exports.faUsersCog = faUsersCog;\n  exports.faUtensilSpoon = faUtensilSpoon;\n  exports.faUtensils = faUtensils;\n  exports.faVectorSquare = faVectorSquare;\n  exports.faVenus = faVenus;\n  exports.faVenusDouble = faVenusDouble;\n  exports.faVenusMars = faVenusMars;\n  exports.faVial = faVial;\n  exports.faVials = faVials;\n  exports.faVideo = faVideo;\n  exports.faVideoSlash = faVideoSlash;\n  exports.faVihara = faVihara;\n  exports.faVolleyballBall = faVolleyballBall;\n  exports.faVolumeDown = faVolumeDown;\n  exports.faVolumeMute = faVolumeMute;\n  exports.faVolumeOff = faVolumeOff;\n  exports.faVolumeUp = faVolumeUp;\n  exports.faVoteYea = faVoteYea;\n  exports.faVrCardboard = faVrCardboard;\n  exports.faWalking = faWalking;\n  exports.faWallet = faWallet;\n  exports.faWarehouse = faWarehouse;\n  exports.faWater = faWater;\n  exports.faWaveSquare = faWaveSquare;\n  exports.faWeight = faWeight;\n  exports.faWeightHanging = faWeightHanging;\n  exports.faWheelchair = faWheelchair;\n  exports.faWifi = faWifi;\n  exports.faWind = faWind;\n  exports.faWindowClose = faWindowClose;\n  exports.faWindowMaximize = faWindowMaximize;\n  exports.faWindowMinimize = faWindowMinimize;\n  exports.faWindowRestore = faWindowRestore;\n  exports.faWineBottle = faWineBottle;\n  exports.faWineGlass = faWineGlass;\n  exports.faWineGlassAlt = faWineGlassAlt;\n  exports.faWonSign = faWonSign;\n  exports.faWrench = faWrench;\n  exports.faXRay = faXRay;\n  exports.faYenSign = faYenSign;\n  exports.faYinYang = faYinYang;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\nTHREE.Line2 = function ( geometry, material ) {\n\n\tTHREE.LineSegments2.call( this );\n\n\tthis.type = 'Line2';\n\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.LineGeometry();\n\tthis.material = material !== undefined ? material : new THREE.LineMaterial( { color: Math.random() * 0xffffff } );\n\n};\n\nTHREE.Line2.prototype = Object.assign( Object.create( THREE.LineSegments2.prototype ), {\n\n\tconstructor: THREE.Line2,\n\n\tisLine2: true,\n\n\tcopy: function ( source ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\nTHREE.LineGeometry = function () {\n\n\tTHREE.LineSegmentsGeometry.call( this );\n\n\tthis.type = 'LineGeometry';\n\n};\n\nTHREE.LineGeometry.prototype = Object.assign( Object.create( THREE.LineSegmentsGeometry.prototype ), {\n\n\tconstructor: THREE.LineGeometry,\n\n\tisLineGeometry: true,\n\n\tsetPositions: function ( array ) {\n\n\t\t// converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar points = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tpoints[ 2 * i ] = array[ i ];\n\t\t\tpoints[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tpoints[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tpoints[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tpoints[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tpoints[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tTHREE.LineSegmentsGeometry.prototype.setPositions.call( this, points );\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\t// converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar colors = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tcolors[ 2 * i ] = array[ i ];\n\t\t\tcolors[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tcolors[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tcolors[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tcolors[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tcolors[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tTHREE.LineSegmentsGeometry.prototype.setColors.call( this, colors );\n\n\t\treturn this;\n\n\t},\n\n\tfromLine: function ( line ) {\n\n\t\tvar geometry = line.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tthis.setPositions( geometry.vertices );\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\n\nTHREE.UniformsLib.line = {\n\n\tlinewidth: { value: 1 },\n\tresolution: { value: new THREE.Vector2( 1, 1 ) },\n\tdashScale: { value: 1 },\n\tdashSize: { value: 1 },\n\tgapSize: { value: 1 } // todo FIX - maybe change to totalSize\n\n};\n\nTHREE.ShaderLib[ 'line' ] = {\n\n\tuniforms: THREE.UniformsUtils.merge( [\n\t\tTHREE.UniformsLib.common,\n\t\tTHREE.UniformsLib.fog,\n\t\tTHREE.UniformsLib.line\n\t] ),\n\n\tvertexShader:\n\t\t`\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t`,\n\n\tfragmentShader:\n\t\t`\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\n\n\t\t\t#include <premultiplied_alpha_fragment>\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\n\t\t}\n\t\t`\n};\n\nTHREE.LineMaterial = function ( parameters ) {\n\n\tTHREE.ShaderMaterial.call( this, {\n\n\t\ttype: 'LineMaterial',\n\n\t\tuniforms: THREE.UniformsUtils.clone( THREE.ShaderLib[ 'line' ].uniforms ),\n\n\t\tvertexShader: THREE.ShaderLib[ 'line' ].vertexShader,\n\t\tfragmentShader: THREE.ShaderLib[ 'line' ].fragmentShader\n\n\t} );\n\n\tthis.dashed = false;\n\n\tObject.defineProperties( this, {\n\n\t\tcolor: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.diffuse.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.diffuse.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tlinewidth: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.linewidth.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.linewidth.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashScale: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashScale.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashScale.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgapSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.gapSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.gapSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tresolution: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.resolution.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.resolution.value.copy( value );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.LineMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\nTHREE.LineMaterial.prototype.constructor = THREE.LineMaterial;\n\nTHREE.LineMaterial.prototype.isLineMaterial = true;\n\nTHREE.LineMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.ShaderMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\n\tthis.resolution = source.resolution;\n\n\t// todo\n\n\treturn this;\n\n};\n\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\nTHREE.LineSegments2 = function ( geometry, material ) {\n\n\tTHREE.Mesh.call( this );\n\n\tthis.type = 'LineSegments2';\n\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.LineSegmentsGeometry();\n\tthis.material = material !== undefined ? material : new THREE.LineMaterial( { color: Math.random() * 0xffffff } );\n\n};\n\nTHREE.LineSegments2.prototype = Object.assign( Object.create( THREE.Mesh.prototype ), {\n\n\tconstructor: THREE.LineSegments2,\n\n\tisLineSegments2: true,\n\n\tcomputeLineDistances: ( function () { // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n\n\t\tvar start = new THREE.Vector3();\n\t\tvar end = new THREE.Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\t\t\tvar lineDistances = new Float32Array( 2 * instanceStart.data.count );\n\n\t\t\tfor ( var i = 0, j = 0, l = instanceStart.data.count; i < l; i ++, j += 2 ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tlineDistances[ j ] = ( j === 0 ) ? 0 : lineDistances[ j - 1 ];\n\t\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + start.distanceTo( end );\n\n\t\t\t}\n\n\t\t\tvar instanceDistanceBuffer = new THREE.InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\n\n\t\t\tgeometry.addAttribute( 'instanceDistanceStart', new THREE.InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\n\t\t\tgeometry.addAttribute( 'instanceDistanceEnd', new THREE.InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\tcopy: function ( source ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\nTHREE.LineSegmentsGeometry = function () {\n\n\tTHREE.InstancedBufferGeometry.call( this );\n\n\tthis.type = 'LineSegmentsGeometry';\n\n\tvar plane = new THREE.BufferGeometry();\n\n\tvar positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\tvar uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\tvar index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\n\tthis.setIndex( index );\n\tthis.addAttribute( 'position', new THREE.Float32BufferAttribute( positions, 3 ) );\n\tthis.addAttribute( 'uv', new THREE.Float32BufferAttribute( uvs, 2 ) );\n\n};\n\nTHREE.LineSegmentsGeometry.prototype = Object.assign( Object.create( THREE.InstancedBufferGeometry.prototype ), {\n\n\tconstructor: THREE.LineSegmentsGeometry,\n\n\tisLineSegmentsGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar start = this.attributes.instanceStart;\n\t\tvar end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( start );\n\n\t\t\tmatrix.applyToBufferAttribute( end );\n\n\t\t\tstart.data.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetPositions: function ( array ) {\n\n\t\tvar lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceBuffer = new THREE.InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis.addAttribute( 'instanceStart', new THREE.InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\t\tthis.addAttribute( 'instanceEnd', new THREE.InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\tvar colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceColorBuffer = new THREE.InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis.addAttribute( 'instanceColorStart', new THREE.InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\t\tthis.addAttribute( 'instanceColorEnd', new THREE.InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t},\n\n\tfromWireframeGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromEdgesGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromMesh: function ( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new THREE.WireframeGeometry( mesh.geometry ) );\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tfromLineSegements: function ( lineSegments ) {\n\n\t\tvar geometry = lineSegments.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tthis.setPositions( geometry.vertices );\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new THREE.Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new THREE.Box3();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t\tbox.setFromBufferAttribute( end );\n\n\t\t\t\tthis.boundingBox.union( box );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar vector = new THREE.Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tthis.boundingBox.getCenter( center );\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( start, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\tvector.fromBufferAttribute( end, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function () {\n\n\t\t// todo\n\n\t},\n\n\tclone: function () {\n\n\t\t// todo\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n","/**\n * @author Eberhard Graether / http://egraether.com/\n * @author Mark Lundin \t/ http://mark-lundin.com\n * @author Simone Manini / http://daron1337.github.io\n * @author Luca Antiga \t/ http://lantiga.github.io\n */\n\nTHREE.TrackballControls = function ( object, domElement ) {\n\n\tvar _this = this;\n\tvar STATE = { NONE: - 1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM_PAN: 4 };\n\n\tthis.object = object;\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// API\n\n\tthis.enabled = true;\n\n\tthis.screen = { left: 0, top: 0, width: 0, height: 0 };\n\n\tthis.rotateSpeed = 1.0;\n\tthis.zoomSpeed = 1.2;\n\tthis.panSpeed = 0.3;\n\n\tthis.noRotate = false;\n\tthis.noZoom = false;\n\tthis.noPan = false;\n\n\tthis.staticMoving = false;\n\tthis.dynamicDampingFactor = 0.2;\n\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\tthis.keys = [ 65 /*A*/, 83 /*S*/, 68 /*D*/ ];\n\n\t// internals\n\n\tthis.target = new THREE.Vector3();\n\n\tvar EPS = 0.000001;\n\n\tvar lastPosition = new THREE.Vector3();\n\n\tvar _state = STATE.NONE,\n\t\t_prevState = STATE.NONE,\n\n\t\t_eye = new THREE.Vector3(),\n\n\t\t_movePrev = new THREE.Vector2(),\n\t\t_moveCurr = new THREE.Vector2(),\n\n\t\t_lastAxis = new THREE.Vector3(),\n\t\t_lastAngle = 0,\n\n\t\t_zoomStart = new THREE.Vector2(),\n\t\t_zoomEnd = new THREE.Vector2(),\n\n\t\t_touchZoomDistanceStart = 0,\n\t\t_touchZoomDistanceEnd = 0,\n\n\t\t_panStart = new THREE.Vector2(),\n\t\t_panEnd = new THREE.Vector2();\n\n\t// for reset\n\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.up0 = this.object.up.clone();\n\n\t// events\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\n\t// methods\n\n\tthis.handleResize = function () {\n\n\t\tif ( this.domElement === document ) {\n\n\t\t\tthis.screen.left = 0;\n\t\t\tthis.screen.top = 0;\n\t\t\tthis.screen.width = window.innerWidth;\n\t\t\tthis.screen.height = window.innerHeight;\n\n\t\t} else {\n\n\t\t\tvar box = this.domElement.getBoundingClientRect();\n\t\t\t// adjustments come from similar code in the jquery offset() function\n\t\t\tvar d = this.domElement.ownerDocument.documentElement;\n\t\t\tthis.screen.left = box.left + window.pageXOffset - d.clientLeft;\n\t\t\tthis.screen.top = box.top + window.pageYOffset - d.clientTop;\n\t\t\tthis.screen.width = box.width;\n\t\t\tthis.screen.height = box.height;\n\n\t\t}\n\n\t};\n\n\tvar getMouseOnScreen = ( function () {\n\n\t\tvar vector = new THREE.Vector2();\n\n\t\treturn function getMouseOnScreen( pageX, pageY ) {\n\n\t\t\tvector.set(\n\t\t\t\t( pageX - _this.screen.left ) / _this.screen.width,\n\t\t\t\t( pageY - _this.screen.top ) / _this.screen.height\n\t\t\t);\n\n\t\t\treturn vector;\n\n\t\t};\n\n\t}() );\n\n\tvar getMouseOnCircle = ( function () {\n\n\t\tvar vector = new THREE.Vector2();\n\n\t\treturn function getMouseOnCircle( pageX, pageY ) {\n\n\t\t\tvector.set(\n\t\t\t\t( ( pageX - _this.screen.width * 0.5 - _this.screen.left ) / ( _this.screen.width * 0.5 ) ),\n\t\t\t\t( ( _this.screen.height + 2 * ( _this.screen.top - pageY ) ) / _this.screen.width ) // screen.width intentional\n\t\t\t);\n\n\t\t\treturn vector;\n\n\t\t};\n\n\t}() );\n\n\tthis.rotateCamera = ( function () {\n\n\t\tvar axis = new THREE.Vector3(),\n\t\t\tquaternion = new THREE.Quaternion(),\n\t\t\teyeDirection = new THREE.Vector3(),\n\t\t\tobjectUpDirection = new THREE.Vector3(),\n\t\t\tobjectSidewaysDirection = new THREE.Vector3(),\n\t\t\tmoveDirection = new THREE.Vector3(),\n\t\t\tangle;\n\n\t\treturn function rotateCamera() {\n\n\t\t\tmoveDirection.set( _moveCurr.x - _movePrev.x, _moveCurr.y - _movePrev.y, 0 );\n\t\t\tangle = moveDirection.length();\n\n\t\t\tif ( angle ) {\n\n\t\t\t\t_eye.copy( _this.object.position ).sub( _this.target );\n\n\t\t\t\teyeDirection.copy( _eye ).normalize();\n\t\t\t\tobjectUpDirection.copy( _this.object.up ).normalize();\n\t\t\t\tobjectSidewaysDirection.crossVectors( objectUpDirection, eyeDirection ).normalize();\n\n\t\t\t\tobjectUpDirection.setLength( _moveCurr.y - _movePrev.y );\n\t\t\t\tobjectSidewaysDirection.setLength( _moveCurr.x - _movePrev.x );\n\n\t\t\t\tmoveDirection.copy( objectUpDirection.add( objectSidewaysDirection ) );\n\n\t\t\t\taxis.crossVectors( moveDirection, _eye ).normalize();\n\n\t\t\t\tangle *= _this.rotateSpeed;\n\t\t\t\tquaternion.setFromAxisAngle( axis, angle );\n\n\t\t\t\t_eye.applyQuaternion( quaternion );\n\t\t\t\t_this.object.up.applyQuaternion( quaternion );\n\n\t\t\t\t_lastAxis.copy( axis );\n\t\t\t\t_lastAngle = angle;\n\n\t\t\t} else if ( ! _this.staticMoving && _lastAngle ) {\n\n\t\t\t\t_lastAngle *= Math.sqrt( 1.0 - _this.dynamicDampingFactor );\n\t\t\t\t_eye.copy( _this.object.position ).sub( _this.target );\n\t\t\t\tquaternion.setFromAxisAngle( _lastAxis, _lastAngle );\n\t\t\t\t_eye.applyQuaternion( quaternion );\n\t\t\t\t_this.object.up.applyQuaternion( quaternion );\n\n\t\t\t}\n\n\t\t\t_movePrev.copy( _moveCurr );\n\n\t\t};\n\n\t}() );\n\n\n\tthis.zoomCamera = function () {\n\n\t\tvar factor;\n\n\t\tif ( _state === STATE.TOUCH_ZOOM_PAN ) {\n\n\t\t\tfactor = _touchZoomDistanceStart / _touchZoomDistanceEnd;\n\t\t\t_touchZoomDistanceStart = _touchZoomDistanceEnd;\n\t\t\t_eye.multiplyScalar( factor );\n\n\t\t} else {\n\n\t\t\tfactor = 1.0 + ( _zoomEnd.y - _zoomStart.y ) * _this.zoomSpeed;\n\n\t\t\tif ( factor !== 1.0 && factor > 0.0 ) {\n\n\t\t\t\t_eye.multiplyScalar( factor );\n\n\t\t\t}\n\n\t\t\tif ( _this.staticMoving ) {\n\n\t\t\t\t_zoomStart.copy( _zoomEnd );\n\n\t\t\t} else {\n\n\t\t\t\t_zoomStart.y += ( _zoomEnd.y - _zoomStart.y ) * this.dynamicDampingFactor;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.panCamera = ( function () {\n\n\t\tvar mouseChange = new THREE.Vector2(),\n\t\t\tobjectUp = new THREE.Vector3(),\n\t\t\tpan = new THREE.Vector3();\n\n\t\treturn function panCamera() {\n\n\t\t\tmouseChange.copy( _panEnd ).sub( _panStart );\n\n\t\t\tif ( mouseChange.lengthSq() ) {\n\n\t\t\t\tmouseChange.multiplyScalar( _eye.length() * _this.panSpeed );\n\n\t\t\t\tpan.copy( _eye ).cross( _this.object.up ).setLength( mouseChange.x );\n\t\t\t\tpan.add( objectUp.copy( _this.object.up ).setLength( mouseChange.y ) );\n\n\t\t\t\t_this.object.position.add( pan );\n\t\t\t\t_this.target.add( pan );\n\n\t\t\t\tif ( _this.staticMoving ) {\n\n\t\t\t\t\t_panStart.copy( _panEnd );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_panStart.add( mouseChange.subVectors( _panEnd, _panStart ).multiplyScalar( _this.dynamicDampingFactor ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tthis.checkDistances = function () {\n\n\t\tif ( ! _this.noZoom || ! _this.noPan ) {\n\n\t\t\tif ( _eye.lengthSq() > _this.maxDistance * _this.maxDistance ) {\n\n\t\t\t\t_this.object.position.addVectors( _this.target, _eye.setLength( _this.maxDistance ) );\n\t\t\t\t_zoomStart.copy( _zoomEnd );\n\n\t\t\t}\n\n\t\t\tif ( _eye.lengthSq() < _this.minDistance * _this.minDistance ) {\n\n\t\t\t\t_this.object.position.addVectors( _this.target, _eye.setLength( _this.minDistance ) );\n\t\t\t\t_zoomStart.copy( _zoomEnd );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.update = function () {\n\n\t\t_eye.subVectors( _this.object.position, _this.target );\n\n\t\tif ( ! _this.noRotate ) {\n\n\t\t\t_this.rotateCamera();\n\n\t\t}\n\n\t\tif ( ! _this.noZoom ) {\n\n\t\t\t_this.zoomCamera();\n\n\t\t}\n\n\t\tif ( ! _this.noPan ) {\n\n\t\t\t_this.panCamera();\n\n\t\t}\n\n\t\t_this.object.position.addVectors( _this.target, _eye );\n\n\t\t_this.checkDistances();\n\n\t\t_this.object.lookAt( _this.target );\n\n\t\tif ( lastPosition.distanceToSquared( _this.object.position ) > EPS ) {\n\n\t\t\t_this.dispatchEvent( changeEvent );\n\n\t\t\tlastPosition.copy( _this.object.position );\n\n\t\t}\n\n\t};\n\n\tthis.reset = function () {\n\n\t\t_state = STATE.NONE;\n\t\t_prevState = STATE.NONE;\n\n\t\t_this.target.copy( _this.target0 );\n\t\t_this.object.position.copy( _this.position0 );\n\t\t_this.object.up.copy( _this.up0 );\n\n\t\t_eye.subVectors( _this.object.position, _this.target );\n\n\t\t_this.object.lookAt( _this.target );\n\n\t\t_this.dispatchEvent( changeEvent );\n\n\t\tlastPosition.copy( _this.object.position );\n\n\t};\n\n\t// listeners\n\n\tfunction keydown( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\twindow.removeEventListener( 'keydown', keydown );\n\n\t\t_prevState = _state;\n\n\t\tif ( _state !== STATE.NONE ) {\n\n\t\t\treturn;\n\n\t\t} else if ( event.keyCode === _this.keys[ STATE.ROTATE ] && ! _this.noRotate ) {\n\n\t\t\t_state = STATE.ROTATE;\n\n\t\t} else if ( event.keyCode === _this.keys[ STATE.ZOOM ] && ! _this.noZoom ) {\n\n\t\t\t_state = STATE.ZOOM;\n\n\t\t} else if ( event.keyCode === _this.keys[ STATE.PAN ] && ! _this.noPan ) {\n\n\t\t\t_state = STATE.PAN;\n\n\t\t}\n\n\t}\n\n\tfunction keyup( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\t_state = _prevState;\n\n\t\twindow.addEventListener( 'keydown', keydown, false );\n\n\t}\n\n\tfunction mousedown( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif ( _state === STATE.NONE ) {\n\n\t\t\t_state = event.button;\n\n\t\t}\n\n\t\tif ( _state === STATE.ROTATE && ! _this.noRotate ) {\n\n\t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n\t\t\t_movePrev.copy( _moveCurr );\n\n\t\t} else if ( _state === STATE.ZOOM && ! _this.noZoom ) {\n\n\t\t\t_zoomStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\t\t\t_zoomEnd.copy( _zoomStart );\n\n\t\t} else if ( _state === STATE.PAN && ! _this.noPan ) {\n\n\t\t\t_panStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\t\t\t_panEnd.copy( _panStart );\n\n\t\t}\n\n\t\tdocument.addEventListener( 'mousemove', mousemove, false );\n\t\tdocument.addEventListener( 'mouseup', mouseup, false );\n\n\t\t_this.dispatchEvent( startEvent );\n\n\t}\n\n\tfunction mousemove( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif ( _state === STATE.ROTATE && ! _this.noRotate ) {\n\n\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n\n\t\t} else if ( _state === STATE.ZOOM && ! _this.noZoom ) {\n\n\t\t\t_zoomEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\n\t\t} else if ( _state === STATE.PAN && ! _this.noPan ) {\n\n\t\t\t_panEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\n\t\t}\n\n\t}\n\n\tfunction mouseup( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\t_state = STATE.NONE;\n\n\t\tdocument.removeEventListener( 'mousemove', mousemove );\n\t\tdocument.removeEventListener( 'mouseup', mouseup );\n\t\t_this.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction mousewheel( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tif ( _this.noZoom === true ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.deltaMode ) {\n\n\t\t\tcase 2:\n\t\t\t\t// Zoom in pages\n\t\t\t\t_zoomStart.y -= event.deltaY * 0.025;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\t// Zoom in lines\n\t\t\t\t_zoomStart.y -= event.deltaY * 0.01;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// undefined, 0, assume pixels\n\t\t\t\t_zoomStart.y -= event.deltaY * 0.00025;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t_this.dispatchEvent( startEvent );\n\t\t_this.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction touchstart( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\t\t\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\t\t\t\t_state = STATE.TOUCH_ROTATE;\n\t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n\t\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t\tbreak;\n\n\t\t\tdefault: // 2 or more\n\t\t\t\t_state = STATE.TOUCH_ZOOM_PAN;\n\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t_touchZoomDistanceEnd = _touchZoomDistanceStart = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;\n\t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;\n\t\t\t\t_panStart.copy( getMouseOnScreen( x, y ) );\n\t\t\t\t_panEnd.copy( _panStart );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t_this.dispatchEvent( startEvent );\n\n\t}\n\n\tfunction touchmove( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\t\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n\t\t\t\tbreak;\n\n\t\t\tdefault: // 2 or more\n\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t_touchZoomDistanceEnd = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;\n\t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;\n\t\t\t\t_panEnd.copy( getMouseOnScreen( x, y ) );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction touchend( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 0:\n\t\t\t\t_state = STATE.NONE;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\t_state = STATE.TOUCH_ROTATE;\n\t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n\t\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t_this.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction contextmenu( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\tthis.dispose = function () {\n\n\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\tthis.domElement.removeEventListener( 'mousedown', mousedown, false );\n\t\tthis.domElement.removeEventListener( 'wheel', mousewheel, false );\n\n\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', mousemove, false );\n\t\tdocument.removeEventListener( 'mouseup', mouseup, false );\n\n\t\twindow.removeEventListener( 'keydown', keydown, false );\n\t\twindow.removeEventListener( 'keyup', keyup, false );\n\n\t};\n\n\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\tthis.domElement.addEventListener( 'mousedown', mousedown, false );\n\tthis.domElement.addEventListener( 'wheel', mousewheel, false );\n\n\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\n\twindow.addEventListener( 'keydown', keydown, false );\n\twindow.addEventListener( 'keyup', keyup, false );\n\n\tthis.handleResize();\n\n\t// force an update at start\n\tthis.update();\n\n};\n\nTHREE.TrackballControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.TrackballControls.prototype.constructor = THREE.TrackballControls;\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\nTHREE.WireframeGeometry2 = function ( geometry ) {\n\n\tTHREE.LineSegmentsGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry2';\n\n\tthis.fromWireframeGeometry( new THREE.WireframeGeometry( geometry ) );\n\n\t// set colors, maybe\n\n};\n\nTHREE.WireframeGeometry2.prototype = Object.assign( Object.create( THREE.LineSegmentsGeometry.prototype ), {\n\n\tconstructor: THREE.WireframeGeometry2,\n\n\tisWireframeGeometry2: true,\n\n\tcopy: function ( source ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\nTHREE.Wireframe = function ( geometry, material ) {\n\n\tTHREE.Mesh.call( this );\n\n\tthis.type = 'Wireframe';\n\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.LineSegmentsGeometry();\n\tthis.material = material !== undefined ? material : new THREE.LineMaterial( { color: Math.random() * 0xffffff } );\n\n};\n\nTHREE.Wireframe.prototype = Object.assign( Object.create( THREE.Mesh.prototype ), {\n\n\tconstructor: THREE.Wireframe,\n\n\tisWireframe: true,\n\n\tcomputeLineDistances: ( function () { // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n\n\t\tvar start = new THREE.Vector3();\n\t\tvar end = new THREE.Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\t\t\tvar lineDistances = new Float32Array( 2 * instanceStart.data.count );\n\n\t\t\tfor ( var i = 0, j = 0, l = instanceStart.data.count; i < l; i ++, j += 2 ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tlineDistances[ j ] = ( j === 0 ) ? 0 : lineDistances[ j - 1 ];\n\t\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + start.distanceTo( end );\n\n\t\t\t}\n\n\t\t\tvar instanceDistanceBuffer = new THREE.InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\n\n\t\t\tgeometry.addAttribute( 'instanceDistanceStart', new THREE.InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\n\t\t\tgeometry.addAttribute( 'instanceDistanceEnd', new THREE.InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\tcopy: function ( source ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n","/*! jQuery v3.4.0 | (c) JS Foundation and other contributors | jquery.org/license */\n!function(e,t){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(\"jQuery requires a window with a document\");return t(e)}:t(e)}(\"undefined\"!=typeof window?window:this,function(C,e){\"use strict\";var t=[],E=C.document,r=Object.getPrototypeOf,s=t.slice,g=t.concat,u=t.push,i=t.indexOf,n={},o=n.toString,v=n.hasOwnProperty,a=v.toString,l=a.call(Object),y={},m=function(e){return\"function\"==typeof e&&\"number\"!=typeof e.nodeType},x=function(e){return null!=e&&e===e.window},c={type:!0,src:!0,nonce:!0,noModule:!0};function b(e,t,n){var r,i,o=(n=n||E).createElement(\"script\");if(o.text=e,t)for(r in c)(i=t[r]||t.getAttribute&&t.getAttribute(r))&&o.setAttribute(r,i);n.head.appendChild(o).parentNode.removeChild(o)}function w(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?n[o.call(e)]||\"object\":typeof e}var f=\"3.4.0\",k=function(e,t){return new k.fn.init(e,t)},p=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;function d(e){var t=!!e&&\"length\"in e&&e.length,n=w(e);return!m(e)&&!x(e)&&(\"array\"===n||0===t||\"number\"==typeof t&&0<t&&t-1 in e)}k.fn=k.prototype={jquery:f,constructor:k,length:0,toArray:function(){return s.call(this)},get:function(e){return null==e?s.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=k.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return k.each(this,e)},map:function(n){return this.pushStack(k.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(s.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:u,sort:t.sort,splice:t.splice},k.extend=k.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,l=!1;for(\"boolean\"==typeof a&&(l=a,a=arguments[s]||{},s++),\"object\"==typeof a||m(a)||(a={}),s===u&&(a=this,s--);s<u;s++)if(null!=(e=arguments[s]))for(t in e)r=e[t],\"__proto__\"!==t&&a!==r&&(l&&r&&(k.isPlainObject(r)||(i=Array.isArray(r)))?(n=a[t],o=i&&!Array.isArray(n)?[]:i||k.isPlainObject(n)?n:{},i=!1,a[t]=k.extend(l,o,r)):void 0!==r&&(a[t]=r));return a},k.extend({expando:\"jQuery\"+(f+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||\"[object Object]\"!==o.call(e))&&(!(t=r(e))||\"function\"==typeof(n=v.call(t,\"constructor\")&&t.constructor)&&a.call(n)===l)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t){b(e,{nonce:t&&t.nonce})},each:function(e,t){var n,r=0;if(d(e)){for(n=e.length;r<n;r++)if(!1===t.call(e[r],r,e[r]))break}else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},trim:function(e){return null==e?\"\":(e+\"\").replace(p,\"\")},makeArray:function(e,t){var n=t||[];return null!=e&&(d(Object(e))?k.merge(n,\"string\"==typeof e?[e]:e):u.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:i.call(t,e,n)},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;r<n;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r=[],i=0,o=e.length,a=!n;i<o;i++)!t(e[i],i)!==a&&r.push(e[i]);return r},map:function(e,t,n){var r,i,o=0,a=[];if(d(e))for(r=e.length;o<r;o++)null!=(i=t(e[o],o,n))&&a.push(i);else for(o in e)null!=(i=t(e[o],o,n))&&a.push(i);return g.apply([],a)},guid:1,support:y}),\"function\"==typeof Symbol&&(k.fn[Symbol.iterator]=t[Symbol.iterator]),k.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(e,t){n[\"[object \"+t+\"]\"]=t.toLowerCase()});var h=function(n){var e,d,b,o,i,h,f,g,w,u,l,T,C,a,E,v,s,c,y,k=\"sizzle\"+1*new Date,m=n.document,S=0,r=0,p=ue(),x=ue(),A=ue(),N=ue(),D=function(e,t){return e===t&&(l=!0),0},j={}.hasOwnProperty,t=[],q=t.pop,L=t.push,H=t.push,O=t.slice,P=function(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1},R=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",M=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",I=\"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",W=\"\\\\[\"+M+\"*(\"+I+\")(?:\"+M+\"*([*^$|!~]?=)\"+M+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+I+\"))|)\"+M+\"*\\\\]\",$=\":(\"+I+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+W+\")*)|.*)\\\\)|)\",F=new RegExp(M+\"+\",\"g\"),B=new RegExp(\"^\"+M+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+M+\"+$\",\"g\"),_=new RegExp(\"^\"+M+\"*,\"+M+\"*\"),z=new RegExp(\"^\"+M+\"*([>+~]|\"+M+\")\"+M+\"*\"),U=new RegExp(M+\"|>\"),X=new RegExp($),V=new RegExp(\"^\"+I+\"$\"),G={ID:new RegExp(\"^#(\"+I+\")\"),CLASS:new RegExp(\"^\\\\.(\"+I+\")\"),TAG:new RegExp(\"^(\"+I+\"|[*])\"),ATTR:new RegExp(\"^\"+W),PSEUDO:new RegExp(\"^\"+$),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+M+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+M+\"*(?:([+-]|)\"+M+\"*(\\\\d+)|))\"+M+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+R+\")$\",\"i\"),needsContext:new RegExp(\"^\"+M+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+M+\"*((?:-\\\\d)?\\\\d*)\"+M+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Y=/HTML$/i,Q=/^(?:input|select|textarea|button)$/i,J=/^h\\d$/i,K=/^[^{]+\\{\\s*\\[native \\w/,Z=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ee=/[+~]/,te=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+M+\"?|(\"+M+\")|.)\",\"ig\"),ne=function(e,t,n){var r=\"0x\"+t-65536;return r!=r||n?t:r<0?String.fromCharCode(r+65536):String.fromCharCode(r>>10|55296,1023&r|56320)},re=/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,ie=function(e,t){return t?\"\\0\"===e?\"\\ufffd\":e.slice(0,-1)+\"\\\\\"+e.charCodeAt(e.length-1).toString(16)+\" \":\"\\\\\"+e},oe=function(){T()},ae=be(function(e){return!0===e.disabled&&\"fieldset\"===e.nodeName.toLowerCase()},{dir:\"parentNode\",next:\"legend\"});try{H.apply(t=O.call(m.childNodes),m.childNodes),t[m.childNodes.length].nodeType}catch(e){H={apply:t.length?function(e,t){L.apply(e,O.call(t))}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1}}}function se(t,e,n,r){var i,o,a,s,u,l,c,f=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],\"string\"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!r&&((e?e.ownerDocument||e:m)!==C&&T(e),e=e||C,E)){if(11!==p&&(u=Z.exec(t)))if(i=u[1]){if(9===p){if(!(a=e.getElementById(i)))return n;if(a.id===i)return n.push(a),n}else if(f&&(a=f.getElementById(i))&&y(e,a)&&a.id===i)return n.push(a),n}else{if(u[2])return H.apply(n,e.getElementsByTagName(t)),n;if((i=u[3])&&d.getElementsByClassName&&e.getElementsByClassName)return H.apply(n,e.getElementsByClassName(i)),n}if(d.qsa&&!N[t+\" \"]&&(!v||!v.test(t))&&(1!==p||\"object\"!==e.nodeName.toLowerCase())){if(c=t,f=e,1===p&&U.test(t)){(s=e.getAttribute(\"id\"))?s=s.replace(re,ie):e.setAttribute(\"id\",s=k),o=(l=h(t)).length;while(o--)l[o]=\"#\"+s+\" \"+xe(l[o]);c=l.join(\",\"),f=ee.test(t)&&ye(e.parentNode)||e}try{return H.apply(n,f.querySelectorAll(c)),n}catch(e){N(t,!0)}finally{s===k&&e.removeAttribute(\"id\")}}}return g(t.replace(B,\"$1\"),e,n,r)}function ue(){var r=[];return function e(t,n){return r.push(t+\" \")>b.cacheLength&&delete e[r.shift()],e[t+\" \"]=n}}function le(e){return e[k]=!0,e}function ce(e){var t=C.createElement(\"fieldset\");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function fe(e,t){var n=e.split(\"|\"),r=n.length;while(r--)b.attrHandle[n[r]]=t}function pe(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function de(t){return function(e){return\"input\"===e.nodeName.toLowerCase()&&e.type===t}}function he(n){return function(e){var t=e.nodeName.toLowerCase();return(\"input\"===t||\"button\"===t)&&e.type===n}}function ge(t){return function(e){return\"form\"in e?e.parentNode&&!1===e.disabled?\"label\"in e?\"label\"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&ae(e)===t:e.disabled===t:\"label\"in e&&e.disabled===t}}function ve(a){return le(function(o){return o=+o,le(function(e,t){var n,r=a([],e.length,o),i=r.length;while(i--)e[n=r[i]]&&(e[n]=!(t[n]=e[n]))})})}function ye(e){return e&&\"undefined\"!=typeof e.getElementsByTagName&&e}for(e in d=se.support={},i=se.isXML=function(e){var t=e.namespaceURI,n=(e.ownerDocument||e).documentElement;return!Y.test(t||n&&n.nodeName||\"HTML\")},T=se.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:m;return r!==C&&9===r.nodeType&&r.documentElement&&(a=(C=r).documentElement,E=!i(C),m!==C&&(n=C.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener(\"unload\",oe,!1):n.attachEvent&&n.attachEvent(\"onunload\",oe)),d.attributes=ce(function(e){return e.className=\"i\",!e.getAttribute(\"className\")}),d.getElementsByTagName=ce(function(e){return e.appendChild(C.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),d.getElementsByClassName=K.test(C.getElementsByClassName),d.getById=ce(function(e){return a.appendChild(e).id=k,!C.getElementsByName||!C.getElementsByName(k).length}),d.getById?(b.filter.ID=function(e){var t=e.replace(te,ne);return function(e){return e.getAttribute(\"id\")===t}},b.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&E){var n=t.getElementById(e);return n?[n]:[]}}):(b.filter.ID=function(e){var n=e.replace(te,ne);return function(e){var t=\"undefined\"!=typeof e.getAttributeNode&&e.getAttributeNode(\"id\");return t&&t.value===n}},b.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&E){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode(\"id\"))&&n.value===e)return[o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode(\"id\"))&&n.value===e)return[o]}return[]}}),b.find.TAG=d.getElementsByTagName?function(e,t){return\"undefined\"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):d.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if(\"*\"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},b.find.CLASS=d.getElementsByClassName&&function(e,t){if(\"undefined\"!=typeof t.getElementsByClassName&&E)return t.getElementsByClassName(e)},s=[],v=[],(d.qsa=K.test(C.querySelectorAll))&&(ce(function(e){a.appendChild(e).innerHTML=\"<a id='\"+k+\"'></a><select id='\"+k+\"-\\r\\\\' msallowcapture=''><option selected=''></option></select>\",e.querySelectorAll(\"[msallowcapture^='']\").length&&v.push(\"[*^$]=\"+M+\"*(?:''|\\\"\\\")\"),e.querySelectorAll(\"[selected]\").length||v.push(\"\\\\[\"+M+\"*(?:value|\"+R+\")\"),e.querySelectorAll(\"[id~=\"+k+\"-]\").length||v.push(\"~=\"),e.querySelectorAll(\":checked\").length||v.push(\":checked\"),e.querySelectorAll(\"a#\"+k+\"+*\").length||v.push(\".#.+[+~]\")}),ce(function(e){e.innerHTML=\"<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>\";var t=C.createElement(\"input\");t.setAttribute(\"type\",\"hidden\"),e.appendChild(t).setAttribute(\"name\",\"D\"),e.querySelectorAll(\"[name=d]\").length&&v.push(\"name\"+M+\"*[*^$|!~]?=\"),2!==e.querySelectorAll(\":enabled\").length&&v.push(\":enabled\",\":disabled\"),a.appendChild(e).disabled=!0,2!==e.querySelectorAll(\":disabled\").length&&v.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),v.push(\",.*:\")})),(d.matchesSelector=K.test(c=a.matches||a.webkitMatchesSelector||a.mozMatchesSelector||a.oMatchesSelector||a.msMatchesSelector))&&ce(function(e){d.disconnectedMatch=c.call(e,\"*\"),c.call(e,\"[s!='']:x\"),s.push(\"!=\",$)}),v=v.length&&new RegExp(v.join(\"|\")),s=s.length&&new RegExp(s.join(\"|\")),t=K.test(a.compareDocumentPosition),y=t||K.test(a.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},D=t?function(e,t){if(e===t)return l=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!d.sortDetached&&t.compareDocumentPosition(e)===n?e===C||e.ownerDocument===m&&y(m,e)?-1:t===C||t.ownerDocument===m&&y(m,t)?1:u?P(u,e)-P(u,t):0:4&n?-1:1)}:function(e,t){if(e===t)return l=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,a=[e],s=[t];if(!i||!o)return e===C?-1:t===C?1:i?-1:o?1:u?P(u,e)-P(u,t):0;if(i===o)return pe(e,t);n=e;while(n=n.parentNode)a.unshift(n);n=t;while(n=n.parentNode)s.unshift(n);while(a[r]===s[r])r++;return r?pe(a[r],s[r]):a[r]===m?-1:s[r]===m?1:0}),C},se.matches=function(e,t){return se(e,null,null,t)},se.matchesSelector=function(e,t){if((e.ownerDocument||e)!==C&&T(e),d.matchesSelector&&E&&!N[t+\" \"]&&(!s||!s.test(t))&&(!v||!v.test(t)))try{var n=c.call(e,t);if(n||d.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){N(t,!0)}return 0<se(t,C,null,[e]).length},se.contains=function(e,t){return(e.ownerDocument||e)!==C&&T(e),y(e,t)},se.attr=function(e,t){(e.ownerDocument||e)!==C&&T(e);var n=b.attrHandle[t.toLowerCase()],r=n&&j.call(b.attrHandle,t.toLowerCase())?n(e,t,!E):void 0;return void 0!==r?r:d.attributes||!E?e.getAttribute(t):(r=e.getAttributeNode(t))&&r.specified?r.value:null},se.escape=function(e){return(e+\"\").replace(re,ie)},se.error=function(e){throw new Error(\"Syntax error, unrecognized expression: \"+e)},se.uniqueSort=function(e){var t,n=[],r=0,i=0;if(l=!d.detectDuplicates,u=!d.sortStable&&e.slice(0),e.sort(D),l){while(t=e[i++])t===e[i]&&(r=n.push(i));while(r--)e.splice(n[r],1)}return u=null,e},o=se.getText=function(e){var t,n=\"\",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else while(t=e[r++])n+=o(t);return n},(b=se.selectors={cacheLength:50,createPseudo:le,match:G,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ne),e[3]=(e[3]||e[4]||e[5]||\"\").replace(te,ne),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||se.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&se.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return G.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||\"\":n&&X.test(n)&&(t=h(n,!0))&&(t=n.indexOf(\")\",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ne).toLowerCase();return\"*\"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=p[e+\" \"];return t||(t=new RegExp(\"(^|\"+M+\")\"+e+\"(\"+M+\"|$)\"))&&p(e,function(e){return t.test(\"string\"==typeof e.className&&e.className||\"undefined\"!=typeof e.getAttribute&&e.getAttribute(\"class\")||\"\")})},ATTR:function(n,r,i){return function(e){var t=se.attr(e,n);return null==t?\"!=\"===r:!r||(t+=\"\",\"=\"===r?t===i:\"!=\"===r?t!==i:\"^=\"===r?i&&0===t.indexOf(i):\"*=\"===r?i&&-1<t.indexOf(i):\"$=\"===r?i&&t.slice(-i.length)===i:\"~=\"===r?-1<(\" \"+t.replace(F,\" \")+\" \").indexOf(i):\"|=\"===r&&(t===i||t.slice(0,i.length+1)===i+\"-\"))}},CHILD:function(h,e,t,g,v){var y=\"nth\"!==h.slice(0,3),m=\"last\"!==h.slice(-4),x=\"of-type\"===e;return 1===g&&0===v?function(e){return!!e.parentNode}:function(e,t,n){var r,i,o,a,s,u,l=y!==m?\"nextSibling\":\"previousSibling\",c=e.parentNode,f=x&&e.nodeName.toLowerCase(),p=!n&&!x,d=!1;if(c){if(y){while(l){a=e;while(a=a[l])if(x?a.nodeName.toLowerCase()===f:1===a.nodeType)return!1;u=l=\"only\"===h&&!u&&\"nextSibling\"}return!0}if(u=[m?c.firstChild:c.lastChild],m&&p){d=(s=(r=(i=(o=(a=c)[k]||(a[k]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===S&&r[1])&&r[2],a=s&&c.childNodes[s];while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if(1===a.nodeType&&++d&&a===e){i[h]=[S,s,d];break}}else if(p&&(d=s=(r=(i=(o=(a=e)[k]||(a[k]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===S&&r[1]),!1===d)while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if((x?a.nodeName.toLowerCase()===f:1===a.nodeType)&&++d&&(p&&((i=(o=a[k]||(a[k]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]=[S,d]),a===e))break;return(d-=v)===g||d%g==0&&0<=d/g}}},PSEUDO:function(e,o){var t,a=b.pseudos[e]||b.setFilters[e.toLowerCase()]||se.error(\"unsupported pseudo: \"+e);return a[k]?a(o):1<a.length?(t=[e,e,\"\",o],b.setFilters.hasOwnProperty(e.toLowerCase())?le(function(e,t){var n,r=a(e,o),i=r.length;while(i--)e[n=P(e,r[i])]=!(t[n]=r[i])}):function(e){return a(e,0,t)}):a}},pseudos:{not:le(function(e){var r=[],i=[],s=f(e.replace(B,\"$1\"));return s[k]?le(function(e,t,n,r){var i,o=s(e,null,r,[]),a=e.length;while(a--)(i=o[a])&&(e[a]=!(t[a]=i))}):function(e,t,n){return r[0]=e,s(r,null,n,i),r[0]=null,!i.pop()}}),has:le(function(t){return function(e){return 0<se(t,e).length}}),contains:le(function(t){return t=t.replace(te,ne),function(e){return-1<(e.textContent||o(e)).indexOf(t)}}),lang:le(function(n){return V.test(n||\"\")||se.error(\"unsupported lang: \"+n),n=n.replace(te,ne).toLowerCase(),function(e){var t;do{if(t=E?e.lang:e.getAttribute(\"xml:lang\")||e.getAttribute(\"lang\"))return(t=t.toLowerCase())===n||0===t.indexOf(n+\"-\")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=n.location&&n.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===a},focus:function(e){return e===C.activeElement&&(!C.hasFocus||C.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:ge(!1),disabled:ge(!0),checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return Q.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&\"button\"===e.type||\"button\"===t},text:function(e){var t;return\"input\"===e.nodeName.toLowerCase()&&\"text\"===e.type&&(null==(t=e.getAttribute(\"type\"))||\"text\"===t.toLowerCase())},first:ve(function(){return[0]}),last:ve(function(e,t){return[t-1]}),eq:ve(function(e,t,n){return[n<0?n+t:n]}),even:ve(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:ve(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:ve(function(e,t,n){for(var r=n<0?n+t:t<n?t:n;0<=--r;)e.push(r);return e}),gt:ve(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=de(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=he(e);function me(){}function xe(e){for(var t=0,n=e.length,r=\"\";t<n;t++)r+=e[t].value;return r}function be(s,e,t){var u=e.dir,l=e.next,c=l||u,f=t&&\"parentNode\"===c,p=r++;return e.first?function(e,t,n){while(e=e[u])if(1===e.nodeType||f)return s(e,t,n);return!1}:function(e,t,n){var r,i,o,a=[S,p];if(n){while(e=e[u])if((1===e.nodeType||f)&&s(e,t,n))return!0}else while(e=e[u])if(1===e.nodeType||f)if(i=(o=e[k]||(e[k]={}))[e.uniqueID]||(o[e.uniqueID]={}),l&&l===e.nodeName.toLowerCase())e=e[u]||e;else{if((r=i[c])&&r[0]===S&&r[1]===p)return a[2]=r[2];if((i[c]=a)[2]=s(e,t,n))return!0}return!1}}function we(i){return 1<i.length?function(e,t,n){var r=i.length;while(r--)if(!i[r](e,t,n))return!1;return!0}:i[0]}function Te(e,t,n,r,i){for(var o,a=[],s=0,u=e.length,l=null!=t;s<u;s++)(o=e[s])&&(n&&!n(o,r,i)||(a.push(o),l&&t.push(s)));return a}function Ce(d,h,g,v,y,e){return v&&!v[k]&&(v=Ce(v)),y&&!y[k]&&(y=Ce(y,e)),le(function(e,t,n,r){var i,o,a,s=[],u=[],l=t.length,c=e||function(e,t,n){for(var r=0,i=t.length;r<i;r++)se(e,t[r],n);return n}(h||\"*\",n.nodeType?[n]:n,[]),f=!d||!e&&h?c:Te(c,s,d,n,r),p=g?y||(e?d:l||v)?[]:t:f;if(g&&g(f,p,n,r),v){i=Te(p,u),v(i,[],n,r),o=i.length;while(o--)(a=i[o])&&(p[u[o]]=!(f[u[o]]=a))}if(e){if(y||d){if(y){i=[],o=p.length;while(o--)(a=p[o])&&i.push(f[o]=a);y(null,p=[],i,r)}o=p.length;while(o--)(a=p[o])&&-1<(i=y?P(e,a):s[o])&&(e[i]=!(t[i]=a))}}else p=Te(p===t?p.splice(l,p.length):p),y?y(null,t,p,r):H.apply(t,p)})}function Ee(e){for(var i,t,n,r=e.length,o=b.relative[e[0].type],a=o||b.relative[\" \"],s=o?1:0,u=be(function(e){return e===i},a,!0),l=be(function(e){return-1<P(i,e)},a,!0),c=[function(e,t,n){var r=!o&&(n||t!==w)||((i=t).nodeType?u(e,t,n):l(e,t,n));return i=null,r}];s<r;s++)if(t=b.relative[e[s].type])c=[be(we(c),t)];else{if((t=b.filter[e[s].type].apply(null,e[s].matches))[k]){for(n=++s;n<r;n++)if(b.relative[e[n].type])break;return Ce(1<s&&we(c),1<s&&xe(e.slice(0,s-1).concat({value:\" \"===e[s-2].type?\"*\":\"\"})).replace(B,\"$1\"),t,s<n&&Ee(e.slice(s,n)),n<r&&Ee(e=e.slice(n)),n<r&&xe(e))}c.push(t)}return we(c)}return me.prototype=b.filters=b.pseudos,b.setFilters=new me,h=se.tokenize=function(e,t){var n,r,i,o,a,s,u,l=x[e+\" \"];if(l)return t?0:l.slice(0);a=e,s=[],u=b.preFilter;while(a){for(o in n&&!(r=_.exec(a))||(r&&(a=a.slice(r[0].length)||a),s.push(i=[])),n=!1,(r=z.exec(a))&&(n=r.shift(),i.push({value:n,type:r[0].replace(B,\" \")}),a=a.slice(n.length)),b.filter)!(r=G[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),i.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return t?a.length:a?se.error(e):x(e,s).slice(0)},f=se.compile=function(e,t){var n,v,y,m,x,r,i=[],o=[],a=A[e+\" \"];if(!a){t||(t=h(e)),n=t.length;while(n--)(a=Ee(t[n]))[k]?i.push(a):o.push(a);(a=A(e,(v=o,m=0<(y=i).length,x=0<v.length,r=function(e,t,n,r,i){var o,a,s,u=0,l=\"0\",c=e&&[],f=[],p=w,d=e||x&&b.find.TAG(\"*\",i),h=S+=null==p?1:Math.random()||.1,g=d.length;for(i&&(w=t===C||t||i);l!==g&&null!=(o=d[l]);l++){if(x&&o){a=0,t||o.ownerDocument===C||(T(o),n=!E);while(s=v[a++])if(s(o,t||C,n)){r.push(o);break}i&&(S=h)}m&&((o=!s&&o)&&u--,e&&c.push(o))}if(u+=l,m&&l!==u){a=0;while(s=y[a++])s(c,f,t,n);if(e){if(0<u)while(l--)c[l]||f[l]||(f[l]=q.call(r));f=Te(f)}H.apply(r,f),i&&!e&&0<f.length&&1<u+y.length&&se.uniqueSort(r)}return i&&(S=h,w=p),c},m?le(r):r))).selector=e}return a},g=se.select=function(e,t,n,r){var i,o,a,s,u,l=\"function\"==typeof e&&e,c=!r&&h(e=l.selector||e);if(n=n||[],1===c.length){if(2<(o=c[0]=c[0].slice(0)).length&&\"ID\"===(a=o[0]).type&&9===t.nodeType&&E&&b.relative[o[1].type]){if(!(t=(b.find.ID(a.matches[0].replace(te,ne),t)||[])[0]))return n;l&&(t=t.parentNode),e=e.slice(o.shift().value.length)}i=G.needsContext.test(e)?0:o.length;while(i--){if(a=o[i],b.relative[s=a.type])break;if((u=b.find[s])&&(r=u(a.matches[0].replace(te,ne),ee.test(o[0].type)&&ye(t.parentNode)||t))){if(o.splice(i,1),!(e=r.length&&xe(o)))return H.apply(n,r),n;break}}}return(l||f(e,c))(r,t,!E,n,!t||ee.test(e)&&ye(t.parentNode)||t),n},d.sortStable=k.split(\"\").sort(D).join(\"\")===k,d.detectDuplicates=!!l,T(),d.sortDetached=ce(function(e){return 1&e.compareDocumentPosition(C.createElement(\"fieldset\"))}),ce(function(e){return e.innerHTML=\"<a href='#'></a>\",\"#\"===e.firstChild.getAttribute(\"href\")})||fe(\"type|href|height|width\",function(e,t,n){if(!n)return e.getAttribute(t,\"type\"===t.toLowerCase()?1:2)}),d.attributes&&ce(function(e){return e.innerHTML=\"<input/>\",e.firstChild.setAttribute(\"value\",\"\"),\"\"===e.firstChild.getAttribute(\"value\")})||fe(\"value\",function(e,t,n){if(!n&&\"input\"===e.nodeName.toLowerCase())return e.defaultValue}),ce(function(e){return null==e.getAttribute(\"disabled\")})||fe(R,function(e,t,n){var r;if(!n)return!0===e[t]?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null}),se}(C);k.find=h,k.expr=h.selectors,k.expr[\":\"]=k.expr.pseudos,k.uniqueSort=k.unique=h.uniqueSort,k.text=h.getText,k.isXMLDoc=h.isXML,k.contains=h.contains,k.escapeSelector=h.escape;var T=function(e,t,n){var r=[],i=void 0!==n;while((e=e[t])&&9!==e.nodeType)if(1===e.nodeType){if(i&&k(e).is(n))break;r.push(e)}return r},S=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},A=k.expr.match.needsContext;function N(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var D=/^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;function j(e,n,r){return m(n)?k.grep(e,function(e,t){return!!n.call(e,t,e)!==r}):n.nodeType?k.grep(e,function(e){return e===n!==r}):\"string\"!=typeof n?k.grep(e,function(e){return-1<i.call(n,e)!==r}):k.filter(n,e,r)}k.filter=function(e,t,n){var r=t[0];return n&&(e=\":not(\"+e+\")\"),1===t.length&&1===r.nodeType?k.find.matchesSelector(r,e)?[r]:[]:k.find.matches(e,k.grep(t,function(e){return 1===e.nodeType}))},k.fn.extend({find:function(e){var t,n,r=this.length,i=this;if(\"string\"!=typeof e)return this.pushStack(k(e).filter(function(){for(t=0;t<r;t++)if(k.contains(i[t],this))return!0}));for(n=this.pushStack([]),t=0;t<r;t++)k.find(e,i[t],n);return 1<r?k.uniqueSort(n):n},filter:function(e){return this.pushStack(j(this,e||[],!1))},not:function(e){return this.pushStack(j(this,e||[],!0))},is:function(e){return!!j(this,\"string\"==typeof e&&A.test(e)?k(e):e||[],!1).length}});var q,L=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/;(k.fn.init=function(e,t,n){var r,i;if(!e)return this;if(n=n||q,\"string\"==typeof e){if(!(r=\"<\"===e[0]&&\">\"===e[e.length-1]&&3<=e.length?[null,e,null]:L.exec(e))||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof k?t[0]:t,k.merge(this,k.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:E,!0)),D.test(r[1])&&k.isPlainObject(t))for(r in t)m(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return(i=E.getElementById(r[2]))&&(this[0]=i,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):m(e)?void 0!==n.ready?n.ready(e):e(k):k.makeArray(e,this)}).prototype=k.fn,q=k(E);var H=/^(?:parents|prev(?:Until|All))/,O={children:!0,contents:!0,next:!0,prev:!0};function P(e,t){while((e=e[t])&&1!==e.nodeType);return e}k.fn.extend({has:function(e){var t=k(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(k.contains(this,t[e]))return!0})},closest:function(e,t){var n,r=0,i=this.length,o=[],a=\"string\"!=typeof e&&k(e);if(!A.test(e))for(;r<i;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?-1<a.index(n):1===n.nodeType&&k.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(1<o.length?k.uniqueSort(o):o)},index:function(e){return e?\"string\"==typeof e?i.call(k(e),this[0]):i.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(k.uniqueSort(k.merge(this.get(),k(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),k.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return T(e,\"parentNode\")},parentsUntil:function(e,t,n){return T(e,\"parentNode\",n)},next:function(e){return P(e,\"nextSibling\")},prev:function(e){return P(e,\"previousSibling\")},nextAll:function(e){return T(e,\"nextSibling\")},prevAll:function(e){return T(e,\"previousSibling\")},nextUntil:function(e,t,n){return T(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return T(e,\"previousSibling\",n)},siblings:function(e){return S((e.parentNode||{}).firstChild,e)},children:function(e){return S(e.firstChild)},contents:function(e){return\"undefined\"!=typeof e.contentDocument?e.contentDocument:(N(e,\"template\")&&(e=e.content||e),k.merge([],e.childNodes))}},function(r,i){k.fn[r]=function(e,t){var n=k.map(this,i,e);return\"Until\"!==r.slice(-5)&&(t=e),t&&\"string\"==typeof t&&(n=k.filter(t,n)),1<this.length&&(O[r]||k.uniqueSort(n),H.test(r)&&n.reverse()),this.pushStack(n)}});var R=/[^\\x20\\t\\r\\n\\f]+/g;function M(e){return e}function I(e){throw e}function W(e,t,n,r){var i;try{e&&m(i=e.promise)?i.call(e).done(t).fail(n):e&&m(i=e.then)?i.call(e,t,n):t.apply(void 0,[e].slice(r))}catch(e){n.apply(void 0,[e])}}k.Callbacks=function(r){var e,n;r=\"string\"==typeof r?(e=r,n={},k.each(e.match(R)||[],function(e,t){n[t]=!0}),n):k.extend({},r);var i,t,o,a,s=[],u=[],l=-1,c=function(){for(a=a||r.once,o=i=!0;u.length;l=-1){t=u.shift();while(++l<s.length)!1===s[l].apply(t[0],t[1])&&r.stopOnFalse&&(l=s.length,t=!1)}r.memory||(t=!1),i=!1,a&&(s=t?[]:\"\")},f={add:function(){return s&&(t&&!i&&(l=s.length-1,u.push(t)),function n(e){k.each(e,function(e,t){m(t)?r.unique&&f.has(t)||s.push(t):t&&t.length&&\"string\"!==w(t)&&n(t)})}(arguments),t&&!i&&c()),this},remove:function(){return k.each(arguments,function(e,t){var n;while(-1<(n=k.inArray(t,s,n)))s.splice(n,1),n<=l&&l--}),this},has:function(e){return e?-1<k.inArray(e,s):0<s.length},empty:function(){return s&&(s=[]),this},disable:function(){return a=u=[],s=t=\"\",this},disabled:function(){return!s},lock:function(){return a=u=[],t||i||(s=t=\"\"),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],u.push(t),i||c()),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!o}};return f},k.extend({Deferred:function(e){var o=[[\"notify\",\"progress\",k.Callbacks(\"memory\"),k.Callbacks(\"memory\"),2],[\"resolve\",\"done\",k.Callbacks(\"once memory\"),k.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",k.Callbacks(\"once memory\"),k.Callbacks(\"once memory\"),1,\"rejected\"]],i=\"pending\",a={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},\"catch\":function(e){return a.then(null,e)},pipe:function(){var i=arguments;return k.Deferred(function(r){k.each(o,function(e,t){var n=m(i[t[4]])&&i[t[4]];s[t[1]](function(){var e=n&&n.apply(this,arguments);e&&m(e.promise)?e.promise().progress(r.notify).done(r.resolve).fail(r.reject):r[t[0]+\"With\"](this,n?[e]:arguments)})}),i=null}).promise()},then:function(t,n,r){var u=0;function l(i,o,a,s){return function(){var n=this,r=arguments,e=function(){var e,t;if(!(i<u)){if((e=a.apply(n,r))===o.promise())throw new TypeError(\"Thenable self-resolution\");t=e&&(\"object\"==typeof e||\"function\"==typeof e)&&e.then,m(t)?s?t.call(e,l(u,o,M,s),l(u,o,I,s)):(u++,t.call(e,l(u,o,M,s),l(u,o,I,s),l(u,o,M,o.notifyWith))):(a!==M&&(n=void 0,r=[e]),(s||o.resolveWith)(n,r))}},t=s?e:function(){try{e()}catch(e){k.Deferred.exceptionHook&&k.Deferred.exceptionHook(e,t.stackTrace),u<=i+1&&(a!==I&&(n=void 0,r=[e]),o.rejectWith(n,r))}};i?t():(k.Deferred.getStackHook&&(t.stackTrace=k.Deferred.getStackHook()),C.setTimeout(t))}}return k.Deferred(function(e){o[0][3].add(l(0,e,m(r)?r:M,e.notifyWith)),o[1][3].add(l(0,e,m(t)?t:M)),o[2][3].add(l(0,e,m(n)?n:I))}).promise()},promise:function(e){return null!=e?k.extend(e,a):a}},s={};return k.each(o,function(e,t){var n=t[2],r=t[5];a[t[1]]=n.add,r&&n.add(function(){i=r},o[3-e][2].disable,o[3-e][3].disable,o[0][2].lock,o[0][3].lock),n.add(t[3].fire),s[t[0]]=function(){return s[t[0]+\"With\"](this===s?void 0:this,arguments),this},s[t[0]+\"With\"]=n.fireWith}),a.promise(s),e&&e.call(s,s),s},when:function(e){var n=arguments.length,t=n,r=Array(t),i=s.call(arguments),o=k.Deferred(),a=function(t){return function(e){r[t]=this,i[t]=1<arguments.length?s.call(arguments):e,--n||o.resolveWith(r,i)}};if(n<=1&&(W(e,o.done(a(t)).resolve,o.reject,!n),\"pending\"===o.state()||m(i[t]&&i[t].then)))return o.then();while(t--)W(i[t],a(t),o.reject);return o.promise()}});var $=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;k.Deferred.exceptionHook=function(e,t){C.console&&C.console.warn&&e&&$.test(e.name)&&C.console.warn(\"jQuery.Deferred exception: \"+e.message,e.stack,t)},k.readyException=function(e){C.setTimeout(function(){throw e})};var F=k.Deferred();function B(){E.removeEventListener(\"DOMContentLoaded\",B),C.removeEventListener(\"load\",B),k.ready()}k.fn.ready=function(e){return F.then(e)[\"catch\"](function(e){k.readyException(e)}),this},k.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--k.readyWait:k.isReady)||(k.isReady=!0)!==e&&0<--k.readyWait||F.resolveWith(E,[k])}}),k.ready.then=F.then,\"complete\"===E.readyState||\"loading\"!==E.readyState&&!E.documentElement.doScroll?C.setTimeout(k.ready):(E.addEventListener(\"DOMContentLoaded\",B),C.addEventListener(\"load\",B));var _=function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if(\"object\"===w(n))for(s in i=!0,n)_(e,t,s,n[s],!0,o,a);else if(void 0!==r&&(i=!0,m(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(k(e),n)})),t))for(;s<u;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:l?t.call(e):u?t(e[0],n):o},z=/^-ms-/,U=/-([a-z])/g;function X(e,t){return t.toUpperCase()}function V(e){return e.replace(z,\"ms-\").replace(U,X)}var G=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function Y(){this.expando=k.expando+Y.uid++}Y.uid=1,Y.prototype={cache:function(e){var t=e[this.expando];return t||(t={},G(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if(\"string\"==typeof t)i[V(t)]=n;else for(r in t)i[V(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][V(t)]},access:function(e,t,n){return void 0===t||t&&\"string\"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(V):(t=V(t))in r?[t]:t.match(R)||[]).length;while(n--)delete r[t[n]]}(void 0===t||k.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!k.isEmptyObject(t)}};var Q=new Y,J=new Y,K=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,Z=/[A-Z]/g;function ee(e,t,n){var r,i;if(void 0===n&&1===e.nodeType)if(r=\"data-\"+t.replace(Z,\"-$&\").toLowerCase(),\"string\"==typeof(n=e.getAttribute(r))){try{n=\"true\"===(i=n)||\"false\"!==i&&(\"null\"===i?null:i===+i+\"\"?+i:K.test(i)?JSON.parse(i):i)}catch(e){}J.set(e,t,n)}else n=void 0;return n}k.extend({hasData:function(e){return J.hasData(e)||Q.hasData(e)},data:function(e,t,n){return J.access(e,t,n)},removeData:function(e,t){J.remove(e,t)},_data:function(e,t,n){return Q.access(e,t,n)},_removeData:function(e,t){Q.remove(e,t)}}),k.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=J.get(o),1===o.nodeType&&!Q.get(o,\"hasDataAttrs\"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf(\"data-\")&&(r=V(r.slice(5)),ee(o,r,i[r]));Q.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof n?this.each(function(){J.set(this,n)}):_(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=J.get(o,n))?t:void 0!==(t=ee(o,n))?t:void 0;this.each(function(){J.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){J.remove(this,e)})}}),k.extend({queue:function(e,t,n){var r;if(e)return t=(t||\"fx\")+\"queue\",r=Q.get(e,t),n&&(!r||Array.isArray(n)?r=Q.access(e,t,k.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||\"fx\";var n=k.queue(e,t),r=n.length,i=n.shift(),o=k._queueHooks(e,t);\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,function(){k.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return Q.get(e,n)||Q.access(e,n,{empty:k.Callbacks(\"once memory\").add(function(){Q.remove(e,[t+\"queue\",n])})})}}),k.fn.extend({queue:function(t,n){var e=2;return\"string\"!=typeof t&&(n=t,t=\"fx\",e--),arguments.length<e?k.queue(this[0],t):void 0===n?this:this.each(function(){var e=k.queue(this,t,n);k._queueHooks(this,t),\"fx\"===t&&\"inprogress\"!==e[0]&&k.dequeue(this,t)})},dequeue:function(e){return this.each(function(){k.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,t){var n,r=1,i=k.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};\"string\"!=typeof e&&(t=e,e=void 0),e=e||\"fx\";while(a--)(n=Q.get(o[a],e+\"queueHooks\"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var te=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,ne=new RegExp(\"^(?:([+-])=|)(\"+te+\")([a-z%]*)$\",\"i\"),re=[\"Top\",\"Right\",\"Bottom\",\"Left\"],ie=E.documentElement,oe=function(e){return k.contains(e.ownerDocument,e)},ae={composed:!0};ie.attachShadow&&(oe=function(e){return k.contains(e.ownerDocument,e)||e.getRootNode(ae)===e.ownerDocument});var se=function(e,t){return\"none\"===(e=t||e).style.display||\"\"===e.style.display&&oe(e)&&\"none\"===k.css(e,\"display\")},ue=function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];for(o in i=n.apply(e,r||[]),t)e.style[o]=a[o];return i};function le(e,t,n,r){var i,o,a=20,s=r?function(){return r.cur()}:function(){return k.css(e,t,\"\")},u=s(),l=n&&n[3]||(k.cssNumber[t]?\"\":\"px\"),c=e.nodeType&&(k.cssNumber[t]||\"px\"!==l&&+u)&&ne.exec(k.css(e,t));if(c&&c[3]!==l){u/=2,l=l||c[3],c=+u||1;while(a--)k.style(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,k.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var ce={};function fe(e,t){for(var n,r,i,o,a,s,u,l=[],c=0,f=e.length;c<f;c++)(r=e[c]).style&&(n=r.style.display,t?(\"none\"===n&&(l[c]=Q.get(r,\"display\")||null,l[c]||(r.style.display=\"\")),\"\"===r.style.display&&se(r)&&(l[c]=(u=a=o=void 0,a=(i=r).ownerDocument,s=i.nodeName,(u=ce[s])||(o=a.body.appendChild(a.createElement(s)),u=k.css(o,\"display\"),o.parentNode.removeChild(o),\"none\"===u&&(u=\"block\"),ce[s]=u)))):\"none\"!==n&&(l[c]=\"none\",Q.set(r,\"display\",n)));for(c=0;c<f;c++)null!=l[c]&&(e[c].style.display=l[c]);return e}k.fn.extend({show:function(){return fe(this,!0)},hide:function(){return fe(this)},toggle:function(e){return\"boolean\"==typeof e?e?this.show():this.hide():this.each(function(){se(this)?k(this).show():k(this).hide()})}});var pe=/^(?:checkbox|radio)$/i,de=/<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i,he=/^$|^module$|\\/(?:java|ecma)script/i,ge={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};function ve(e,t){var n;return n=\"undefined\"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||\"*\"):\"undefined\"!=typeof e.querySelectorAll?e.querySelectorAll(t||\"*\"):[],void 0===t||t&&N(e,t)?k.merge([e],n):n}function ye(e,t){for(var n=0,r=e.length;n<r;n++)Q.set(e[n],\"globalEval\",!t||Q.get(t[n],\"globalEval\"))}ge.optgroup=ge.option,ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td;var me,xe,be=/<|&#?\\w+;/;function we(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o)if(\"object\"===w(o))k.merge(p,o.nodeType?[o]:o);else if(be.test(o)){a=a||f.appendChild(t.createElement(\"div\")),s=(de.exec(o)||[\"\",\"\"])[1].toLowerCase(),u=ge[s]||ge._default,a.innerHTML=u[1]+k.htmlPrefilter(o)+u[2],c=u[0];while(c--)a=a.lastChild;k.merge(p,a.childNodes),(a=f.firstChild).textContent=\"\"}else p.push(t.createTextNode(o));f.textContent=\"\",d=0;while(o=p[d++])if(r&&-1<k.inArray(o,r))i&&i.push(o);else if(l=oe(o),a=ve(f.appendChild(o),\"script\"),l&&ye(a),n){c=0;while(o=a[c++])he.test(o.type||\"\")&&n.push(o)}return f}me=E.createDocumentFragment().appendChild(E.createElement(\"div\")),(xe=E.createElement(\"input\")).setAttribute(\"type\",\"radio\"),xe.setAttribute(\"checked\",\"checked\"),xe.setAttribute(\"name\",\"t\"),me.appendChild(xe),y.checkClone=me.cloneNode(!0).cloneNode(!0).lastChild.checked,me.innerHTML=\"<textarea>x</textarea>\",y.noCloneChecked=!!me.cloneNode(!0).lastChild.defaultValue;var Te=/^key/,Ce=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Ee=/^([^.]*)(?:\\.(.+)|)/;function ke(){return!0}function Se(){return!1}function Ae(e,t){return e===function(){try{return E.activeElement}catch(e){}}()==(\"focus\"===t)}function Ne(e,t,n,r,i,o){var a,s;if(\"object\"==typeof t){for(s in\"string\"!=typeof n&&(r=r||n,n=void 0),t)Ne(e,s,n,r,t[s],o);return e}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&(\"string\"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),!1===i)i=Se;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return k().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=k.guid++)),e.each(function(){k.event.add(this,t,i,r,n)})}function De(e,i,o){o?(Q.set(e,i,!1),k.event.add(e,i,{namespace:!1,handler:function(e){var t,n,r=Q.get(this,i);if(1&e.isTrigger&&this[i]){if(r)(k.event.special[i]||{}).delegateType&&e.stopPropagation();else if(r=s.call(arguments),Q.set(this,i,r),t=o(this,i),this[i](),r!==(n=Q.get(this,i))||t?Q.set(this,i,!1):n=void 0,r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n}else r&&(Q.set(this,i,k.event.trigger(k.extend(r.shift(),k.Event.prototype),r,this)),e.stopImmediatePropagation())}})):k.event.add(e,i,ke)}k.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Q.get(t);if(v){n.handler&&(n=(o=n).handler,i=o.selector),i&&k.find.matchesSelector(ie,i),n.guid||(n.guid=k.guid++),(u=v.events)||(u=v.events={}),(a=v.handle)||(a=v.handle=function(e){return\"undefined\"!=typeof k&&k.event.triggered!==e.type?k.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||\"\").match(R)||[\"\"]).length;while(l--)d=g=(s=Ee.exec(e[l])||[])[1],h=(s[2]||\"\").split(\".\").sort(),d&&(f=k.event.special[d]||{},d=(i?f.delegateType:f.bindType)||d,f=k.event.special[d]||{},c=k.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&k.expr.match.needsContext.test(i),namespace:h.join(\".\")},o),(p=u[d])||((p=u[d]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(t,r,h,a)||t.addEventListener&&t.addEventListener(d,a)),f.add&&(f.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),k.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Q.hasData(e)&&Q.get(e);if(v&&(u=v.events)){l=(t=(t||\"\").match(R)||[\"\"]).length;while(l--)if(d=g=(s=Ee.exec(t[l])||[])[1],h=(s[2]||\"\").split(\".\").sort(),d){f=k.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),a=o=p.length;while(o--)c=p[o],!i&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||r&&r!==c.selector&&(\"**\"!==r||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,f.remove&&f.remove.call(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,v.handle)||k.removeEvent(e,d,v.handle),delete u[d])}else for(d in u)k.event.remove(e,d+t[l],n,r,!0);k.isEmptyObject(u)&&Q.remove(e,\"handle events\")}},dispatch:function(e){var t,n,r,i,o,a,s=k.event.fix(e),u=new Array(arguments.length),l=(Q.get(this,\"events\")||{})[s.type]||[],c=k.event.special[s.type]||{};for(u[0]=s,t=1;t<arguments.length;t++)u[t]=arguments[t];if(s.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,s)){a=k.event.handlers.call(this,s,l),t=0;while((i=a[t++])&&!s.isPropagationStopped()){s.currentTarget=i.elem,n=0;while((o=i.handlers[n++])&&!s.isImmediatePropagationStopped())s.rnamespace&&!1!==o.namespace&&!s.rnamespace.test(o.namespace)||(s.handleObj=o,s.data=o.data,void 0!==(r=((k.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,u))&&!1===(s.result=r)&&(s.preventDefault(),s.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,s),s.result}},handlers:function(e,t){var n,r,i,o,a,s=[],u=t.delegateCount,l=e.target;if(u&&l.nodeType&&!(\"click\"===e.type&&1<=e.button))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(\"click\"!==e.type||!0!==l.disabled)){for(o=[],a={},n=0;n<u;n++)void 0===a[i=(r=t[n]).selector+\" \"]&&(a[i]=r.needsContext?-1<k(i,this).index(l):k.find(i,this,null,[l]).length),a[i]&&o.push(r);o.length&&s.push({elem:l,handlers:o})}return l=this,u<t.length&&s.push({elem:l,handlers:t.slice(u)}),s},addProp:function(t,e){Object.defineProperty(k.Event.prototype,t,{enumerable:!0,configurable:!0,get:m(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[k.expando]?e:new k.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&N(t,\"input\")&&void 0===Q.get(t,\"click\")&&De(t,\"click\",ke),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&N(t,\"input\")&&void 0===Q.get(t,\"click\")&&De(t,\"click\"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&N(t,\"input\")&&Q.get(t,\"click\")||N(t,\"a\")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},k.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},k.Event=function(e,t){if(!(this instanceof k.Event))return new k.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?ke:Se,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&k.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[k.expando]=!0},k.Event.prototype={constructor:k.Event,isDefaultPrevented:Se,isPropagationStopped:Se,isImmediatePropagationStopped:Se,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=ke,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=ke,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=ke,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},k.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,\"char\":!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&Te.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Ce.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},k.event.addProp),k.each({focus:\"focusin\",blur:\"focusout\"},function(e,t){k.event.special[e]={setup:function(){return De(this,e,Ae),!1},trigger:function(){return De(this,e),!0},delegateType:t}}),k.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(e,i){k.event.special[e]={delegateType:i,bindType:i,handle:function(e){var t,n=e.relatedTarget,r=e.handleObj;return n&&(n===this||k.contains(this,n))||(e.type=r.origType,t=r.handler.apply(this,arguments),e.type=i),t}}}),k.fn.extend({on:function(e,t,n,r){return Ne(this,e,t,n,r)},one:function(e,t,n,r){return Ne(this,e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,k(e.delegateTarget).off(r.namespace?r.origType+\".\"+r.namespace:r.origType,r.selector,r.handler),this;if(\"object\"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return!1!==t&&\"function\"!=typeof t||(n=t,t=void 0),!1===n&&(n=Se),this.each(function(){k.event.remove(this,e,n,t)})}});var je=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,qe=/<script|<style|<link/i,Le=/checked\\s*(?:[^=]|=\\s*.checked.)/i,He=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;function Oe(e,t){return N(e,\"table\")&&N(11!==t.nodeType?t:t.firstChild,\"tr\")&&k(e).children(\"tbody\")[0]||e}function Pe(e){return e.type=(null!==e.getAttribute(\"type\"))+\"/\"+e.type,e}function Re(e){return\"true/\"===(e.type||\"\").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute(\"type\"),e}function Me(e,t){var n,r,i,o,a,s,u,l;if(1===t.nodeType){if(Q.hasData(e)&&(o=Q.access(e),a=Q.set(t,o),l=o.events))for(i in delete a.handle,a.events={},l)for(n=0,r=l[i].length;n<r;n++)k.event.add(t,i,l[i][n]);J.hasData(e)&&(s=J.access(e),u=k.extend({},s),J.set(t,u))}}function Ie(n,r,i,o){r=g.apply([],r);var e,t,a,s,u,l,c=0,f=n.length,p=f-1,d=r[0],h=m(d);if(h||1<f&&\"string\"==typeof d&&!y.checkClone&&Le.test(d))return n.each(function(e){var t=n.eq(e);h&&(r[0]=d.call(this,e,t.html())),Ie(t,r,i,o)});if(f&&(t=(e=we(r,n[0].ownerDocument,!1,n,o)).firstChild,1===e.childNodes.length&&(e=t),t||o)){for(s=(a=k.map(ve(e,\"script\"),Pe)).length;c<f;c++)u=e,c!==p&&(u=k.clone(u,!0,!0),s&&k.merge(a,ve(u,\"script\"))),i.call(n[c],u,c);if(s)for(l=a[a.length-1].ownerDocument,k.map(a,Re),c=0;c<s;c++)u=a[c],he.test(u.type||\"\")&&!Q.access(u,\"globalEval\")&&k.contains(l,u)&&(u.src&&\"module\"!==(u.type||\"\").toLowerCase()?k._evalUrl&&!u.noModule&&k._evalUrl(u.src,{nonce:u.nonce||u.getAttribute(\"nonce\")}):b(u.textContent.replace(He,\"\"),u,l))}return n}function We(e,t,n){for(var r,i=t?k.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||k.cleanData(ve(r)),r.parentNode&&(n&&oe(r)&&ye(ve(r,\"script\")),r.parentNode.removeChild(r));return e}k.extend({htmlPrefilter:function(e){return e.replace(je,\"<$1></$2>\")},clone:function(e,t,n){var r,i,o,a,s,u,l,c=e.cloneNode(!0),f=oe(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||k.isXMLDoc(e)))for(a=ve(c),r=0,i=(o=ve(e)).length;r<i;r++)s=o[r],u=a[r],void 0,\"input\"===(l=u.nodeName.toLowerCase())&&pe.test(s.type)?u.checked=s.checked:\"input\"!==l&&\"textarea\"!==l||(u.defaultValue=s.defaultValue);if(t)if(n)for(o=o||ve(e),a=a||ve(c),r=0,i=o.length;r<i;r++)Me(o[r],a[r]);else Me(e,c);return 0<(a=ve(c,\"script\")).length&&ye(a,!f&&ve(e,\"script\")),c},cleanData:function(e){for(var t,n,r,i=k.event.special,o=0;void 0!==(n=e[o]);o++)if(G(n)){if(t=n[Q.expando]){if(t.events)for(r in t.events)i[r]?k.event.remove(n,r):k.removeEvent(n,r,t.handle);n[Q.expando]=void 0}n[J.expando]&&(n[J.expando]=void 0)}}}),k.fn.extend({detach:function(e){return We(this,e,!0)},remove:function(e){return We(this,e)},text:function(e){return _(this,function(e){return void 0===e?k.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Ie(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Oe(this,e).appendChild(e)})},prepend:function(){return Ie(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Oe(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return Ie(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Ie(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(k.cleanData(ve(e,!1)),e.textContent=\"\");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return k.clone(this,e,t)})},html:function(e){return _(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if(\"string\"==typeof e&&!qe.test(e)&&!ge[(de.exec(e)||[\"\",\"\"])[1].toLowerCase()]){e=k.htmlPrefilter(e);try{for(;n<r;n++)1===(t=this[n]||{}).nodeType&&(k.cleanData(ve(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return Ie(this,arguments,function(e){var t=this.parentNode;k.inArray(this,n)<0&&(k.cleanData(ve(this)),t&&t.replaceChild(e,this))},n)}}),k.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,a){k.fn[e]=function(e){for(var t,n=[],r=k(e),i=r.length-1,o=0;o<=i;o++)t=o===i?this:this.clone(!0),k(r[o])[a](t),u.apply(n,t.get());return this.pushStack(n)}});var $e=new RegExp(\"^(\"+te+\")(?!px)[a-z%]+$\",\"i\"),Fe=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=C),t.getComputedStyle(e)},Be=new RegExp(re.join(\"|\"),\"i\");function _e(e,t,n){var r,i,o,a,s=e.style;return(n=n||Fe(e))&&(\"\"!==(a=n.getPropertyValue(t)||n[t])||oe(e)||(a=k.style(e,t)),!y.pixelBoxStyles()&&$e.test(a)&&Be.test(t)&&(r=s.width,i=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=r,s.minWidth=i,s.maxWidth=o)),void 0!==a?a+\"\":a}function ze(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(u){s.style.cssText=\"position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0\",u.style.cssText=\"position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%\",ie.appendChild(s).appendChild(u);var e=C.getComputedStyle(u);n=\"1%\"!==e.top,a=12===t(e.marginLeft),u.style.right=\"60%\",o=36===t(e.right),r=36===t(e.width),u.style.position=\"absolute\",i=12===t(u.offsetWidth/3),ie.removeChild(s),u=null}}function t(e){return Math.round(parseFloat(e))}var n,r,i,o,a,s=E.createElement(\"div\"),u=E.createElement(\"div\");u.style&&(u.style.backgroundClip=\"content-box\",u.cloneNode(!0).style.backgroundClip=\"\",y.clearCloneStyle=\"content-box\"===u.style.backgroundClip,k.extend(y,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),o},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),a},scrollboxSize:function(){return e(),i}}))}();var Ue=[\"Webkit\",\"Moz\",\"ms\"],Xe=E.createElement(\"div\").style,Ve={};function Ge(e){var t=k.cssProps[e]||Ve[e];return t||(e in Xe?e:Ve[e]=function(e){var t=e[0].toUpperCase()+e.slice(1),n=Ue.length;while(n--)if((e=Ue[n]+t)in Xe)return e}(e)||e)}var Ye=/^(none|table(?!-c[ea]).+)/,Qe=/^--/,Je={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Ke={letterSpacing:\"0\",fontWeight:\"400\"};function Ze(e,t,n){var r=ne.exec(t);return r?Math.max(0,r[2]-(n||0))+(r[3]||\"px\"):t}function et(e,t,n,r,i,o){var a=\"width\"===t?1:0,s=0,u=0;if(n===(r?\"border\":\"content\"))return 0;for(;a<4;a+=2)\"margin\"===n&&(u+=k.css(e,n+re[a],!0,i)),r?(\"content\"===n&&(u-=k.css(e,\"padding\"+re[a],!0,i)),\"margin\"!==n&&(u-=k.css(e,\"border\"+re[a]+\"Width\",!0,i))):(u+=k.css(e,\"padding\"+re[a],!0,i),\"padding\"!==n?u+=k.css(e,\"border\"+re[a]+\"Width\",!0,i):s+=k.css(e,\"border\"+re[a]+\"Width\",!0,i));return!r&&0<=o&&(u+=Math.max(0,Math.ceil(e[\"offset\"+t[0].toUpperCase()+t.slice(1)]-o-u-s-.5))||0),u}function tt(e,t,n){var r=Fe(e),i=(!y.boxSizingReliable()||n)&&\"border-box\"===k.css(e,\"boxSizing\",!1,r),o=i,a=_e(e,t,r),s=\"offset\"+t[0].toUpperCase()+t.slice(1);if($e.test(a)){if(!n)return a;a=\"auto\"}return(!y.boxSizingReliable()&&i||\"auto\"===a||!parseFloat(a)&&\"inline\"===k.css(e,\"display\",!1,r))&&e.getClientRects().length&&(i=\"border-box\"===k.css(e,\"boxSizing\",!1,r),(o=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+et(e,t,n||(i?\"border\":\"content\"),o,r,a)+\"px\"}function nt(e,t,n,r,i){return new nt.prototype.init(e,t,n,r,i)}k.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=_e(e,\"opacity\");return\"\"===n?\"1\":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=V(t),u=Qe.test(t),l=e.style;if(u||(t=Ge(s)),a=k.cssHooks[t]||k.cssHooks[s],void 0===n)return a&&\"get\"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];\"string\"===(o=typeof n)&&(i=ne.exec(n))&&i[1]&&(n=le(e,t,i),o=\"number\"),null!=n&&n==n&&(\"number\"!==o||u||(n+=i&&i[3]||(k.cssNumber[s]?\"\":\"px\")),y.clearCloneStyle||\"\"!==n||0!==t.indexOf(\"background\")||(l[t]=\"inherit\"),a&&\"set\"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=V(t);return Qe.test(t)||(t=Ge(s)),(a=k.cssHooks[t]||k.cssHooks[s])&&\"get\"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=_e(e,t,r)),\"normal\"===i&&t in Ke&&(i=Ke[t]),\"\"===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),k.each([\"height\",\"width\"],function(e,u){k.cssHooks[u]={get:function(e,t,n){if(t)return!Ye.test(k.css(e,\"display\"))||e.getClientRects().length&&e.getBoundingClientRect().width?tt(e,u,n):ue(e,Je,function(){return tt(e,u,n)})},set:function(e,t,n){var r,i=Fe(e),o=!y.scrollboxSize()&&\"absolute\"===i.position,a=(o||n)&&\"border-box\"===k.css(e,\"boxSizing\",!1,i),s=n?et(e,u,n,a,i):0;return a&&o&&(s-=Math.ceil(e[\"offset\"+u[0].toUpperCase()+u.slice(1)]-parseFloat(i[u])-et(e,u,\"border\",!1,i)-.5)),s&&(r=ne.exec(t))&&\"px\"!==(r[3]||\"px\")&&(e.style[u]=t,t=k.css(e,u)),Ze(0,t,s)}}}),k.cssHooks.marginLeft=ze(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(_e(e,\"marginLeft\"))||e.getBoundingClientRect().left-ue(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+\"px\"}),k.each({margin:\"\",padding:\"\",border:\"Width\"},function(i,o){k.cssHooks[i+o]={expand:function(e){for(var t=0,n={},r=\"string\"==typeof e?e.split(\" \"):[e];t<4;t++)n[i+re[t]+o]=r[t]||r[t-2]||r[0];return n}},\"margin\"!==i&&(k.cssHooks[i+o].set=Ze)}),k.fn.extend({css:function(e,t){return _(this,function(e,t,n){var r,i,o={},a=0;if(Array.isArray(t)){for(r=Fe(e),i=t.length;a<i;a++)o[t[a]]=k.css(e,t[a],!1,r);return o}return void 0!==n?k.style(e,t,n):k.css(e,t)},e,t,1<arguments.length)}}),((k.Tween=nt).prototype={constructor:nt,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||k.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(k.cssNumber[n]?\"\":\"px\")},cur:function(){var e=nt.propHooks[this.prop];return e&&e.get?e.get(this):nt.propHooks._default.get(this)},run:function(e){var t,n=nt.propHooks[this.prop];return this.options.duration?this.pos=t=k.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):nt.propHooks._default.set(this),this}}).init.prototype=nt.prototype,(nt.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=k.css(e.elem,e.prop,\"\"))&&\"auto\"!==t?t:0},set:function(e){k.fx.step[e.prop]?k.fx.step[e.prop](e):1!==e.elem.nodeType||!k.cssHooks[e.prop]&&null==e.elem.style[Ge(e.prop)]?e.elem[e.prop]=e.now:k.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=nt.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},k.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:\"swing\"},k.fx=nt.prototype.init,k.fx.step={};var rt,it,ot,at,st=/^(?:toggle|show|hide)$/,ut=/queueHooks$/;function lt(){it&&(!1===E.hidden&&C.requestAnimationFrame?C.requestAnimationFrame(lt):C.setTimeout(lt,k.fx.interval),k.fx.tick())}function ct(){return C.setTimeout(function(){rt=void 0}),rt=Date.now()}function ft(e,t){var n,r=0,i={height:e};for(t=t?1:0;r<4;r+=2-t)i[\"margin\"+(n=re[r])]=i[\"padding\"+n]=e;return t&&(i.opacity=i.width=e),i}function pt(e,t,n){for(var r,i=(dt.tweeners[t]||[]).concat(dt.tweeners[\"*\"]),o=0,a=i.length;o<a;o++)if(r=i[o].call(n,t,e))return r}function dt(o,e,t){var n,a,r=0,i=dt.prefilters.length,s=k.Deferred().always(function(){delete u.elem}),u=function(){if(a)return!1;for(var e=rt||ct(),t=Math.max(0,l.startTime+l.duration-e),n=1-(t/l.duration||0),r=0,i=l.tweens.length;r<i;r++)l.tweens[r].run(n);return s.notifyWith(o,[l,n,t]),n<1&&i?t:(i||s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l]),!1)},l=s.promise({elem:o,props:k.extend({},e),opts:k.extend(!0,{specialEasing:{},easing:k.easing._default},t),originalProperties:e,originalOptions:t,startTime:rt||ct(),duration:t.duration,tweens:[],createTween:function(e,t){var n=k.Tween(o,l.opts,e,t,l.opts.specialEasing[e]||l.opts.easing);return l.tweens.push(n),n},stop:function(e){var t=0,n=e?l.tweens.length:0;if(a)return this;for(a=!0;t<n;t++)l.tweens[t].run(1);return e?(s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l,e])):s.rejectWith(o,[l,e]),this}}),c=l.props;for(!function(e,t){var n,r,i,o,a;for(n in e)if(i=t[r=V(n)],o=e[n],Array.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),(a=k.cssHooks[r])&&\"expand\"in a)for(n in o=a.expand(o),delete e[r],o)n in e||(e[n]=o[n],t[n]=i);else t[r]=i}(c,l.opts.specialEasing);r<i;r++)if(n=dt.prefilters[r].call(l,o,c,l.opts))return m(n.stop)&&(k._queueHooks(l.elem,l.opts.queue).stop=n.stop.bind(n)),n;return k.map(c,pt,l),m(l.opts.start)&&l.opts.start.call(o,l),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always),k.fx.timer(k.extend(u,{elem:o,anim:l,queue:l.opts.queue})),l}k.Animation=k.extend(dt,{tweeners:{\"*\":[function(e,t){var n=this.createTween(e,t);return le(n.elem,e,ne.exec(t),n),n}]},tweener:function(e,t){m(e)?(t=e,e=[\"*\"]):e=e.match(R);for(var n,r=0,i=e.length;r<i;r++)n=e[r],dt.tweeners[n]=dt.tweeners[n]||[],dt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,i,o,a,s,u,l,c,f=\"width\"in t||\"height\"in t,p=this,d={},h=e.style,g=e.nodeType&&se(e),v=Q.get(e,\"fxshow\");for(r in n.queue||(null==(a=k._queueHooks(e,\"fx\")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,k.queue(e,\"fx\").length||a.empty.fire()})})),t)if(i=t[r],st.test(i)){if(delete t[r],o=o||\"toggle\"===i,i===(g?\"hide\":\"show\")){if(\"show\"!==i||!v||void 0===v[r])continue;g=!0}d[r]=v&&v[r]||k.style(e,r)}if((u=!k.isEmptyObject(t))||!k.isEmptyObject(d))for(r in f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=v&&v.display)&&(l=Q.get(e,\"display\")),\"none\"===(c=k.css(e,\"display\"))&&(l?c=l:(fe([e],!0),l=e.style.display||l,c=k.css(e,\"display\"),fe([e]))),(\"inline\"===c||\"inline-block\"===c&&null!=l)&&\"none\"===k.css(e,\"float\")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l=\"none\"===c?\"\":c)),h.display=\"inline-block\")),n.overflow&&(h.overflow=\"hidden\",p.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),u=!1,d)u||(v?\"hidden\"in v&&(g=v.hidden):v=Q.access(e,\"fxshow\",{display:l}),o&&(v.hidden=!g),g&&fe([e],!0),p.done(function(){for(r in g||fe([e]),Q.remove(e,\"fxshow\"),d)k.style(e,r,d[r])})),u=pt(g?v[r]:0,r,p),r in v||(v[r]=u.start,g&&(u.end=u.start,u.start=0))}],prefilter:function(e,t){t?dt.prefilters.unshift(e):dt.prefilters.push(e)}}),k.speed=function(e,t,n){var r=e&&\"object\"==typeof e?k.extend({},e):{complete:n||!n&&t||m(e)&&e,duration:e,easing:n&&t||t&&!m(t)&&t};return k.fx.off?r.duration=0:\"number\"!=typeof r.duration&&(r.duration in k.fx.speeds?r.duration=k.fx.speeds[r.duration]:r.duration=k.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue=\"fx\"),r.old=r.complete,r.complete=function(){m(r.old)&&r.old.call(this),r.queue&&k.dequeue(this,r.queue)},r},k.fn.extend({fadeTo:function(e,t,n,r){return this.filter(se).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=k.isEmptyObject(t),o=k.speed(e,n,r),a=function(){var e=dt(this,k.extend({},t),o);(i||Q.get(this,\"finish\"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return\"string\"!=typeof i&&(o=e,e=i,i=void 0),e&&!1!==i&&this.queue(i||\"fx\",[]),this.each(function(){var e=!0,t=null!=i&&i+\"queueHooks\",n=k.timers,r=Q.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&ut.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||k.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||\"fx\"),this.each(function(){var e,t=Q.get(this),n=t[a+\"queue\"],r=t[a+\"queueHooks\"],i=k.timers,o=n?n.length:0;for(t.finish=!0,k.queue(this,a,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),k.each([\"toggle\",\"show\",\"hide\"],function(e,r){var i=k.fn[r];k.fn[r]=function(e,t,n){return null==e||\"boolean\"==typeof e?i.apply(this,arguments):this.animate(ft(r,!0),e,t,n)}}),k.each({slideDown:ft(\"show\"),slideUp:ft(\"hide\"),slideToggle:ft(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(e,r){k.fn[e]=function(e,t,n){return this.animate(r,e,t,n)}}),k.timers=[],k.fx.tick=function(){var e,t=0,n=k.timers;for(rt=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||k.fx.stop(),rt=void 0},k.fx.timer=function(e){k.timers.push(e),k.fx.start()},k.fx.interval=13,k.fx.start=function(){it||(it=!0,lt())},k.fx.stop=function(){it=null},k.fx.speeds={slow:600,fast:200,_default:400},k.fn.delay=function(r,e){return r=k.fx&&k.fx.speeds[r]||r,e=e||\"fx\",this.queue(e,function(e,t){var n=C.setTimeout(e,r);t.stop=function(){C.clearTimeout(n)}})},ot=E.createElement(\"input\"),at=E.createElement(\"select\").appendChild(E.createElement(\"option\")),ot.type=\"checkbox\",y.checkOn=\"\"!==ot.value,y.optSelected=at.selected,(ot=E.createElement(\"input\")).value=\"t\",ot.type=\"radio\",y.radioValue=\"t\"===ot.value;var ht,gt=k.expr.attrHandle;k.fn.extend({attr:function(e,t){return _(this,k.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){k.removeAttr(this,e)})}}),k.extend({attr:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return\"undefined\"==typeof e.getAttribute?k.prop(e,t,n):(1===o&&k.isXMLDoc(e)||(i=k.attrHooks[t.toLowerCase()]||(k.expr.match.bool.test(t)?ht:void 0)),void 0!==n?null===n?void k.removeAttr(e,t):i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+\"\"),n):i&&\"get\"in i&&null!==(r=i.get(e,t))?r:null==(r=k.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&\"radio\"===t&&N(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r=0,i=t&&t.match(R);if(i&&1===e.nodeType)while(n=i[r++])e.removeAttribute(n)}}),ht={set:function(e,t,n){return!1===t?k.removeAttr(e,n):e.setAttribute(n,n),n}},k.each(k.expr.match.bool.source.match(/\\w+/g),function(e,t){var a=gt[t]||k.find.attr;gt[t]=function(e,t,n){var r,i,o=t.toLowerCase();return n||(i=gt[o],gt[o]=r,r=null!=a(e,t,n)?o:null,gt[o]=i),r}});var vt=/^(?:input|select|textarea|button)$/i,yt=/^(?:a|area)$/i;function mt(e){return(e.match(R)||[]).join(\" \")}function xt(e){return e.getAttribute&&e.getAttribute(\"class\")||\"\"}function bt(e){return Array.isArray(e)?e:\"string\"==typeof e&&e.match(R)||[]}k.fn.extend({prop:function(e,t){return _(this,k.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[k.propFix[e]||e]})}}),k.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&k.isXMLDoc(e)||(t=k.propFix[t]||t,i=k.propHooks[t]),void 0!==n?i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&\"get\"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=k.find.attr(e,\"tabindex\");return t?parseInt(t,10):vt.test(e.nodeName)||yt.test(e.nodeName)&&e.href?0:-1}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}}),y.optSelected||(k.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),k.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){k.propFix[this.toLowerCase()]=this}),k.fn.extend({addClass:function(t){var e,n,r,i,o,a,s,u=0;if(m(t))return this.each(function(e){k(this).addClass(t.call(this,e,xt(this)))});if((e=bt(t)).length)while(n=this[u++])if(i=xt(n),r=1===n.nodeType&&\" \"+mt(i)+\" \"){a=0;while(o=e[a++])r.indexOf(\" \"+o+\" \")<0&&(r+=o+\" \");i!==(s=mt(r))&&n.setAttribute(\"class\",s)}return this},removeClass:function(t){var e,n,r,i,o,a,s,u=0;if(m(t))return this.each(function(e){k(this).removeClass(t.call(this,e,xt(this)))});if(!arguments.length)return this.attr(\"class\",\"\");if((e=bt(t)).length)while(n=this[u++])if(i=xt(n),r=1===n.nodeType&&\" \"+mt(i)+\" \"){a=0;while(o=e[a++])while(-1<r.indexOf(\" \"+o+\" \"))r=r.replace(\" \"+o+\" \",\" \");i!==(s=mt(r))&&n.setAttribute(\"class\",s)}return this},toggleClass:function(i,t){var o=typeof i,a=\"string\"===o||Array.isArray(i);return\"boolean\"==typeof t&&a?t?this.addClass(i):this.removeClass(i):m(i)?this.each(function(e){k(this).toggleClass(i.call(this,e,xt(this),t),t)}):this.each(function(){var e,t,n,r;if(a){t=0,n=k(this),r=bt(i);while(e=r[t++])n.hasClass(e)?n.removeClass(e):n.addClass(e)}else void 0!==i&&\"boolean\"!==o||((e=xt(this))&&Q.set(this,\"__className__\",e),this.setAttribute&&this.setAttribute(\"class\",e||!1===i?\"\":Q.get(this,\"__className__\")||\"\"))})},hasClass:function(e){var t,n,r=0;t=\" \"+e+\" \";while(n=this[r++])if(1===n.nodeType&&-1<(\" \"+mt(xt(n))+\" \").indexOf(t))return!0;return!1}});var wt=/\\r/g;k.fn.extend({val:function(n){var r,e,i,t=this[0];return arguments.length?(i=m(n),this.each(function(e){var t;1===this.nodeType&&(null==(t=i?n.call(this,e,k(this).val()):n)?t=\"\":\"number\"==typeof t?t+=\"\":Array.isArray(t)&&(t=k.map(t,function(e){return null==e?\"\":e+\"\"})),(r=k.valHooks[this.type]||k.valHooks[this.nodeName.toLowerCase()])&&\"set\"in r&&void 0!==r.set(this,t,\"value\")||(this.value=t))})):t?(r=k.valHooks[t.type]||k.valHooks[t.nodeName.toLowerCase()])&&\"get\"in r&&void 0!==(e=r.get(t,\"value\"))?e:\"string\"==typeof(e=t.value)?e.replace(wt,\"\"):null==e?\"\":e:void 0}}),k.extend({valHooks:{option:{get:function(e){var t=k.find.attr(e,\"value\");return null!=t?t:mt(k.text(e))}},select:{get:function(e){var t,n,r,i=e.options,o=e.selectedIndex,a=\"select-one\"===e.type,s=a?null:[],u=a?o+1:i.length;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!N(n.parentNode,\"optgroup\"))){if(t=k(n).val(),a)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=k.makeArray(t),a=i.length;while(a--)((r=i[a]).selected=-1<k.inArray(k.valHooks.option.get(r),o))&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),k.each([\"radio\",\"checkbox\"],function(){k.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<k.inArray(k(e).val(),t)}},y.checkOn||(k.valHooks[this].get=function(e){return null===e.getAttribute(\"value\")?\"on\":e.value})}),y.focusin=\"onfocusin\"in C;var Tt=/^(?:focusinfocus|focusoutblur)$/,Ct=function(e){e.stopPropagation()};k.extend(k.event,{trigger:function(e,t,n,r){var i,o,a,s,u,l,c,f,p=[n||E],d=v.call(e,\"type\")?e.type:e,h=v.call(e,\"namespace\")?e.namespace.split(\".\"):[];if(o=f=a=n=n||E,3!==n.nodeType&&8!==n.nodeType&&!Tt.test(d+k.event.triggered)&&(-1<d.indexOf(\".\")&&(d=(h=d.split(\".\")).shift(),h.sort()),u=d.indexOf(\":\")<0&&\"on\"+d,(e=e[k.expando]?e:new k.Event(d,\"object\"==typeof e&&e)).isTrigger=r?2:3,e.namespace=h.join(\".\"),e.rnamespace=e.namespace?new RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:k.makeArray(t,[e]),c=k.event.special[d]||{},r||!c.trigger||!1!==c.trigger.apply(n,t))){if(!r&&!c.noBubble&&!x(n)){for(s=c.delegateType||d,Tt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||E)&&p.push(a.defaultView||a.parentWindow||C)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(Q.get(o,\"events\")||{})[e.type]&&Q.get(o,\"handle\"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&G(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!G(n)||u&&m(n[d])&&!x(n)&&((a=n[u])&&(n[u]=null),k.event.triggered=d,e.isPropagationStopped()&&f.addEventListener(d,Ct),n[d](),e.isPropagationStopped()&&f.removeEventListener(d,Ct),k.event.triggered=void 0,a&&(n[u]=a)),e.result}},simulate:function(e,t,n){var r=k.extend(new k.Event,n,{type:e,isSimulated:!0});k.event.trigger(r,null,t)}}),k.fn.extend({trigger:function(e,t){return this.each(function(){k.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return k.event.trigger(e,t,n,!0)}}),y.focusin||k.each({focus:\"focusin\",blur:\"focusout\"},function(n,r){var i=function(e){k.event.simulate(r,e.target,k.event.fix(e))};k.event.special[r]={setup:function(){var e=this.ownerDocument||this,t=Q.access(e,r);t||e.addEventListener(n,i,!0),Q.access(e,r,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this,t=Q.access(e,r)-1;t?Q.access(e,r,t):(e.removeEventListener(n,i,!0),Q.remove(e,r))}}});var Et=C.location,kt=Date.now(),St=/\\?/;k.parseXML=function(e){var t;if(!e||\"string\"!=typeof e)return null;try{t=(new C.DOMParser).parseFromString(e,\"text/xml\")}catch(e){t=void 0}return t&&!t.getElementsByTagName(\"parsererror\").length||k.error(\"Invalid XML: \"+e),t};var At=/\\[\\]$/,Nt=/\\r?\\n/g,Dt=/^(?:submit|button|image|reset|file)$/i,jt=/^(?:input|select|textarea|keygen)/i;function qt(n,e,r,i){var t;if(Array.isArray(e))k.each(e,function(e,t){r||At.test(n)?i(n,t):qt(n+\"[\"+(\"object\"==typeof t&&null!=t?e:\"\")+\"]\",t,r,i)});else if(r||\"object\"!==w(e))i(n,e);else for(t in e)qt(n+\"[\"+t+\"]\",e[t],r,i)}k.param=function(e,t){var n,r=[],i=function(e,t){var n=m(t)?t():t;r[r.length]=encodeURIComponent(e)+\"=\"+encodeURIComponent(null==n?\"\":n)};if(null==e)return\"\";if(Array.isArray(e)||e.jquery&&!k.isPlainObject(e))k.each(e,function(){i(this.name,this.value)});else for(n in e)qt(n,e[n],t,i);return r.join(\"&\")},k.fn.extend({serialize:function(){return k.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=k.prop(this,\"elements\");return e?k.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!k(this).is(\":disabled\")&&jt.test(this.nodeName)&&!Dt.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var n=k(this).val();return null==n?null:Array.isArray(n)?k.map(n,function(e){return{name:t.name,value:e.replace(Nt,\"\\r\\n\")}}):{name:t.name,value:n.replace(Nt,\"\\r\\n\")}}).get()}});var Lt=/%20/g,Ht=/#.*$/,Ot=/([?&])_=[^&]*/,Pt=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,Rt=/^(?:GET|HEAD)$/,Mt=/^\\/\\//,It={},Wt={},$t=\"*/\".concat(\"*\"),Ft=E.createElement(\"a\");function Bt(o){return function(e,t){\"string\"!=typeof e&&(t=e,e=\"*\");var n,r=0,i=e.toLowerCase().match(R)||[];if(m(t))while(n=i[r++])\"+\"===n[0]?(n=n.slice(1)||\"*\",(o[n]=o[n]||[]).unshift(t)):(o[n]=o[n]||[]).push(t)}}function _t(t,i,o,a){var s={},u=t===Wt;function l(e){var r;return s[e]=!0,k.each(t[e]||[],function(e,t){var n=t(i,o,a);return\"string\"!=typeof n||u||s[n]?u?!(r=n):void 0:(i.dataTypes.unshift(n),l(n),!1)}),r}return l(i.dataTypes[0])||!s[\"*\"]&&l(\"*\")}function zt(e,t){var n,r,i=k.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&k.extend(!0,e,r),e}Ft.href=Et.href,k.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Et.href,type:\"GET\",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Et.protocol),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":$t,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/\\bxml\\b/,html:/\\bhtml/,json:/\\bjson\\b/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":JSON.parse,\"text xml\":k.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?zt(zt(e,k.ajaxSettings),t):zt(k.ajaxSettings,e)},ajaxPrefilter:Bt(It),ajaxTransport:Bt(Wt),ajax:function(e,t){\"object\"==typeof e&&(t=e,e=void 0),t=t||{};var c,f,p,n,d,r,h,g,i,o,v=k.ajaxSetup({},t),y=v.context||v,m=v.context&&(y.nodeType||y.jquery)?k(y):k.event,x=k.Deferred(),b=k.Callbacks(\"once memory\"),w=v.statusCode||{},a={},s={},u=\"canceled\",T={readyState:0,getResponseHeader:function(e){var t;if(h){if(!n){n={};while(t=Pt.exec(p))n[t[1].toLowerCase()+\" \"]=(n[t[1].toLowerCase()+\" \"]||[]).concat(t[2])}t=n[e.toLowerCase()+\" \"]}return null==t?null:t.join(\", \")},getAllResponseHeaders:function(){return h?p:null},setRequestHeader:function(e,t){return null==h&&(e=s[e.toLowerCase()]=s[e.toLowerCase()]||e,a[e]=t),this},overrideMimeType:function(e){return null==h&&(v.mimeType=e),this},statusCode:function(e){var t;if(e)if(h)T.always(e[T.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||u;return c&&c.abort(t),l(0,t),this}};if(x.promise(T),v.url=((e||v.url||Et.href)+\"\").replace(Mt,Et.protocol+\"//\"),v.type=t.method||t.type||v.method||v.type,v.dataTypes=(v.dataType||\"*\").toLowerCase().match(R)||[\"\"],null==v.crossDomain){r=E.createElement(\"a\");try{r.href=v.url,r.href=r.href,v.crossDomain=Ft.protocol+\"//\"+Ft.host!=r.protocol+\"//\"+r.host}catch(e){v.crossDomain=!0}}if(v.data&&v.processData&&\"string\"!=typeof v.data&&(v.data=k.param(v.data,v.traditional)),_t(It,v,t,T),h)return T;for(i in(g=k.event&&v.global)&&0==k.active++&&k.event.trigger(\"ajaxStart\"),v.type=v.type.toUpperCase(),v.hasContent=!Rt.test(v.type),f=v.url.replace(Ht,\"\"),v.hasContent?v.data&&v.processData&&0===(v.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&(v.data=v.data.replace(Lt,\"+\")):(o=v.url.slice(f.length),v.data&&(v.processData||\"string\"==typeof v.data)&&(f+=(St.test(f)?\"&\":\"?\")+v.data,delete v.data),!1===v.cache&&(f=f.replace(Ot,\"$1\"),o=(St.test(f)?\"&\":\"?\")+\"_=\"+kt+++o),v.url=f+o),v.ifModified&&(k.lastModified[f]&&T.setRequestHeader(\"If-Modified-Since\",k.lastModified[f]),k.etag[f]&&T.setRequestHeader(\"If-None-Match\",k.etag[f])),(v.data&&v.hasContent&&!1!==v.contentType||t.contentType)&&T.setRequestHeader(\"Content-Type\",v.contentType),T.setRequestHeader(\"Accept\",v.dataTypes[0]&&v.accepts[v.dataTypes[0]]?v.accepts[v.dataTypes[0]]+(\"*\"!==v.dataTypes[0]?\", \"+$t+\"; q=0.01\":\"\"):v.accepts[\"*\"]),v.headers)T.setRequestHeader(i,v.headers[i]);if(v.beforeSend&&(!1===v.beforeSend.call(y,T,v)||h))return T.abort();if(u=\"abort\",b.add(v.complete),T.done(v.success),T.fail(v.error),c=_t(Wt,v,t,T)){if(T.readyState=1,g&&m.trigger(\"ajaxSend\",[T,v]),h)return T;v.async&&0<v.timeout&&(d=C.setTimeout(function(){T.abort(\"timeout\")},v.timeout));try{h=!1,c.send(a,l)}catch(e){if(h)throw e;l(-1,e)}}else l(-1,\"No Transport\");function l(e,t,n,r){var i,o,a,s,u,l=t;h||(h=!0,d&&C.clearTimeout(d),c=void 0,p=r||\"\",T.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(s=function(e,t,n){var r,i,o,a,s=e.contents,u=e.dataTypes;while(\"*\"===u[0])u.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader(\"Content-Type\"));if(r)for(i in s)if(s[i]&&s[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||e.converters[i+\" \"+u[0]]){o=i;break}a||(a=i)}o=o||a}if(o)return o!==u[0]&&u.unshift(o),n[o]}(v,T,n)),s=function(e,t,n,r){var i,o,a,s,u,l={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)l[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=o,o=c.shift())if(\"*\"===o)o=u;else if(\"*\"!==u&&u!==o){if(!(a=l[u+\" \"+o]||l[\"* \"+o]))for(i in l)if((s=i.split(\" \"))[1]===o&&(a=l[u+\" \"+s[0]]||l[\"* \"+s[0]])){!0===a?a=l[i]:!0!==l[i]&&(o=s[0],c.unshift(s[1]));break}if(!0!==a)if(a&&e[\"throws\"])t=a(t);else try{t=a(t)}catch(e){return{state:\"parsererror\",error:a?e:\"No conversion from \"+u+\" to \"+o}}}return{state:\"success\",data:t}}(v,s,T,i),i?(v.ifModified&&((u=T.getResponseHeader(\"Last-Modified\"))&&(k.lastModified[f]=u),(u=T.getResponseHeader(\"etag\"))&&(k.etag[f]=u)),204===e||\"HEAD\"===v.type?l=\"nocontent\":304===e?l=\"notmodified\":(l=s.state,o=s.data,i=!(a=s.error))):(a=l,!e&&l||(l=\"error\",e<0&&(e=0))),T.status=e,T.statusText=(t||l)+\"\",i?x.resolveWith(y,[o,l,T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?\"ajaxSuccess\":\"ajaxError\",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger(\"ajaxComplete\",[T,v]),--k.active||k.event.trigger(\"ajaxStop\")))}return T},getJSON:function(e,t,n){return k.get(e,t,n,\"json\")},getScript:function(e,t){return k.get(e,void 0,t,\"script\")}}),k.each([\"get\",\"post\"],function(e,i){k[i]=function(e,t,n,r){return m(t)&&(r=r||n,n=t,t=void 0),k.ajax(k.extend({url:e,type:i,dataType:r,data:t,success:n},k.isPlainObject(e)&&e))}}),k._evalUrl=function(e,t){return k.ajax({url:e,type:\"GET\",dataType:\"script\",cache:!0,async:!1,global:!1,converters:{\"text script\":function(){}},dataFilter:function(e){k.globalEval(e,t)}})},k.fn.extend({wrapAll:function(e){var t;return this[0]&&(m(e)&&(e=e.call(this[0])),t=k(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstElementChild)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return m(n)?this.each(function(e){k(this).wrapInner(n.call(this,e))}):this.each(function(){var e=k(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=m(t);return this.each(function(e){k(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not(\"body\").each(function(){k(this).replaceWith(this.childNodes)}),this}}),k.expr.pseudos.hidden=function(e){return!k.expr.pseudos.visible(e)},k.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},k.ajaxSettings.xhr=function(){try{return new C.XMLHttpRequest}catch(e){}};var Ut={0:200,1223:204},Xt=k.ajaxSettings.xhr();y.cors=!!Xt&&\"withCredentials\"in Xt,y.ajax=Xt=!!Xt,k.ajaxTransport(function(i){var o,a;if(y.cors||Xt&&!i.crossDomain)return{send:function(e,t){var n,r=i.xhr();if(r.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(n in i.xhrFields)r[n]=i.xhrFields[n];for(n in i.mimeType&&r.overrideMimeType&&r.overrideMimeType(i.mimeType),i.crossDomain||e[\"X-Requested-With\"]||(e[\"X-Requested-With\"]=\"XMLHttpRequest\"),e)r.setRequestHeader(n,e[n]);o=function(e){return function(){o&&(o=a=r.onload=r.onerror=r.onabort=r.ontimeout=r.onreadystatechange=null,\"abort\"===e?r.abort():\"error\"===e?\"number\"!=typeof r.status?t(0,\"error\"):t(r.status,r.statusText):t(Ut[r.status]||r.status,r.statusText,\"text\"!==(r.responseType||\"text\")||\"string\"!=typeof r.responseText?{binary:r.response}:{text:r.responseText},r.getAllResponseHeaders()))}},r.onload=o(),a=r.onerror=r.ontimeout=o(\"error\"),void 0!==r.onabort?r.onabort=a:r.onreadystatechange=function(){4===r.readyState&&C.setTimeout(function(){o&&a()})},o=o(\"abort\");try{r.send(i.hasContent&&i.data||null)}catch(e){if(o)throw e}},abort:function(){o&&o()}}}),k.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),k.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/\\b(?:java|ecma)script\\b/},converters:{\"text script\":function(e){return k.globalEval(e),e}}}),k.ajaxPrefilter(\"script\",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type=\"GET\")}),k.ajaxTransport(\"script\",function(n){var r,i;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){r=k(\"<script>\").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on(\"load error\",i=function(e){r.remove(),i=null,e&&t(\"error\"===e.type?404:200,e.type)}),E.head.appendChild(r[0])},abort:function(){i&&i()}}});var Vt,Gt=[],Yt=/(=)\\?(?=&|$)|\\?\\?/;k.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var e=Gt.pop()||k.expando+\"_\"+kt++;return this[e]=!0,e}}),k.ajaxPrefilter(\"json jsonp\",function(e,t,n){var r,i,o,a=!1!==e.jsonp&&(Yt.test(e.url)?\"url\":\"string\"==typeof e.data&&0===(e.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Yt.test(e.data)&&\"data\");if(a||\"jsonp\"===e.dataTypes[0])return r=e.jsonpCallback=m(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(Yt,\"$1\"+r):!1!==e.jsonp&&(e.url+=(St.test(e.url)?\"&\":\"?\")+e.jsonp+\"=\"+r),e.converters[\"script json\"]=function(){return o||k.error(r+\" was not called\"),o[0]},e.dataTypes[0]=\"json\",i=C[r],C[r]=function(){o=arguments},n.always(function(){void 0===i?k(C).removeProp(r):C[r]=i,e[r]&&(e.jsonpCallback=t.jsonpCallback,Gt.push(r)),o&&m(i)&&i(o[0]),o=i=void 0}),\"script\"}),y.createHTMLDocument=((Vt=E.implementation.createHTMLDocument(\"\").body).innerHTML=\"<form></form><form></form>\",2===Vt.childNodes.length),k.parseHTML=function(e,t,n){return\"string\"!=typeof e?[]:(\"boolean\"==typeof t&&(n=t,t=!1),t||(y.createHTMLDocument?((r=(t=E.implementation.createHTMLDocument(\"\")).createElement(\"base\")).href=E.location.href,t.head.appendChild(r)):t=E),o=!n&&[],(i=D.exec(e))?[t.createElement(i[1])]:(i=we([e],t,o),o&&o.length&&k(o).remove(),k.merge([],i.childNodes)));var r,i,o},k.fn.load=function(e,t,n){var r,i,o,a=this,s=e.indexOf(\" \");return-1<s&&(r=mt(e.slice(s)),e=e.slice(0,s)),m(t)?(n=t,t=void 0):t&&\"object\"==typeof t&&(i=\"POST\"),0<a.length&&k.ajax({url:e,type:i||\"GET\",dataType:\"html\",data:t}).done(function(e){o=arguments,a.html(r?k(\"<div>\").append(k.parseHTML(e)).find(r):e)}).always(n&&function(e,t){a.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},k.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(e,t){k.fn[t]=function(e){return this.on(t,e)}}),k.expr.pseudos.animated=function(t){return k.grep(k.timers,function(e){return t===e.elem}).length},k.offset={setOffset:function(e,t,n){var r,i,o,a,s,u,l=k.css(e,\"position\"),c=k(e),f={};\"static\"===l&&(e.style.position=\"relative\"),s=c.offset(),o=k.css(e,\"top\"),u=k.css(e,\"left\"),(\"absolute\"===l||\"fixed\"===l)&&-1<(o+u).indexOf(\"auto\")?(a=(r=c.position()).top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(u)||0),m(t)&&(t=t.call(e,n,k.extend({},s))),null!=t.top&&(f.top=t.top-s.top+a),null!=t.left&&(f.left=t.left-s.left+i),\"using\"in t?t.using.call(e,f):c.css(f)}},k.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){k.offset.setOffset(this,t,e)});var e,n,r=this[0];return r?r.getClientRects().length?(e=r.getBoundingClientRect(),n=r.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,r=this[0],i={top:0,left:0};if(\"fixed\"===k.css(r,\"position\"))t=r.getBoundingClientRect();else{t=this.offset(),n=r.ownerDocument,e=r.offsetParent||n.documentElement;while(e&&(e===n.body||e===n.documentElement)&&\"static\"===k.css(e,\"position\"))e=e.parentNode;e&&e!==r&&1===e.nodeType&&((i=k(e).offset()).top+=k.css(e,\"borderTopWidth\",!0),i.left+=k.css(e,\"borderLeftWidth\",!0))}return{top:t.top-i.top-k.css(r,\"marginTop\",!0),left:t.left-i.left-k.css(r,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent;while(e&&\"static\"===k.css(e,\"position\"))e=e.offsetParent;return e||ie})}}),k.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(t,i){var o=\"pageYOffset\"===i;k.fn[t]=function(e){return _(this,function(e,t,n){var r;if(x(e)?r=e:9===e.nodeType&&(r=e.defaultView),void 0===n)return r?r[i]:e[t];r?r.scrollTo(o?r.pageXOffset:n,o?n:r.pageYOffset):e[t]=n},t,e,arguments.length)}}),k.each([\"top\",\"left\"],function(e,n){k.cssHooks[n]=ze(y.pixelPosition,function(e,t){if(t)return t=_e(e,n),$e.test(t)?k(e).position()[n]+\"px\":t})}),k.each({Height:\"height\",Width:\"width\"},function(a,s){k.each({padding:\"inner\"+a,content:s,\"\":\"outer\"+a},function(r,o){k.fn[o]=function(e,t){var n=arguments.length&&(r||\"boolean\"!=typeof e),i=r||(!0===e||!0===t?\"margin\":\"border\");return _(this,function(e,t,n){var r;return x(e)?0===o.indexOf(\"outer\")?e[\"inner\"+a]:e.document.documentElement[\"client\"+a]:9===e.nodeType?(r=e.documentElement,Math.max(e.body[\"scroll\"+a],r[\"scroll\"+a],e.body[\"offset\"+a],r[\"offset\"+a],r[\"client\"+a])):void 0===n?k.css(e,t,i):k.style(e,t,n,i)},s,n?e:void 0,n)}})}),k.each(\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\".split(\" \"),function(e,n){k.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}}),k.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),k.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,\"**\"):this.off(t,e||\"**\",n)}}),k.proxy=function(e,t){var n,r,i;if(\"string\"==typeof t&&(n=e[t],t=e,e=n),m(e))return r=s.call(arguments,2),(i=function(){return e.apply(t||this,r.concat(s.call(arguments)))}).guid=e.guid=e.guid||k.guid++,i},k.holdReady=function(e){e?k.readyWait++:k.ready(!0)},k.isArray=Array.isArray,k.parseJSON=JSON.parse,k.nodeName=N,k.isFunction=m,k.isWindow=x,k.camelCase=V,k.type=w,k.now=Date.now,k.isNumeric=function(e){var t=k.type(e);return(\"number\"===t||\"string\"===t)&&!isNaN(e-parseFloat(e))},\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return k});var Qt=C.jQuery,Jt=C.$;return k.noConflict=function(e){return C.$===k&&(C.$=Jt),e&&C.jQuery===k&&(C.jQuery=Qt),k},e||(C.jQuery=C.$=k),k});\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = global || self, factory(global.THREE = {}));\n}(this, function (exports) { 'use strict';\n\n\t// Polyfills\r\n\r\n\tif ( Number.EPSILON === undefined ) {\r\n\r\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\r\n\r\n\t}\r\n\r\n\tif ( Number.isInteger === undefined ) {\r\n\r\n\t\t// Missing in IE\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\r\n\r\n\t\tNumber.isInteger = function ( value ) {\r\n\r\n\t\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tif ( Math.sign === undefined ) {\r\n\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\t\tMath.sign = function ( x ) {\r\n\r\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tif ( 'name' in Function.prototype === false ) {\r\n\r\n\t\t// Missing in IE\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n\t\tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif ( Object.assign === undefined ) {\r\n\r\n\t\t// Missing in IE\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n\r\n\t\t( function () {\r\n\r\n\t\t\tObject.assign = function ( target ) {\r\n\r\n\t\t\t\tif ( target === undefined || target === null ) {\r\n\r\n\t\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar output = Object( target );\r\n\r\n\t\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\r\n\r\n\t\t\t\t\tvar source = arguments[ index ];\r\n\r\n\t\t\t\t\tif ( source !== undefined && source !== null ) {\r\n\r\n\t\t\t\t\t\tfor ( var nextKey in source ) {\r\n\r\n\t\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\r\n\r\n\t\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn output;\r\n\r\n\t\t\t};\r\n\r\n\t\t} )();\r\n\r\n\t}\n\n\t/**\r\n\t * https://github.com/mrdoob/eventdispatcher.js/\r\n\t */\r\n\r\n\tfunction EventDispatcher() {}\r\n\r\n\tObject.assign( EventDispatcher.prototype, {\r\n\r\n\t\taddEventListener: function ( type, listener ) {\r\n\r\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\t\tvar listeners = this._listeners;\r\n\r\n\t\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\thasEventListener: function ( type, listener ) {\r\n\r\n\t\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\t\tvar listeners = this._listeners;\r\n\r\n\t\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\r\n\r\n\t\t},\r\n\r\n\t\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tdispatchEvent: function ( event ) {\r\n\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\t\tevent.target = this;\r\n\r\n\t\t\t\tvar array = listenerArray.slice( 0 );\r\n\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\tvar REVISION = '104dev';\r\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\tvar CullFaceNone = 0;\r\n\tvar CullFaceBack = 1;\r\n\tvar CullFaceFront = 2;\r\n\tvar CullFaceFrontBack = 3;\r\n\tvar FrontFaceDirectionCW = 0;\r\n\tvar FrontFaceDirectionCCW = 1;\r\n\tvar BasicShadowMap = 0;\r\n\tvar PCFShadowMap = 1;\r\n\tvar PCFSoftShadowMap = 2;\r\n\tvar FrontSide = 0;\r\n\tvar BackSide = 1;\r\n\tvar DoubleSide = 2;\r\n\tvar FlatShading = 1;\r\n\tvar SmoothShading = 2;\r\n\tvar NoColors = 0;\r\n\tvar FaceColors = 1;\r\n\tvar VertexColors = 2;\r\n\tvar NoBlending = 0;\r\n\tvar NormalBlending = 1;\r\n\tvar AdditiveBlending = 2;\r\n\tvar SubtractiveBlending = 3;\r\n\tvar MultiplyBlending = 4;\r\n\tvar CustomBlending = 5;\r\n\tvar AddEquation = 100;\r\n\tvar SubtractEquation = 101;\r\n\tvar ReverseSubtractEquation = 102;\r\n\tvar MinEquation = 103;\r\n\tvar MaxEquation = 104;\r\n\tvar ZeroFactor = 200;\r\n\tvar OneFactor = 201;\r\n\tvar SrcColorFactor = 202;\r\n\tvar OneMinusSrcColorFactor = 203;\r\n\tvar SrcAlphaFactor = 204;\r\n\tvar OneMinusSrcAlphaFactor = 205;\r\n\tvar DstAlphaFactor = 206;\r\n\tvar OneMinusDstAlphaFactor = 207;\r\n\tvar DstColorFactor = 208;\r\n\tvar OneMinusDstColorFactor = 209;\r\n\tvar SrcAlphaSaturateFactor = 210;\r\n\tvar NeverDepth = 0;\r\n\tvar AlwaysDepth = 1;\r\n\tvar LessDepth = 2;\r\n\tvar LessEqualDepth = 3;\r\n\tvar EqualDepth = 4;\r\n\tvar GreaterEqualDepth = 5;\r\n\tvar GreaterDepth = 6;\r\n\tvar NotEqualDepth = 7;\r\n\tvar MultiplyOperation = 0;\r\n\tvar MixOperation = 1;\r\n\tvar AddOperation = 2;\r\n\tvar NoToneMapping = 0;\r\n\tvar LinearToneMapping = 1;\r\n\tvar ReinhardToneMapping = 2;\r\n\tvar Uncharted2ToneMapping = 3;\r\n\tvar CineonToneMapping = 4;\r\n\tvar ACESFilmicToneMapping = 5;\r\n\r\n\tvar UVMapping = 300;\r\n\tvar CubeReflectionMapping = 301;\r\n\tvar CubeRefractionMapping = 302;\r\n\tvar EquirectangularReflectionMapping = 303;\r\n\tvar EquirectangularRefractionMapping = 304;\r\n\tvar SphericalReflectionMapping = 305;\r\n\tvar CubeUVReflectionMapping = 306;\r\n\tvar CubeUVRefractionMapping = 307;\r\n\tvar RepeatWrapping = 1000;\r\n\tvar ClampToEdgeWrapping = 1001;\r\n\tvar MirroredRepeatWrapping = 1002;\r\n\tvar NearestFilter = 1003;\r\n\tvar NearestMipMapNearestFilter = 1004;\r\n\tvar NearestMipMapLinearFilter = 1005;\r\n\tvar LinearFilter = 1006;\r\n\tvar LinearMipMapNearestFilter = 1007;\r\n\tvar LinearMipMapLinearFilter = 1008;\r\n\tvar UnsignedByteType = 1009;\r\n\tvar ByteType = 1010;\r\n\tvar ShortType = 1011;\r\n\tvar UnsignedShortType = 1012;\r\n\tvar IntType = 1013;\r\n\tvar UnsignedIntType = 1014;\r\n\tvar FloatType = 1015;\r\n\tvar HalfFloatType = 1016;\r\n\tvar UnsignedShort4444Type = 1017;\r\n\tvar UnsignedShort5551Type = 1018;\r\n\tvar UnsignedShort565Type = 1019;\r\n\tvar UnsignedInt248Type = 1020;\r\n\tvar AlphaFormat = 1021;\r\n\tvar RGBFormat = 1022;\r\n\tvar RGBAFormat = 1023;\r\n\tvar LuminanceFormat = 1024;\r\n\tvar LuminanceAlphaFormat = 1025;\r\n\tvar RGBEFormat = RGBAFormat;\r\n\tvar DepthFormat = 1026;\r\n\tvar DepthStencilFormat = 1027;\r\n\tvar RedFormat = 1028;\r\n\tvar RGB_S3TC_DXT1_Format = 33776;\r\n\tvar RGBA_S3TC_DXT1_Format = 33777;\r\n\tvar RGBA_S3TC_DXT3_Format = 33778;\r\n\tvar RGBA_S3TC_DXT5_Format = 33779;\r\n\tvar RGB_PVRTC_4BPPV1_Format = 35840;\r\n\tvar RGB_PVRTC_2BPPV1_Format = 35841;\r\n\tvar RGBA_PVRTC_4BPPV1_Format = 35842;\r\n\tvar RGBA_PVRTC_2BPPV1_Format = 35843;\r\n\tvar RGB_ETC1_Format = 36196;\r\n\tvar RGBA_ASTC_4x4_Format = 37808;\r\n\tvar RGBA_ASTC_5x4_Format = 37809;\r\n\tvar RGBA_ASTC_5x5_Format = 37810;\r\n\tvar RGBA_ASTC_6x5_Format = 37811;\r\n\tvar RGBA_ASTC_6x6_Format = 37812;\r\n\tvar RGBA_ASTC_8x5_Format = 37813;\r\n\tvar RGBA_ASTC_8x6_Format = 37814;\r\n\tvar RGBA_ASTC_8x8_Format = 37815;\r\n\tvar RGBA_ASTC_10x5_Format = 37816;\r\n\tvar RGBA_ASTC_10x6_Format = 37817;\r\n\tvar RGBA_ASTC_10x8_Format = 37818;\r\n\tvar RGBA_ASTC_10x10_Format = 37819;\r\n\tvar RGBA_ASTC_12x10_Format = 37820;\r\n\tvar RGBA_ASTC_12x12_Format = 37821;\r\n\tvar LoopOnce = 2200;\r\n\tvar LoopRepeat = 2201;\r\n\tvar LoopPingPong = 2202;\r\n\tvar InterpolateDiscrete = 2300;\r\n\tvar InterpolateLinear = 2301;\r\n\tvar InterpolateSmooth = 2302;\r\n\tvar ZeroCurvatureEnding = 2400;\r\n\tvar ZeroSlopeEnding = 2401;\r\n\tvar WrapAroundEnding = 2402;\r\n\tvar TrianglesDrawMode = 0;\r\n\tvar TriangleStripDrawMode = 1;\r\n\tvar TriangleFanDrawMode = 2;\r\n\tvar LinearEncoding = 3000;\r\n\tvar sRGBEncoding = 3001;\r\n\tvar GammaEncoding = 3007;\r\n\tvar RGBEEncoding = 3002;\r\n\tvar LogLuvEncoding = 3003;\r\n\tvar RGBM7Encoding = 3004;\r\n\tvar RGBM16Encoding = 3005;\r\n\tvar RGBDEncoding = 3006;\r\n\tvar BasicDepthPacking = 3200;\r\n\tvar RGBADepthPacking = 3201;\r\n\tvar TangentSpaceNormalMap = 0;\r\n\tvar ObjectSpaceNormalMap = 1;\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar _Math = {\r\n\r\n\t\tDEG2RAD: Math.PI / 180,\r\n\t\tRAD2DEG: 180 / Math.PI,\r\n\r\n\t\tgenerateUUID: ( function () {\r\n\r\n\t\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n\r\n\t\t\tvar lut = [];\r\n\r\n\t\t\tfor ( var i = 0; i < 256; i ++ ) {\r\n\r\n\t\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function generateUUID() {\r\n\r\n\t\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\r\n\t\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\r\n\t\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\r\n\t\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\r\n\t\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\r\n\t\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\r\n\t\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\r\n\t\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\r\n\r\n\t\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\r\n\t\t\t\treturn uuid.toUpperCase();\r\n\r\n\t\t\t};\r\n\r\n\t\t} )(),\r\n\r\n\t\tclamp: function ( value, min, max ) {\r\n\r\n\t\t\treturn Math.max( min, Math.min( max, value ) );\r\n\r\n\t\t},\r\n\r\n\t\t// compute euclidian modulo of m % n\r\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\t\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t\t},\r\n\r\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t\t},\r\n\r\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\r\n\r\n\t\tlerp: function ( x, y, t ) {\r\n\r\n\t\t\treturn ( 1 - t ) * x + t * y;\r\n\r\n\t\t},\r\n\r\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\t\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t\t},\r\n\r\n\t\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t\t},\r\n\r\n\t\t// Random integer from <low, high> interval\r\n\r\n\t\trandInt: function ( low, high ) {\r\n\r\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t\t},\r\n\r\n\t\t// Random float from <low, high> interval\r\n\r\n\t\trandFloat: function ( low, high ) {\r\n\r\n\t\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t\t},\r\n\r\n\t\t// Random float from <-range/2, range/2> interval\r\n\r\n\t\trandFloatSpread: function ( range ) {\r\n\r\n\t\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t\t},\r\n\r\n\t\tdegToRad: function ( degrees ) {\r\n\r\n\t\t\treturn degrees * _Math.DEG2RAD;\r\n\r\n\t\t},\r\n\r\n\t\tradToDeg: function ( radians ) {\r\n\r\n\t\t\treturn radians * _Math.RAD2DEG;\r\n\r\n\t\t},\r\n\r\n\t\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t\t},\r\n\r\n\t\tceilPowerOfTwo: function ( value ) {\r\n\r\n\t\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloorPowerOfTwo: function ( value ) {\r\n\r\n\t\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\r\n\r\n\t\t}\r\n\r\n\t};\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\r\n\tfunction Vector2( x, y ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\r\n\t}\r\n\r\n\tObject.defineProperties( Vector2.prototype, {\r\n\r\n\t\t\"width\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.x = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t\"height\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.y = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector2.prototype, {\r\n\r\n\t\tisVector2: true,\r\n\r\n\t\tset: function ( x, y ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( x ) {\r\n\r\n\t\t\tthis.x = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( y ) {\r\n\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetComponent: function ( index, value ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetComponent: function ( index ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( v ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tadd: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScaledVector: function ( v, s ) {\r\n\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubScalar: function ( s ) {\r\n\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( v ) {\r\n\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivide: function ( v ) {\r\n\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivideScalar: function ( scalar ) {\r\n\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix3: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmin: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmax: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclamp: function ( min, max ) {\r\n\r\n\t\t\t// assumes min < max, componentwise\r\n\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampScalar: function () {\r\n\r\n\t\t\tvar min = new Vector2();\r\n\t\t\tvar max = new Vector2();\r\n\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\t\tmin.set( minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclampLength: function ( min, max ) {\r\n\r\n\t\t\tvar length = this.length();\r\n\r\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloor: function () {\r\n\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tceil: function () {\r\n\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tround: function () {\r\n\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\troundToZero: function () {\r\n\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t\t},\r\n\r\n\t\tcross: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.y - this.y * v.x;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanLength: function () {\r\n\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t\t},\r\n\r\n\t\tangle: function () {\r\n\r\n\t\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\t\tvar angle = Math.atan2( this.y, this.x );\r\n\r\n\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\r\n\r\n\t\t\treturn angle;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToSquared: function ( v ) {\r\n\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanDistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n\r\n\t\t},\r\n\r\n\t\tsetLength: function ( length ) {\r\n\r\n\t\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( v, alpha ) {\r\n\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( v ) {\r\n\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x = attribute.getX( index );\r\n\t\t\tthis.y = attribute.getY( index );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\trotateAround: function ( center, angle ) {\r\n\r\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\t\tvar x = this.x - center.x;\r\n\t\t\tvar y = this.y - center.y;\r\n\r\n\t\t\tthis.x = x * c - y * s + center.x;\r\n\t\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Quaternion( x, y, z, w ) {\r\n\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n\t}\r\n\r\n\tObject.assign( Quaternion, {\r\n\r\n\t\tslerp: function ( qa, qb, qm, t ) {\r\n\r\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n\t\t},\r\n\r\n\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\r\n\r\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\r\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\r\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\r\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\r\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\r\n\r\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\r\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\r\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\r\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\r\n\r\n\t\t\t\tvar s = 1 - t,\r\n\r\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\r\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\r\n\t\t\t\t\tsqrSin = 1 - cos * cos;\r\n\r\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\r\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\r\n\r\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\r\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\r\n\r\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\r\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar tDir = t * dir;\r\n\r\n\t\t\t\tx0 = x0 * s + x1 * tDir;\r\n\t\t\t\ty0 = y0 * s + y1 * tDir;\r\n\t\t\t\tz0 = z0 * s + z1 * tDir;\r\n\t\t\t\tw0 = w0 * s + w1 * tDir;\r\n\r\n\t\t\t\t// Normalize in case we just did a lerp:\r\n\t\t\t\tif ( s === 1 - t ) {\r\n\r\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\r\n\r\n\t\t\t\t\tx0 *= f;\r\n\t\t\t\t\ty0 *= f;\r\n\t\t\t\t\tz0 *= f;\r\n\t\t\t\t\tw0 *= f;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdst[ dstOffset ] = x0;\r\n\t\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\t\tdst[ dstOffset + 3 ] = w0;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( Quaternion.prototype, {\r\n\r\n\t\tx: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._x = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ty: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._y = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tz: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._z;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._z = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tw: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._w;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._w = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Quaternion.prototype, {\r\n\r\n\t\tisQuaternion: true,\r\n\r\n\t\tset: function ( x, y, z, w ) {\r\n\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( quaternion ) {\r\n\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\r\n\r\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\t\tvar cos = Math.cos;\r\n\t\t\tvar sin = Math.sin;\r\n\r\n\t\t\tvar c1 = cos( x / 2 );\r\n\t\t\tvar c2 = cos( y / 2 );\r\n\t\t\tvar c3 = cos( z / 2 );\r\n\r\n\t\t\tvar s1 = sin( x / 2 );\r\n\t\t\tvar s2 = sin( y / 2 );\r\n\t\t\tvar s3 = sin( z / 2 );\r\n\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t\t// assumes axis is normalized\r\n\r\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\t\tvar te = m.elements,\r\n\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\t\ts;\r\n\r\n\t\t\tif ( trace > 0 ) {\r\n\r\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromUnitVectors: function ( vFrom, vTo ) {\r\n\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\t\tvar EPS = 0.000001;\r\n\r\n\t\t\tvar r = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tthis._x = - vFrom.y;\r\n\t\t\t\t\tthis._y = vFrom.x;\r\n\t\t\t\t\tthis._z = 0;\r\n\t\t\t\t\tthis._w = r;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = - vFrom.z;\r\n\t\t\t\t\tthis._z = vFrom.y;\r\n\t\t\t\t\tthis._w = r;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\r\n\r\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\r\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\r\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\r\n\t\t\t\tthis._w = r;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.normalize();\r\n\r\n\t\t},\r\n\r\n\t\tangleTo: function ( q ) {\r\n\r\n\t\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\r\n\r\n\t\t},\r\n\r\n\t\trotateTowards: function ( q, step ) {\r\n\r\n\t\t\tvar angle = this.angleTo( q );\r\n\r\n\t\t\tif ( angle === 0 ) return this;\r\n\r\n\t\t\tvar t = Math.min( 1, step / angle );\r\n\r\n\t\t\tthis.slerp( q, t );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tinverse: function () {\r\n\r\n\t\t\t// quaternion is assumed to have unit length\r\n\r\n\t\t\treturn this.conjugate();\r\n\r\n\t\t},\r\n\r\n\t\tconjugate: function () {\r\n\r\n\t\t\tthis._x *= - 1;\r\n\t\t\tthis._y *= - 1;\r\n\t\t\tthis._z *= - 1;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\tvar l = this.length();\r\n\r\n\t\t\tif ( l === 0 ) {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tl = 1 / l;\r\n\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( q, p ) {\r\n\r\n\t\t\tif ( p !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t\t},\r\n\r\n\t\tpremultiply: function ( q ) {\r\n\r\n\t\t\treturn this.multiplyQuaternions( q, this );\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tslerp: function ( qb, t ) {\r\n\r\n\t\t\tif ( t === 0 ) return this;\r\n\t\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\t\tthis._w = - qb._w;\r\n\t\t\t\tthis._x = - qb._x;\r\n\t\t\t\tthis._y = - qb._y;\r\n\t\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.copy( qb );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\r\n\r\n\t\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\r\n\r\n\t\t\t\tvar s = 1 - t;\r\n\t\t\t\tthis._w = s * w + t * this._w;\r\n\t\t\t\tthis._x = s * x + t * this._x;\r\n\t\t\t\tthis._y = s * y + t * this._y;\r\n\t\t\t\tthis._z = s * z + t * this._z;\r\n\r\n\t\t\t\treturn this.normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\r\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\r\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( quaternion ) {\r\n\r\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis._x = array[ offset ];\r\n\t\t\tthis._y = array[ offset + 1 ];\r\n\t\t\tthis._z = array[ offset + 2 ];\r\n\t\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tonChange: function ( callback ) {\r\n\r\n\t\t\tthis.onChangeCallback = callback;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tonChangeCallback: function () {}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author kile / http://kile.stravaganza.org/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction Vector3( x, y, z ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( Vector3.prototype, {\r\n\r\n\t\tisVector3: true,\r\n\r\n\t\tset: function ( x, y, z ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\t\t\tthis.z = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( x ) {\r\n\r\n\t\t\tthis.x = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( y ) {\r\n\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetZ: function ( z ) {\r\n\r\n\t\t\tthis.z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetComponent: function ( index, value ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetComponent: function ( index ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( v ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tadd: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScaledVector: function ( v, s ) {\r\n\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubScalar: function ( s ) {\r\n\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x * b.x;\r\n\t\t\tthis.y = a.y * b.y;\r\n\t\t\tthis.z = a.z * b.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyEuler: function () {\r\n\r\n\t\t\tvar quaternion = new Quaternion();\r\n\r\n\t\t\treturn function applyEuler( euler ) {\r\n\r\n\t\t\t\tif ( ! ( euler && euler.isEuler ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tapplyAxisAngle: function () {\r\n\r\n\t\t\tvar quaternion = new Quaternion();\r\n\r\n\t\t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tapplyMatrix3: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\r\n\r\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\r\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\r\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyQuaternion: function ( q ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n\r\n\t\t\t// calculate quat * vector\r\n\r\n\t\t\tvar ix = qw * x + qy * z - qz * y;\r\n\t\t\tvar iy = qw * y + qz * x - qx * z;\r\n\t\t\tvar iz = qw * z + qx * y - qy * x;\r\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t\t// calculate result * inverse quat\r\n\r\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tproject: function ( camera ) {\r\n\r\n\t\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\r\n\r\n\t\t},\r\n\r\n\t\tunproject: function ( camera ) {\r\n\r\n\t\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\r\n\r\n\t\t},\r\n\r\n\t\ttransformDirection: function ( m ) {\r\n\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t\t// vector interpreted as a direction\r\n\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\t\treturn this.normalize();\r\n\r\n\t\t},\r\n\r\n\t\tdivide: function ( v ) {\r\n\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\tthis.z /= v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivideScalar: function ( scalar ) {\r\n\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t\t},\r\n\r\n\t\tmin: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\t\t\tthis.z = Math.min( this.z, v.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmax: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\t\t\tthis.z = Math.max( this.z, v.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclamp: function ( min, max ) {\r\n\r\n\t\t\t// assumes min < max, componentwise\r\n\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampScalar: function () {\r\n\r\n\t\t\tvar min = new Vector3();\r\n\t\t\tvar max = new Vector3();\r\n\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclampLength: function ( min, max ) {\r\n\r\n\t\t\tvar length = this.length();\r\n\r\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloor: function () {\r\n\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tceil: function () {\r\n\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tround: function () {\r\n\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\troundToZero: function () {\r\n\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t\t},\r\n\r\n\t\t// TODO lengthSquared?\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanLength: function () {\r\n\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t\t},\r\n\r\n\t\tsetLength: function ( length ) {\r\n\r\n\t\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( v, alpha ) {\r\n\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\t},\r\n\r\n\t\tcross: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.crossVectors( this, v );\r\n\r\n\t\t},\r\n\r\n\t\tcrossVectors: function ( a, b ) {\r\n\r\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\t\tthis.x = ay * bz - az * by;\r\n\t\t\tthis.y = az * bx - ax * bz;\r\n\t\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tprojectOnVector: function ( vector ) {\r\n\r\n\t\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\r\n\r\n\t\t\treturn this.copy( vector ).multiplyScalar( scalar );\r\n\r\n\t\t},\r\n\r\n\t\tprojectOnPlane: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\t\treturn this.sub( v1 );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\treflect: function () {\r\n\r\n\t\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t\t// normal is assumed to have unit length\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function reflect( normal ) {\r\n\r\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tangleTo: function ( v ) {\r\n\r\n\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\r\n\r\n\t\t\t// clamp, to handle numerical problems\r\n\r\n\t\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToSquared: function ( v ) {\r\n\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\r\n\r\n\t\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanDistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromSpherical: function ( s ) {\r\n\r\n\t\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromSphericalCoords: function ( radius, phi, theta ) {\r\n\r\n\t\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\r\n\r\n\t\t\tthis.x = sinPhiRadius * Math.sin( theta );\r\n\t\t\tthis.y = Math.cos( phi ) * radius;\r\n\t\t\tthis.z = sinPhiRadius * Math.cos( theta );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCylindrical: function ( c ) {\r\n\r\n\t\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCylindricalCoords: function ( radius, theta, y ) {\r\n\r\n\t\t\tthis.x = radius * Math.sin( theta );\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = radius * Math.cos( theta );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 12 ];\r\n\t\t\tthis.y = e[ 13 ];\r\n\t\t\tthis.z = e[ 14 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\r\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\r\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\t\tthis.x = sx;\r\n\t\t\tthis.y = sy;\r\n\t\t\tthis.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromMatrixColumn: function ( m, index ) {\r\n\r\n\t\t\treturn this.fromArray( m.elements, index * 4 );\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( v ) {\r\n\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x = attribute.getX( index );\r\n\t\t\tthis.y = attribute.getY( index );\r\n\t\t\tthis.z = attribute.getZ( index );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://clara.io\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction Matrix3() {\r\n\r\n\t\tthis.elements = [\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t];\r\n\r\n\t\tif ( arguments.length > 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject.assign( Matrix3.prototype, {\r\n\r\n\t\tisMatrix3: true,\r\n\r\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\r\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\r\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tidentity: function () {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0,\r\n\t\t\t\t0, 1, 0,\r\n\t\t\t\t0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( m ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\r\n\t\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\r\n\t\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromMatrix4: function ( m ) {\r\n\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\r\n\t\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\r\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyToBufferAttribute: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function applyToBufferAttribute( attribute ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tv1.x = attribute.getX( i );\r\n\t\t\t\t\tv1.y = attribute.getY( i );\r\n\t\t\t\t\tv1.z = attribute.getZ( i );\r\n\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn attribute;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tmultiply: function ( m ) {\r\n\r\n\t\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t\t},\r\n\r\n\t\tpremultiply: function ( m ) {\r\n\r\n\t\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\t\tvar ae = a.elements;\r\n\t\t\tvar be = b.elements;\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\r\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\r\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\r\n\r\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\r\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\r\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\r\n\r\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\r\n\t\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\r\n\t\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\r\n\r\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\r\n\t\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\r\n\t\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\r\n\r\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\r\n\t\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\r\n\t\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( s ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdeterminant: function () {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t\t},\r\n\r\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\r\n\r\n\t\t\tif ( matrix && matrix.isMatrix4 ) {\r\n\r\n\t\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar me = matrix.elements,\r\n\t\t\t\tte = this.elements,\r\n\r\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\r\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\r\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\r\n\r\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\r\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\r\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\r\n\r\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\r\n\r\n\t\t\tif ( det === 0 ) {\r\n\r\n\t\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\r\n\r\n\t\t\t\tif ( throwOnDegenerate === true ) {\r\n\r\n\t\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.identity();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar detInv = 1 / det;\r\n\r\n\t\t\tte[ 0 ] = t11 * detInv;\r\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\r\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\r\n\r\n\t\t\tte[ 3 ] = t12 * detInv;\r\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\r\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\r\n\r\n\t\t\tte[ 6 ] = t13 * detInv;\r\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\r\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttranspose: function () {\r\n\r\n\t\t\tvar tmp, m = this.elements;\r\n\r\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetNormalMatrix: function ( matrix4 ) {\r\n\r\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\r\n\r\n\t\t},\r\n\r\n\t\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\t\tvar m = this.elements;\r\n\r\n\t\t\tr[ 0 ] = m[ 0 ];\r\n\t\t\tr[ 1 ] = m[ 3 ];\r\n\t\t\tr[ 2 ] = m[ 6 ];\r\n\t\t\tr[ 3 ] = m[ 1 ];\r\n\t\t\tr[ 4 ] = m[ 4 ];\r\n\t\t\tr[ 5 ] = m[ 7 ];\r\n\t\t\tr[ 6 ] = m[ 2 ];\r\n\t\t\tr[ 7 ] = m[ 5 ];\r\n\t\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\r\n\r\n\t\t\tvar c = Math.cos( rotation );\r\n\t\t\tvar s = Math.sin( rotation );\r\n\r\n\t\t\tthis.set(\r\n\t\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\r\n\t\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\r\n\t\t\t\t0, 0, 1\r\n\t\t\t);\r\n\r\n\t\t},\r\n\r\n\t\tscale: function ( sx, sy ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\r\n\t\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\trotate: function ( theta ) {\r\n\r\n\t\t\tvar c = Math.cos( theta );\r\n\t\t\tvar s = Math.sin( theta );\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\r\n\t\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\r\n\r\n\t\t\tte[ 0 ] = c * a11 + s * a21;\r\n\t\t\tte[ 3 ] = c * a12 + s * a22;\r\n\t\t\tte[ 6 ] = c * a13 + s * a23;\r\n\r\n\t\t\tte[ 1 ] = - s * a11 + c * a21;\r\n\t\t\tte[ 4 ] = - s * a12 + c * a22;\r\n\t\t\tte[ 7 ] = - s * a13 + c * a23;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttranslate: function ( tx, ty ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\r\n\t\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( matrix ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = matrix.elements;\r\n\r\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\r\n\tvar _canvas;\r\n\r\n\tvar ImageUtils = {\r\n\r\n\t\tgetDataURL: function ( image ) {\r\n\r\n\t\t\tvar canvas;\r\n\r\n\t\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\r\n\r\n\t\t\t\treturn image.src;\r\n\r\n\t\t\t} else if ( image instanceof HTMLCanvasElement ) {\r\n\r\n\t\t\t\tcanvas = image;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\r\n\r\n\t\t\t\t_canvas.width = image.width;\r\n\t\t\t\t_canvas.height = image.height;\r\n\r\n\t\t\t\tvar context = _canvas.getContext( '2d' );\r\n\r\n\t\t\t\tif ( image instanceof ImageData ) {\r\n\r\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcanvas = _canvas;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\r\n\tvar textureId = 0;\r\n\r\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\r\n\t\tthis.mipmaps = [];\r\n\r\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\r\n\r\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\r\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\r\n\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\r\n\r\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\r\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\r\n\r\n\t\tthis.offset = new Vector2( 0, 0 );\r\n\t\tthis.repeat = new Vector2( 1, 1 );\r\n\t\tthis.center = new Vector2( 0, 0 );\r\n\t\tthis.rotation = 0;\r\n\r\n\t\tthis.matrixAutoUpdate = true;\r\n\t\tthis.matrix = new Matrix3();\r\n\r\n\t\tthis.generateMipmaps = true;\r\n\t\tthis.premultiplyAlpha = false;\r\n\t\tthis.flipY = true;\r\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\r\n\t\t//\r\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\r\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\r\n\t\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\r\n\r\n\t\tthis.version = 0;\r\n\t\tthis.onUpdate = null;\r\n\r\n\t}\r\n\r\n\tTexture.DEFAULT_IMAGE = undefined;\r\n\tTexture.DEFAULT_MAPPING = UVMapping;\r\n\r\n\tTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: Texture,\r\n\r\n\t\tisTexture: true,\r\n\r\n\t\tupdateMatrix: function () {\r\n\r\n\t\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.name = source.name;\r\n\r\n\t\t\tthis.image = source.image;\r\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\t\tthis.mapping = source.mapping;\r\n\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\t\tthis.center.copy( source.center );\r\n\t\t\tthis.rotation = source.rotation;\r\n\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrix.copy( source.matrix );\r\n\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\t\tthis.flipY = source.flipY;\r\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\t\tthis.encoding = source.encoding;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar output = {\r\n\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Texture',\r\n\t\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t\t},\r\n\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tname: this.name,\r\n\r\n\t\t\t\tmapping: this.mapping,\r\n\r\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\t\tcenter: [ this.center.x, this.center.y ],\r\n\t\t\t\trotation: this.rotation,\r\n\r\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\t\tformat: this.format,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t\tencoding: this.encoding,\r\n\r\n\t\t\t\tminFilter: this.minFilter,\r\n\t\t\t\tmagFilter: this.magFilter,\r\n\t\t\t\tanisotropy: this.anisotropy,\r\n\r\n\t\t\t\tflipY: this.flipY,\r\n\r\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\r\n\t\t\t\tunpackAlignment: this.unpackAlignment\r\n\r\n\t\t\t};\r\n\r\n\t\t\tif ( this.image !== undefined ) {\r\n\r\n\t\t\t\t// TODO: Move to THREE.Image\r\n\r\n\t\t\t\tvar image = this.image;\r\n\r\n\t\t\t\tif ( image.uuid === undefined ) {\r\n\r\n\t\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\r\n\r\n\t\t\t\t\tvar url;\r\n\r\n\t\t\t\t\tif ( Array.isArray( image ) ) {\r\n\r\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\r\n\r\n\t\t\t\t\t\turl = [];\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// process single image\r\n\r\n\t\t\t\t\t\turl = ImageUtils.getDataURL( image );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\t\turl: url\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutput.image = image.uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! isRootObject ) {\r\n\r\n\t\t\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn output;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t},\r\n\r\n\t\ttransformUv: function ( uv ) {\r\n\r\n\t\t\tif ( this.mapping !== UVMapping ) return uv;\r\n\r\n\t\t\tuv.applyMatrix3( this.matrix );\r\n\r\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\t\tcase RepeatWrapping:\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\t\tcase RepeatWrapping:\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.flipY ) {\r\n\r\n\t\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uv;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperty( Texture.prototype, \"needsUpdate\", {\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tif ( value === true ) this.version ++;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction Vector4( x, y, z, w ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n\t}\r\n\r\n\tObject.assign( Vector4.prototype, {\r\n\r\n\t\tisVector4: true,\r\n\r\n\t\tset: function ( x, y, z, w ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\t\t\tthis.z = scalar;\r\n\t\t\tthis.w = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( x ) {\r\n\r\n\t\t\tthis.x = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( y ) {\r\n\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetZ: function ( z ) {\r\n\r\n\t\t\tthis.z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetW: function ( w ) {\r\n\r\n\t\t\tthis.w = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetComponent: function ( index, value ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tcase 3: this.w = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetComponent: function ( index ) {\r\n\r\n\t\t\tswitch ( index ) {\r\n\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tcase 3: return this.w;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( v ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tadd: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\tthis.w += v.w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\tthis.w += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\tthis.w = a.w + b.w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScaledVector: function ( v, s ) {\r\n\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\tthis.w += v.w * s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\tthis.w -= v.w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubScalar: function ( s ) {\r\n\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\tthis.w -= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\tthis.w = a.w - b.w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivideScalar: function ( scalar ) {\r\n\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t\t},\r\n\r\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t\t// q is assumed to be normalized\r\n\r\n\t\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t\tthis.x = 1;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.x = q.x / s;\r\n\t\t\t\tthis.y = q.y / s;\r\n\t\t\t\tthis.z = q.z / s;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\t\tte = m.elements,\r\n\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\r\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\r\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t\t// singularity found\r\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\r\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\r\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\r\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\t\tangle = Math.PI;\r\n\r\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\r\n\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\r\n\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmin: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\t\t\tthis.z = Math.min( this.z, v.z );\r\n\t\t\tthis.w = Math.min( this.w, v.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmax: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\t\t\tthis.z = Math.max( this.z, v.z );\r\n\t\t\tthis.w = Math.max( this.w, v.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclamp: function ( min, max ) {\r\n\r\n\t\t\t// assumes min < max, componentwise\r\n\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampScalar: function () {\r\n\r\n\t\t\tvar min, max;\r\n\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\t\tmin = new Vector4();\r\n\t\t\t\t\tmax = new Vector4();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclampLength: function ( min, max ) {\r\n\r\n\t\t\tvar length = this.length();\r\n\r\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloor: function () {\r\n\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tceil: function () {\r\n\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tround: function () {\r\n\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\t\tthis.w = Math.round( this.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\troundToZero: function () {\r\n\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\t\tthis.w = - this.w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanLength: function () {\r\n\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t\t},\r\n\r\n\t\tsetLength: function ( length ) {\r\n\r\n\t\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( v, alpha ) {\r\n\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( v ) {\r\n\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x = attribute.getX( index );\r\n\t\t\tthis.y = attribute.getY( index );\r\n\t\t\tthis.z = attribute.getZ( index );\r\n\t\t\tthis.w = attribute.getW( index );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author szimek / https://github.com/szimek/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author Marius Kintel / https://github.com/kintel\r\n\t */\r\n\r\n\t/*\r\n\t In options, we can specify:\r\n\t * Texture parameters for an auto-generated target texture\r\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n\t*/\r\n\tfunction WebGLRenderTarget( width, height, options ) {\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\r\n\t\tthis.scissorTest = false;\r\n\r\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\r\n\r\n\t\toptions = options || {};\r\n\r\n\t\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\r\n\r\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\r\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\r\n\r\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\r\n\r\n\t}\r\n\r\n\tWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: WebGLRenderTarget,\r\n\r\n\t\tisWebGLRenderTarget: true,\r\n\r\n\t\tsetSize: function ( width, height ) {\r\n\r\n\t\t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\r\n\t\t\t\tthis.dispose();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewport.set( 0, 0, width, height );\r\n\t\t\tthis.scissor.set( 0, 0, width, height );\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\r\n\t\t\tthis.viewport.copy( source.viewport );\r\n\r\n\t\t\tthis.texture = source.texture.clone();\r\n\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\t\tthis.depthTexture = source.depthTexture;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t * @author Matt DesLauriers / @mattdesl\r\n\t */\r\n\r\n\tfunction WebGLMultisampleRenderTarget( width, height, options ) {\r\n\r\n\t\tWebGLRenderTarget.call( this, width, height, options );\r\n\r\n\t\tthis.samples = 4;\r\n\r\n\t}\r\n\r\n\tWebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\r\n\r\n\t\tconstructor: WebGLMultisampleRenderTarget,\r\n\r\n\t\tisWebGLMultisampleRenderTarget: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tWebGLRenderTarget.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.samples = source.samples;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com\r\n\t */\r\n\r\n\tfunction WebGLRenderTargetCube( width, height, options ) {\r\n\r\n\t\tWebGLRenderTarget.call( this, width, height, options );\r\n\r\n\t}\r\n\r\n\tWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\r\n\tWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\r\n\r\n\tWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\r\n\r\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\t\tthis.image = { data: data, width: width, height: height };\r\n\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\t\tthis.flipY = false;\r\n\t\tthis.unpackAlignment = 1;\r\n\r\n\t}\r\n\r\n\tDataTexture.prototype = Object.create( Texture.prototype );\r\n\tDataTexture.prototype.constructor = DataTexture;\r\n\r\n\tDataTexture.prototype.isDataTexture = true;\n\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction Box3( min, max ) {\r\n\r\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n\t}\r\n\r\n\tObject.assign( Box3.prototype, {\r\n\r\n\t\tisBox3: true,\r\n\r\n\t\tset: function ( min, max ) {\r\n\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromArray: function ( array ) {\r\n\r\n\t\t\tvar minX = + Infinity;\r\n\t\t\tvar minY = + Infinity;\r\n\t\t\tvar minZ = + Infinity;\r\n\r\n\t\t\tvar maxX = - Infinity;\r\n\t\t\tvar maxY = - Infinity;\r\n\t\t\tvar maxZ = - Infinity;\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar x = array[ i ];\r\n\t\t\t\tvar y = array[ i + 1 ];\r\n\t\t\t\tvar z = array[ i + 2 ];\r\n\r\n\t\t\t\tif ( x < minX ) minX = x;\r\n\t\t\t\tif ( y < minY ) minY = y;\r\n\t\t\t\tif ( z < minZ ) minZ = z;\r\n\r\n\t\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\t\tif ( y > maxY ) maxY = y;\r\n\t\t\t\tif ( z > maxZ ) maxZ = z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.min.set( minX, minY, minZ );\r\n\t\t\tthis.max.set( maxX, maxY, maxZ );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromBufferAttribute: function ( attribute ) {\r\n\r\n\t\t\tvar minX = + Infinity;\r\n\t\t\tvar minY = + Infinity;\r\n\t\t\tvar minZ = + Infinity;\r\n\r\n\t\t\tvar maxX = - Infinity;\r\n\t\t\tvar maxY = - Infinity;\r\n\t\t\tvar maxZ = - Infinity;\r\n\r\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar x = attribute.getX( i );\r\n\t\t\t\tvar y = attribute.getY( i );\r\n\t\t\t\tvar z = attribute.getZ( i );\r\n\r\n\t\t\t\tif ( x < minX ) minX = x;\r\n\t\t\t\tif ( y < minY ) minY = y;\r\n\t\t\t\tif ( z < minZ ) minZ = z;\r\n\r\n\t\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\t\tif ( y > maxY ) maxY = y;\r\n\t\t\t\tif ( z > maxZ ) maxZ = z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.min.set( minX, minY, minZ );\r\n\t\t\tthis.max.set( maxX, maxY, maxZ );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPoints: function ( points ) {\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCenterAndSize: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function setFromCenterAndSize( center, size ) {\r\n\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tsetFromObject: function ( object ) {\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\treturn this.expandByObject( object );\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( box ) {\r\n\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeEmpty: function () {\r\n\r\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\r\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tisEmpty: function () {\r\n\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t\t},\r\n\r\n\t\tgetCenter: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t\t},\r\n\r\n\t\tgetSize: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\r\n\r\n\t\t},\r\n\r\n\t\texpandByPoint: function ( point ) {\r\n\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\texpandByVector: function ( vector ) {\r\n\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\texpandByScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\texpandByObject: function () {\r\n\r\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\t\tvar scope, i, l;\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\tfunction traverse( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\t\tvar attribute = geometry.attributes.position;\r\n\r\n\t\t\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function expandByObject( object ) {\r\n\r\n\t\t\t\tscope = this;\r\n\r\n\t\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\t\tobject.traverse( traverse );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcontainsPoint: function ( point ) {\r\n\r\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\r\n\r\n\t\t},\r\n\r\n\t\tcontainsBox: function ( box ) {\r\n\r\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\r\n\t\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\r\n\r\n\t\t},\r\n\r\n\t\tgetParameter: function ( point, target ) {\r\n\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t\t);\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function ( box ) {\r\n\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\r\n\r\n\t\t},\r\n\r\n\t\tintersectsSphere: ( function () {\r\n\r\n\t\t\tvar closestPoint = new Vector3();\r\n\r\n\t\t\treturn function intersectsSphere( sphere ) {\r\n\r\n\t\t\t\t// Find the point on the AABB closest to the sphere center.\r\n\t\t\t\tthis.clampPoint( sphere.center, closestPoint );\r\n\r\n\t\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\r\n\t\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n\t\t\t};\r\n\r\n\t\t} )(),\r\n\r\n\t\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t\t// We compute the minimum and maximum dot product values. If those values\r\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\r\n\r\n\t\t\tvar min, max;\r\n\r\n\t\t\tif ( plane.normal.x > 0 ) {\r\n\r\n\t\t\t\tmin = plane.normal.x * this.min.x;\r\n\t\t\t\tmax = plane.normal.x * this.max.x;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmin = plane.normal.x * this.max.x;\r\n\t\t\t\tmax = plane.normal.x * this.min.x;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( plane.normal.y > 0 ) {\r\n\r\n\t\t\t\tmin += plane.normal.y * this.min.y;\r\n\t\t\t\tmax += plane.normal.y * this.max.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmin += plane.normal.y * this.max.y;\r\n\t\t\t\tmax += plane.normal.y * this.min.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( plane.normal.z > 0 ) {\r\n\r\n\t\t\t\tmin += plane.normal.z * this.min.z;\r\n\t\t\t\tmax += plane.normal.z * this.max.z;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmin += plane.normal.z * this.max.z;\r\n\t\t\t\tmax += plane.normal.z * this.min.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn ( min <= - plane.constant && max >= - plane.constant );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsTriangle: ( function () {\r\n\r\n\t\t\t// triangle centered vertices\r\n\t\t\tvar v0 = new Vector3();\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar v2 = new Vector3();\r\n\r\n\t\t\t// triangle edge vectors\r\n\t\t\tvar f0 = new Vector3();\r\n\t\t\tvar f1 = new Vector3();\r\n\t\t\tvar f2 = new Vector3();\r\n\r\n\t\t\tvar testAxis = new Vector3();\r\n\r\n\t\t\tvar center = new Vector3();\r\n\t\t\tvar extents = new Vector3();\r\n\r\n\t\t\tvar triangleNormal = new Vector3();\r\n\r\n\t\t\tfunction satForAxes( axes ) {\r\n\r\n\t\t\t\tvar i, j;\r\n\r\n\t\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\r\n\r\n\t\t\t\t\ttestAxis.fromArray( axes, i );\r\n\t\t\t\t\t// project the aabb onto the seperating axis\r\n\t\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\r\n\t\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\r\n\t\t\t\t\tvar p0 = v0.dot( testAxis );\r\n\t\t\t\t\tvar p1 = v1.dot( testAxis );\r\n\t\t\t\t\tvar p2 = v2.dot( testAxis );\r\n\t\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\r\n\t\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\r\n\r\n\t\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\r\n\t\t\t\t\t\t// the axis is seperating and we can exit\r\n\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function intersectsTriangle( triangle ) {\r\n\r\n\t\t\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// compute box center and extents\r\n\t\t\t\tthis.getCenter( center );\r\n\t\t\t\textents.subVectors( this.max, center );\r\n\r\n\t\t\t\t// translate triangle to aabb origin\r\n\t\t\t\tv0.subVectors( triangle.a, center );\r\n\t\t\t\tv1.subVectors( triangle.b, center );\r\n\t\t\t\tv2.subVectors( triangle.c, center );\r\n\r\n\t\t\t\t// compute edge vectors for triangle\r\n\t\t\t\tf0.subVectors( v1, v0 );\r\n\t\t\t\tf1.subVectors( v2, v1 );\r\n\t\t\t\tf2.subVectors( v0, v2 );\r\n\r\n\t\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\r\n\t\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\r\n\t\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\r\n\t\t\t\tvar axes = [\r\n\t\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\r\n\t\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\r\n\t\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\r\n\t\t\t\t];\r\n\t\t\t\tif ( ! satForAxes( axes ) ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// test 3 face normals from the aabb\r\n\t\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\r\n\t\t\t\tif ( ! satForAxes( axes ) ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// finally testing the face normal of the triangle\r\n\t\t\t\t// use already existing triangle edge vectors here\r\n\t\t\t\ttriangleNormal.crossVectors( f0, f1 );\r\n\t\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\r\n\t\t\t\treturn satForAxes( axes );\r\n\r\n\t\t\t};\r\n\r\n\t\t} )(),\r\n\r\n\t\tclampPoint: function ( point, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPoint: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function distanceToPoint( point ) {\r\n\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tgetBoundingSphere: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function getBoundingSphere( target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\r\n\t\t\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getCenter( target.center );\r\n\r\n\t\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\r\n\r\n\t\t\t\treturn target;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersect: function ( box ) {\r\n\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\r\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\r\n\t\t\tif ( this.isEmpty() ) this.makeEmpty();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tunion: function ( box ) {\r\n\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function () {\r\n\r\n\t\t\tvar points = [\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3(),\r\n\t\t\t\tnew Vector3()\r\n\t\t\t];\r\n\r\n\t\t\treturn function applyMatrix4( matrix ) {\r\n\r\n\t\t\t\t// transform of empty box is an empty box.\r\n\t\t\t\tif ( this.isEmpty() ) return this;\r\n\r\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\r\n\r\n\t\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslate: function ( offset ) {\r\n\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( box ) {\r\n\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Sphere( center, radius ) {\r\n\r\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( Sphere.prototype, {\r\n\r\n\t\tset: function ( center, radius ) {\r\n\r\n\t\t\tthis.center.copy( center );\r\n\t\t\tthis.radius = radius;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPoints: function () {\r\n\r\n\t\t\tvar box = new Box3();\r\n\r\n\t\t\treturn function setFromPoints( points, optionalCenter ) {\r\n\r\n\t\t\t\tvar center = this.center;\r\n\r\n\t\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbox.setFromPoints( points ).getCenter( center );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( sphere ) {\r\n\r\n\t\t\tthis.center.copy( sphere.center );\r\n\t\t\tthis.radius = sphere.radius;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tempty: function () {\r\n\r\n\t\t\treturn ( this.radius <= 0 );\r\n\r\n\t\t},\r\n\r\n\t\tcontainsPoint: function ( point ) {\r\n\r\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPoint: function ( point ) {\r\n\r\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function ( box ) {\r\n\r\n\t\t\treturn box.intersectsSphere( this );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\r\n\r\n\t\t},\r\n\r\n\t\tclampPoint: function ( point, target ) {\r\n\r\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttarget.copy( point );\r\n\r\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\t\ttarget.sub( this.center ).normalize();\r\n\t\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target;\r\n\r\n\t\t},\r\n\r\n\t\tgetBoundingBox: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\r\n\t\t\t\ttarget = new Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttarget.set( this.center, this.center );\r\n\t\t\ttarget.expandByScalar( this.radius );\r\n\r\n\t\t\treturn target;\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\t\tthis.center.applyMatrix4( matrix );\r\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttranslate: function ( offset ) {\r\n\r\n\t\t\tthis.center.add( offset );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( sphere ) {\r\n\r\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Plane( normal, constant ) {\r\n\r\n\t\t// normal is assumed to be normalized\r\n\r\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\r\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( Plane.prototype, {\r\n\r\n\t\tset: function ( normal, constant ) {\r\n\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = constant;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\t\tthis.normal.set( x, y, z );\r\n\t\t\tthis.constant = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = - point.dot( this.normal );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCoplanarPoints: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar v2 = new Vector3();\r\n\r\n\t\t\treturn function setFromCoplanarPoints( a, b, c ) {\r\n\r\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( plane ) {\r\n\r\n\t\t\tthis.normal.copy( plane.normal );\r\n\t\t\tthis.constant = plane.constant;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.constant *= - 1;\r\n\t\t\tthis.normal.negate();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPoint: function ( point ) {\r\n\r\n\t\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t\t},\r\n\r\n\t\tprojectPoint: function ( point, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\r\n\r\n\t\t},\r\n\r\n\t\tintersectLine: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function intersectLine( line, target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\r\n\t\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\t\t\treturn target.copy( line.start );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\t\treturn undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\t\treturn undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersectsLine: function ( line ) {\r\n\r\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function ( box ) {\r\n\r\n\t\t\treturn box.intersectsPlane( this );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\t\treturn sphere.intersectsPlane( this );\r\n\r\n\t\t},\r\n\r\n\t\tcoplanarPoint: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar m1 = new Matrix3();\r\n\r\n\t\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\r\n\t\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\r\n\r\n\t\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\tthis.constant = - referencePoint.dot( normal );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslate: function ( offset ) {\r\n\r\n\t\t\tthis.constant -= offset.dot( this.normal );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( plane ) {\r\n\r\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tthis.planes = [\r\n\r\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\r\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\r\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\r\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\r\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\r\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\r\n\r\n\t\t];\r\n\r\n\t}\r\n\r\n\tObject.assign( Frustum.prototype, {\r\n\r\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tplanes[ 0 ].copy( p0 );\r\n\t\t\tplanes[ 1 ].copy( p1 );\r\n\t\t\tplanes[ 2 ].copy( p2 );\r\n\t\t\tplanes[ 3 ].copy( p3 );\r\n\t\t\tplanes[ 4 ].copy( p4 );\r\n\t\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( frustum ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromMatrix: function ( m ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar me = m.elements;\r\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tintersectsObject: function () {\r\n\r\n\t\t\tvar sphere = new Sphere();\r\n\r\n\t\t\treturn function intersectsObject( object ) {\r\n\r\n\t\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\t\tif ( geometry.boundingSphere === null )\r\n\t\t\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t\t\tsphere.copy( geometry.boundingSphere )\r\n\t\t\t\t\t.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersectsSprite: function () {\r\n\r\n\t\t\tvar sphere = new Sphere();\r\n\r\n\t\t\treturn function intersectsSprite( sprite ) {\r\n\r\n\t\t\t\tsphere.center.set( 0, 0, 0 );\r\n\t\t\t\tsphere.radius = 0.7071067811865476;\r\n\t\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\r\n\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar center = sphere.center;\r\n\t\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function () {\r\n\r\n\t\t\tvar p = new Vector3();\r\n\r\n\t\t\treturn function intersectsBox( box ) {\r\n\r\n\t\t\t\tvar planes = this.planes;\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\t\t// corner at max distance\r\n\r\n\t\t\t\t\tp.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\t\tp.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\t\tp.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\t\tif ( plane.distanceToPoint( p ) < 0 ) {\r\n\r\n\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcontainsPoint: function ( point ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author jordi_ros / http://plattsoft.com\r\n\t * @author D1plo1d / http://github.com/D1plo1d\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author timknip / http://www.floorplanner.com/\r\n\t * @author bhouston / http://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction Matrix4() {\r\n\r\n\t\tthis.elements = [\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t];\r\n\r\n\t\tif ( arguments.length > 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject.assign( Matrix4.prototype, {\r\n\r\n\t\tisMatrix4: true,\r\n\r\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tidentity: function () {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, 1, 0, 0,\r\n\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new Matrix4().fromArray( this.elements );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( m ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\r\n\t\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\r\n\t\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\r\n\t\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyPosition: function ( m ) {\r\n\r\n\t\t\tvar te = this.elements, me = m.elements;\r\n\r\n\t\t\tte[ 12 ] = me[ 12 ];\r\n\t\t\tte[ 13 ] = me[ 13 ];\r\n\t\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\r\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\r\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\t\tthis.set(\r\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\textractRotation: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function extractRotation( m ) {\r\n\r\n\t\t\t\t// this method does not support reflection matrices\r\n\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\tvar me = m.elements;\r\n\r\n\t\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\r\n\t\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\r\n\t\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\t\t\tte[ 3 ] = 0;\r\n\r\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\t\t\tte[ 7 ] = 0;\r\n\r\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\t\t\tte[ 11 ] = 0;\r\n\r\n\t\t\t\tte[ 12 ] = 0;\r\n\t\t\t\tte[ 13 ] = 0;\r\n\t\t\t\tte[ 14 ] = 0;\r\n\t\t\t\tte[ 15 ] = 1;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - c * f;\r\n\t\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\t\tte[ 1 ] = a * f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\t\tte[ 4 ] = - a * f;\r\n\t\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\t\tte[ 2 ] = - a * d;\r\n\t\t\t\tte[ 6 ] = b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\t\tte[ 1 ] = c * f;\r\n\t\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\t\tte[ 2 ] = - d;\r\n\t\t\t\tte[ 6 ] = b * c;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\t\tte[ 1 ] = f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\t\tte[ 2 ] = - d * e;\r\n\t\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - f;\r\n\t\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\t\tte[ 6 ] = b * e;\r\n\t\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bottom row\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\r\n\t\t\t// last column\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeRotationFromQuaternion: function () {\r\n\r\n\t\t\tvar zero = new Vector3( 0, 0, 0 );\r\n\t\t\tvar one = new Vector3( 1, 1, 1 );\r\n\r\n\t\t\treturn function makeRotationFromQuaternion( q ) {\r\n\r\n\t\t\t\treturn this.compose( zero, q, one );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tlookAt: function () {\r\n\r\n\t\t\tvar x = new Vector3();\r\n\t\t\tvar y = new Vector3();\r\n\t\t\tvar z = new Vector3();\r\n\r\n\t\t\treturn function lookAt( eye, target, up ) {\r\n\r\n\t\t\t\tvar te = this.elements;\r\n\r\n\t\t\t\tz.subVectors( eye, target );\r\n\r\n\t\t\t\tif ( z.lengthSq() === 0 ) {\r\n\r\n\t\t\t\t\t// eye and target are in the same position\r\n\r\n\t\t\t\t\tz.z = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tz.normalize();\r\n\t\t\t\tx.crossVectors( up, z );\r\n\r\n\t\t\t\tif ( x.lengthSq() === 0 ) {\r\n\r\n\t\t\t\t\t// up and z are parallel\r\n\r\n\t\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\r\n\r\n\t\t\t\t\t\tz.x += 0.0001;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tz.z += 0.0001;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tz.normalize();\r\n\t\t\t\t\tx.crossVectors( up, z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tx.normalize();\r\n\t\t\t\ty.crossVectors( z, x );\r\n\r\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tmultiply: function ( m, n ) {\r\n\r\n\t\t\tif ( n !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t\t},\r\n\r\n\t\tpremultiply: function ( m ) {\r\n\r\n\t\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\t\tvar ae = a.elements;\r\n\t\t\tvar be = b.elements;\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( s ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tapplyToBufferAttribute: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function applyToBufferAttribute( attribute ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tv1.x = attribute.getX( i );\r\n\t\t\t\t\tv1.y = attribute.getY( i );\r\n\t\t\t\t\tv1.z = attribute.getZ( i );\r\n\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn attribute;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tdeterminant: function () {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t\t//TODO: make this more efficient\r\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\t\treturn (\r\n\t\t\t\tn41 * (\r\n\t\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t\t - n12 * n23 * n34\r\n\t\t\t\t) +\r\n\t\t\t\tn42 * (\r\n\t\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t\t - n14 * n23 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn43 * (\r\n\t\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t\t - n12 * n24 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn44 * (\r\n\t\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t\t + n12 * n23 * n31\r\n\t\t\t\t)\r\n\r\n\t\t\t);\r\n\r\n\t\t},\r\n\r\n\t\ttranspose: function () {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar tmp;\r\n\r\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPosition: function ( v ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tte[ 12 ] = v.x;\r\n\t\t\tte[ 13 ] = v.y;\r\n\t\t\tte[ 14 ] = v.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\r\n\r\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\t\tvar te = this.elements,\r\n\t\t\t\tme = m.elements,\r\n\r\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\r\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\r\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\r\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\r\n\r\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\r\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n\r\n\t\t\tif ( det === 0 ) {\r\n\r\n\t\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\r\n\r\n\t\t\t\tif ( throwOnDegenerate === true ) {\r\n\r\n\t\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.identity();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar detInv = 1 / det;\r\n\r\n\t\t\tte[ 0 ] = t11 * detInv;\r\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\r\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\r\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\r\n\r\n\t\t\tte[ 4 ] = t12 * detInv;\r\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\r\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\r\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\r\n\r\n\t\t\tte[ 8 ] = t13 * detInv;\r\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\r\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\r\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\r\n\r\n\t\t\tte[ 12 ] = t14 * detInv;\r\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\r\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\r\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tscale: function ( v ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n\r\n\t\t},\r\n\r\n\t\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0, x,\r\n\t\t\t\t0, 1, 0, y,\r\n\t\t\t\t0, 0, 1, z,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeRotationX: function ( theta ) {\r\n\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, c, - s, 0,\r\n\t\t\t\t0, s, c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeRotationY: function ( theta ) {\r\n\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t c, 0, s, 0,\r\n\t\t\t\t 0, 1, 0, 0,\r\n\t\t\t\t- s, 0, c, 0,\r\n\t\t\t\t 0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\tc, - s, 0, 0,\r\n\t\t\t\ts, c, 0, 0,\r\n\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\t\tvar c = Math.cos( angle );\r\n\t\t\tvar s = Math.sin( angle );\r\n\t\t\tvar t = 1 - c;\r\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\t return this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\tx, 0, 0, 0,\r\n\t\t\t\t0, y, 0, 0,\r\n\t\t\t\t0, 0, z, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeShear: function ( x, y, z ) {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, y, z, 0,\r\n\t\t\t\tx, 1, z, 0,\r\n\t\t\t\tx, y, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\r\n\t\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\r\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\r\n\r\n\t\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\r\n\t\t\tte[ 1 ] = ( xy + wz ) * sx;\r\n\t\t\tte[ 2 ] = ( xz - wy ) * sx;\r\n\t\t\tte[ 3 ] = 0;\r\n\r\n\t\t\tte[ 4 ] = ( xy - wz ) * sy;\r\n\t\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\r\n\t\t\tte[ 6 ] = ( yz + wx ) * sy;\r\n\t\t\tte[ 7 ] = 0;\r\n\r\n\t\t\tte[ 8 ] = ( xz + wy ) * sz;\r\n\t\t\tte[ 9 ] = ( yz - wx ) * sz;\r\n\t\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\r\n\t\t\tte[ 11 ] = 0;\r\n\r\n\t\t\tte[ 12 ] = position.x;\r\n\t\t\tte[ 13 ] = position.y;\r\n\t\t\tte[ 14 ] = position.z;\r\n\t\t\tte[ 15 ] = 1;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdecompose: function () {\r\n\r\n\t\t\tvar vector = new Vector3();\r\n\t\t\tvar matrix = new Matrix4();\r\n\r\n\t\t\treturn function decompose( position, quaternion, scale ) {\r\n\r\n\t\t\t\tvar te = this.elements;\r\n\r\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\t\tvar det = this.determinant();\r\n\t\t\t\tif ( det < 0 ) sx = - sx;\r\n\r\n\t\t\t\tposition.x = te[ 12 ];\r\n\t\t\t\tposition.y = te[ 13 ];\r\n\t\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t\t// scale the rotation part\r\n\t\t\t\tmatrix.copy( this );\r\n\r\n\t\t\t\tvar invSX = 1 / sx;\r\n\t\t\t\tvar invSY = 1 / sy;\r\n\t\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\t\tscale.x = sx;\r\n\t\t\t\tscale.y = sy;\r\n\t\t\t\tscale.z = sz;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tmakePerspective: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\t\tif ( far === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = 2 * near / ( right - left );\r\n\t\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\t\tvar a = ( right + left ) / ( right - left );\r\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar w = 1.0 / ( right - left );\r\n\t\t\tvar h = 1.0 / ( top - bottom );\r\n\t\t\tvar p = 1.0 / ( far - near );\r\n\r\n\t\t\tvar x = ( right + left ) * w;\r\n\t\t\tvar y = ( top + bottom ) * h;\r\n\t\t\tvar z = ( far + near ) * p;\r\n\r\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( matrix ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = matrix.elements;\r\n\r\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\r\n\t\t\tarray[ offset + 9 ] = te[ 9 ];\r\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\n\tvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotNV );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\";\n\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = normalMatrix * objectTangent;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#endif\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearCoatInv = 1.0 - clearCoatDHR;\\n\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec3 singleScattering = vec3( 0.0 );\\n\\t\\tvec3 multiScattering = vec3( 0.0 );\\n\\t\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\t\\tvec3 diffuse = material.diffuseColor;\\n\\t\\treflectedLight.indirectSpecular += clearCoatInv * radiance * singleScattering;\\n\\t\\treflectedLight.indirectDiffuse += multiScattering * cosineWeightedIrradiance;\\n\\t\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n\\t#else\\n\\t\\treflectedLight.indirectSpecular += clearCoatInv * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\";\n\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\";\n\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, irradiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\";\n\n\tvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\n\tvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\t#ifdef USE_TANGENT\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\t\\tnormal = normalize( vTBN * mapN );\\n\\t\\t#else\\n\\t\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t\\t#endif\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\n\tvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\";\n\n\tvar dithering_fragment = \"#if defined( DITHERING )\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\n\tvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\\n}\";\n\n\tvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\n\tvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\";\n\n\tvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\n\tvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\";\n\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar ShaderChunk = {\r\n\t\talphamap_fragment: alphamap_fragment,\r\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\r\n\t\talphatest_fragment: alphatest_fragment,\r\n\t\taomap_fragment: aomap_fragment,\r\n\t\taomap_pars_fragment: aomap_pars_fragment,\r\n\t\tbegin_vertex: begin_vertex,\r\n\t\tbeginnormal_vertex: beginnormal_vertex,\r\n\t\tbsdfs: bsdfs,\r\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\r\n\t\tclipping_planes_fragment: clipping_planes_fragment,\r\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\r\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\r\n\t\tclipping_planes_vertex: clipping_planes_vertex,\r\n\t\tcolor_fragment: color_fragment,\r\n\t\tcolor_pars_fragment: color_pars_fragment,\r\n\t\tcolor_pars_vertex: color_pars_vertex,\r\n\t\tcolor_vertex: color_vertex,\r\n\t\tcommon: common,\r\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\r\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\r\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\r\n\t\tdisplacementmap_vertex: displacementmap_vertex,\r\n\t\temissivemap_fragment: emissivemap_fragment,\r\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\r\n\t\tencodings_fragment: encodings_fragment,\r\n\t\tencodings_pars_fragment: encodings_pars_fragment,\r\n\t\tenvmap_fragment: envmap_fragment,\r\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\r\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\r\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\r\n\t\tenvmap_vertex: envmap_vertex,\r\n\t\tfog_vertex: fog_vertex,\r\n\t\tfog_pars_vertex: fog_pars_vertex,\r\n\t\tfog_fragment: fog_fragment,\r\n\t\tfog_pars_fragment: fog_pars_fragment,\r\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\r\n\t\tlightmap_fragment: lightmap_fragment,\r\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\r\n\t\tlights_lambert_vertex: lights_lambert_vertex,\r\n\t\tlights_pars_begin: lights_pars_begin,\r\n\t\tlights_phong_fragment: lights_phong_fragment,\r\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\r\n\t\tlights_physical_fragment: lights_physical_fragment,\r\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\r\n\t\tlights_fragment_begin: lights_fragment_begin,\r\n\t\tlights_fragment_maps: lights_fragment_maps,\r\n\t\tlights_fragment_end: lights_fragment_end,\r\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\r\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\r\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\r\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\r\n\t\tmap_fragment: map_fragment,\r\n\t\tmap_pars_fragment: map_pars_fragment,\r\n\t\tmap_particle_fragment: map_particle_fragment,\r\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\r\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\r\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\r\n\t\tmorphnormal_vertex: morphnormal_vertex,\r\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\r\n\t\tmorphtarget_vertex: morphtarget_vertex,\r\n\t\tnormal_fragment_begin: normal_fragment_begin,\r\n\t\tnormal_fragment_maps: normal_fragment_maps,\r\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\r\n\t\tpacking: packing,\r\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\r\n\t\tproject_vertex: project_vertex,\r\n\t\tdithering_fragment: dithering_fragment,\r\n\t\tdithering_pars_fragment: dithering_pars_fragment,\r\n\t\troughnessmap_fragment: roughnessmap_fragment,\r\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\r\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\r\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\r\n\t\tshadowmap_vertex: shadowmap_vertex,\r\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\r\n\t\tskinbase_vertex: skinbase_vertex,\r\n\t\tskinning_pars_vertex: skinning_pars_vertex,\r\n\t\tskinning_vertex: skinning_vertex,\r\n\t\tskinnormal_vertex: skinnormal_vertex,\r\n\t\tspecularmap_fragment: specularmap_fragment,\r\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\r\n\t\ttonemapping_fragment: tonemapping_fragment,\r\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\r\n\t\tuv_pars_fragment: uv_pars_fragment,\r\n\t\tuv_pars_vertex: uv_pars_vertex,\r\n\t\tuv_vertex: uv_vertex,\r\n\t\tuv2_pars_fragment: uv2_pars_fragment,\r\n\t\tuv2_pars_vertex: uv2_pars_vertex,\r\n\t\tuv2_vertex: uv2_vertex,\r\n\t\tworldpos_vertex: worldpos_vertex,\r\n\r\n\t\tbackground_frag: background_frag,\r\n\t\tbackground_vert: background_vert,\r\n\t\tcube_frag: cube_frag,\r\n\t\tcube_vert: cube_vert,\r\n\t\tdepth_frag: depth_frag,\r\n\t\tdepth_vert: depth_vert,\r\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\r\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\r\n\t\tequirect_frag: equirect_frag,\r\n\t\tequirect_vert: equirect_vert,\r\n\t\tlinedashed_frag: linedashed_frag,\r\n\t\tlinedashed_vert: linedashed_vert,\r\n\t\tmeshbasic_frag: meshbasic_frag,\r\n\t\tmeshbasic_vert: meshbasic_vert,\r\n\t\tmeshlambert_frag: meshlambert_frag,\r\n\t\tmeshlambert_vert: meshlambert_vert,\r\n\t\tmeshmatcap_frag: meshmatcap_frag,\r\n\t\tmeshmatcap_vert: meshmatcap_vert,\r\n\t\tmeshphong_frag: meshphong_frag,\r\n\t\tmeshphong_vert: meshphong_vert,\r\n\t\tmeshphysical_frag: meshphysical_frag,\r\n\t\tmeshphysical_vert: meshphysical_vert,\r\n\t\tnormal_frag: normal_frag,\r\n\t\tnormal_vert: normal_vert,\r\n\t\tpoints_frag: points_frag,\r\n\t\tpoints_vert: points_vert,\r\n\t\tshadow_frag: shadow_frag,\r\n\t\tshadow_vert: shadow_vert,\r\n\t\tsprite_frag: sprite_frag,\r\n\t\tsprite_vert: sprite_vert\r\n\t};\n\n\t/**\r\n\t * Uniform Utilities\r\n\t */\r\n\r\n\tfunction cloneUniforms( src ) {\r\n\r\n\t\tvar dst = {};\r\n\r\n\t\tfor ( var u in src ) {\r\n\r\n\t\t\tdst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in src[ u ] ) {\r\n\r\n\t\t\t\tvar property = src[ u ][ p ];\r\n\r\n\t\t\t\tif ( property && ( property.isColor ||\r\n\t\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\r\n\t\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\r\n\t\t\t\t\tproperty.isTexture ) ) {\r\n\r\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\r\n\r\n\t\t\t\t} else if ( Array.isArray( property ) ) {\r\n\r\n\t\t\t\t\tdst[ u ][ p ] = property.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tdst[ u ][ p ] = property;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn dst;\r\n\r\n\t}\r\n\r\n\tfunction mergeUniforms( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = cloneUniforms( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t}\r\n\r\n\t// Legacy\r\n\r\n\tvar UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n\tfunction Color( r, g, b ) {\r\n\r\n\t\tif ( g === undefined && b === undefined ) {\r\n\r\n\t\t\t// r is THREE.Color, hex or string\r\n\t\t\treturn this.set( r );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.setRGB( r, g, b );\r\n\r\n\t}\r\n\r\n\tObject.assign( Color.prototype, {\r\n\r\n\t\tisColor: true,\r\n\r\n\t\tr: 1, g: 1, b: 1,\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tif ( value && value.isColor ) {\r\n\r\n\t\t\t\tthis.copy( value );\r\n\r\n\t\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\t\tthis.setHex( value );\r\n\r\n\t\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\t\tthis.setStyle( value );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.r = scalar;\r\n\t\t\tthis.g = scalar;\r\n\t\t\tthis.b = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetHex: function ( hex ) {\r\n\r\n\t\t\thex = Math.floor( hex );\r\n\r\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\t\tthis.r = r;\r\n\t\t\tthis.g = g;\r\n\t\t\tthis.b = b;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetHSL: function () {\r\n\r\n\t\t\tfunction hue2rgb( p, q, t ) {\r\n\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function setHSL( h, s, l ) {\r\n\r\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\t\th = _Math.euclideanModulo( h, 1 );\r\n\t\t\t\ts = _Math.clamp( s, 0, 1 );\r\n\t\t\t\tl = _Math.clamp( l, 0, 1 );\r\n\r\n\t\t\t\tif ( s === 0 ) {\r\n\r\n\t\t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tsetStyle: function ( style ) {\r\n\r\n\t\t\tfunction handleAlpha( string ) {\r\n\r\n\t\t\t\tif ( string === undefined ) return;\r\n\r\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar m;\r\n\r\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t\t// rgb / hsl\r\n\r\n\t\t\t\tvar color;\r\n\t\t\t\tvar name = m[ 1 ];\r\n\t\t\t\tvar components = m[ 2 ];\r\n\r\n\t\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\t\tcase 'rgb':\r\n\t\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'hsl':\r\n\t\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n\t\t\t\t// hex color\r\n\r\n\t\t\t\tvar hex = m[ 1 ];\r\n\t\t\t\tvar size = hex.length;\r\n\r\n\t\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t\t// #ff0\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t\t// #ff0000\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\t\t// color keywords\r\n\t\t\t\tvar hex = ColorKeywords[ style ];\r\n\r\n\t\t\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t\t\t// red\r\n\t\t\t\t\tthis.setHex( hex );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// unknown color\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( color ) {\r\n\r\n\t\t\tthis.r = color.r;\r\n\t\t\tthis.g = color.g;\r\n\t\t\tthis.b = color.b;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tconvertGammaToLinear: function ( gammaFactor ) {\r\n\r\n\t\t\tthis.copyGammaToLinear( this, gammaFactor );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tconvertLinearToGamma: function ( gammaFactor ) {\r\n\r\n\t\t\tthis.copyLinearToGamma( this, gammaFactor );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopySRGBToLinear: function () {\r\n\r\n\t\t\tfunction SRGBToLinear( c ) {\r\n\r\n\t\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function copySRGBToLinear( color ) {\r\n\r\n\t\t\t\tthis.r = SRGBToLinear( color.r );\r\n\t\t\t\tthis.g = SRGBToLinear( color.g );\r\n\t\t\t\tthis.b = SRGBToLinear( color.b );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcopyLinearToSRGB: function () {\r\n\r\n\t\t\tfunction LinearToSRGB( c ) {\r\n\r\n\t\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function copyLinearToSRGB( color ) {\r\n\r\n\t\t\t\tthis.r = LinearToSRGB( color.r );\r\n\t\t\t\tthis.g = LinearToSRGB( color.g );\r\n\t\t\t\tthis.b = LinearToSRGB( color.b );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tconvertSRGBToLinear: function () {\r\n\r\n\t\t\tthis.copySRGBToLinear( this );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tconvertLinearToSRGB: function () {\r\n\r\n\t\t\tthis.copyLinearToSRGB( this );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetHex: function () {\r\n\r\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t\t},\r\n\r\n\t\tgetHexString: function () {\r\n\r\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t\t},\r\n\r\n\t\tgetHSL: function ( target ) {\r\n\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\r\n\t\t\t\ttarget = { h: 0, s: 0, l: 0 };\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\t\tvar max = Math.max( r, g, b );\r\n\t\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\t\tvar hue, saturation;\r\n\t\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\t\tif ( min === max ) {\r\n\r\n\t\t\t\thue = 0;\r\n\t\t\t\tsaturation = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar delta = max - min;\r\n\r\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\thue /= 6;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttarget.h = hue;\r\n\t\t\ttarget.s = saturation;\r\n\t\t\ttarget.l = lightness;\r\n\r\n\t\t\treturn target;\r\n\r\n\t\t},\r\n\r\n\t\tgetStyle: function () {\r\n\r\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t\t},\r\n\r\n\t\toffsetHSL: function () {\r\n\r\n\t\t\tvar hsl = {};\r\n\r\n\t\t\treturn function ( h, s, l ) {\r\n\r\n\t\t\t\tthis.getHSL( hsl );\r\n\r\n\t\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tadd: function ( color ) {\r\n\r\n\t\t\tthis.r += color.r;\r\n\t\t\tthis.g += color.g;\r\n\t\t\tthis.b += color.b;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddColors: function ( color1, color2 ) {\r\n\r\n\t\t\tthis.r = color1.r + color2.r;\r\n\t\t\tthis.g = color1.g + color2.g;\r\n\t\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.r += s;\r\n\t\t\tthis.g += s;\r\n\t\t\tthis.b += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( color ) {\r\n\r\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\r\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\r\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( color ) {\r\n\r\n\t\t\tthis.r *= color.r;\r\n\t\t\tthis.g *= color.g;\r\n\t\t\tthis.b *= color.b;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( s ) {\r\n\r\n\t\t\tthis.r *= s;\r\n\t\t\tthis.g *= s;\r\n\t\t\tthis.b *= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( color, alpha ) {\r\n\r\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpHSL: function () {\r\n\r\n\t\t\tvar hslA = { h: 0, s: 0, l: 0 };\r\n\t\t\tvar hslB = { h: 0, s: 0, l: 0 };\r\n\r\n\t\t\treturn function lerpHSL( color, alpha ) {\r\n\r\n\t\t\t\tthis.getHSL( hslA );\r\n\t\t\t\tcolor.getHSL( hslB );\r\n\r\n\t\t\t\tvar h = _Math.lerp( hslA.h, hslB.h, alpha );\r\n\t\t\t\tvar s = _Math.lerp( hslA.s, hslB.s, alpha );\r\n\t\t\t\tvar l = _Math.lerp( hslA.l, hslB.l, alpha );\r\n\r\n\t\t\t\tthis.setHSL( h, s, l );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tequals: function ( c ) {\r\n\r\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.r = array[ offset ];\r\n\t\t\tthis.g = array[ offset + 1 ];\r\n\t\t\tthis.b = array[ offset + 2 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.r;\r\n\t\t\tarray[ offset + 1 ] = this.g;\r\n\t\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\treturn this.getHex();\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * Uniforms library for shared webgl shaders\r\n\t */\r\n\r\n\tvar UniformsLib = {\r\n\r\n\t\tcommon: {\r\n\r\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\r\n\t\t\topacity: { value: 1.0 },\r\n\r\n\t\t\tmap: { value: null },\r\n\t\t\tuvTransform: { value: new Matrix3() },\r\n\r\n\t\t\talphaMap: { value: null },\r\n\r\n\t\t},\r\n\r\n\t\tspecularmap: {\r\n\r\n\t\t\tspecularMap: { value: null },\r\n\r\n\t\t},\r\n\r\n\t\tenvmap: {\r\n\r\n\t\t\tenvMap: { value: null },\r\n\t\t\tflipEnvMap: { value: - 1 },\r\n\t\t\treflectivity: { value: 1.0 },\r\n\t\t\trefractionRatio: { value: 0.98 },\r\n\t\t\tmaxMipLevel: { value: 0 }\r\n\r\n\t\t},\r\n\r\n\t\taomap: {\r\n\r\n\t\t\taoMap: { value: null },\r\n\t\t\taoMapIntensity: { value: 1 }\r\n\r\n\t\t},\r\n\r\n\t\tlightmap: {\r\n\r\n\t\t\tlightMap: { value: null },\r\n\t\t\tlightMapIntensity: { value: 1 }\r\n\r\n\t\t},\r\n\r\n\t\temissivemap: {\r\n\r\n\t\t\temissiveMap: { value: null }\r\n\r\n\t\t},\r\n\r\n\t\tbumpmap: {\r\n\r\n\t\t\tbumpMap: { value: null },\r\n\t\t\tbumpScale: { value: 1 }\r\n\r\n\t\t},\r\n\r\n\t\tnormalmap: {\r\n\r\n\t\t\tnormalMap: { value: null },\r\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\r\n\r\n\t\t},\r\n\r\n\t\tdisplacementmap: {\r\n\r\n\t\t\tdisplacementMap: { value: null },\r\n\t\t\tdisplacementScale: { value: 1 },\r\n\t\t\tdisplacementBias: { value: 0 }\r\n\r\n\t\t},\r\n\r\n\t\troughnessmap: {\r\n\r\n\t\t\troughnessMap: { value: null }\r\n\r\n\t\t},\r\n\r\n\t\tmetalnessmap: {\r\n\r\n\t\t\tmetalnessMap: { value: null }\r\n\r\n\t\t},\r\n\r\n\t\tgradientmap: {\r\n\r\n\t\t\tgradientMap: { value: null }\r\n\r\n\t\t},\r\n\r\n\t\tfog: {\r\n\r\n\t\t\tfogDensity: { value: 0.00025 },\r\n\t\t\tfogNear: { value: 1 },\r\n\t\t\tfogFar: { value: 2000 },\r\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\r\n\r\n\t\t},\r\n\r\n\t\tlights: {\r\n\r\n\t\t\tambientLightColor: { value: [] },\r\n\r\n\t\t\tdirectionalLights: { value: [], properties: {\r\n\t\t\t\tdirection: {},\r\n\t\t\t\tcolor: {},\r\n\r\n\t\t\t\tshadow: {},\r\n\t\t\t\tshadowBias: {},\r\n\t\t\t\tshadowRadius: {},\r\n\t\t\t\tshadowMapSize: {}\r\n\t\t\t} },\r\n\r\n\t\t\tdirectionalShadowMap: { value: [] },\r\n\t\t\tdirectionalShadowMatrix: { value: [] },\r\n\r\n\t\t\tspotLights: { value: [], properties: {\r\n\t\t\t\tcolor: {},\r\n\t\t\t\tposition: {},\r\n\t\t\t\tdirection: {},\r\n\t\t\t\tdistance: {},\r\n\t\t\t\tconeCos: {},\r\n\t\t\t\tpenumbraCos: {},\r\n\t\t\t\tdecay: {},\r\n\r\n\t\t\t\tshadow: {},\r\n\t\t\t\tshadowBias: {},\r\n\t\t\t\tshadowRadius: {},\r\n\t\t\t\tshadowMapSize: {}\r\n\t\t\t} },\r\n\r\n\t\t\tspotShadowMap: { value: [] },\r\n\t\t\tspotShadowMatrix: { value: [] },\r\n\r\n\t\t\tpointLights: { value: [], properties: {\r\n\t\t\t\tcolor: {},\r\n\t\t\t\tposition: {},\r\n\t\t\t\tdecay: {},\r\n\t\t\t\tdistance: {},\r\n\r\n\t\t\t\tshadow: {},\r\n\t\t\t\tshadowBias: {},\r\n\t\t\t\tshadowRadius: {},\r\n\t\t\t\tshadowMapSize: {},\r\n\t\t\t\tshadowCameraNear: {},\r\n\t\t\t\tshadowCameraFar: {}\r\n\t\t\t} },\r\n\r\n\t\t\tpointShadowMap: { value: [] },\r\n\t\t\tpointShadowMatrix: { value: [] },\r\n\r\n\t\t\themisphereLights: { value: [], properties: {\r\n\t\t\t\tdirection: {},\r\n\t\t\t\tskyColor: {},\r\n\t\t\t\tgroundColor: {}\r\n\t\t\t} },\r\n\r\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\r\n\t\t\trectAreaLights: { value: [], properties: {\r\n\t\t\t\tcolor: {},\r\n\t\t\t\tposition: {},\r\n\t\t\t\twidth: {},\r\n\t\t\t\theight: {}\r\n\t\t\t} }\r\n\r\n\t\t},\r\n\r\n\t\tpoints: {\r\n\r\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\r\n\t\t\topacity: { value: 1.0 },\r\n\t\t\tsize: { value: 1.0 },\r\n\t\t\tscale: { value: 1.0 },\r\n\t\t\tmap: { value: null },\r\n\t\t\tuvTransform: { value: new Matrix3() }\r\n\r\n\t\t},\r\n\r\n\t\tsprite: {\r\n\r\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\r\n\t\t\topacity: { value: 1.0 },\r\n\t\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\r\n\t\t\trotation: { value: 0.0 },\r\n\t\t\tmap: { value: null },\r\n\t\t\tuvTransform: { value: new Matrix3() }\r\n\r\n\t\t}\r\n\r\n\t};\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\r\n\tvar ShaderLib = {\r\n\r\n\t\tbasic: {\r\n\r\n\t\t\tuniforms: mergeUniforms( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.specularmap,\r\n\t\t\t\tUniformsLib.envmap,\r\n\t\t\t\tUniformsLib.aomap,\r\n\t\t\t\tUniformsLib.lightmap,\r\n\t\t\t\tUniformsLib.fog\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\r\n\r\n\t\t},\r\n\r\n\t\tlambert: {\r\n\r\n\t\t\tuniforms: mergeUniforms( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.specularmap,\r\n\t\t\t\tUniformsLib.envmap,\r\n\t\t\t\tUniformsLib.aomap,\r\n\t\t\t\tUniformsLib.lightmap,\r\n\t\t\t\tUniformsLib.emissivemap,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\tUniformsLib.lights,\r\n\t\t\t\t{\r\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\r\n\r\n\t\t},\r\n\r\n\t\tphong: {\r\n\r\n\t\t\tuniforms: mergeUniforms( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.specularmap,\r\n\t\t\t\tUniformsLib.envmap,\r\n\t\t\t\tUniformsLib.aomap,\r\n\t\t\t\tUniformsLib.lightmap,\r\n\t\t\t\tUniformsLib.emissivemap,\r\n\t\t\t\tUniformsLib.bumpmap,\r\n\t\t\t\tUniformsLib.normalmap,\r\n\t\t\t\tUniformsLib.displacementmap,\r\n\t\t\t\tUniformsLib.gradientmap,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\tUniformsLib.lights,\r\n\t\t\t\t{\r\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\r\n\t\t\t\t\tspecular: { value: new Color( 0x111111 ) },\r\n\t\t\t\t\tshininess: { value: 30 }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\r\n\r\n\t\t},\r\n\r\n\t\tstandard: {\r\n\r\n\t\t\tuniforms: mergeUniforms( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.envmap,\r\n\t\t\t\tUniformsLib.aomap,\r\n\t\t\t\tUniformsLib.lightmap,\r\n\t\t\t\tUniformsLib.emissivemap,\r\n\t\t\t\tUniformsLib.bumpmap,\r\n\t\t\t\tUniformsLib.normalmap,\r\n\t\t\t\tUniformsLib.displacementmap,\r\n\t\t\t\tUniformsLib.roughnessmap,\r\n\t\t\t\tUniformsLib.metalnessmap,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\tUniformsLib.lights,\r\n\t\t\t\t{\r\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\r\n\t\t\t\t\troughness: { value: 0.5 },\r\n\t\t\t\t\tmetalness: { value: 0.5 },\r\n\t\t\t\t\tenvMapIntensity: { value: 1 } // temporary\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\r\n\t\t},\r\n\r\n\t\tmatcap: {\r\n\r\n\t\t\tuniforms: mergeUniforms( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.bumpmap,\r\n\t\t\t\tUniformsLib.normalmap,\r\n\t\t\t\tUniformsLib.displacementmap,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\t{\r\n\t\t\t\t\tmatcap: { value: null }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\r\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\r\n\r\n\t\t},\r\n\r\n\t\tpoints: {\r\n\r\n\t\t\tuniforms: mergeUniforms( [\r\n\t\t\t\tUniformsLib.points,\r\n\t\t\t\tUniformsLib.fog\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.points_vert,\r\n\t\t\tfragmentShader: ShaderChunk.points_frag\r\n\r\n\t\t},\r\n\r\n\t\tdashed: {\r\n\r\n\t\t\tuniforms: mergeUniforms( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\t{\r\n\t\t\t\t\tscale: { value: 1 },\r\n\t\t\t\t\tdashSize: { value: 1 },\r\n\t\t\t\t\ttotalSize: { value: 2 }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\r\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\r\n\r\n\t\t},\r\n\r\n\t\tdepth: {\r\n\r\n\t\t\tuniforms: mergeUniforms( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.displacementmap\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.depth_vert,\r\n\t\t\tfragmentShader: ShaderChunk.depth_frag\r\n\r\n\t\t},\r\n\r\n\t\tnormal: {\r\n\r\n\t\t\tuniforms: mergeUniforms( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.bumpmap,\r\n\t\t\t\tUniformsLib.normalmap,\r\n\t\t\t\tUniformsLib.displacementmap,\r\n\t\t\t\t{\r\n\t\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.normal_vert,\r\n\t\t\tfragmentShader: ShaderChunk.normal_frag\r\n\r\n\t\t},\r\n\r\n\t\tsprite: {\r\n\r\n\t\t\tuniforms: mergeUniforms( [\r\n\t\t\t\tUniformsLib.sprite,\r\n\t\t\t\tUniformsLib.fog\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\r\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\r\n\r\n\t\t},\r\n\r\n\t\tbackground: {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tuvTransform: { value: new Matrix3() },\r\n\t\t\t\tt2D: { value: null },\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: ShaderChunk.background_vert,\r\n\t\t\tfragmentShader: ShaderChunk.background_frag\r\n\r\n\t\t},\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\r\n\t\tcube: {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\ttCube: { value: null },\r\n\t\t\t\ttFlip: { value: - 1 },\r\n\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: ShaderChunk.cube_vert,\r\n\t\t\tfragmentShader: ShaderChunk.cube_frag\r\n\r\n\t\t},\r\n\r\n\t\tequirect: {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\ttEquirect: { value: null },\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\r\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\r\n\r\n\t\t},\r\n\r\n\t\tdistanceRGBA: {\r\n\r\n\t\t\tuniforms: mergeUniforms( [\r\n\t\t\t\tUniformsLib.common,\r\n\t\t\t\tUniformsLib.displacementmap,\r\n\t\t\t\t{\r\n\t\t\t\t\treferencePosition: { value: new Vector3() },\r\n\t\t\t\t\tnearDistance: { value: 1 },\r\n\t\t\t\t\tfarDistance: { value: 1000 }\r\n\t\t\t\t}\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\r\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\r\n\r\n\t\t},\r\n\r\n\t\tshadow: {\r\n\r\n\t\t\tuniforms: mergeUniforms( [\r\n\t\t\t\tUniformsLib.lights,\r\n\t\t\t\tUniformsLib.fog,\r\n\t\t\t\t{\r\n\t\t\t\t\tcolor: { value: new Color( 0x00000 ) },\r\n\t\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t\t},\r\n\t\t\t] ),\r\n\r\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\r\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tShaderLib.physical = {\r\n\r\n\t\tuniforms: mergeUniforms( [\r\n\t\t\tShaderLib.standard.uniforms,\r\n\t\t\t{\r\n\t\t\t\tclearCoat: { value: 0 },\r\n\t\t\t\tclearCoatRoughness: { value: 0 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\r\n\t};\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLAnimation() {\r\n\r\n\t\tvar context = null;\r\n\t\tvar isAnimating = false;\r\n\t\tvar animationLoop = null;\r\n\r\n\t\tfunction onAnimationFrame( time, frame ) {\r\n\r\n\t\t\tif ( isAnimating === false ) return;\r\n\r\n\t\t\tanimationLoop( time, frame );\r\n\r\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tstart: function () {\r\n\r\n\t\t\t\tif ( isAnimating === true ) return;\r\n\t\t\t\tif ( animationLoop === null ) return;\r\n\r\n\t\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\r\n\r\n\t\t\t\tisAnimating = true;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tstop: function () {\r\n\r\n\t\t\t\tisAnimating = false;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetAnimationLoop: function ( callback ) {\r\n\r\n\t\t\t\tanimationLoop = callback;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetContext: function ( value ) {\r\n\r\n\t\t\t\tcontext = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLAttributes( gl ) {\r\n\r\n\t\tvar buffers = new WeakMap();\r\n\r\n\t\tfunction createBuffer( attribute, bufferType ) {\r\n\r\n\t\t\tvar array = attribute.array;\r\n\t\t\tvar usage = attribute.dynamic ? 35048 : 35044;\r\n\r\n\t\t\tvar buffer = gl.createBuffer();\r\n\r\n\t\t\tgl.bindBuffer( bufferType, buffer );\r\n\t\t\tgl.bufferData( bufferType, array, usage );\r\n\r\n\t\t\tattribute.onUploadCallback();\r\n\r\n\t\t\tvar type = 5126;\r\n\r\n\t\t\tif ( array instanceof Float32Array ) {\r\n\r\n\t\t\t\ttype = 5126;\r\n\r\n\t\t\t} else if ( array instanceof Float64Array ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\r\n\r\n\t\t\t} else if ( array instanceof Uint16Array ) {\r\n\r\n\t\t\t\ttype = 5123;\r\n\r\n\t\t\t} else if ( array instanceof Int16Array ) {\r\n\r\n\t\t\t\ttype = 5122;\r\n\r\n\t\t\t} else if ( array instanceof Uint32Array ) {\r\n\r\n\t\t\t\ttype = 5125;\r\n\r\n\t\t\t} else if ( array instanceof Int32Array ) {\r\n\r\n\t\t\t\ttype = 5124;\r\n\r\n\t\t\t} else if ( array instanceof Int8Array ) {\r\n\r\n\t\t\t\ttype = 5120;\r\n\r\n\t\t\t} else if ( array instanceof Uint8Array ) {\r\n\r\n\t\t\t\ttype = 5121;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tbuffer: buffer,\r\n\t\t\t\ttype: type,\r\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\r\n\t\t\t\tversion: attribute.version\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateBuffer( buffer, attribute, bufferType ) {\r\n\r\n\t\t\tvar array = attribute.array;\r\n\t\t\tvar updateRange = attribute.updateRange;\r\n\r\n\t\t\tgl.bindBuffer( bufferType, buffer );\r\n\r\n\t\t\tif ( attribute.dynamic === false ) {\r\n\r\n\t\t\t\tgl.bufferData( bufferType, array, 35044 );\r\n\r\n\t\t\t} else if ( updateRange.count === - 1 ) {\r\n\r\n\t\t\t\t// Not using update ranges\r\n\r\n\t\t\t\tgl.bufferSubData( bufferType, 0, array );\r\n\r\n\t\t\t} else if ( updateRange.count === 0 ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\r\n\r\n\t\t\t\tupdateRange.count = - 1; // reset range\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction get( attribute ) {\r\n\r\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\t\treturn buffers.get( attribute );\r\n\r\n\t\t}\r\n\r\n\t\tfunction remove( attribute ) {\r\n\r\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\t\tvar data = buffers.get( attribute );\r\n\r\n\t\t\tif ( data ) {\r\n\r\n\t\t\t\tgl.deleteBuffer( data.buffer );\r\n\r\n\t\t\t\tbuffers.delete( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction update( attribute, bufferType ) {\r\n\r\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\t\tvar data = buffers.get( attribute );\r\n\r\n\t\t\tif ( data === undefined ) {\r\n\r\n\t\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\r\n\r\n\t\t\t} else if ( data.version < attribute.version ) {\r\n\r\n\t\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\r\n\r\n\t\t\t\tdata.version = attribute.version;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tget: get,\r\n\t\t\tremove: remove,\r\n\t\t\tupdate: update\r\n\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\r\n\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\r\n\t\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\r\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n\t\tthis.color = ( color && color.isColor ) ? color : new Color();\r\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( Face3.prototype, {\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.a = source.a;\r\n\t\t\tthis.b = source.b;\r\n\t\t\tthis.c = source.c;\r\n\r\n\t\t\tthis.normal.copy( source.normal );\r\n\t\t\tthis.color.copy( source.color );\r\n\r\n\t\t\tthis.materialIndex = source.materialIndex;\r\n\r\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Euler( x, y, z, order ) {\r\n\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._order = order || Euler.DefaultOrder;\r\n\r\n\t}\r\n\r\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\n\tEuler.DefaultOrder = 'XYZ';\r\n\r\n\tObject.defineProperties( Euler.prototype, {\r\n\r\n\t\tx: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._x = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ty: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._y = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tz: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._z;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._z = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\torder: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._order;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._order = value;\r\n\t\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Euler.prototype, {\r\n\r\n\t\tisEuler: true,\r\n\r\n\t\tset: function ( x, y, z, order ) {\r\n\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order || this._order;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( euler ) {\r\n\r\n\t\t\tthis._x = euler._x;\r\n\t\t\tthis._y = euler._y;\r\n\t\t\tthis._z = euler._z;\r\n\t\t\tthis._order = euler._order;\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\t\tvar clamp = _Math.clamp;\r\n\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\t\tvar te = m.elements;\r\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\t\torder = order || this._order;\r\n\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._order = order;\r\n\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromQuaternion: function () {\r\n\r\n\t\t\tvar matrix = new Matrix4();\r\n\r\n\t\t\treturn function setFromQuaternion( q, order, update ) {\r\n\r\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\r\n\t\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t\t},\r\n\r\n\t\treorder: function () {\r\n\r\n\t\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\t\tvar q = new Quaternion();\r\n\r\n\t\t\treturn function reorder( newOrder ) {\r\n\r\n\t\t\t\tq.setFromEuler( this );\r\n\r\n\t\t\t\treturn this.setFromQuaternion( q, newOrder );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tequals: function ( euler ) {\r\n\r\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array ) {\r\n\r\n\t\t\tthis._x = array[ 0 ];\r\n\t\t\tthis._y = array[ 1 ];\r\n\t\t\tthis._z = array[ 2 ];\r\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\t\tthis.onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\t\tif ( optionalResult ) {\r\n\r\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tonChange: function ( callback ) {\r\n\r\n\t\t\tthis.onChangeCallback = callback;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tonChangeCallback: function () {}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Layers() {\r\n\r\n\t\tthis.mask = 1 | 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( Layers.prototype, {\r\n\r\n\t\tset: function ( channel ) {\r\n\r\n\t\t\tthis.mask = 1 << channel | 0;\r\n\r\n\t\t},\r\n\r\n\t\tenable: function ( channel ) {\r\n\r\n\t\t\tthis.mask |= 1 << channel | 0;\r\n\r\n\t\t},\r\n\r\n\t\ttoggle: function ( channel ) {\r\n\r\n\t\t\tthis.mask ^= 1 << channel | 0;\r\n\r\n\t\t},\r\n\r\n\t\tdisable: function ( channel ) {\r\n\r\n\t\t\tthis.mask &= ~ ( 1 << channel | 0 );\r\n\r\n\t\t},\r\n\r\n\t\ttest: function ( layers ) {\r\n\r\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author elephantatwork / www.elephantatwork.ch\r\n\t */\r\n\r\n\tvar object3DId = 0;\r\n\r\n\tfunction Object3D() {\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Object3D';\r\n\r\n\t\tthis.parent = null;\r\n\t\tthis.children = [];\r\n\r\n\t\tthis.up = Object3D.DefaultUp.clone();\r\n\r\n\t\tvar position = new Vector3();\r\n\t\tvar rotation = new Euler();\r\n\t\tvar quaternion = new Quaternion();\r\n\t\tvar scale = new Vector3( 1, 1, 1 );\r\n\r\n\t\tfunction onRotationChange() {\r\n\r\n\t\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onQuaternionChange() {\r\n\r\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t\t}\r\n\r\n\t\trotation.onChange( onRotationChange );\r\n\t\tquaternion.onChange( onQuaternionChange );\r\n\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tposition: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: position\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: rotation\r\n\t\t\t},\r\n\t\t\tquaternion: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: quaternion\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: scale\r\n\t\t\t},\r\n\t\t\tmodelViewMatrix: {\r\n\t\t\t\tvalue: new Matrix4()\r\n\t\t\t},\r\n\t\t\tnormalMatrix: {\r\n\t\t\t\tvalue: new Matrix3()\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.matrix = new Matrix4();\r\n\t\tthis.matrixWorld = new Matrix4();\r\n\r\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\tthis.layers = new Layers();\r\n\t\tthis.visible = true;\r\n\r\n\t\tthis.castShadow = false;\r\n\t\tthis.receiveShadow = false;\r\n\r\n\t\tthis.frustumCulled = true;\r\n\t\tthis.renderOrder = 0;\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t}\r\n\r\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\r\n\tObject3D.DefaultMatrixAutoUpdate = true;\r\n\r\n\tObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: Object3D,\r\n\r\n\t\tisObject3D: true,\r\n\r\n\t\tonBeforeRender: function () {},\r\n\t\tonAfterRender: function () {},\r\n\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t\t},\r\n\r\n\t\tapplyQuaternion: function ( q ) {\r\n\r\n\t\t\tthis.quaternion.premultiply( q );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t\t// assumes axis is normalized\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t\t},\r\n\r\n\t\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t\t},\r\n\r\n\t\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t\t},\r\n\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t\t// assumes q is normalized\r\n\r\n\t\t\tthis.quaternion.copy( q );\r\n\r\n\t\t},\r\n\r\n\t\trotateOnAxis: function () {\r\n\r\n\t\t\t// rotate object on axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\r\n\t\t\tvar q1 = new Quaternion();\r\n\r\n\t\t\treturn function rotateOnAxis( axis, angle ) {\r\n\r\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateOnWorldAxis: function () {\r\n\r\n\t\t\t// rotate object on axis in world space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\t\t// method assumes no rotated parent\r\n\r\n\t\t\tvar q1 = new Quaternion();\r\n\r\n\t\t\treturn function rotateOnWorldAxis( axis, angle ) {\r\n\r\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\t\tthis.quaternion.premultiply( q1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateX: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\r\n\r\n\t\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateY: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\r\n\r\n\t\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateZ: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\r\n\r\n\t\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslateOnAxis: function () {\r\n\r\n\t\t\t// translate object by distance along axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function translateOnAxis( axis, distance ) {\r\n\r\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslateX: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 1, 0, 0 );\r\n\r\n\t\t\treturn function translateX( distance ) {\r\n\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslateY: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 0, 1, 0 );\r\n\r\n\t\t\treturn function translateY( distance ) {\r\n\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslateZ: function () {\r\n\r\n\t\t\tvar v1 = new Vector3( 0, 0, 1 );\r\n\r\n\t\t\treturn function translateZ( distance ) {\r\n\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tlocalToWorld: function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t},\r\n\r\n\t\tworldToLocal: function () {\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function worldToLocal( vector ) {\r\n\r\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tlookAt: function () {\r\n\r\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\r\n\r\n\t\t\tvar q1 = new Quaternion();\r\n\t\t\tvar m1 = new Matrix4();\r\n\t\t\tvar target = new Vector3();\r\n\t\t\tvar position = new Vector3();\r\n\r\n\t\t\treturn function lookAt( x, y, z ) {\r\n\r\n\t\t\t\tif ( x.isVector3 ) {\r\n\r\n\t\t\t\t\ttarget.copy( x );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttarget.set( x, y, z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar parent = this.parent;\r\n\r\n\t\t\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\t\tif ( this.isCamera || this.isLight ) {\r\n\r\n\t\t\t\t\tm1.lookAt( position, target, this.up );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tm1.lookAt( target, position, this.up );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t\t\tif ( parent ) {\r\n\r\n\t\t\t\t\tm1.extractRotation( parent.matrixWorld );\r\n\t\t\t\t\tq1.setFromRotationMatrix( m1 );\r\n\t\t\t\t\tthis.quaternion.premultiply( q1.inverse() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tadd: function ( object ) {\r\n\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object === this ) {\r\n\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( object && object.isObject3D ) ) {\r\n\r\n\t\t\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobject.parent = this;\r\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\t\tthis.children.push( object );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tremove: function ( object ) {\r\n\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tobject.parent = null;\r\n\r\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetObjectById: function ( id ) {\r\n\r\n\t\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t\t},\r\n\r\n\t\tgetObjectByName: function ( name ) {\r\n\r\n\t\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t\t},\r\n\r\n\t\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\t\treturn object;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn undefined;\r\n\r\n\t\t},\r\n\r\n\t\tgetWorldPosition: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\treturn target.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t},\r\n\r\n\t\tgetWorldQuaternion: function () {\r\n\r\n\t\t\tvar position = new Vector3();\r\n\t\t\tvar scale = new Vector3();\r\n\r\n\t\t\treturn function getWorldQuaternion( target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\r\n\t\t\t\t\ttarget = new Quaternion();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\t\tthis.matrixWorld.decompose( position, target, scale );\r\n\r\n\t\t\t\treturn target;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tgetWorldScale: function () {\r\n\r\n\t\t\tvar position = new Vector3();\r\n\t\t\tvar quaternion = new Quaternion();\r\n\r\n\t\t\treturn function getWorldScale( target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\r\n\t\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\r\n\r\n\t\t\t\treturn target;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tgetWorldDirection: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tvar e = this.matrixWorld.elements;\r\n\r\n\t\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\r\n\r\n\t\t},\r\n\r\n\t\traycast: function () {},\r\n\r\n\t\ttraverse: function ( callback ) {\r\n\r\n\t\t\tcallback( this );\r\n\r\n\t\t\tvar children = this.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ttraverseVisible: function ( callback ) {\r\n\r\n\t\t\tif ( this.visible === false ) return;\r\n\r\n\t\t\tcallback( this );\r\n\r\n\t\t\tvar children = this.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\t\tvar parent = this.parent;\r\n\r\n\t\t\tif ( parent !== null ) {\r\n\r\n\t\t\t\tcallback( parent );\r\n\r\n\t\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrix: function () {\r\n\r\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\r\n\r\n\t\t\tif ( this.matrixWorldNeedsUpdate || force ) {\r\n\r\n\t\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\t\tforce = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update children\r\n\r\n\t\t\tvar children = this.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\r\n\r\n\t\t\tvar parent = this.parent;\r\n\r\n\t\t\tif ( updateParents === true && parent !== null ) {\r\n\r\n\t\t\t\tparent.updateWorldMatrix( true, false );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update children\r\n\r\n\t\t\tif ( updateChildren === true ) {\r\n\r\n\t\t\t\tvar children = this.children;\r\n\r\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\t// meta is a string when called from JSON.stringify\r\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\t\tvar output = {};\r\n\r\n\t\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t\t// not providing it implies that this is the root object\r\n\t\t\t// being serialized.\r\n\t\t\tif ( isRootObject ) {\r\n\r\n\t\t\t\t// initialize meta obj\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\tgeometries: {},\r\n\t\t\t\t\tmaterials: {},\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {},\r\n\t\t\t\t\tshapes: {}\r\n\t\t\t\t};\r\n\r\n\t\t\t\toutput.metadata = {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Object',\r\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// standard Object3D serialization\r\n\r\n\t\t\tvar object = {};\r\n\r\n\t\t\tobject.uuid = this.uuid;\r\n\t\t\tobject.type = this.type;\r\n\r\n\t\t\tif ( this.name !== '' ) object.name = this.name;\r\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\r\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\r\n\t\t\tif ( this.visible === false ) object.visible = false;\r\n\t\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\r\n\t\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\r\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\r\n\r\n\t\t\tobject.layers = this.layers.mask;\r\n\t\t\tobject.matrix = this.matrix.toArray();\r\n\r\n\t\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\r\n\r\n\t\t\t// object specific properties\r\n\r\n\t\t\tif ( this.isMesh && this.drawMode !== TrianglesDrawMode ) object.drawMode = this.drawMode;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tfunction serialize( library, element ) {\r\n\r\n\t\t\t\tif ( library[ element.uuid ] === undefined ) {\r\n\r\n\t\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn element.uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\r\n\r\n\t\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\r\n\r\n\t\t\t\tvar parameters = this.geometry.parameters;\r\n\r\n\t\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\r\n\r\n\t\t\t\t\tvar shapes = parameters.shapes;\r\n\r\n\t\t\t\t\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar shape = shapes[ i ];\r\n\r\n\t\t\t\t\t\t\tserialize( meta.shapes, shape );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tserialize( meta.shapes, shapes );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.material !== undefined ) {\r\n\r\n\t\t\t\tif ( Array.isArray( this.material ) ) {\r\n\r\n\t\t\t\t\tvar uuids = [];\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject.material = uuids;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tobject.material = serialize( meta.materials, this.material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\t\tobject.children = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isRootObject ) {\r\n\r\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\t\t\t\tvar shapes = extractFromCache( meta.shapes );\r\n\r\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) output.images = images;\r\n\t\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.object = object;\r\n\r\n\t\t\treturn output;\r\n\r\n\t\t\t// extract data from the cache hash\r\n\t\t\t// remove metadata on each item\r\n\t\t\t// and return as array\r\n\t\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\t\tvar values = [];\r\n\t\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclone: function ( recursive ) {\r\n\r\n\t\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source, recursive ) {\r\n\r\n\t\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\t\tthis.name = source.name;\r\n\r\n\t\t\tthis.up.copy( source.up );\r\n\r\n\t\t\tthis.position.copy( source.position );\r\n\t\t\tthis.quaternion.copy( source.quaternion );\r\n\t\t\tthis.scale.copy( source.scale );\r\n\r\n\t\t\tthis.matrix.copy( source.matrix );\r\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\t\tthis.layers.mask = source.layers.mask;\r\n\t\t\tthis.visible = source.visible;\r\n\r\n\t\t\tthis.castShadow = source.castShadow;\r\n\t\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\t\tif ( recursive === true ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author kile / http://kile.stravaganza.org/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tvar geometryId = 0; // Geometry uses even numbers as Id\r\n\r\n\tfunction Geometry() {\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Geometry';\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [[]];\r\n\r\n\t\tthis.morphTargets = [];\r\n\t\tthis.morphNormals = [];\r\n\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\r\n\t\tthis.lineDistances = [];\r\n\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\t// update flags\r\n\r\n\t\tthis.elementsNeedUpdate = false;\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.lineDistancesNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\r\n\t}\r\n\r\n\tGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: Geometry,\r\n\r\n\t\tisGeometry: true,\r\n\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.verticesNeedUpdate = true;\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\trotateX: function () {\r\n\r\n\t\t\t// rotate geometry around world x-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateY: function () {\r\n\r\n\t\t\t// rotate geometry around world y-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateZ: function () {\r\n\r\n\t\t\t// rotate geometry around world z-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslate: function () {\r\n\r\n\t\t\t// translate geometry\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tscale: function () {\r\n\r\n\t\t\t// scale geometry\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tlookAt: function () {\r\n\r\n\t\t\tvar obj = new Object3D();\r\n\r\n\t\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\t\tobj.updateMatrix();\r\n\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n\t\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\r\n\r\n\t\t\t\tscope.vertices.push( new Vector3().fromArray( positions, i ) );\r\n\r\n\t\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\t\tscope.colors.push( new Color().fromArray( colors, i ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\r\n\r\n\t\t\t\tvar vertexColors = ( colors === undefined ) ? [] : [\r\n\t\t\t\t\tscope.colors[ a ].clone(),\r\n\t\t\t\t\tscope.colors[ b ].clone(),\r\n\t\t\t\t\tscope.colors[ c ].clone() ];\r\n\r\n\t\t\t\tvar vertexNormals = ( normals === undefined ) ? [] : [\r\n\t\t\t\t\tnew Vector3().fromArray( normals, a * 3 ),\r\n\t\t\t\t\tnew Vector3().fromArray( normals, b * 3 ),\r\n\t\t\t\t\tnew Vector3().fromArray( normals, c * 3 )\r\n\t\t\t\t];\r\n\r\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\r\n\t\t\t\t\t\tnew Vector2().fromArray( uvs, a * 2 ),\r\n\t\t\t\t\t\tnew Vector2().fromArray( uvs, b * 2 ),\r\n\t\t\t\t\t\tnew Vector2().fromArray( uvs, c * 2 )\r\n\t\t\t\t\t] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\r\n\t\t\t\t\t\tnew Vector2().fromArray( uvs2, a * 2 ),\r\n\t\t\t\t\t\tnew Vector2().fromArray( uvs2, b * 2 ),\r\n\t\t\t\t\t\tnew Vector2().fromArray( uvs2, c * 2 )\r\n\t\t\t\t\t] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.computeFaceNormals();\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcenter: function () {\r\n\r\n\t\t\tvar offset = new Vector3();\r\n\r\n\t\t\treturn function center() {\r\n\r\n\t\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t\t\tthis.boundingBox.getCenter( offset ).negate();\r\n\r\n\t\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t\tvar center = this.boundingSphere.center;\r\n\t\t\tvar radius = this.boundingSphere.radius;\r\n\r\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n\t\t\tvar matrix = new Matrix4();\r\n\t\t\tmatrix.set(\r\n\t\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\r\n\t\t\tthis.applyMatrix( matrix );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcomputeFaceNormals: function () {\r\n\r\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\r\n\r\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tcb.normalize();\r\n\r\n\t\t\t\tface.normal.copy( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\r\n\r\n\t\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\t\tvertices[ v ] = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\t\tvar vA, vB, vC;\r\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.computeFaceNormals();\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.faces.length > 0 ) {\r\n\r\n\t\t\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcomputeFlatVertexNormals: function () {\r\n\r\n\t\t\tvar f, fl, face;\r\n\r\n\t\t\tthis.computeFaceNormals();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\r\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\r\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\r\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\r\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.faces.length > 0 ) {\r\n\r\n\t\t\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcomputeMorphNormals: function () {\r\n\r\n\t\t\tvar i, il, f, fl, face;\r\n\r\n\t\t\t// save original normals\r\n\t\t\t// - create temp variables on first access\r\n\t\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\t\tvar tmpGeo = new Geometry();\r\n\t\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t// create on first access\r\n\r\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\tfaceNormal = new Vector3();\r\n\t\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\r\n\r\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t\t// set vertices to morph target\r\n\r\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t// compute morph normals\r\n\r\n\t\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t\t// store morph normals\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// restore original normals\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcomputeBoundingBox: function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t\t},\r\n\r\n\t\tcomputeBoundingSphere: function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t\t},\r\n\r\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normalMatrix,\r\n\t\t\t\tvertexOffset = this.vertices.length,\r\n\t\t\t\tvertices1 = this.vertices,\r\n\t\t\t\tvertices2 = geometry.vertices,\r\n\t\t\t\tfaces1 = this.faces,\r\n\t\t\t\tfaces2 = geometry.faces,\r\n\t\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\r\n\t\t\t\tcolors1 = this.colors,\r\n\t\t\t\tcolors2 = geometry.colors;\r\n\r\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// vertices\r\n\r\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tcolors1.push( colors2[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// faces\r\n\r\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// uvs\r\n\r\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tmergeMesh: function ( mesh ) {\r\n\r\n\t\t\tif ( ! ( mesh && mesh.isMesh ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\r\n\r\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t * Checks for duplicate vertices with hashmap.\r\n\t\t * Duplicated vertices are removed\r\n\t\t * and faces' vertices are updated.\r\n\t\t */\r\n\r\n\t\tmergeVertices: function () {\r\n\r\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\t\tvar unique = [], changes = [];\r\n\r\n\t\t\tvar v, key;\r\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\t\tvar i, il, face;\r\n\t\t\tvar indices, j, jl;\r\n\r\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tv = this.vertices[ i ];\r\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t\t// have to remove them from the geometry.\r\n\t\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\t\tface.a = changes[ face.a ];\r\n\t\t\t\tface.b = changes[ face.b ];\r\n\t\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Use unique set of vertices\r\n\r\n\t\t\tvar diff = this.vertices.length - unique.length;\r\n\t\t\tthis.vertices = unique;\r\n\t\t\treturn diff;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPoints: function ( points ) {\r\n\r\n\t\t\tthis.vertices = [];\r\n\r\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar point = points[ i ];\r\n\t\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsortFacesByMaterialIndex: function () {\r\n\r\n\t\t\tvar faces = this.faces;\r\n\t\t\tvar length = faces.length;\r\n\r\n\t\t\t// tag faces\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tfaces[ i ]._id = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// sort faces\r\n\r\n\t\t\tfunction materialIndexSort( a, b ) {\r\n\r\n\t\t\t\treturn a.materialIndex - b.materialIndex;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaces.sort( materialIndexSort );\r\n\r\n\t\t\t// sort uvs\r\n\r\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\r\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\r\n\r\n\t\t\tvar newUvs1, newUvs2;\r\n\r\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\r\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tvar id = faces[ i ]._id;\r\n\r\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\r\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\r\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Geometry',\r\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// standard Geometry serialization\r\n\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar vertices = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar faces = [];\r\n\t\t\tvar normals = [];\r\n\t\t\tvar normalsHash = {};\r\n\t\t\tvar colors = [];\r\n\t\t\tvar colorsHash = {};\r\n\t\t\tvar uvs = [];\r\n\t\t\tvar uvsHash = {};\r\n\r\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\t\tvar hasMaterial = true;\r\n\t\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\t\tvar faceType = 0;\r\n\r\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\r\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\t\tfaces.push( faceType );\r\n\t\t\t\tfaces.push( face.a, face.b, face.c );\r\n\t\t\t\tfaces.push( face.materialIndex );\r\n\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdata.data = {};\r\n\r\n\t\t\tdata.data.vertices = vertices;\r\n\t\t\tdata.data.normals = normals;\r\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\t\tdata.data.faces = faces;\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\t/*\r\n\t\t\t // Handle primitives\r\n\r\n\t\t\t var parameters = this.parameters;\r\n\r\n\t\t\t if ( parameters !== undefined ) {\r\n\r\n\t\t\t var values = [];\r\n\r\n\t\t\t for ( var key in parameters ) {\r\n\r\n\t\t\t values.push( parameters[ key ] );\r\n\r\n\t\t\t }\r\n\r\n\t\t\t var geometry = Object.create( this.constructor.prototype );\r\n\t\t\t this.constructor.apply( geometry, values );\r\n\t\t\t return geometry;\r\n\r\n\t\t\t }\r\n\r\n\t\t\t return new this.constructor().copy( this );\r\n\t\t\t */\r\n\r\n\t\t\treturn new Geometry().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tvar i, il, j, jl, k, kl;\r\n\r\n\t\t\t// reset\r\n\r\n\t\t\tthis.vertices = [];\r\n\t\t\tthis.colors = [];\r\n\t\t\tthis.faces = [];\r\n\t\t\tthis.faceVertexUvs = [[]];\r\n\t\t\tthis.morphTargets = [];\r\n\t\t\tthis.morphNormals = [];\r\n\t\t\tthis.skinWeights = [];\r\n\t\t\tthis.skinIndices = [];\r\n\t\t\tthis.lineDistances = [];\r\n\t\t\tthis.boundingBox = null;\r\n\t\t\tthis.boundingSphere = null;\r\n\r\n\t\t\t// name\r\n\r\n\t\t\tthis.name = source.name;\r\n\r\n\t\t\t// vertices\r\n\r\n\t\t\tvar vertices = source.vertices;\r\n\r\n\t\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tvar colors = source.colors;\r\n\r\n\t\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.colors.push( colors[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// faces\r\n\r\n\t\t\tvar faces = source.faces;\r\n\r\n\t\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// face vertex uvs\r\n\r\n\t\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morph targets\r\n\r\n\t\t\tvar morphTargets = source.morphTargets;\r\n\r\n\t\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = {};\r\n\t\t\t\tmorphTarget.name = morphTargets[ i ].name;\r\n\r\n\t\t\t\t// vertices\r\n\r\n\t\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\r\n\r\n\t\t\t\t\tmorphTarget.vertices = [];\r\n\r\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// normals\r\n\r\n\t\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\r\n\r\n\t\t\t\t\tmorphTarget.normals = [];\r\n\r\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphTargets.push( morphTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morph normals\r\n\r\n\t\t\tvar morphNormals = source.morphNormals;\r\n\r\n\t\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar morphNormal = {};\r\n\r\n\t\t\t\t// vertex normals\r\n\r\n\t\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\r\n\r\n\t\t\t\t\tmorphNormal.vertexNormals = [];\r\n\r\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\r\n\t\t\t\t\t\tvar destVertexNormal = {};\r\n\r\n\t\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\r\n\t\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\r\n\t\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\r\n\r\n\t\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// face normals\r\n\r\n\t\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\r\n\r\n\t\t\t\t\tmorphNormal.faceNormals = [];\r\n\r\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphNormals.push( morphNormal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skin weights\r\n\r\n\t\t\tvar skinWeights = source.skinWeights;\r\n\r\n\t\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skin indices\r\n\r\n\t\t\tvar skinIndices = source.skinIndices;\r\n\r\n\t\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// line distances\r\n\r\n\t\t\tvar lineDistances = source.lineDistances;\r\n\r\n\t\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.lineDistances.push( lineDistances[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bounding box\r\n\r\n\t\t\tvar boundingBox = source.boundingBox;\r\n\r\n\t\t\tif ( boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bounding sphere\r\n\r\n\t\t\tvar boundingSphere = source.boundingSphere;\r\n\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update flags\r\n\r\n\t\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\r\n\t\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\r\n\t\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\r\n\t\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\r\n\t\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\r\n\t\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\r\n\t\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tif ( Array.isArray( array ) ) {\r\n\r\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.array = array;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\r\n\t\tthis.normalized = normalized === true;\r\n\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t}\r\n\r\n\tObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tif ( value === true ) this.version ++;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( BufferAttribute.prototype, {\r\n\r\n\t\tisBufferAttribute: true,\r\n\r\n\t\tonUploadCallback: function () {},\r\n\r\n\t\tsetArray: function ( array ) {\r\n\r\n\t\t\tif ( Array.isArray( array ) ) {\r\n\r\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\r\n\t\t\tthis.array = array;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetDynamic: function ( value ) {\r\n\r\n\t\t\tthis.dynamic = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.name = source.name;\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.itemSize = source.itemSize;\r\n\t\t\tthis.count = source.count;\r\n\t\t\tthis.normalized = source.normalized;\r\n\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\t\tindex1 *= this.itemSize;\r\n\t\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyArray: function ( array ) {\r\n\r\n\t\t\tthis.array.set( array );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyColorsArray: function ( colors ) {\r\n\r\n\t\t\tvar array = this.array, offset = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar color = colors[ i ];\r\n\r\n\t\t\t\tif ( color === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\t\tcolor = new Color();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\t\tarray[ offset ++ ] = color.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyVector2sArray: function ( vectors ) {\r\n\r\n\t\t\tvar array = this.array, offset = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new Vector2();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyVector3sArray: function ( vectors ) {\r\n\r\n\t\t\tvar array = this.array, offset = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyVector4sArray: function ( vectors ) {\r\n\r\n\t\t\tvar array = this.array, offset = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new Vector4();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tset: function ( value, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.array.set( value, offset );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetX: function ( index ) {\r\n\r\n\t\t\treturn this.array[ index * this.itemSize ];\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( index, x ) {\r\n\r\n\t\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetY: function ( index ) {\r\n\r\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( index, y ) {\r\n\r\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetZ: function ( index ) {\r\n\r\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n\t\t},\r\n\r\n\t\tsetZ: function ( index, z ) {\r\n\r\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetW: function ( index ) {\r\n\r\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n\t\t},\r\n\r\n\t\tsetW: function ( index, w ) {\r\n\r\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetXY: function ( index, x, y ) {\r\n\r\n\t\t\tindex *= this.itemSize;\r\n\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\t\tindex *= this.itemSize;\r\n\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\t\tindex *= this.itemSize;\r\n\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tonUpload: function ( callback ) {\r\n\r\n\t\t\tthis.onUploadCallback = callback;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tfunction Int8BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\r\n\r\n\r\n\tfunction Uint8BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\r\n\r\n\r\n\tfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\r\n\r\n\r\n\tfunction Int16BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\r\n\r\n\r\n\tfunction Uint16BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\r\n\r\n\r\n\tfunction Int32BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\r\n\r\n\r\n\tfunction Uint32BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\r\n\r\n\r\n\tfunction Float32BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\r\n\r\n\r\n\tfunction Float64BufferAttribute( array, itemSize, normalized ) {\r\n\r\n\t\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n\tFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction DirectGeometry() {\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.normals = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.uvs = [];\r\n\t\tthis.uvs2 = [];\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t\tthis.morphTargets = {};\r\n\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\r\n\t\t// this.lineDistances = [];\r\n\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\t// update flags\r\n\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\r\n\t}\r\n\r\n\tObject.assign( DirectGeometry.prototype, {\r\n\r\n\t\tcomputeGroups: function ( geometry ) {\r\n\r\n\t\t\tvar group;\r\n\t\t\tvar groups = [];\r\n\t\t\tvar materialIndex = undefined;\r\n\r\n\t\t\tvar faces = geometry.faces;\r\n\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\t// materials\r\n\r\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n\t\t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n\t\t\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgroup = {\r\n\t\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.groups = groups;\r\n\r\n\t\t},\r\n\r\n\t\tfromGeometry: function ( geometry ) {\r\n\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n\t\t\tvar morphTargetsPosition;\r\n\r\n\t\t\tif ( morphTargetsLength > 0 ) {\r\n\r\n\t\t\t\tmorphTargetsPosition = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n\t\t\t\t\tmorphTargetsPosition[ i ] = {\r\n\t\t\t\t\t\tname: morphTargets[ i ].name,\r\n\t\t\t\t\t \tdata: []\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = geometry.morphNormals;\r\n\t\t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n\t\t\tvar morphTargetsNormal;\r\n\r\n\t\t\tif ( morphNormalsLength > 0 ) {\r\n\r\n\t\t\t\tmorphTargetsNormal = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n\t\t\t\t\tmorphTargetsNormal[ i ] = {\r\n\t\t\t\t\t\tname: morphNormals[ i ].name,\r\n\t\t\t\t\t \tdata: []\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skins\r\n\r\n\t\t\tvar skinIndices = geometry.skinIndices;\r\n\t\t\tvar skinWeights = geometry.skinWeights;\r\n\r\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( vertices.length > 0 && faces.length === 0 ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar color = face.color;\r\n\r\n\t\t\t\t\tthis.colors.push( color, color, color );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// morphs\r\n\r\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n\t\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n\t\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// skins\r\n\r\n\t\t\t\tif ( hasSkinIndices ) {\r\n\r\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasSkinWeights ) {\r\n\r\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.computeGroups( geometry );\r\n\r\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction arrayMax( array ) {\r\n\r\n\t\tif ( array.length === 0 ) return - Infinity;\r\n\r\n\t\tvar max = array[ 0 ];\r\n\r\n\t\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\r\n\r\n\t\t\tif ( array[ i ] > max ) max = array[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn max;\r\n\r\n\t}\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\r\n\r\n\tfunction BufferGeometry() {\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'BufferGeometry';\r\n\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\r\n\t\tthis.morphAttributes = {};\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t}\r\n\r\n\tBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: BufferGeometry,\r\n\r\n\t\tisBufferGeometry: true,\r\n\r\n\t\tgetIndex: function () {\r\n\r\n\t\t\treturn this.index;\r\n\r\n\t\t},\r\n\r\n\t\tsetIndex: function ( index ) {\r\n\r\n\t\t\tif ( Array.isArray( index ) ) {\r\n\r\n\t\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.index = index;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( name === 'index' ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\t\tthis.setIndex( attribute );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetAttribute: function ( name ) {\r\n\r\n\t\t\treturn this.attributes[ name ];\r\n\r\n\t\t},\r\n\r\n\t\tremoveAttribute: function ( name ) {\r\n\r\n\t\t\tdelete this.attributes[ name ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddGroup: function ( start, count, materialIndex ) {\r\n\r\n\t\t\tthis.groups.push( {\r\n\r\n\t\t\t\tstart: start,\r\n\t\t\t\tcount: count,\r\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n\t\t\t} );\r\n\r\n\t\t},\r\n\r\n\t\tclearGroups: function () {\r\n\r\n\t\t\tthis.groups = [];\r\n\r\n\t\t},\r\n\r\n\t\tsetDrawRange: function ( start, count ) {\r\n\r\n\t\t\tthis.drawRange.start = start;\r\n\t\t\tthis.drawRange.count = count;\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\t\tvar position = this.attributes.position;\r\n\r\n\t\t\tif ( position !== undefined ) {\r\n\r\n\t\t\t\tmatrix.applyToBufferAttribute( position );\r\n\t\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normal = this.attributes.normal;\r\n\r\n\t\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\t\tnormalMatrix.applyToBufferAttribute( normal );\r\n\t\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar tangent = this.attributes.tangent;\r\n\r\n\t\t\tif ( tangent !== undefined ) {\r\n\r\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\t\t// Tangent is vec4, but the '.w' component is a sign value (+1/-1).\r\n\t\t\t\tnormalMatrix.applyToBufferAttribute( tangent );\r\n\t\t\t\ttangent.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\trotateX: function () {\r\n\r\n\t\t\t// rotate geometry around world x-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateY: function () {\r\n\r\n\t\t\t// rotate geometry around world y-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\trotateZ: function () {\r\n\r\n\t\t\t// rotate geometry around world z-axis\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttranslate: function () {\r\n\r\n\t\t\t// translate geometry\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tscale: function () {\r\n\r\n\t\t\t// scale geometry\r\n\r\n\t\t\tvar m1 = new Matrix4();\r\n\r\n\t\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tlookAt: function () {\r\n\r\n\t\t\tvar obj = new Object3D();\r\n\r\n\t\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\t\tobj.updateMatrix();\r\n\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcenter: function () {\r\n\r\n\t\t\tvar offset = new Vector3();\r\n\r\n\t\t\treturn function center() {\r\n\r\n\t\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t\t\tthis.boundingBox.getCenter( offset ).negate();\r\n\r\n\t\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tsetFromObject: function ( object ) {\r\n\r\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( object.isPoints || object.isLine ) {\r\n\r\n\t\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\r\n\t\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\r\n\r\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n\t\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\r\n\r\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.isMesh ) {\r\n\r\n\t\t\t\tif ( geometry && geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tthis.fromGeometry( geometry );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPoints: function ( points ) {\r\n\r\n\t\t\tvar position = [];\r\n\r\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar point = points[ i ];\r\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tupdateFromObject: function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( object.isMesh ) {\r\n\r\n\t\t\t\tvar direct = geometry.__directGeometry;\r\n\r\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\r\n\r\n\t\t\t\t\tdirect = undefined;\r\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( direct === undefined ) {\r\n\r\n\t\t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\t\tgeometry = direct;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attribute;\r\n\r\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n\t\t\t\tattribute = this.attributes.position;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n\t\t\t\tattribute = this.attributes.normal;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n\t\t\t\tattribute = this.attributes.color;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.uvsNeedUpdate ) {\r\n\r\n\t\t\t\tattribute = this.attributes.uv;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n\t\t\t\tattribute = this.attributes.lineDistance;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n\t\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tfromGeometry: function ( geometry ) {\r\n\r\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\r\n\r\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n\t\t},\r\n\r\n\t\tfromDirectGeometry: function ( geometry ) {\r\n\r\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n\t\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// groups\r\n\r\n\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n\t\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\r\n\t\t\t\t\tattribute.name = morphTarget.name;\r\n\r\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skinning\r\n\r\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n\t\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n\t\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcomputeBoundingBox: function () {\r\n\r\n\t\t\tvar box = new Box3();\r\n\r\n\t\t\treturn function computeBoundingBox() {\r\n\r\n\t\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = this.attributes.position;\r\n\t\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\r\n\r\n\t\t\t\tif ( position !== undefined ) {\r\n\r\n\t\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\r\n\r\n\t\t\t\t\t// process morph attributes if present\r\n\r\n\t\t\t\t\tif ( morphAttributesPosition ) {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\r\n\t\t\t\t\t\t\tbox.setFromBufferAttribute( morphAttribute );\r\n\r\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( box.min );\r\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( box.max );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.boundingBox.makeEmpty();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcomputeBoundingSphere: function () {\r\n\r\n\t\t\tvar box = new Box3();\r\n\t\t\tvar boxMorphTargets = new Box3();\r\n\t\t\tvar vector = new Vector3();\r\n\r\n\t\t\treturn function computeBoundingSphere() {\r\n\r\n\t\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = this.attributes.position;\r\n\t\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\r\n\r\n\t\t\t\tif ( position ) {\r\n\r\n\t\t\t\t\t// first, find the center of the bounding sphere\r\n\r\n\t\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\t\tbox.setFromBufferAttribute( position );\r\n\r\n\t\t\t\t\t// process morph attributes if present\r\n\r\n\t\t\t\t\tif ( morphAttributesPosition ) {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\r\n\t\t\t\t\t\t\tboxMorphTargets.setFromBufferAttribute( morphAttribute );\r\n\r\n\t\t\t\t\t\t\tbox.expandByPoint( boxMorphTargets.min );\r\n\t\t\t\t\t\t\tbox.expandByPoint( boxMorphTargets.max );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbox.getCenter( center );\r\n\r\n\t\t\t\t\t// second, try to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvector.fromBufferAttribute( position, i );\r\n\r\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// process morph attributes if present\r\n\r\n\t\t\t\t\tif ( morphAttributesPosition ) {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\r\n\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvector.fromBufferAttribute( morphAttribute, i );\r\n\r\n\t\t\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcomputeFaceNormals: function () {\r\n\r\n\t\t\t// backwards compatibility\r\n\r\n\t\t},\r\n\r\n\t\tcomputeVertexNormals: function () {\r\n\r\n\t\t\tvar index = this.index;\r\n\t\t\tvar attributes = this.attributes;\r\n\r\n\t\t\tif ( attributes.position ) {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\t\tvar array = attributes.normal.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tarray[ i ] = 0;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\tvar vA, vB, vC;\r\n\t\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\r\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\r\n\r\n\t\t\t\t// indexed elements\r\n\r\n\t\t\t\tif ( index ) {\r\n\r\n\t\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tmerge: function ( geometry, offset ) {\r\n\r\n\t\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset === undefined ) {\r\n\r\n\t\t\t\toffset = 0;\r\n\r\n\t\t\t\tconsole.warn(\r\n\t\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\r\n\t\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attributes = this.attributes;\r\n\r\n\t\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnormalizeNormals: function () {\r\n\r\n\t\t\tvar vector = new Vector3();\r\n\r\n\t\t\treturn function normalizeNormals() {\r\n\r\n\t\t\t\tvar normals = this.attributes.normal;\r\n\r\n\t\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvector.x = normals.getX( i );\r\n\t\t\t\t\tvector.y = normals.getY( i );\r\n\t\t\t\t\tvector.z = normals.getZ( i );\r\n\r\n\t\t\t\t\tvector.normalize();\r\n\r\n\t\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttoNonIndexed: function () {\r\n\r\n\t\t\tfunction convertBufferAttribute( attribute, indices ) {\r\n\r\n\t\t\t\tvar array = attribute.array;\r\n\t\t\t\tvar itemSize = attribute.itemSize;\r\n\r\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\r\n\r\n\t\t\t\tvar index = 0, index2 = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tindex = indices[ i ] * itemSize;\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\r\n\r\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new BufferAttribute( array2, itemSize );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( this.index === null ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar geometry2 = new BufferGeometry();\r\n\r\n\t\t\tvar indices = this.index.array;\r\n\t\t\tvar attributes = this.attributes;\r\n\r\n\t\t\t// attributes\r\n\r\n\t\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\r\n\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\r\n\r\n\t\t\t\tgeometry2.addAttribute( name, newAttribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morph attributes\r\n\r\n\t\t\tvar morphAttributes = this.morphAttributes;\r\n\r\n\t\t\tfor ( name in morphAttributes ) {\r\n\r\n\t\t\t\tvar morphArray = [];\r\n\t\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n\t\t\t\tfor ( var i = 0, il = morphAttribute.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar attribute = morphAttribute[ i ];\r\n\r\n\t\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\r\n\r\n\t\t\t\t\tmorphArray.push( newAttribute );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// groups\r\n\r\n\t\t\tvar groups = this.groups;\r\n\r\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometry2;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// standard BufferGeometry serialization\r\n\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\r\n\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdata.data = { attributes: {} };\r\n\r\n\t\t\tvar index = this.index;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tdata.data.index = {\r\n\t\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\t\tarray: Array.prototype.slice.call( index.array )\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attributes = this.attributes;\r\n\r\n\t\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\t\tvar attributeData = {\r\n\t\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\t\tarray: Array.prototype.slice.call( attribute.array ),\r\n\t\t\t\t\tnormalized: attribute.normalized\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\r\n\r\n\t\t\t\tdata.data.attributes[ key ] = attributeData;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphAttributes = {};\r\n\t\t\tvar hasMorphAttributes = false;\r\n\r\n\t\t\tfor ( var key in this.morphAttributes ) {\r\n\r\n\t\t\t\tvar attributeArray = this.morphAttributes[ key ];\r\n\r\n\t\t\t\tvar array = [];\r\n\r\n\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar attribute = attributeArray[ i ];\r\n\r\n\t\t\t\t\tvar attributeData = {\r\n\t\t\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\t\t\tarray: Array.prototype.slice.call( attribute.array ),\r\n\t\t\t\t\t\tnormalized: attribute.normalized\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\r\n\r\n\t\t\t\t\tarray.push( attributeData );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( array.length > 0 ) {\r\n\r\n\t\t\t\t\tmorphAttributes[ key ] = array;\r\n\r\n\t\t\t\t\thasMorphAttributes = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasMorphAttributes ) data.data.morphAttributes = morphAttributes;\r\n\r\n\t\t\tvar groups = this.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\t/*\r\n\t\t\t // Handle primitives\r\n\r\n\t\t\t var parameters = this.parameters;\r\n\r\n\t\t\t if ( parameters !== undefined ) {\r\n\r\n\t\t\t var values = [];\r\n\r\n\t\t\t for ( var key in parameters ) {\r\n\r\n\t\t\t values.push( parameters[ key ] );\r\n\r\n\t\t\t }\r\n\r\n\t\t\t var geometry = Object.create( this.constructor.prototype );\r\n\t\t\t this.constructor.apply( geometry, values );\r\n\t\t\t return geometry;\r\n\r\n\t\t\t }\r\n\r\n\t\t\t return new this.constructor().copy( this );\r\n\t\t\t */\r\n\r\n\t\t\treturn new BufferGeometry().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tvar name, i, l;\r\n\r\n\t\t\t// reset\r\n\r\n\t\t\tthis.index = null;\r\n\t\t\tthis.attributes = {};\r\n\t\t\tthis.morphAttributes = {};\r\n\t\t\tthis.groups = [];\r\n\t\t\tthis.boundingBox = null;\r\n\t\t\tthis.boundingSphere = null;\r\n\r\n\t\t\t// name\r\n\r\n\t\t\tthis.name = source.name;\r\n\r\n\t\t\t// index\r\n\r\n\t\t\tvar index = source.index;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// attributes\r\n\r\n\t\t\tvar attributes = source.attributes;\r\n\r\n\t\t\tfor ( name in attributes ) {\r\n\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morph attributes\r\n\r\n\t\t\tvar morphAttributes = source.morphAttributes;\r\n\r\n\t\t\tfor ( name in morphAttributes ) {\r\n\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n\t\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tarray.push( morphAttribute[ i ].clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// groups\r\n\r\n\t\t\tvar groups = source.groups;\r\n\r\n\t\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bounding box\r\n\r\n\t\t\tvar boundingBox = source.boundingBox;\r\n\r\n\t\t\tif ( boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// bounding sphere\r\n\r\n\t\t\tvar boundingSphere = source.boundingSphere;\r\n\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// draw range\r\n\r\n\t\t\tthis.drawRange.start = source.drawRange.start;\r\n\t\t\tthis.drawRange.count = source.drawRange.count;\r\n\r\n\t\t\t// user data\r\n\r\n\t\t\tthis.userData = source.userData;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// BoxGeometry\r\n\r\n\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'BoxGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tBoxGeometry.prototype = Object.create( Geometry.prototype );\r\n\tBoxGeometry.prototype.constructor = BoxGeometry;\r\n\r\n\t// BoxBufferGeometry\r\n\r\n\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'BoxBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\twidth = width || 1;\r\n\t\theight = height || 1;\r\n\t\tdepth = depth || 1;\r\n\r\n\t\t// segments\r\n\r\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\r\n\t\theightSegments = Math.floor( heightSegments ) || 1;\r\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar numberOfVertices = 0;\r\n\t\tvar groupStart = 0;\r\n\r\n\t\t// build each side of the box geometry\r\n\r\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\r\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\r\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\r\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\r\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\r\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\r\n\r\n\t\t\tvar segmentWidth = width / gridX;\r\n\t\t\tvar segmentHeight = height / gridY;\r\n\r\n\t\t\tvar widthHalf = width / 2;\r\n\t\t\tvar heightHalf = height / 2;\r\n\t\t\tvar depthHalf = depth / 2;\r\n\r\n\t\t\tvar gridX1 = gridX + 1;\r\n\t\t\tvar gridY1 = gridY + 1;\r\n\r\n\t\t\tvar vertexCounter = 0;\r\n\t\t\tvar groupCount = 0;\r\n\r\n\t\t\tvar ix, iy;\r\n\r\n\t\t\tvar vector = new Vector3();\r\n\r\n\t\t\t// generate vertices, normals and uvs\r\n\r\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\r\n\r\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\r\n\r\n\t\t\t\t\t// set values to correct vector component\r\n\r\n\t\t\t\t\tvector[ u ] = x * udir;\r\n\t\t\t\t\tvector[ v ] = y * vdir;\r\n\t\t\t\t\tvector[ w ] = depthHalf;\r\n\r\n\t\t\t\t\t// now apply vector to vertex buffer\r\n\r\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\t// set values to correct vector component\r\n\r\n\t\t\t\t\tvector[ u ] = 0;\r\n\t\t\t\t\tvector[ v ] = 0;\r\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\t\t\t\t// now apply vector to normal buffer\r\n\r\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\t// uvs\r\n\r\n\t\t\t\t\tuvs.push( ix / gridX );\r\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\r\n\r\n\t\t\t\t\t// counters\r\n\r\n\t\t\t\t\tvertexCounter += 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// indices\r\n\r\n\t\t\t// 1. you need three indices to draw a single face\r\n\t\t\t// 2. a single segment consists of two faces\r\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\r\n\r\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\r\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t\t\t// increase counter\r\n\r\n\t\t\t\t\tgroupCount += 6;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t\t// update total number of vertices\r\n\r\n\t\t\tnumberOfVertices += vertexCounter;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// PlaneGeometry\r\n\r\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'PlaneGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\r\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\r\n\r\n\t// PlaneBufferGeometry\r\n\r\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\r\n\t\twidth = width || 1;\r\n\t\theight = height || 1;\r\n\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\r\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n\t\tvar gridX1 = gridX + 1;\r\n\t\tvar gridY1 = gridY + 1;\r\n\r\n\t\tvar segment_width = width / gridX;\r\n\t\tvar segment_height = height / gridY;\r\n\r\n\t\tvar ix, iy;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\t\tvertices.push( x, - y, 0 );\r\n\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t\tuvs.push( ix / gridX );\r\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tvar materialId = 0;\r\n\r\n\tfunction Material() {\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Material';\r\n\r\n\t\tthis.fog = true;\r\n\t\tthis.lights = true;\r\n\r\n\t\tthis.blending = NormalBlending;\r\n\t\tthis.side = FrontSide;\r\n\t\tthis.flatShading = false;\r\n\t\tthis.vertexTangents = false;\r\n\t\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\r\n\r\n\t\tthis.opacity = 1;\r\n\t\tthis.transparent = false;\r\n\r\n\t\tthis.blendSrc = SrcAlphaFactor;\r\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\r\n\t\tthis.blendEquation = AddEquation;\r\n\t\tthis.blendSrcAlpha = null;\r\n\t\tthis.blendDstAlpha = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\r\n\t\tthis.depthFunc = LessEqualDepth;\r\n\t\tthis.depthTest = true;\r\n\t\tthis.depthWrite = true;\r\n\r\n\t\tthis.clippingPlanes = null;\r\n\t\tthis.clipIntersection = false;\r\n\t\tthis.clipShadows = false;\r\n\r\n\t\tthis.shadowSide = null;\r\n\r\n\t\tthis.colorWrite = true;\r\n\r\n\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\t\tthis.polygonOffset = false;\r\n\t\tthis.polygonOffsetFactor = 0;\r\n\t\tthis.polygonOffsetUnits = 0;\r\n\r\n\t\tthis.dithering = false;\r\n\r\n\t\tthis.alphaTest = 0;\r\n\t\tthis.premultipliedAlpha = false;\r\n\r\n\t\tthis.visible = true;\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: Material,\r\n\r\n\t\tisMaterial: true,\r\n\r\n\t\tonBeforeCompile: function () {},\r\n\r\n\t\tsetValues: function ( values ) {\r\n\r\n\t\t\tif ( values === undefined ) return;\r\n\r\n\t\t\tfor ( var key in values ) {\r\n\r\n\t\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// for backward compatability if shading is set in the constructor\r\n\t\t\t\tif ( key === 'shading' ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\r\n\t\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( currentValue && currentValue.isColor ) {\r\n\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\r\n\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\t\tif ( isRoot ) {\r\n\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {}\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Material',\r\n\t\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// standard Material serialization\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\r\n\r\n\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\r\n\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\r\n\r\n\t\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\r\n\t\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\r\n\r\n\t\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\r\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\r\n\t\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\r\n\r\n\t\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\r\n\t\t\tif ( this.aoMap && this.aoMap.isTexture ) {\r\n\r\n\t\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\r\n\r\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.normalMap && this.normalMap.isTexture ) {\r\n\r\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.normalMapType = this.normalMapType;\r\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\r\n\r\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\r\n\r\n\t\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\r\n\t\t\tif ( this.envMap && this.envMap.isTexture ) {\r\n\r\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n\t\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\r\n\t\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\r\n\r\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\r\n\t\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\r\n\t\t\tif ( this.side !== FrontSide ) data.side = this.side;\r\n\t\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\r\n\r\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\r\n\t\t\tdata.depthFunc = this.depthFunc;\r\n\t\t\tdata.depthTest = this.depthTest;\r\n\t\t\tdata.depthWrite = this.depthWrite;\r\n\r\n\t\t\t// rotation (SpriteMaterial)\r\n\t\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\r\n\r\n\t\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\r\n\t\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\r\n\t\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\r\n\r\n\t\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\r\n\t\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\r\n\t\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\r\n\t\t\tif ( this.scale !== undefined ) data.scale = this.scale;\r\n\r\n\t\t\tif ( this.dithering === true ) data.dithering = true;\r\n\r\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\r\n\r\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\r\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\t\t\tif ( this.morphTargets === true ) data.morphTargets = true;\r\n\t\t\tif ( this.skinning === true ) data.skinning = true;\r\n\r\n\t\t\tif ( this.visible === false ) data.visible = false;\r\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\r\n\t\t\t// TODO: Copied from Object3D.toJSON\r\n\r\n\t\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\t\tvar values = [];\r\n\r\n\t\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn values;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isRoot ) {\r\n\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) data.images = images;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.name = source.name;\r\n\r\n\t\t\tthis.fog = source.fog;\r\n\t\t\tthis.lights = source.lights;\r\n\r\n\t\t\tthis.blending = source.blending;\r\n\t\t\tthis.side = source.side;\r\n\t\t\tthis.flatShading = source.flatShading;\r\n\t\t\tthis.vertexColors = source.vertexColors;\r\n\r\n\t\t\tthis.opacity = source.opacity;\r\n\t\t\tthis.transparent = source.transparent;\r\n\r\n\t\t\tthis.blendSrc = source.blendSrc;\r\n\t\t\tthis.blendDst = source.blendDst;\r\n\t\t\tthis.blendEquation = source.blendEquation;\r\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n\t\t\tthis.depthFunc = source.depthFunc;\r\n\t\t\tthis.depthTest = source.depthTest;\r\n\t\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\t\tthis.colorWrite = source.colorWrite;\r\n\r\n\t\t\tthis.precision = source.precision;\r\n\r\n\t\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\t\tthis.dithering = source.dithering;\r\n\r\n\t\t\tthis.alphaTest = source.alphaTest;\r\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\r\n\r\n\t\t\tthis.visible = source.visible;\r\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\t\tthis.clipShadows = source.clipShadows;\r\n\t\t\tthis.clipIntersection = source.clipIntersection;\r\n\r\n\t\t\tvar srcPlanes = source.clippingPlanes,\r\n\t\t\t\tdstPlanes = null;\r\n\r\n\t\t\tif ( srcPlanes !== null ) {\r\n\r\n\t\t\t\tvar n = srcPlanes.length;\r\n\t\t\t\tdstPlanes = new Array( n );\r\n\r\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\r\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.clippingPlanes = dstPlanes;\r\n\r\n\t\t\tthis.shadowSide = source.shadowSide;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  defines: { \"label\" : \"value\" },\r\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\r\n\t *\r\n\t *  fragmentShader: <string>,\r\n\t *  vertexShader: <string>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  lights: <bool>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction ShaderMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'ShaderMaterial';\r\n\r\n\t\tthis.defines = {};\r\n\t\tthis.uniforms = {};\r\n\r\n\t\tthis.vertexShader = default_vertex;\r\n\t\tthis.fragmentShader = default_fragment;\r\n\r\n\t\tthis.linewidth = 1;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.fog = false; // set to use scene fog\r\n\t\tthis.lights = false; // set to use scene lights\r\n\t\tthis.clipping = false; // set to use user-defined clipping planes\r\n\r\n\t\tthis.skinning = false; // set to use skinning attribute streams\r\n\t\tthis.morphTargets = false; // set to use morph targets\r\n\t\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\t\tthis.extensions = {\r\n\t\t\tderivatives: false, // set to use derivatives\r\n\t\t\tfragDepth: false, // set to use fragment depth values\r\n\t\t\tdrawBuffers: false, // set to use draw buffers\r\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\r\n\t\t};\r\n\r\n\t\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\t\tthis.defaultAttributeValues = {\r\n\t\t\t'color': [ 1, 1, 1 ],\r\n\t\t\t'uv': [ 0, 0 ],\r\n\t\t\t'uv2': [ 0, 0 ]\r\n\t\t};\r\n\r\n\t\tthis.index0AttributeName = undefined;\r\n\t\tthis.uniformsNeedUpdate = false;\r\n\r\n\t\tif ( parameters !== undefined ) {\r\n\r\n\t\t\tif ( parameters.attributes !== undefined ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setValues( parameters );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tShaderMaterial.prototype = Object.create( Material.prototype );\r\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\r\n\r\n\tShaderMaterial.prototype.isShaderMaterial = true;\r\n\r\n\tShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\tthis.vertexShader = source.vertexShader;\r\n\r\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\r\n\r\n\t\tthis.defines = Object.assign( {}, source.defines );\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\tthis.lights = source.lights;\r\n\t\tthis.clipping = source.clipping;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\tthis.extensions = source.extensions;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\r\n\r\n\t\tdata.uniforms = {};\r\n\r\n\t\tfor ( var name in this.uniforms ) {\r\n\r\n\t\t\tvar uniform = this.uniforms[ name ];\r\n\t\t\tvar value = uniform.value;\r\n\r\n\t\t\tif ( value && value.isTexture ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 't',\r\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isColor ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'c',\r\n\t\t\t\t\tvalue: value.getHex()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isVector2 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v2',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isVector3 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v3',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isVector4 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v4',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isMatrix3 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'm3',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isMatrix4 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'm4',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\tvalue: value\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\r\n\r\n\t\tdata.vertexShader = this.vertexShader;\r\n\t\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\t\tvar extensions = {};\r\n\r\n\t\tfor ( var key in this.extensions ) {\r\n\r\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\r\n\r\n\t\treturn data;\r\n\r\n\t};\n\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Ray( origin, direction ) {\r\n\r\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\r\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\r\n\r\n\t}\r\n\r\n\tObject.assign( Ray.prototype, {\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\tthis.origin.copy( origin );\r\n\t\t\tthis.direction.copy( direction );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( ray ) {\r\n\r\n\t\t\tthis.origin.copy( ray.origin );\r\n\t\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tat: function ( t, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t\t},\r\n\r\n\t\tlookAt: function ( v ) {\r\n\r\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\trecast: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function recast( t ) {\r\n\r\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclosestPointToPoint: function ( point, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttarget.subVectors( point, this.origin );\r\n\r\n\t\t\tvar directionDistance = target.dot( this.direction );\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn target.copy( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPoint: function ( point ) {\r\n\r\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceSqToPoint: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function distanceSqToPoint( point ) {\r\n\r\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t\t// point behind the ray\r\n\r\n\t\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\t\treturn v1.distanceToSquared( point );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tdistanceSqToSegment: function () {\r\n\r\n\t\t\tvar segCenter = new Vector3();\r\n\t\t\tvar segDir = new Vector3();\r\n\t\t\tvar diff = new Vector3();\r\n\r\n\t\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\r\n\t\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t\t// defined by v0 and v1\r\n\t\t\t\t// It can also set two optional targets :\r\n\t\t\t\t// - The closest point on the ray\r\n\t\t\t\t// - The closest point on the segment\r\n\r\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\t\tvar c = diff.lengthSq();\r\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn sqrDist;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersectSphere: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function intersectSphere( sphere, target ) {\r\n\r\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\t\t\t\tvar tca = v1.dot( this.direction );\r\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, target );\r\n\r\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\t\treturn this.at( t0, target );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\t\treturn 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t\t// Return if the ray never intersects the plane\r\n\r\n\t\t\treturn t >= 0 ? t : null;\r\n\r\n\t\t},\r\n\r\n\t\tintersectPlane: function ( plane, target ) {\r\n\r\n\t\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\t\tif ( t === null ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.at( t, target );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t\t// check if the ray lies on the plane first\r\n\r\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t},\r\n\r\n\t\tintersectBox: function ( box, target ) {\r\n\r\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\t\tvar origin = this.origin;\r\n\r\n\t\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t\t//return point closest to the ray (positive side)\r\n\r\n\t\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: ( function () {\r\n\r\n\t\t\tvar v = new Vector3();\r\n\r\n\t\t\treturn function intersectsBox( box ) {\r\n\r\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t\t};\r\n\r\n\t\t} )(),\r\n\r\n\t\tintersectTriangle: function () {\r\n\r\n\t\t\t// Compute the offset origin, edges, and normal.\r\n\t\t\tvar diff = new Vector3();\r\n\t\t\tvar edge1 = new Vector3();\r\n\t\t\tvar edge2 = new Vector3();\r\n\t\t\tvar normal = new Vector3();\r\n\r\n\t\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\r\n\r\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n\r\n\t\t\t\tedge1.subVectors( b, a );\r\n\t\t\t\tedge2.subVectors( c, a );\r\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\t\tvar sign;\r\n\r\n\t\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\t\tsign = 1;\r\n\r\n\t\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\t\tsign = - 1;\r\n\t\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t\t// b1 < 0, no intersection\r\n\t\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t\t// b2 < 0, no intersection\r\n\t\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t\t// t < 0, no intersection\r\n\t\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Ray intersects triangle.\r\n\t\t\t\treturn this.at( QdN / DdN, target );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\t\tthis.direction.transformDirection( matrix4 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( ray ) {\r\n\r\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Triangle( a, b, c ) {\r\n\r\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\r\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\r\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\r\n\r\n\t}\r\n\r\n\tObject.assign( Triangle, {\r\n\r\n\t\tgetNormal: function () {\r\n\r\n\t\t\tvar v0 = new Vector3();\r\n\r\n\t\t\treturn function getNormal( a, b, c, target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\r\n\t\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttarget.subVectors( c, b );\r\n\t\t\t\tv0.subVectors( a, b );\r\n\t\t\t\ttarget.cross( v0 );\r\n\r\n\t\t\t\tvar targetLengthSq = target.lengthSq();\r\n\t\t\t\tif ( targetLengthSq > 0 ) {\r\n\r\n\t\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn target.set( 0, 0, 0 );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\t// static/instance method to calculate barycentric coordinates\r\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\t\tgetBarycoord: function () {\r\n\r\n\t\t\tvar v0 = new Vector3();\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar v2 = new Vector3();\r\n\r\n\t\t\treturn function getBarycoord( point, a, b, c, target ) {\r\n\r\n\t\t\t\tv0.subVectors( c, a );\r\n\t\t\t\tv1.subVectors( b, a );\r\n\t\t\t\tv2.subVectors( point, a );\r\n\r\n\t\t\t\tvar dot00 = v0.dot( v0 );\r\n\t\t\t\tvar dot01 = v0.dot( v1 );\r\n\t\t\t\tvar dot02 = v0.dot( v2 );\r\n\t\t\t\tvar dot11 = v1.dot( v1 );\r\n\t\t\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\r\n\t\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// collinear or singular triangle\r\n\t\t\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\t\t\treturn target.set( - 2, - 1, - 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar invDenom = 1 / denom;\r\n\t\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t\t\t// barycentric coordinates must always sum to 1\r\n\t\t\t\treturn target.set( 1 - u - v, v, u );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tcontainsPoint: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function containsPoint( point, a, b, c ) {\r\n\r\n\t\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\r\n\r\n\t\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tgetUV: function () {\r\n\r\n\t\t\tvar barycoord = new Vector3();\r\n\r\n\t\t\treturn function getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\r\n\r\n\t\t\t\tthis.getBarycoord( point, p1, p2, p3, barycoord );\r\n\r\n\t\t\t\ttarget.set( 0, 0 );\r\n\t\t\t\ttarget.addScaledVector( uv1, barycoord.x );\r\n\t\t\t\ttarget.addScaledVector( uv2, barycoord.y );\r\n\t\t\t\ttarget.addScaledVector( uv3, barycoord.z );\r\n\r\n\t\t\t\treturn target;\r\n\r\n\t\t\t};\r\n\r\n\t\t}()\r\n\r\n\t} );\r\n\r\n\tObject.assign( Triangle.prototype, {\r\n\r\n\t\tset: function ( a, b, c ) {\r\n\r\n\t\t\tthis.a.copy( a );\r\n\t\t\tthis.b.copy( b );\r\n\t\t\tthis.c.copy( c );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\t\tthis.a.copy( points[ i0 ] );\r\n\t\t\tthis.b.copy( points[ i1 ] );\r\n\t\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( triangle ) {\r\n\r\n\t\t\tthis.a.copy( triangle.a );\r\n\t\t\tthis.b.copy( triangle.b );\r\n\t\t\tthis.c.copy( triangle.c );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetArea: function () {\r\n\r\n\t\t\tvar v0 = new Vector3();\r\n\t\t\tvar v1 = new Vector3();\r\n\r\n\t\t\treturn function getArea() {\r\n\r\n\t\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tgetMidpoint: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t\t},\r\n\r\n\t\tgetNormal: function ( target ) {\r\n\r\n\t\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\r\n\r\n\t\t},\r\n\r\n\t\tgetPlane: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t\t},\r\n\r\n\t\tgetBarycoord: function ( point, target ) {\r\n\r\n\t\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\r\n\r\n\t\t},\r\n\r\n\t\tcontainsPoint: function ( point ) {\r\n\r\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t\t},\r\n\r\n\t\tgetUV: function ( point, uv1, uv2, uv3, result ) {\r\n\r\n\t\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, result );\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function ( box ) {\r\n\r\n\t\t\treturn box.intersectsTriangle( this );\r\n\r\n\t\t},\r\n\r\n\t\tclosestPointToPoint: function () {\r\n\r\n\t\t\tvar vab = new Vector3();\r\n\t\t\tvar vac = new Vector3();\r\n\t\t\tvar vbc = new Vector3();\r\n\t\t\tvar vap = new Vector3();\r\n\t\t\tvar vbp = new Vector3();\r\n\t\t\tvar vcp = new Vector3();\r\n\r\n\t\t\treturn function closestPointToPoint( p, target ) {\r\n\r\n\t\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\r\n\t\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar a = this.a, b = this.b, c = this.c;\r\n\t\t\t\tvar v, w;\r\n\r\n\t\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\r\n\t\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\r\n\t\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\r\n\t\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\r\n\t\t\t\t// the point lies in with the minimum amount of redundant computation.\r\n\r\n\t\t\t\tvab.subVectors( b, a );\r\n\t\t\t\tvac.subVectors( c, a );\r\n\t\t\t\tvap.subVectors( p, a );\r\n\t\t\t\tvar d1 = vab.dot( vap );\r\n\t\t\t\tvar d2 = vac.dot( vap );\r\n\t\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\r\n\r\n\t\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\r\n\t\t\t\t\treturn target.copy( a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvbp.subVectors( p, b );\r\n\t\t\t\tvar d3 = vab.dot( vbp );\r\n\t\t\t\tvar d4 = vac.dot( vbp );\r\n\t\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\r\n\r\n\t\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\r\n\t\t\t\t\treturn target.copy( b );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar vc = d1 * d4 - d3 * d2;\r\n\t\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\r\n\r\n\t\t\t\t\tv = d1 / ( d1 - d3 );\r\n\t\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\r\n\t\t\t\t\treturn target.copy( a ).addScaledVector( vab, v );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvcp.subVectors( p, c );\r\n\t\t\t\tvar d5 = vab.dot( vcp );\r\n\t\t\t\tvar d6 = vac.dot( vcp );\r\n\t\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\r\n\r\n\t\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\r\n\t\t\t\t\treturn target.copy( c );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar vb = d5 * d2 - d1 * d6;\r\n\t\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\r\n\r\n\t\t\t\t\tw = d2 / ( d2 - d6 );\r\n\t\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\r\n\t\t\t\t\treturn target.copy( a ).addScaledVector( vac, w );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar va = d3 * d6 - d5 * d4;\r\n\t\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\r\n\r\n\t\t\t\t\tvbc.subVectors( c, b );\r\n\t\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\r\n\t\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\r\n\t\t\t\t\treturn target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// face region\r\n\t\t\t\tvar denom = 1 / ( va + vb + vc );\r\n\t\t\t\t// u = va * denom\r\n\t\t\t\tv = vb * denom;\r\n\t\t\t\tw = vc * denom;\r\n\t\t\t\treturn target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tequals: function ( triangle ) {\r\n\r\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshBasicMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshBasicMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // emissive\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.specularMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\r\n\r\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\r\n\r\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author jonobr1 / http://jonobr1.com/\r\n\t */\r\n\r\n\tfunction Mesh( geometry, material ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Mesh';\r\n\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\r\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\t\tthis.drawMode = TrianglesDrawMode;\r\n\r\n\t\tthis.updateMorphTargets();\r\n\r\n\t}\r\n\r\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Mesh,\r\n\r\n\t\tisMesh: true,\r\n\r\n\t\tsetDrawMode: function ( value ) {\r\n\r\n\t\t\tthis.drawMode = value;\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.drawMode = source.drawMode;\r\n\r\n\t\t\tif ( source.morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( source.morphTargetDictionary !== undefined ) {\r\n\r\n\t\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tupdateMorphTargets: function () {\r\n\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar m, ml, name;\r\n\r\n\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\t\t\tvar keys = Object.keys( morphAttributes );\r\n\r\n\t\t\t\tif ( keys.length > 0 ) {\r\n\r\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\r\n\r\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\r\n\r\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\r\n\r\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\r\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\traycast: ( function () {\r\n\r\n\t\t\tvar inverseMatrix = new Matrix4();\r\n\t\t\tvar ray = new Ray();\r\n\t\t\tvar sphere = new Sphere();\r\n\r\n\t\t\tvar vA = new Vector3();\r\n\t\t\tvar vB = new Vector3();\r\n\t\t\tvar vC = new Vector3();\r\n\r\n\t\t\tvar tempA = new Vector3();\r\n\t\t\tvar tempB = new Vector3();\r\n\t\t\tvar tempC = new Vector3();\r\n\r\n\t\t\tvar morphA = new Vector3();\r\n\t\t\tvar morphB = new Vector3();\r\n\t\t\tvar morphC = new Vector3();\r\n\r\n\t\t\tvar uvA = new Vector2();\r\n\t\t\tvar uvB = new Vector2();\r\n\t\t\tvar uvC = new Vector2();\r\n\r\n\t\t\tvar intersectionPoint = new Vector3();\r\n\t\t\tvar intersectionPointWorld = new Vector3();\r\n\r\n\t\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\r\n\r\n\t\t\t\tvar intersect;\r\n\r\n\t\t\t\tif ( material.side === BackSide ) {\r\n\r\n\t\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( intersect === null ) return null;\r\n\r\n\t\t\t\tintersectionPointWorld.copy( point );\r\n\t\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\tobject: object\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, uv, a, b, c ) {\r\n\r\n\t\t\t\tvA.fromBufferAttribute( position, a );\r\n\t\t\t\tvB.fromBufferAttribute( position, b );\r\n\t\t\t\tvC.fromBufferAttribute( position, c );\r\n\r\n\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\r\n\r\n\t\t\t\tif ( material.morphTargets && morphPosition && morphInfluences ) {\r\n\r\n\t\t\t\t\tmorphA.set( 0, 0, 0 );\r\n\t\t\t\t\tmorphB.set( 0, 0, 0 );\r\n\t\t\t\t\tmorphC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = morphPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar influence = morphInfluences[ i ];\r\n\t\t\t\t\t\tvar morphAttribute = morphPosition[ i ];\r\n\r\n\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\ttempA.fromBufferAttribute( morphAttribute, a );\r\n\t\t\t\t\t\ttempB.fromBufferAttribute( morphAttribute, b );\r\n\t\t\t\t\t\ttempC.fromBufferAttribute( morphAttribute, c );\r\n\r\n\t\t\t\t\t\tmorphA.addScaledVector( tempA.sub( vA ), influence );\r\n\t\t\t\t\t\tmorphB.addScaledVector( tempB.sub( vB ), influence );\r\n\t\t\t\t\t\tmorphC.addScaledVector( tempC.sub( vC ), influence );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvA.add( morphA );\r\n\t\t\t\t\tvB.add( morphB );\r\n\t\t\t\t\tvC.add( morphC );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\r\n\r\n\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\tif ( uv ) {\r\n\r\n\t\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\r\n\t\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\r\n\t\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\r\n\r\n\t\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar face = new Face3( a, b, c );\r\n\t\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\r\n\r\n\t\t\t\t\tintersection.face = face;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn intersection;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\t\tvar geometry = this.geometry;\r\n\t\t\t\tvar material = this.material;\r\n\t\t\t\tvar matrixWorld = this.matrixWorld;\r\n\r\n\t\t\t\tif ( material === undefined ) return;\r\n\r\n\t\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\t\t// Check boundingBox before continuing\r\n\r\n\t\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar intersection;\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\tvar a, b, c;\r\n\t\t\t\t\tvar index = geometry.index;\r\n\t\t\t\t\tvar position = geometry.attributes.position;\r\n\t\t\t\t\tvar morphPosition = geometry.morphAttributes.position;\r\n\t\t\t\t\tvar uv = geometry.attributes.uv;\r\n\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\tvar drawRange = geometry.drawRange;\r\n\t\t\t\t\tvar i, j, il, jl;\r\n\t\t\t\t\tvar group, groupMaterial;\r\n\t\t\t\t\tvar start, end;\r\n\r\n\t\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\t\t// indexed buffer geometry\r\n\r\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tgroup = groups[ i ];\r\n\t\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\r\n\t\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t\ta = index.getX( j );\r\n\t\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\r\n\t\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\r\n\r\n\t\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, morphPosition, uv, a, b, c );\r\n\r\n\t\t\t\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\r\n\t\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\r\n\t\t\t\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\r\n\t\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\ta = index.getX( i );\r\n\t\t\t\t\t\t\t\tb = index.getX( i + 1 );\r\n\t\t\t\t\t\t\t\tc = index.getX( i + 2 );\r\n\r\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c );\r\n\r\n\t\t\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\r\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( position !== undefined ) {\r\n\r\n\t\t\t\t\t\t// non-indexed buffer geometry\r\n\r\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tgroup = groups[ i ];\r\n\t\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\r\n\t\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t\ta = j;\r\n\t\t\t\t\t\t\t\t\tb = j + 1;\r\n\t\t\t\t\t\t\t\t\tc = j + 2;\r\n\r\n\t\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, morphPosition, uv, a, b, c );\r\n\r\n\t\t\t\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\r\n\t\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\r\n\t\t\t\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\r\n\t\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\ta = i;\r\n\t\t\t\t\t\t\t\tb = i + 1;\r\n\t\t\t\t\t\t\t\tc = i + 2;\r\n\r\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c );\r\n\r\n\t\t\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\r\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tvar fvA, fvB, fvC;\r\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\t\tvar uvs;\r\n\r\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\r\n\t\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\r\n\r\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\r\n\r\n\t\t\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n\t\t\t\t\t\tfvA = vertices[ face.a ];\r\n\t\t\t\t\t\tfvB = vertices[ face.b ];\r\n\t\t\t\t\t\tfvC = vertices[ face.c ];\r\n\r\n\t\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\r\n\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\r\n\r\n\t\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\r\n\t\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\r\n\t\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\r\n\t\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\r\n\r\n\t\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC, new Vector2() );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tintersection.face = face;\r\n\t\t\t\t\t\t\tintersection.faceIndex = f;\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\r\n\r\n\t\tvar clearColor = new Color( 0x000000 );\r\n\t\tvar clearAlpha = 0;\r\n\r\n\t\tvar planeMesh;\r\n\t\tvar boxMesh;\r\n\t\t// Store the current background texture and its `version`\r\n\t\t// so we can recompile the material accordingly.\r\n\t\tvar currentBackground = null;\r\n\t\tvar currentBackgroundVersion = 0;\r\n\r\n\t\tfunction render( renderList, scene, camera, forceClear ) {\r\n\r\n\t\t\tvar background = scene.background;\r\n\r\n\t\t\t// Ignore background in AR\r\n\t\t\t// TODO: Reconsider this.\r\n\r\n\t\t\tvar vr = renderer.vr;\r\n\t\t\tvar session = vr.getSession && vr.getSession();\r\n\r\n\t\t\tif ( session && session.environmentBlendMode === 'additive' ) {\r\n\r\n\t\t\t\tbackground = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( background === null ) {\r\n\r\n\t\t\t\tsetClear( clearColor, clearAlpha );\r\n\t\t\t\tcurrentBackground = null;\r\n\t\t\t\tcurrentBackgroundVersion = 0;\r\n\r\n\t\t\t} else if ( background && background.isColor ) {\r\n\r\n\t\t\t\tsetClear( background, 1 );\r\n\t\t\t\tforceClear = true;\r\n\t\t\t\tcurrentBackground = null;\r\n\t\t\t\tcurrentBackgroundVersion = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderer.autoClear || forceClear ) {\r\n\r\n\t\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( background && ( background.isCubeTexture || background.isWebGLRenderTargetCube ) ) {\r\n\r\n\t\t\t\tif ( boxMesh === undefined ) {\r\n\r\n\t\t\t\t\tboxMesh = new Mesh(\r\n\t\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\r\n\t\t\t\t\t\tnew ShaderMaterial( {\r\n\t\t\t\t\t\t\ttype: 'BackgroundCubeMaterial',\r\n\t\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\r\n\t\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\r\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\r\n\t\t\t\t\t\t\tside: BackSide,\r\n\t\t\t\t\t\t\tdepthTest: false,\r\n\t\t\t\t\t\t\tdepthWrite: false,\r\n\t\t\t\t\t\t\tfog: false\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\r\n\t\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\r\n\r\n\t\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\r\n\r\n\t\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\r\n\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// enable code injection for non-built-in material\r\n\t\t\t\t\tObject.defineProperty( boxMesh.material, 'map', {\r\n\r\n\t\t\t\t\t\tget: function () {\r\n\r\n\t\t\t\t\t\t\treturn this.uniforms.tCube.value;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tobjects.update( boxMesh );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar texture = background.isWebGLRenderTargetCube ? background.texture : background;\r\n\t\t\t\tboxMesh.material.uniforms.tCube.value = texture;\r\n\t\t\t\tboxMesh.material.uniforms.tFlip.value = ( background.isWebGLRenderTargetCube ) ? 1 : - 1;\r\n\r\n\t\t\t\tif ( currentBackground !== background ||\r\n\t\t\t\t     currentBackgroundVersion !== texture.version ) {\r\n\r\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\r\n\r\n\t\t\t\t\tcurrentBackground = background;\r\n\t\t\t\t\tcurrentBackgroundVersion = texture.version;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// push to the pre-sorted opaque render list\r\n\t\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\r\n\r\n\t\t\t} else if ( background && background.isTexture ) {\r\n\r\n\t\t\t\tif ( planeMesh === undefined ) {\r\n\r\n\t\t\t\t\tplaneMesh = new Mesh(\r\n\t\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\r\n\t\t\t\t\t\tnew ShaderMaterial( {\r\n\t\t\t\t\t\t\ttype: 'BackgroundMaterial',\r\n\t\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\r\n\t\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\r\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\r\n\t\t\t\t\t\t\tside: FrontSide,\r\n\t\t\t\t\t\t\tdepthTest: false,\r\n\t\t\t\t\t\t\tdepthWrite: false,\r\n\t\t\t\t\t\t\tfog: false\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tplaneMesh.geometry.removeAttribute( 'normal' );\r\n\r\n\t\t\t\t\t// enable code injection for non-built-in material\r\n\t\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\r\n\r\n\t\t\t\t\t\tget: function () {\r\n\r\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tobjects.update( planeMesh );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\r\n\r\n\t\t\t\tif ( background.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\t\tbackground.updateMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\r\n\r\n\t\t\t\tif ( currentBackground !== background ||\r\n\t\t\t\t\t   currentBackgroundVersion !== background.version ) {\r\n\r\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\r\n\r\n\t\t\t\t\tcurrentBackground = background;\r\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// push to the pre-sorted opaque render list\r\n\t\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setClear( color, alpha ) {\r\n\r\n\t\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tgetClearColor: function () {\r\n\r\n\t\t\t\treturn clearColor;\r\n\r\n\t\t\t},\r\n\t\t\tsetClearColor: function ( color, alpha ) {\r\n\r\n\t\t\t\tclearColor.set( color );\r\n\t\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\r\n\t\t\t\tsetClear( clearColor, clearAlpha );\r\n\r\n\t\t\t},\r\n\t\t\tgetClearAlpha: function () {\r\n\r\n\t\t\t\treturn clearAlpha;\r\n\r\n\t\t\t},\r\n\t\t\tsetClearAlpha: function ( alpha ) {\r\n\r\n\t\t\t\tclearAlpha = alpha;\r\n\t\t\t\tsetClear( clearColor, clearAlpha );\r\n\r\n\t\t\t},\r\n\t\t\trender: render\r\n\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\r\n\r\n\t\tvar mode;\r\n\r\n\t\tfunction setMode( value ) {\r\n\r\n\t\t\tmode = value;\r\n\r\n\t\t}\r\n\r\n\t\tfunction render( start, count ) {\r\n\r\n\t\t\tgl.drawArrays( mode, start, count );\r\n\r\n\t\t\tinfo.update( count, mode );\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderInstances( geometry, start, count ) {\r\n\r\n\t\t\tvar extension;\r\n\r\n\t\t\tif ( capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\textension = gl;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\textension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\r\n\r\n\t\t\tinfo.update( count, mode, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\r\n\r\n\t\tvar maxAnisotropy;\r\n\r\n\t\tfunction getMaxAnisotropy() {\r\n\r\n\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaxAnisotropy = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxAnisotropy;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\r\n\r\n\t\t\t\t\treturn 'highp';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprecision = 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\r\n\r\n\t\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn 'lowp';\r\n\r\n\t\t}\r\n\r\n\t\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && ( gl instanceof WebGL2RenderingContext || gl instanceof WebGL2ComputeRenderingContext );\r\n\r\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\r\n\t\tvar maxPrecision = getMaxPrecision( precision );\r\n\r\n\t\tif ( maxPrecision !== precision ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\r\n\t\t\tprecision = maxPrecision;\r\n\r\n\t\t}\r\n\r\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\r\n\r\n\t\tvar maxTextures = gl.getParameter( 34930 );\r\n\t\tvar maxVertexTextures = gl.getParameter( 35660 );\r\n\t\tvar maxTextureSize = gl.getParameter( 3379 );\r\n\t\tvar maxCubemapSize = gl.getParameter( 34076 );\r\n\r\n\t\tvar maxAttributes = gl.getParameter( 34921 );\r\n\t\tvar maxVertexUniforms = gl.getParameter( 36347 );\r\n\t\tvar maxVaryings = gl.getParameter( 36348 );\r\n\t\tvar maxFragmentUniforms = gl.getParameter( 36349 );\r\n\r\n\t\tvar vertexTextures = maxVertexTextures > 0;\r\n\t\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\r\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\r\n\r\n\t\tvar maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\r\n\r\n\t\treturn {\r\n\r\n\t\t\tisWebGL2: isWebGL2,\r\n\r\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\r\n\t\t\tgetMaxPrecision: getMaxPrecision,\r\n\r\n\t\t\tprecision: precision,\r\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\r\n\r\n\t\t\tmaxTextures: maxTextures,\r\n\t\t\tmaxVertexTextures: maxVertexTextures,\r\n\t\t\tmaxTextureSize: maxTextureSize,\r\n\t\t\tmaxCubemapSize: maxCubemapSize,\r\n\r\n\t\t\tmaxAttributes: maxAttributes,\r\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\r\n\t\t\tmaxVaryings: maxVaryings,\r\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\r\n\r\n\t\t\tvertexTextures: vertexTextures,\r\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\r\n\t\t\tfloatVertexTextures: floatVertexTextures,\r\n\r\n\t\t\tmaxSamples: maxSamples\r\n\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction WebGLClipping() {\r\n\r\n\t\tvar scope = this,\r\n\r\n\t\t\tglobalState = null,\r\n\t\t\tnumGlobalPlanes = 0,\r\n\t\t\tlocalClippingEnabled = false,\r\n\t\t\trenderingShadows = false,\r\n\r\n\t\t\tplane = new Plane(),\r\n\t\t\tviewNormalMatrix = new Matrix3(),\r\n\r\n\t\t\tuniform = { value: null, needsUpdate: false };\r\n\r\n\t\tthis.uniform = uniform;\r\n\t\tthis.numPlanes = 0;\r\n\t\tthis.numIntersection = 0;\r\n\r\n\t\tthis.init = function ( planes, enableLocalClipping, camera ) {\r\n\r\n\t\t\tvar enabled =\r\n\t\t\t\tplanes.length !== 0 ||\r\n\t\t\t\tenableLocalClipping ||\r\n\t\t\t\t// enable state of previous frame - the clipping code has to\r\n\t\t\t\t// run another frame in order to reset the state:\r\n\t\t\t\tnumGlobalPlanes !== 0 ||\r\n\t\t\t\tlocalClippingEnabled;\r\n\r\n\t\t\tlocalClippingEnabled = enableLocalClipping;\r\n\r\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\r\n\t\t\tnumGlobalPlanes = planes.length;\r\n\r\n\t\t\treturn enabled;\r\n\r\n\t\t};\r\n\r\n\t\tthis.beginShadows = function () {\r\n\r\n\t\t\trenderingShadows = true;\r\n\t\t\tprojectPlanes( null );\r\n\r\n\t\t};\r\n\r\n\t\tthis.endShadows = function () {\r\n\r\n\t\t\trenderingShadows = false;\r\n\t\t\tresetGlobalState();\r\n\r\n\t\t};\r\n\r\n\t\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\r\n\r\n\t\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\r\n\r\n\t\t\t\t// there's no local clipping\r\n\r\n\t\t\t\tif ( renderingShadows ) {\r\n\r\n\t\t\t\t\t// there's no global clipping\r\n\r\n\t\t\t\t\tprojectPlanes( null );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tresetGlobalState();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\r\n\t\t\t\t\tlGlobal = nGlobal * 4,\r\n\r\n\t\t\t\t\tdstArray = cache.clippingState || null;\r\n\r\n\t\t\t\tuniform.value = dstArray; // ensure unique state\r\n\r\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\r\n\r\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\r\n\r\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcache.clippingState = dstArray;\r\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\r\n\t\t\t\tthis.numPlanes += nGlobal;\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t};\r\n\r\n\t\tfunction resetGlobalState() {\r\n\r\n\t\t\tif ( uniform.value !== globalState ) {\r\n\r\n\t\t\t\tuniform.value = globalState;\r\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.numPlanes = numGlobalPlanes;\r\n\t\t\tscope.numIntersection = 0;\r\n\r\n\t\t}\r\n\r\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\r\n\r\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\r\n\t\t\t\tdstArray = null;\r\n\r\n\t\t\tif ( nPlanes !== 0 ) {\r\n\r\n\t\t\t\tdstArray = uniform.value;\r\n\r\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\r\n\r\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\r\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\r\n\r\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\r\n\r\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\r\n\r\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\r\n\r\n\t\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\r\n\r\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\r\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniform.value = dstArray;\r\n\t\t\t\tuniform.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.numPlanes = nPlanes;\r\n\r\n\t\t\treturn dstArray;\r\n\r\n\t\t}\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLExtensions( gl ) {\r\n\r\n\t\tvar extensions = {};\r\n\r\n\t\treturn {\r\n\r\n\t\t\tget: function ( name ) {\r\n\r\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\t\t\treturn extensions[ name ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar extension;\r\n\r\n\t\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\t\tcase 'WEBGL_depth_texture':\r\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\textensions[ name ] = extension;\r\n\r\n\t\t\t\treturn extension;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLGeometries( gl, attributes, info ) {\r\n\r\n\t\tvar geometries = {};\r\n\t\tvar wireframeAttributes = {};\r\n\r\n\t\tfunction onGeometryDispose( event ) {\r\n\r\n\t\t\tvar geometry = event.target;\r\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\t\tif ( buffergeometry.index !== null ) {\r\n\r\n\t\t\t\tattributes.remove( buffergeometry.index );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var name in buffergeometry.attributes ) {\r\n\r\n\t\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\t\tvar attribute = wireframeAttributes[ buffergeometry.id ];\r\n\r\n\t\t\tif ( attribute ) {\r\n\r\n\t\t\t\tattributes.remove( attribute );\r\n\t\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tinfo.memory.geometries --;\r\n\r\n\t\t}\r\n\r\n\t\tfunction get( object, geometry ) {\r\n\r\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\t\tif ( buffergeometry ) return buffergeometry;\r\n\r\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\tbuffergeometry = geometry;\r\n\r\n\t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n\t\t\tinfo.memory.geometries ++;\r\n\r\n\t\t\treturn buffergeometry;\r\n\r\n\t\t}\r\n\r\n\t\tfunction update( geometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tattributes.update( index, 34963 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var name in geometryAttributes ) {\r\n\r\n\t\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morph targets\r\n\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor ( var name in morphAttributes ) {\r\n\r\n\t\t\t\tvar array = morphAttributes[ name ];\r\n\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tattributes.update( array[ i ], 34962 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\t\tvar attribute = wireframeAttributes[ geometry.id ];\r\n\r\n\t\t\tif ( attribute ) return attribute;\r\n\r\n\t\t\tvar indices = [];\r\n\r\n\t\t\tvar geometryIndex = geometry.index;\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\t\t// console.time( 'wireframe' );\r\n\r\n\t\t\tif ( geometryIndex !== null ) {\r\n\r\n\t\t\t\tvar array = geometryIndex.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\t\tvar c = array[ i + 2 ];\r\n\r\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar array = geometryAttributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\tvar a = i + 0;\r\n\t\t\t\t\tvar b = i + 1;\r\n\t\t\t\t\tvar c = i + 2;\r\n\r\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// console.timeEnd( 'wireframe' );\r\n\r\n\t\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\r\n\r\n\t\t\tattributes.update( attribute, 34963 );\r\n\r\n\t\t\twireframeAttributes[ geometry.id ] = attribute;\r\n\r\n\t\t\treturn attribute;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tget: get,\r\n\t\t\tupdate: update,\r\n\r\n\t\t\tgetWireframeAttribute: getWireframeAttribute\r\n\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\r\n\r\n\t\tvar mode;\r\n\r\n\t\tfunction setMode( value ) {\r\n\r\n\t\t\tmode = value;\r\n\r\n\t\t}\r\n\r\n\t\tvar type, bytesPerElement;\r\n\r\n\t\tfunction setIndex( value ) {\r\n\r\n\t\t\ttype = value.type;\r\n\t\t\tbytesPerElement = value.bytesPerElement;\r\n\r\n\t\t}\r\n\r\n\t\tfunction render( start, count ) {\r\n\r\n\t\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\r\n\r\n\t\t\tinfo.update( count, mode );\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderInstances( geometry, start, count ) {\r\n\r\n\t\t\tvar extension;\r\n\r\n\t\t\tif ( capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\textension = gl;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\textension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\r\n\r\n\t\t\tinfo.update( count, mode, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.setIndex = setIndex;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\r\n\t}\n\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction WebGLInfo( gl ) {\r\n\r\n\t\tvar memory = {\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\t\t};\r\n\r\n\t\tvar render = {\r\n\t\t\tframe: 0,\r\n\t\t\tcalls: 0,\r\n\t\t\ttriangles: 0,\r\n\t\t\tpoints: 0,\r\n\t\t\tlines: 0\r\n\t\t};\r\n\r\n\t\tfunction update( count, mode, instanceCount ) {\r\n\r\n\t\t\tinstanceCount = instanceCount || 1;\r\n\r\n\t\t\trender.calls ++;\r\n\r\n\t\t\tswitch ( mode ) {\r\n\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\trender.triangles += instanceCount * ( count / 3 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 5:\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\trender.triangles += instanceCount * ( count - 2 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\trender.lines += instanceCount * ( count / 2 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\trender.lines += instanceCount * ( count - 1 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\trender.lines += instanceCount * count;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\trender.points += instanceCount * count;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction reset() {\r\n\r\n\t\t\trender.frame ++;\r\n\t\t\trender.calls = 0;\r\n\t\t\trender.triangles = 0;\r\n\t\t\trender.points = 0;\r\n\t\t\trender.lines = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tmemory: memory,\r\n\t\t\trender: render,\r\n\t\t\tprograms: null,\r\n\t\t\tautoReset: true,\r\n\t\t\treset: reset,\r\n\t\t\tupdate: update\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction absNumericalSort( a, b ) {\r\n\r\n\t\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\r\n\r\n\t}\r\n\r\n\tfunction WebGLMorphtargets( gl ) {\r\n\r\n\t\tvar influencesList = {};\r\n\t\tvar morphInfluences = new Float32Array( 8 );\r\n\r\n\t\tfunction update( object, geometry, material, program ) {\r\n\r\n\t\t\tvar objectInfluences = object.morphTargetInfluences;\r\n\r\n\t\t\tvar length = objectInfluences.length;\r\n\r\n\t\t\tvar influences = influencesList[ geometry.id ];\r\n\r\n\t\t\tif ( influences === undefined ) {\r\n\r\n\t\t\t\t// initialise list\r\n\r\n\t\t\t\tinfluences = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\r\n\t\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\r\n\r\n\t\t\t// Remove current morphAttributes\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tvar influence = influences[ i ];\r\n\r\n\t\t\t\tif ( influence[ 1 ] !== 0 ) {\r\n\r\n\t\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Collect influences\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tvar influence = influences[ i ];\r\n\r\n\t\t\t\tinfluence[ 0 ] = i;\r\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinfluences.sort( absNumericalSort );\r\n\r\n\t\t\t// Add morphAttributes\r\n\r\n\t\t\tfor ( var i = 0; i < 8; i ++ ) {\r\n\r\n\t\t\t\tvar influence = influences[ i ];\r\n\r\n\t\t\t\tif ( influence ) {\r\n\r\n\t\t\t\t\tvar index = influence[ 0 ];\r\n\t\t\t\t\tvar value = influence[ 1 ];\r\n\r\n\t\t\t\t\tif ( value ) {\r\n\r\n\t\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\r\n\t\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\r\n\r\n\t\t\t\t\t\tmorphInfluences[ i ] = value;\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmorphInfluences[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tupdate: update\r\n\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLObjects( geometries, info ) {\r\n\r\n\t\tvar updateList = {};\r\n\r\n\t\tfunction update( object ) {\r\n\r\n\t\t\tvar frame = info.render.frame;\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\t\t\tvar buffergeometry = geometries.get( object, geometry );\r\n\r\n\t\t\t// Update once per frame\r\n\r\n\t\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\r\n\r\n\t\t\t\tif ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tbuffergeometry.updateFromObject( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometries.update( buffergeometry );\r\n\r\n\t\t\t\tupdateList[ buffergeometry.id ] = frame;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffergeometry;\r\n\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\r\n\t\t\tupdateList = {};\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tupdate: update,\r\n\t\t\tdispose: dispose\r\n\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\r\n\r\n\t\timages = images !== undefined ? images : [];\r\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\r\n\t\tformat = format !== undefined ? format : RGBFormat;\r\n\r\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\t\tthis.flipY = false;\r\n\r\n\t}\r\n\r\n\tCubeTexture.prototype = Object.create( Texture.prototype );\r\n\tCubeTexture.prototype.constructor = CubeTexture;\r\n\r\n\tCubeTexture.prototype.isCubeTexture = true;\r\n\r\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this.image;\r\n\r\n\t\t},\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tthis.image = value;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author Takahiro https://github.com/takahirox\r\n\t */\r\n\r\n\tfunction DataTexture2DArray( data, width, height, depth ) {\r\n\r\n\t\tTexture.call( this, null );\r\n\r\n\t\tthis.image = { data: data, width: width, height: height, depth: depth };\r\n\r\n\t\tthis.magFilter = NearestFilter;\r\n\t\tthis.minFilter = NearestFilter;\r\n\r\n\t\tthis.wrapR = ClampToEdgeWrapping;\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\t\tthis.flipY = false;\r\n\r\n\t}\r\n\r\n\tDataTexture2DArray.prototype = Object.create( Texture.prototype );\r\n\tDataTexture2DArray.prototype.constructor = DataTexture2DArray;\r\n\tDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n\t/**\r\n\t * @author Artur Trzesiok\r\n\t */\r\n\r\n\tfunction DataTexture3D( data, width, height, depth ) {\r\n\r\n\t\t// We're going to add .setXXX() methods for setting properties later.\r\n\t\t// Users can still set in DataTexture3D directly.\r\n\t\t//\r\n\t\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\r\n\t\t// \ttexture.anisotropy = 16;\r\n\t\t//\r\n\t\t// See #14839\r\n\r\n\t\tTexture.call( this, null );\r\n\r\n\t\tthis.image = { data: data, width: width, height: height, depth: depth };\r\n\r\n\t\tthis.magFilter = NearestFilter;\r\n\t\tthis.minFilter = NearestFilter;\r\n\r\n\t\tthis.wrapR = ClampToEdgeWrapping;\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\t\tthis.flipY = false;\r\n\r\n\t}\r\n\r\n\tDataTexture3D.prototype = Object.create( Texture.prototype );\r\n\tDataTexture3D.prototype.constructor = DataTexture3D;\r\n\tDataTexture3D.prototype.isDataTexture3D = true;\n\n\t/**\r\n\t * @author tschw\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * Uniforms of a program.\r\n\t * Those form a tree structure with a special top-level container for the root,\r\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\r\n\t *\r\n\t *\r\n\t * Properties of inner nodes including the top-level container:\r\n\t *\r\n\t * .seq - array of nested uniforms\r\n\t * .map - nested uniforms by name\r\n\t *\r\n\t *\r\n\t * Methods of all nodes except the top-level container:\r\n\t *\r\n\t * .setValue( gl, value, [textures] )\r\n\t *\r\n\t * \t\tuploads a uniform value(s)\r\n\t *  \tthe 'textures' parameter is needed for sampler uniforms\r\n\t *\r\n\t *\r\n\t * Static methods of the top-level container (textures factorizations):\r\n\t *\r\n\t * .upload( gl, seq, values, textures )\r\n\t *\r\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n\t *\r\n\t * .seqWithValue( seq, values ) : filteredSeq\r\n\t *\r\n\t * \t\tfilters 'seq' entries with corresponding entry in values\r\n\t *\r\n\t *\r\n\t * Methods of the top-level container (textures factorizations):\r\n\t *\r\n\t * .setValue( gl, name, value, textures )\r\n\t *\r\n\t * \t\tsets uniform with  name 'name' to 'value'\r\n\t *\r\n\t * .setOptional( gl, obj, prop )\r\n\t *\r\n\t * \t\tlike .set for an optional property of the object\r\n\t *\r\n\t */\r\n\r\n\tvar emptyTexture = new Texture();\r\n\tvar emptyTexture2dArray = new DataTexture2DArray();\r\n\tvar emptyTexture3d = new DataTexture3D();\r\n\tvar emptyCubeTexture = new CubeTexture();\r\n\r\n\t// --- Utilities ---\r\n\r\n\t// Array Caches (provide typed arrays for temporary by size)\r\n\r\n\tvar arrayCacheF32 = [];\r\n\tvar arrayCacheI32 = [];\r\n\r\n\t// Float32Array caches used for uploading Matrix uniforms\r\n\r\n\tvar mat4array = new Float32Array( 16 );\r\n\tvar mat3array = new Float32Array( 9 );\r\n\tvar mat2array = new Float32Array( 4 );\r\n\r\n\t// Flattening for arrays of vectors and matrices\r\n\r\n\tfunction flatten( array, nBlocks, blockSize ) {\r\n\r\n\t\tvar firstElem = array[ 0 ];\r\n\r\n\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\r\n\t\t// unoptimized: ! isNaN( firstElem )\r\n\t\t// see http://jacksondunstan.com/articles/983\r\n\r\n\t\tvar n = nBlocks * blockSize,\r\n\t\t\tr = arrayCacheF32[ n ];\r\n\r\n\t\tif ( r === undefined ) {\r\n\r\n\t\t\tr = new Float32Array( n );\r\n\t\t\tarrayCacheF32[ n ] = r;\r\n\r\n\t\t}\r\n\r\n\t\tif ( nBlocks !== 0 ) {\r\n\r\n\t\t\tfirstElem.toArray( r, 0 );\r\n\r\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\r\n\r\n\t\t\t\toffset += blockSize;\r\n\t\t\t\tarray[ i ].toArray( r, offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\r\n\t}\r\n\r\n\tfunction arraysEqual( a, b ) {\r\n\r\n\t\tif ( a.length !== b.length ) return false;\r\n\r\n\t\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( a[ i ] !== b[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction copyArray( a, b ) {\r\n\r\n\t\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\r\n\r\n\t\t\ta[ i ] = b[ i ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Texture unit allocation\r\n\r\n\tfunction allocTexUnits( textures, n ) {\r\n\r\n\t\tvar r = arrayCacheI32[ n ];\r\n\r\n\t\tif ( r === undefined ) {\r\n\r\n\t\t\tr = new Int32Array( n );\r\n\t\t\tarrayCacheI32[ n ] = r;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i !== n; ++ i )\r\n\t\t\tr[ i ] = textures.allocateTextureUnit();\r\n\r\n\t\treturn r;\r\n\r\n\t}\r\n\r\n\t// --- Setters ---\r\n\r\n\t// Note: Defining these methods externally, because they come in a bunch\r\n\t// and this way their names minify.\r\n\r\n\t// Single scalar\r\n\r\n\tfunction setValue1f( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( cache[ 0 ] === v ) return;\r\n\r\n\t\tgl.uniform1f( this.addr, v );\r\n\r\n\t\tcache[ 0 ] = v;\r\n\r\n\t}\r\n\r\n\tfunction setValue1i( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( cache[ 0 ] === v ) return;\r\n\r\n\t\tgl.uniform1i( this.addr, v );\r\n\r\n\t\tcache[ 0 ] = v;\r\n\r\n\t}\r\n\r\n\t// Single float vector (from flat array or THREE.VectorN)\r\n\r\n\tfunction setValue2fv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( v.x !== undefined ) {\r\n\r\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\r\n\r\n\t\t\t\tgl.uniform2f( this.addr, v.x, v.y );\r\n\r\n\t\t\t\tcache[ 0 ] = v.x;\r\n\t\t\t\tcache[ 1 ] = v.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniform2fv( this.addr, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setValue3fv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( v.x !== undefined ) {\r\n\r\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\r\n\r\n\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\r\n\r\n\t\t\t\tcache[ 0 ] = v.x;\r\n\t\t\t\tcache[ 1 ] = v.y;\r\n\t\t\t\tcache[ 2 ] = v.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( v.r !== undefined ) {\r\n\r\n\t\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\r\n\r\n\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\r\n\r\n\t\t\t\tcache[ 0 ] = v.r;\r\n\t\t\t\tcache[ 1 ] = v.g;\r\n\t\t\t\tcache[ 2 ] = v.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniform3fv( this.addr, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setValue4fv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( v.x !== undefined ) {\r\n\r\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\r\n\r\n\t\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\r\n\r\n\t\t\t\tcache[ 0 ] = v.x;\r\n\t\t\t\tcache[ 1 ] = v.y;\r\n\t\t\t\tcache[ 2 ] = v.z;\r\n\t\t\t\tcache[ 3 ] = v.w;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniform4fv( this.addr, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Single matrix (from flat array or MatrixN)\r\n\r\n\tfunction setValue2fm( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar elements = v.elements;\r\n\r\n\t\tif ( elements === undefined ) {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniformMatrix2fv( this.addr, false, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\t\tmat2array.set( elements );\r\n\r\n\t\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\r\n\r\n\t\t\tcopyArray( cache, elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setValue3fm( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar elements = v.elements;\r\n\r\n\t\tif ( elements === undefined ) {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\t\tmat3array.set( elements );\r\n\r\n\t\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\r\n\r\n\t\t\tcopyArray( cache, elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setValue4fm( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar elements = v.elements;\r\n\r\n\t\tif ( elements === undefined ) {\r\n\r\n\t\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v );\r\n\r\n\t\t\tcopyArray( cache, v );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\t\tmat4array.set( elements );\r\n\r\n\t\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\r\n\r\n\t\t\tcopyArray( cache, elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Single texture (2D / Cube)\r\n\r\n\tfunction setValueT1( gl, v, textures ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar unit = textures.allocateTextureUnit();\r\n\r\n\t\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\t\tgl.uniform1i( this.addr, unit );\r\n\t\t\tcache[ 0 ] = unit;\r\n\r\n\t\t}\r\n\r\n\t\ttextures.safeSetTexture2D( v || emptyTexture, unit );\r\n\r\n\t}\r\n\r\n\tfunction setValueT2DArray1( gl, v, textures ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar unit = textures.allocateTextureUnit();\r\n\r\n\t\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\t\tgl.uniform1i( this.addr, unit );\r\n\t\t\tcache[ 0 ] = unit;\r\n\r\n\t\t}\r\n\r\n\t\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\r\n\r\n\t}\r\n\r\n\tfunction setValueT3D1( gl, v, textures ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar unit = textures.allocateTextureUnit();\r\n\r\n\t\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\t\tgl.uniform1i( this.addr, unit );\r\n\t\t\tcache[ 0 ] = unit;\r\n\r\n\t\t}\r\n\r\n\t\ttextures.setTexture3D( v || emptyTexture3d, unit );\r\n\r\n\t}\r\n\r\n\tfunction setValueT6( gl, v, textures ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar unit = textures.allocateTextureUnit();\r\n\r\n\t\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\t\tgl.uniform1i( this.addr, unit );\r\n\t\t\tcache[ 0 ] = unit;\r\n\r\n\t\t}\r\n\r\n\t\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\r\n\r\n\t}\r\n\r\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\r\n\r\n\tfunction setValue2iv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform2iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n\tfunction setValue3iv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform3iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n\tfunction setValue4iv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform4iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n\t// Helper to pick the right setter for the singular case\r\n\r\n\tfunction getSingularSetter( type ) {\r\n\r\n\t\tswitch ( type ) {\r\n\r\n\t\t\tcase 0x1406: return setValue1f; // FLOAT\r\n\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\r\n\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\r\n\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\r\n\r\n\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\r\n\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\r\n\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\r\n\r\n\t\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\r\n\t\t\tcase 0x8b5f: return setValueT3D1; // SAMPLER_3D\r\n\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\r\n\t\t\tcase 0x8DC1: return setValueT2DArray1; // SAMPLER_2D_ARRAY\r\n\r\n\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\r\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\r\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\r\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Array of scalars\r\n\r\n\tfunction setValue1fv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform1fv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\tfunction setValue1iv( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform1iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n\t// Array of vectors (flat or from THREE classes)\r\n\r\n\tfunction setValueV2a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 2 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniform2fv( this.addr, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\tfunction setValueV3a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 3 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniform3fv( this.addr, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\tfunction setValueV4a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 4 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniform4fv( this.addr, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\t// Array of matrices (flat or from THREE clases)\r\n\r\n\tfunction setValueM2a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 4 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniformMatrix2fv( this.addr, false, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\tfunction setValueM3a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 9 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniformMatrix3fv( this.addr, false, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\tfunction setValueM4a( gl, v ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar data = flatten( v, this.size, 16 );\r\n\r\n\t\tif ( arraysEqual( cache, data ) ) return;\r\n\r\n\t\tgl.uniformMatrix4fv( this.addr, false, data );\r\n\r\n\t\tthis.updateCache( data );\r\n\r\n\t}\r\n\r\n\t// Array of textures (2D / Cube)\r\n\r\n\tfunction setValueT1a( gl, v, textures ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar n = v.length;\r\n\r\n\t\tvar units = allocTexUnits( textures, n );\r\n\r\n\t\tif ( arraysEqual( cache, units ) === false ) {\r\n\r\n\t\t\tgl.uniform1iv( this.addr, units );\r\n\t\t\tcopyArray( cache, units );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setValueT6a( gl, v, textures ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\t\tvar n = v.length;\r\n\r\n\t\tvar units = allocTexUnits( textures, n );\r\n\r\n\t\tif ( arraysEqual( cache, units ) === false ) {\r\n\r\n\t\t\tgl.uniform1iv( this.addr, units );\r\n\t\t\tcopyArray( cache, units );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Helper to pick the right setter for a pure (bottom-level) array\r\n\r\n\tfunction getPureArraySetter( type ) {\r\n\r\n\t\tswitch ( type ) {\r\n\r\n\t\t\tcase 0x1406: return setValue1fv; // FLOAT\r\n\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\r\n\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\r\n\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\r\n\r\n\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\r\n\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\r\n\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\r\n\r\n\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\r\n\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\r\n\r\n\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\r\n\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\r\n\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\r\n\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// --- Uniform Classes ---\r\n\r\n\tfunction SingleUniform( id, activeInfo, addr ) {\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.addr = addr;\r\n\t\tthis.cache = [];\r\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\r\n\r\n\t\t// this.path = activeInfo.name; // DEBUG\r\n\r\n\t}\r\n\r\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.addr = addr;\r\n\t\tthis.cache = [];\r\n\t\tthis.size = activeInfo.size;\r\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\r\n\r\n\t\t// this.path = activeInfo.name; // DEBUG\r\n\r\n\t}\r\n\r\n\tPureArrayUniform.prototype.updateCache = function ( data ) {\r\n\r\n\t\tvar cache = this.cache;\r\n\r\n\t\tif ( data instanceof Float32Array && cache.length !== data.length ) {\r\n\r\n\t\t\tthis.cache = new Float32Array( data.length );\r\n\r\n\t\t}\r\n\r\n\t\tcopyArray( cache, data );\r\n\r\n\t};\r\n\r\n\tfunction StructuredUniform( id ) {\r\n\r\n\t\tthis.id = id;\r\n\r\n\t\tthis.seq = [];\r\n\t\tthis.map = {};\r\n\r\n\t}\r\n\r\n\tStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\r\n\r\n\t\tvar seq = this.seq;\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ];\r\n\t\t\tu.setValue( gl, value[ u.id ], textures );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// --- Top-level ---\r\n\r\n\t// Parser - builds up the property tree from the path strings\r\n\r\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\r\n\r\n\t// extracts\r\n\t// \t- the identifier (member name or array index)\r\n\t//  - followed by an optional right bracket (found when array index)\r\n\t//  - followed by an optional left bracket or dot (type of subscript)\r\n\t//\r\n\t// Note: These portions can be read in a non-overlapping fashion and\r\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\r\n\t// in the uniform names.\r\n\r\n\tfunction addUniform( container, uniformObject ) {\r\n\r\n\t\tcontainer.seq.push( uniformObject );\r\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\r\n\r\n\t}\r\n\r\n\tfunction parseUniform( activeInfo, addr, container ) {\r\n\r\n\t\tvar path = activeInfo.name,\r\n\t\t\tpathLength = path.length;\r\n\r\n\t\t// reset RegExp object, because of the early exit of a previous run\r\n\t\tRePathPart.lastIndex = 0;\r\n\r\n\t\twhile ( true ) {\r\n\r\n\t\t\tvar match = RePathPart.exec( path ),\r\n\t\t\t\tmatchEnd = RePathPart.lastIndex,\r\n\r\n\t\t\t\tid = match[ 1 ],\r\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\r\n\t\t\t\tsubscript = match[ 3 ];\r\n\r\n\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\r\n\r\n\t\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\r\n\r\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\r\n\r\n\t\t\t\taddUniform( container, subscript === undefined ?\r\n\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\r\n\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// step into inner node / create it in case it doesn't exist\r\n\r\n\t\t\t\tvar map = container.map, next = map[ id ];\r\n\r\n\t\t\t\tif ( next === undefined ) {\r\n\r\n\t\t\t\t\tnext = new StructuredUniform( id );\r\n\t\t\t\t\taddUniform( container, next );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontainer = next;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Root Container\r\n\r\n\tfunction WebGLUniforms( gl, program ) {\r\n\r\n\t\tthis.seq = [];\r\n\t\tthis.map = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, 35718 );\r\n\r\n\t\tfor ( var i = 0; i < n; ++ i ) {\r\n\r\n\t\t\tvar info = gl.getActiveUniform( program, i ),\r\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\r\n\r\n\t\t\tparseUniform( info, addr, this );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\r\n\r\n\t\tvar u = this.map[ name ];\r\n\r\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\r\n\r\n\t\tvar v = object[ name ];\r\n\r\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\r\n\r\n\t};\r\n\r\n\r\n\t// Static interface\r\n\r\n\tWebGLUniforms.upload = function ( gl, seq, values, textures ) {\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ],\r\n\t\t\t\tv = values[ u.id ];\r\n\r\n\t\t\tif ( v.needsUpdate !== false ) {\r\n\r\n\t\t\t\t// note: always updating when .needsUpdate is undefined\r\n\t\t\t\tu.setValue( gl, v.value, textures );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.seqWithValue = function ( seq, values ) {\r\n\r\n\t\tvar r = [];\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ];\r\n\t\t\tif ( u.id in values ) r.push( u );\r\n\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\r\n\t};\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction addLineNumbers( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction WebGLShader( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type );\r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, 35713 ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === 35633 ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tfunction getEncodingComponents( encoding ) {\r\n\r\n\t\tswitch ( encoding ) {\r\n\r\n\t\t\tcase LinearEncoding:\r\n\t\t\t\treturn [ 'Linear', '( value )' ];\r\n\t\t\tcase sRGBEncoding:\r\n\t\t\t\treturn [ 'sRGB', '( value )' ];\r\n\t\t\tcase RGBEEncoding:\r\n\t\t\t\treturn [ 'RGBE', '( value )' ];\r\n\t\t\tcase RGBM7Encoding:\r\n\t\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\r\n\t\t\tcase RGBM16Encoding:\r\n\t\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\r\n\t\t\tcase RGBDEncoding:\r\n\t\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\r\n\t\t\tcase GammaEncoding:\r\n\t\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\r\n\r\n\t\tvar components = getEncodingComponents( encoding );\r\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\r\n\r\n\t}\r\n\r\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\r\n\r\n\t\tvar components = getEncodingComponents( encoding );\r\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\r\n\r\n\t}\r\n\r\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\r\n\r\n\t\tvar toneMappingName;\r\n\r\n\t\tswitch ( toneMapping ) {\r\n\r\n\t\t\tcase LinearToneMapping:\r\n\t\t\t\ttoneMappingName = 'Linear';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ReinhardToneMapping:\r\n\t\t\t\ttoneMappingName = 'Reinhard';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase Uncharted2ToneMapping:\r\n\t\t\t\ttoneMappingName = 'Uncharted2';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase CineonToneMapping:\r\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase ACESFilmicToneMapping:\r\n\t\t\t\ttoneMappingName = 'ACESFilmic';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\r\n\r\n\t\t}\r\n\r\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\r\n\r\n\t}\r\n\r\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\r\n\r\n\t\textensions = extensions || {};\r\n\r\n\t\tvar chunks = [\r\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\r\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\r\n\t\t];\r\n\r\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction generateDefines( defines ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tfor ( var name in defines ) {\r\n\r\n\t\t\tvar value = defines[ name ];\r\n\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations( gl, program ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, 35721 );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\tvar name = info.name;\r\n\r\n\t\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\r\n\r\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t}\r\n\r\n\tfunction filterEmptyLine( string ) {\r\n\r\n\t\treturn string !== '';\r\n\r\n\t}\r\n\r\n\tfunction replaceLightNums( string, parameters ) {\r\n\r\n\t\treturn string\r\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\r\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\r\n\t\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\r\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\r\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\r\n\r\n\t}\r\n\r\n\tfunction replaceClippingPlaneNums( string, parameters ) {\r\n\r\n\t\treturn string\r\n\t\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\r\n\t\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\r\n\r\n\t}\r\n\r\n\tfunction parseIncludes( string ) {\r\n\r\n\t\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\r\n\r\n\t\tfunction replace( match, include ) {\r\n\r\n\t\t\tvar replace = ShaderChunk[ include ];\r\n\r\n\t\t\tif ( replace === undefined ) {\r\n\r\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn parseIncludes( replace );\r\n\r\n\t\t}\r\n\r\n\t\treturn string.replace( pattern, replace );\r\n\r\n\t}\r\n\r\n\tfunction unrollLoops( string ) {\r\n\r\n\t\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\r\n\r\n\t\tfunction replace( match, start, end, snippet ) {\r\n\r\n\t\t\tvar unroll = '';\r\n\r\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\r\n\r\n\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn unroll;\r\n\r\n\t\t}\r\n\r\n\t\treturn string.replace( pattern, replace );\r\n\r\n\t}\r\n\r\n\tfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities, textures ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar defines = material.defines;\r\n\r\n\t\tvar vertexShader = shader.vertexShader;\r\n\t\tvar fragmentShader = shader.fragmentShader;\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase CubeReflectionMapping:\r\n\t\t\t\tcase CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase CubeUVReflectionMapping:\r\n\t\t\t\tcase CubeUVRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase EquirectangularReflectionMapping:\r\n\t\t\t\tcase EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase CubeRefractionMapping:\r\n\t\t\t\tcase EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar prefixVertex, prefixFragment;\r\n\r\n\t\tif ( material.isRawShaderMaterial ) {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\tcustomDefines\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tif ( prefixVertex.length > 0 ) {\r\n\r\n\t\t\t\tprefixVertex += '\\n';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tcustomExtensions,\r\n\t\t\t\tcustomDefines\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tif ( prefixFragment.length > 0 ) {\r\n\r\n\t\t\t\tprefixFragment += '\\n';\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\r\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\r\n\t\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t\t'#ifdef USE_TANGENT',\r\n\r\n\t\t\t\t'\tattribute vec4 tangent;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tcustomExtensions,\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\r\n\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\r\n\t\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\r\n\r\n\t\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\tparameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\r\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\r\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\r\n\r\n\t\t\t\tparameters.dithering ? '#define DITHERING' : '',\r\n\r\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ?\r\n\t\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\r\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\r\n\t\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\r\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\r\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\r\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\r\n\r\n\t\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvertexShader = parseIncludes( vertexShader );\r\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\r\n\t\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\r\n\r\n\t\tfragmentShader = parseIncludes( fragmentShader );\r\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\r\n\t\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\r\n\r\n\t\tvertexShader = unrollLoops( vertexShader );\r\n\t\tfragmentShader = unrollLoops( fragmentShader );\r\n\r\n\t\tif ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) {\r\n\r\n\t\t\tvar isGLSL3ShaderMaterial = false;\r\n\r\n\t\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\r\n\r\n\t\t\tif ( material.isShaderMaterial &&\r\n\t\t\t\tvertexShader.match( versionRegex ) !== null &&\r\n\t\t\t\tfragmentShader.match( versionRegex ) !== null ) {\r\n\r\n\t\t\t\tisGLSL3ShaderMaterial = true;\r\n\r\n\t\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\r\n\t\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// GLSL 3.0 conversion\r\n\t\t\tprefixVertex = [\r\n\t\t\t\t'#version 300 es\\n',\r\n\t\t\t\t'#define attribute in',\r\n\t\t\t\t'#define varying out',\r\n\t\t\t\t'#define texture2D texture'\r\n\t\t\t].join( '\\n' ) + '\\n' + prefixVertex;\r\n\r\n\t\t\tprefixFragment = [\r\n\t\t\t\t'#version 300 es\\n',\r\n\t\t\t\t'#define varying in',\r\n\t\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\r\n\t\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\r\n\t\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\r\n\t\t\t\t'#define texture2D texture',\r\n\t\t\t\t'#define textureCube texture',\r\n\t\t\t\t'#define texture2DProj textureProj',\r\n\t\t\t\t'#define texture2DLodEXT textureLod',\r\n\t\t\t\t'#define texture2DProjLodEXT textureProjLod',\r\n\t\t\t\t'#define textureCubeLodEXT textureLod',\r\n\t\t\t\t'#define texture2DGradEXT textureGrad',\r\n\t\t\t\t'#define texture2DProjGradEXT textureProjGrad',\r\n\t\t\t\t'#define textureCubeGradEXT textureGrad'\r\n\t\t\t].join( '\\n' ) + '\\n' + prefixFragment;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n\t\t// console.log( '*VERTEX*', vertexGlsl );\r\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\r\n\r\n\t\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\r\n\t\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\r\n\r\n\t\tgl.attachShader( program, glVertexShader );\r\n\t\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\r\n\t\tif ( material.index0AttributeName !== undefined ) {\r\n\r\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n\t\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t\t}\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\tvar programLog = gl.getProgramInfoLog( program ).trim();\r\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\r\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\r\n\r\n\t\tvar runnable = true;\r\n\t\tvar haveDiagnostics = true;\r\n\r\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\r\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\r\n\r\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\t\t\t\tmaterial: material,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\t// set up caching for uniform locations\r\n\r\n\t\tvar cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function () {\r\n\r\n\t\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t\tcachedUniforms = new WebGLUniforms( gl, program, textures );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\r\n\t\t};\r\n\r\n\t\t// set up caching for attribute locations\r\n\r\n\t\tvar cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function () {\r\n\r\n\t\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\r\n\t\t};\r\n\r\n\t\t// free resource\r\n\r\n\t\tthis.destroy = function () {\r\n\r\n\t\t\tgl.deleteProgram( program );\r\n\t\t\tthis.program = undefined;\r\n\r\n\t\t};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tObject.defineProperties( this, {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tget: function () {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\treturn this.getUniforms();\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tget: function () {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\treturn this.getAttributes();\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\r\n\t\t//\r\n\r\n\t\tthis.name = shader.name;\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLPrograms( renderer, extensions, capabilities, textures ) {\r\n\r\n\t\tvar programs = [];\r\n\r\n\t\tvar shaderIDs = {\r\n\t\t\tMeshDepthMaterial: 'depth',\r\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\r\n\t\t\tMeshNormalMaterial: 'normal',\r\n\t\t\tMeshBasicMaterial: 'basic',\r\n\t\t\tMeshLambertMaterial: 'lambert',\r\n\t\t\tMeshPhongMaterial: 'phong',\r\n\t\t\tMeshToonMaterial: 'phong',\r\n\t\t\tMeshStandardMaterial: 'physical',\r\n\t\t\tMeshPhysicalMaterial: 'physical',\r\n\t\t\tMeshMatcapMaterial: 'matcap',\r\n\t\t\tLineBasicMaterial: 'basic',\r\n\t\t\tLineDashedMaterial: 'dashed',\r\n\t\t\tPointsMaterial: 'points',\r\n\t\t\tShadowMaterial: 'shadow',\r\n\t\t\tSpriteMaterial: 'sprite'\r\n\t\t};\r\n\r\n\t\tvar parameterNames = [\r\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\r\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\r\n\t\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\r\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\r\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\r\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\r\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\r\n\t\t];\r\n\r\n\r\n\t\tfunction allocateBones( object ) {\r\n\r\n\t\t\tvar skeleton = object.skeleton;\r\n\t\t\tvar bones = skeleton.bones;\r\n\r\n\t\t\tif ( capabilities.floatVertexTextures ) {\r\n\r\n\t\t\t\treturn 1024;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// default for when object is not specified\r\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t\t//\r\n\t\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\r\n\r\n\t\t\t\tif ( maxBones < bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\r\n\t\t\t\t\treturn 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn maxBones;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\r\n\r\n\t\t\tvar encoding;\r\n\r\n\t\t\tif ( ! map ) {\r\n\r\n\t\t\t\tencoding = LinearEncoding;\r\n\r\n\t\t\t} else if ( map.isTexture ) {\r\n\r\n\t\t\t\tencoding = map.encoding;\r\n\r\n\t\t\t} else if ( map.isWebGLRenderTarget ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\r\n\t\t\t\tencoding = map.texture.encoding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\r\n\t\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\r\n\r\n\t\t\t\tencoding = GammaEncoding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn encoding;\r\n\r\n\t\t}\r\n\r\n\t\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\r\n\r\n\t\t\tvar shaderID = shaderIDs[ material.type ];\r\n\r\n\t\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t\t// (not to blow over maxLights budget)\r\n\r\n\t\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\r\n\t\t\tvar precision = capabilities.precision;\r\n\r\n\t\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\t\tvar parameters = {\r\n\r\n\t\t\t\tshaderID: shaderID,\r\n\r\n\t\t\t\tprecision: precision,\r\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\r\n\t\t\t\tmap: !! material.map,\r\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\r\n\t\t\t\tmatcap: !! material.matcap,\r\n\t\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ),\r\n\t\t\t\tenvMap: !! material.envMap,\r\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\r\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\r\n\t\t\t\tlightMap: !! material.lightMap,\r\n\t\t\t\taoMap: !! material.aoMap,\r\n\t\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\r\n\t\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\r\n\t\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\t\troughnessMap: !! material.roughnessMap,\r\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\r\n\t\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\t\tgradientMap: !! material.gradientMap,\r\n\r\n\t\t\t\tcombine: material.combine,\r\n\r\n\t\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\r\n\t\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\t\tfog: !! fog,\r\n\t\t\t\tuseFog: material.fog,\r\n\t\t\t\tfogExp: ( fog && fog.isFogExp2 ),\r\n\r\n\t\t\t\tflatShading: material.flatShading,\r\n\r\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n\t\t\t\tskinning: material.skinning && maxBones > 0,\r\n\t\t\t\tmaxBones: maxBones,\r\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\r\n\r\n\t\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n\t\t\t\tnumDirLights: lights.directional.length,\r\n\t\t\t\tnumPointLights: lights.point.length,\r\n\t\t\t\tnumSpotLights: lights.spot.length,\r\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\r\n\t\t\t\tnumHemiLights: lights.hemi.length,\r\n\r\n\t\t\t\tnumClippingPlanes: nClipPlanes,\r\n\t\t\t\tnumClipIntersection: nClipIntersection,\r\n\r\n\t\t\t\tdithering: material.dithering,\r\n\r\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\r\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\r\n\t\t\t\ttoneMapping: renderer.toneMapping,\r\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\r\n\r\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\r\n\r\n\t\t\t\talphaTest: material.alphaTest,\r\n\t\t\t\tdoubleSided: material.side === DoubleSide,\r\n\t\t\t\tflipSided: material.side === BackSide,\r\n\r\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\r\n\r\n\t\t\t};\r\n\r\n\t\t\treturn parameters;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n\t\t\tvar array = [];\r\n\r\n\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\tarray.push( parameters.shaderID );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tarray.push( material.fragmentShader );\r\n\t\t\t\tarray.push( material.vertexShader );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\t\tarray.push( name );\r\n\t\t\t\t\tarray.push( material.defines[ name ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray.push( material.onBeforeCompile.toString() );\r\n\r\n\t\t\tarray.push( renderer.gammaOutput );\r\n\r\n\t\t\tarray.push( renderer.gammaFactor );\r\n\r\n\t\t\treturn array.join();\r\n\r\n\t\t};\r\n\r\n\t\tthis.acquireProgram = function ( material, shader, parameters, code ) {\r\n\r\n\t\t\tvar program;\r\n\r\n\t\t\t// Check if code has been already compiled\r\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\t\tvar programInfo = programs[ p ];\r\n\r\n\t\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\t\tprogram = programInfo;\r\n\t\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( program === undefined ) {\r\n\r\n\t\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities, textures );\r\n\t\t\t\tprograms.push( program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn program;\r\n\r\n\t\t};\r\n\r\n\t\tthis.releaseProgram = function ( program ) {\r\n\r\n\t\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t\t// Remove from unordered set\r\n\t\t\t\tvar i = programs.indexOf( program );\r\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\t\tprograms.pop();\r\n\r\n\t\t\t\t// Free WebGL resources\r\n\t\t\t\tprogram.destroy();\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\tthis.programs = programs;\r\n\r\n\t}\n\n\t/**\r\n\t * @author fordacious / fordacious.github.io\r\n\t */\r\n\r\n\tfunction WebGLProperties() {\r\n\r\n\t\tvar properties = new WeakMap();\r\n\r\n\t\tfunction get( object ) {\r\n\r\n\t\t\tvar map = properties.get( object );\r\n\r\n\t\t\tif ( map === undefined ) {\r\n\r\n\t\t\t\tmap = {};\r\n\t\t\t\tproperties.set( object, map );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn map;\r\n\r\n\t\t}\r\n\r\n\t\tfunction remove( object ) {\r\n\r\n\t\t\tproperties.delete( object );\r\n\r\n\t\t}\r\n\r\n\t\tfunction update( object, key, value ) {\r\n\r\n\t\t\tproperties.get( object )[ key ] = value;\r\n\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\r\n\t\t\tproperties = new WeakMap();\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tremove: remove,\r\n\t\t\tupdate: update,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction painterSortStable( a, b ) {\r\n\r\n\t\tif ( a.groupOrder !== b.groupOrder ) {\r\n\r\n\t\t\treturn a.groupOrder - b.groupOrder;\r\n\r\n\t\t} else if ( a.renderOrder !== b.renderOrder ) {\r\n\r\n\t\t\treturn a.renderOrder - b.renderOrder;\r\n\r\n\t\t} else if ( a.program !== b.program ) {\r\n\r\n\t\t\treturn a.program.id - b.program.id;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable( a, b ) {\r\n\r\n\t\tif ( a.groupOrder !== b.groupOrder ) {\r\n\r\n\t\t\treturn a.groupOrder - b.groupOrder;\r\n\r\n\t\t} else if ( a.renderOrder !== b.renderOrder ) {\r\n\r\n\t\t\treturn a.renderOrder - b.renderOrder;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction WebGLRenderList() {\r\n\r\n\t\tvar renderItems = [];\r\n\t\tvar renderItemsIndex = 0;\r\n\r\n\t\tvar opaque = [];\r\n\t\tvar transparent = [];\r\n\r\n\t\tvar defaultProgram = { id: - 1 };\r\n\r\n\t\tfunction init() {\r\n\r\n\t\t\trenderItemsIndex = 0;\r\n\r\n\t\t\topaque.length = 0;\r\n\t\t\ttransparent.length = 0;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\r\n\r\n\t\t\tvar renderItem = renderItems[ renderItemsIndex ];\r\n\r\n\t\t\tif ( renderItem === undefined ) {\r\n\r\n\t\t\t\trenderItem = {\r\n\t\t\t\t\tid: object.id,\r\n\t\t\t\t\tobject: object,\r\n\t\t\t\t\tgeometry: geometry,\r\n\t\t\t\t\tmaterial: material,\r\n\t\t\t\t\tprogram: material.program || defaultProgram,\r\n\t\t\t\t\tgroupOrder: groupOrder,\r\n\t\t\t\t\trenderOrder: object.renderOrder,\r\n\t\t\t\t\tz: z,\r\n\t\t\t\t\tgroup: group\r\n\t\t\t\t};\r\n\r\n\t\t\t\trenderItems[ renderItemsIndex ] = renderItem;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderItem.id = object.id;\r\n\t\t\t\trenderItem.object = object;\r\n\t\t\t\trenderItem.geometry = geometry;\r\n\t\t\t\trenderItem.material = material;\r\n\t\t\t\trenderItem.program = material.program || defaultProgram;\r\n\t\t\t\trenderItem.groupOrder = groupOrder;\r\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\r\n\t\t\t\trenderItem.z = z;\r\n\t\t\t\trenderItem.group = group;\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderItemsIndex ++;\r\n\r\n\t\t\treturn renderItem;\r\n\r\n\t\t}\r\n\r\n\t\tfunction push( object, geometry, material, groupOrder, z, group ) {\r\n\r\n\t\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\r\n\r\n\t\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\r\n\r\n\t\t}\r\n\r\n\t\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\r\n\r\n\t\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\r\n\r\n\t\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\r\n\r\n\t\t}\r\n\r\n\t\tfunction sort() {\r\n\r\n\t\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\r\n\t\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\topaque: opaque,\r\n\t\t\ttransparent: transparent,\r\n\r\n\t\t\tinit: init,\r\n\t\t\tpush: push,\r\n\t\t\tunshift: unshift,\r\n\r\n\t\t\tsort: sort\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction WebGLRenderLists() {\r\n\r\n\t\tvar lists = {};\r\n\r\n\t\tfunction onSceneDispose( event ) {\r\n\r\n\t\t\tvar scene = event.target;\r\n\r\n\t\t\tscene.removeEventListener( 'dispose', onSceneDispose );\r\n\r\n\t\t\tdelete lists[ scene.id ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction get( scene, camera ) {\r\n\r\n\t\t\tvar cameras = lists[ scene.id ];\r\n\t\t\tvar list;\r\n\t\t\tif ( cameras === undefined ) {\r\n\r\n\t\t\t\tlist = new WebGLRenderList();\r\n\t\t\t\tlists[ scene.id ] = {};\r\n\t\t\t\tlists[ scene.id ][ camera.id ] = list;\r\n\r\n\t\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlist = cameras[ camera.id ];\r\n\t\t\t\tif ( list === undefined ) {\r\n\r\n\t\t\t\t\tlist = new WebGLRenderList();\r\n\t\t\t\t\tcameras[ camera.id ] = list;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\r\n\t\t\tlists = {};\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction UniformsCache() {\r\n\r\n\t\tvar lights = {};\r\n\r\n\t\treturn {\r\n\r\n\t\t\tget: function ( light ) {\r\n\r\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\r\n\r\n\t\t\t\t\treturn lights[ light.id ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar uniforms;\r\n\r\n\t\t\t\tswitch ( light.type ) {\r\n\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\r\n\t\t\t\t\t\t\tshadow: false,\r\n\t\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\t\tconeCos: 0,\r\n\t\t\t\t\t\t\tpenumbraCos: 0,\r\n\t\t\t\t\t\t\tdecay: 0,\r\n\r\n\t\t\t\t\t\t\tshadow: false,\r\n\t\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\t\tdecay: 0,\r\n\r\n\t\t\t\t\t\t\tshadow: false,\r\n\t\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\r\n\t\t\t\t\t\t\tshadowCameraNear: 1,\r\n\t\t\t\t\t\t\tshadowCameraFar: 1000\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'HemisphereLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\t\tskyColor: new Color(),\r\n\t\t\t\t\t\t\tgroundColor: new Color()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RectAreaLight':\r\n\t\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\r\n\t\t\t\t\t\t\thalfHeight: new Vector3()\r\n\t\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlights[ light.id ] = uniforms;\r\n\r\n\t\t\t\treturn uniforms;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tvar count = 0;\r\n\r\n\tfunction WebGLLights() {\r\n\r\n\t\tvar cache = new UniformsCache();\r\n\r\n\t\tvar state = {\r\n\r\n\t\t\tid: count ++,\r\n\r\n\t\t\thash: {\r\n\t\t\t\tstateID: - 1,\r\n\t\t\t\tdirectionalLength: - 1,\r\n\t\t\t\tpointLength: - 1,\r\n\t\t\t\tspotLength: - 1,\r\n\t\t\t\trectAreaLength: - 1,\r\n\t\t\t\themiLength: - 1,\r\n\t\t\t\tshadowsLength: - 1\r\n\t\t\t},\r\n\r\n\t\t\tambient: [ 0, 0, 0 ],\r\n\t\t\tdirectional: [],\r\n\t\t\tdirectionalShadowMap: [],\r\n\t\t\tdirectionalShadowMatrix: [],\r\n\t\t\tspot: [],\r\n\t\t\tspotShadowMap: [],\r\n\t\t\tspotShadowMatrix: [],\r\n\t\t\trectArea: [],\r\n\t\t\tpoint: [],\r\n\t\t\tpointShadowMap: [],\r\n\t\t\tpointShadowMatrix: [],\r\n\t\t\themi: []\r\n\r\n\t\t};\r\n\r\n\t\tvar vector3 = new Vector3();\r\n\t\tvar matrix4 = new Matrix4();\r\n\t\tvar matrix42 = new Matrix4();\r\n\r\n\t\tfunction setup( lights, shadows, camera ) {\r\n\r\n\t\t\tvar r = 0, g = 0, b = 0;\r\n\r\n\t\t\tvar directionalLength = 0;\r\n\t\t\tvar pointLength = 0;\r\n\t\t\tvar spotLength = 0;\r\n\t\t\tvar rectAreaLength = 0;\r\n\t\t\tvar hemiLength = 0;\r\n\r\n\t\t\tvar viewMatrix = camera.matrixWorldInverse;\r\n\r\n\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tvar color = light.color;\r\n\t\t\t\tvar intensity = light.intensity;\r\n\t\t\t\tvar distance = light.distance;\r\n\r\n\t\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\r\n\r\n\t\t\t\tif ( light.isAmbientLight ) {\r\n\r\n\t\t\t\t\tr += color.r * intensity;\r\n\t\t\t\t\tg += color.g * intensity;\r\n\t\t\t\t\tb += color.b * intensity;\r\n\r\n\t\t\t\t} else if ( light.isDirectionalLight ) {\r\n\r\n\t\t\t\t\tvar uniforms = cache.get( light );\r\n\r\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\tuniforms.direction.sub( vector3 );\r\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\t\tvar shadow = light.shadow;\r\n\r\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\r\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\r\n\t\t\t\t\tstate.directional[ directionalLength ] = uniforms;\r\n\r\n\t\t\t\t\tdirectionalLength ++;\r\n\r\n\t\t\t\t} else if ( light.isSpotLight ) {\r\n\r\n\t\t\t\t\tvar uniforms = cache.get( light );\r\n\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\r\n\t\t\t\t\tuniforms.distance = distance;\r\n\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\tuniforms.direction.sub( vector3 );\r\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\r\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\r\n\t\t\t\t\tuniforms.decay = light.decay;\r\n\r\n\t\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\t\tvar shadow = light.shadow;\r\n\r\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\r\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\r\n\t\t\t\t\tstate.spot[ spotLength ] = uniforms;\r\n\r\n\t\t\t\t\tspotLength ++;\r\n\r\n\t\t\t\t} else if ( light.isRectAreaLight ) {\r\n\r\n\t\t\t\t\tvar uniforms = cache.get( light );\r\n\r\n\t\t\t\t\t// (a) intensity is the total visible light emitted\r\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\r\n\r\n\t\t\t\t\t// (b) intensity is the brightness of the light\r\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\r\n\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\t\t// extract local rotation of light to derive width/height half vectors\r\n\t\t\t\t\tmatrix42.identity();\r\n\t\t\t\t\tmatrix4.copy( light.matrixWorld );\r\n\t\t\t\t\tmatrix4.premultiply( viewMatrix );\r\n\t\t\t\t\tmatrix42.extractRotation( matrix4 );\r\n\r\n\t\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\r\n\t\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\r\n\r\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\r\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\r\n\r\n\t\t\t\t\t// TODO (abelnation): RectAreaLight distance?\r\n\t\t\t\t\t// uniforms.distance = distance;\r\n\r\n\t\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\r\n\r\n\t\t\t\t\trectAreaLength ++;\r\n\r\n\t\t\t\t} else if ( light.isPointLight ) {\r\n\r\n\t\t\t\t\tvar uniforms = cache.get( light );\r\n\r\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\t\tuniforms.distance = light.distance;\r\n\t\t\t\t\tuniforms.decay = light.decay;\r\n\r\n\t\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\t\tvar shadow = light.shadow;\r\n\r\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\r\n\t\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\r\n\t\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\r\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\r\n\t\t\t\t\tstate.point[ pointLength ] = uniforms;\r\n\r\n\t\t\t\t\tpointLength ++;\r\n\r\n\t\t\t\t} else if ( light.isHemisphereLight ) {\r\n\r\n\t\t\t\t\tvar uniforms = cache.get( light );\r\n\r\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\t\t\t\t\tuniforms.direction.normalize();\r\n\r\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\r\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\r\n\r\n\t\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\r\n\r\n\t\t\t\t\themiLength ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.ambient[ 0 ] = r;\r\n\t\t\tstate.ambient[ 1 ] = g;\r\n\t\t\tstate.ambient[ 2 ] = b;\r\n\r\n\t\t\tstate.directional.length = directionalLength;\r\n\t\t\tstate.spot.length = spotLength;\r\n\t\t\tstate.rectArea.length = rectAreaLength;\r\n\t\t\tstate.point.length = pointLength;\r\n\t\t\tstate.hemi.length = hemiLength;\r\n\r\n\t\t\tstate.hash.stateID = state.id;\r\n\t\t\tstate.hash.directionalLength = directionalLength;\r\n\t\t\tstate.hash.pointLength = pointLength;\r\n\t\t\tstate.hash.spotLength = spotLength;\r\n\t\t\tstate.hash.rectAreaLength = rectAreaLength;\r\n\t\t\tstate.hash.hemiLength = hemiLength;\r\n\t\t\tstate.hash.shadowsLength = shadows.length;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tsetup: setup,\r\n\t\t\tstate: state\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction WebGLRenderState() {\r\n\r\n\t\tvar lights = new WebGLLights();\r\n\r\n\t\tvar lightsArray = [];\r\n\t\tvar shadowsArray = [];\r\n\r\n\t\tfunction init() {\r\n\r\n\t\t\tlightsArray.length = 0;\r\n\t\t\tshadowsArray.length = 0;\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushLight( light ) {\r\n\r\n\t\t\tlightsArray.push( light );\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushShadow( shadowLight ) {\r\n\r\n\t\t\tshadowsArray.push( shadowLight );\r\n\r\n\t\t}\r\n\r\n\t\tfunction setupLights( camera ) {\r\n\r\n\t\t\tlights.setup( lightsArray, shadowsArray, camera );\r\n\r\n\t\t}\r\n\r\n\t\tvar state = {\r\n\t\t\tlightsArray: lightsArray,\r\n\t\t\tshadowsArray: shadowsArray,\r\n\r\n\t\t\tlights: lights\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\tinit: init,\r\n\t\t\tstate: state,\r\n\t\t\tsetupLights: setupLights,\r\n\r\n\t\t\tpushLight: pushLight,\r\n\t\t\tpushShadow: pushShadow\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction WebGLRenderStates() {\r\n\r\n\t\tvar renderStates = {};\r\n\r\n\t\tfunction onSceneDispose( event ) {\r\n\r\n\t\t\tvar scene = event.target;\r\n\r\n\t\t\tscene.removeEventListener( 'dispose', onSceneDispose );\r\n\r\n\t\t\tdelete renderStates[ scene.id ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction get( scene, camera ) {\r\n\r\n\t\t\tvar renderState;\r\n\r\n\t\t\tif ( renderStates[ scene.id ] === undefined ) {\r\n\r\n\t\t\t\trenderState = new WebGLRenderState();\r\n\t\t\t\trenderStates[ scene.id ] = {};\r\n\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\r\n\r\n\t\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( renderStates[ scene.id ][ camera.id ] === undefined ) {\r\n\r\n\t\t\t\t\trenderState = new WebGLRenderState();\r\n\t\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderState = renderStates[ scene.id ][ camera.id ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn renderState;\r\n\r\n\t\t}\r\n\r\n\t\tfunction dispose() {\r\n\r\n\t\t\trenderStates = {};\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tget: get,\r\n\t\t\tdispose: dispose\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author bhouston / https://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshDepthMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshDepthMaterial';\r\n\r\n\t\tthis.depthPacking = BasicDepthPacking;\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.fog = false;\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\r\n\r\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\r\n\r\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.depthPacking = source.depthPacking;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  referencePosition: <float>,\r\n\t *  nearDistance: <float>,\r\n\t *  farDistance: <float>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshDistanceMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshDistanceMaterial';\r\n\r\n\t\tthis.referencePosition = new Vector3();\r\n\t\tthis.nearDistance = 1;\r\n\t\tthis.farDistance = 1000;\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.fog = false;\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshDistanceMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\r\n\r\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\r\n\r\n\tMeshDistanceMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.referencePosition.copy( source.referencePosition );\r\n\t\tthis.nearDistance = source.nearDistance;\r\n\t\tthis.farDistance = source.farDistance;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\r\n\r\n\t\tvar _frustum = new Frustum(),\r\n\t\t\t_projScreenMatrix = new Matrix4(),\r\n\r\n\t\t\t_shadowMapSize = new Vector2(),\r\n\t\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\r\n\r\n\t\t\t_lookTarget = new Vector3(),\r\n\t\t\t_lightPositionWorld = new Vector3(),\r\n\r\n\t\t\t_MorphingFlag = 1,\r\n\t\t\t_SkinningFlag = 2,\r\n\r\n\t\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\r\n\r\n\t\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\r\n\t\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\r\n\r\n\t\t\t_materialCache = {};\r\n\r\n\t\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\r\n\r\n\t\tvar cubeDirections = [\r\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\r\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\r\n\t\t];\r\n\r\n\t\tvar cubeUps = [\r\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\r\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\r\n\t\t];\r\n\r\n\t\tvar cube2DViewPorts = [\r\n\t\t\tnew Vector4(), new Vector4(), new Vector4(),\r\n\t\t\tnew Vector4(), new Vector4(), new Vector4()\r\n\t\t];\r\n\r\n\t\t// init\r\n\r\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\r\n\r\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\r\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\r\n\r\n\t\t\tvar depthMaterial = new MeshDepthMaterial( {\r\n\r\n\t\t\t\tdepthPacking: RGBADepthPacking,\r\n\r\n\t\t\t\tmorphTargets: useMorphing,\r\n\t\t\t\tskinning: useSkinning\r\n\r\n\t\t\t} );\r\n\r\n\t\t\t_depthMaterials[ i ] = depthMaterial;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar distanceMaterial = new MeshDistanceMaterial( {\r\n\r\n\t\t\t\tmorphTargets: useMorphing,\r\n\t\t\t\tskinning: useSkinning\r\n\r\n\t\t\t} );\r\n\r\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tthis.enabled = false;\r\n\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t\tthis.type = PCFShadowMap;\r\n\r\n\t\tthis.render = function ( lights, scene, camera ) {\r\n\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\t\tif ( lights.length === 0 ) return;\r\n\r\n\t\t\tvar currentRenderTarget = _renderer.getRenderTarget();\r\n\r\n\t\t\tvar _state = _renderer.state;\r\n\r\n\t\t\t// Set GL state for depth map.\r\n\t\t\t_state.setBlending( NoBlending );\r\n\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\r\n\t\t\t_state.buffers.depth.setTest( true );\r\n\t\t\t_state.setScissorTest( false );\r\n\r\n\t\t\t// render depth map\r\n\r\n\t\t\tvar faceCount;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\t\t\t\tvar shadow = light.shadow;\r\n\t\t\t\tvar isPointLight = light && light.isPointLight;\r\n\r\n\t\t\t\tif ( shadow === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar shadowCamera = shadow.camera;\r\n\r\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\r\n\t\t\t\t_shadowMapSize.min( _maxShadowMapSize );\r\n\r\n\t\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\t\tvar vpWidth = _shadowMapSize.x;\r\n\t\t\t\t\tvar vpHeight = _shadowMapSize.y;\r\n\r\n\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\r\n\t\t\t\t\t// following orientation:\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//  xzXZ\r\n\t\t\t\t\t//   y Y\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// X - Positive x direction\r\n\t\t\t\t\t// x - Negative x direction\r\n\t\t\t\t\t// Y - Positive y direction\r\n\t\t\t\t\t// y - Negative y direction\r\n\t\t\t\t\t// Z - Positive z direction\r\n\t\t\t\t\t// z - Negative z direction\r\n\r\n\t\t\t\t\t// positive X\r\n\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// negative X\r\n\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// positive Z\r\n\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// negative Z\r\n\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// positive Y\r\n\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\r\n\t\t\t\t\t// negative Y\r\n\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\r\n\r\n\t\t\t\t\t_shadowMapSize.x *= 4.0;\r\n\t\t\t\t\t_shadowMapSize.y *= 2.0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( shadow.map === null ) {\r\n\r\n\t\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\r\n\r\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\r\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\r\n\r\n\t\t\t\t\tshadowCamera.updateProjectionMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( shadow.isSpotLightShadow ) {\r\n\r\n\t\t\t\t\tshadow.update( light );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar shadowMap = shadow.map;\r\n\t\t\t\tvar shadowMatrix = shadow.matrix;\r\n\r\n\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\r\n\r\n\t\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\t\tfaceCount = 6;\r\n\r\n\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\r\n\t\t\t\t\t// equal to inverse of the light's position\r\n\r\n\t\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfaceCount = 1;\r\n\r\n\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\t\t\t// compute shadow matrix\r\n\r\n\t\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t\t_renderer.clear();\r\n\r\n\t\t\t\t// render shadow map for each cube face (if omni-directional) or\r\n\t\t\t\t// run a single pass if not\r\n\r\n\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\r\n\r\n\t\t\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\r\n\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\r\n\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\r\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\t\t\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\r\n\t\t\t\t\t\t_state.viewport( vpDimensions );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.needsUpdate = false;\r\n\r\n\t\t\t_renderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t\t};\r\n\r\n\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tvar result = null;\r\n\r\n\t\t\tvar materialVariants = _depthMaterials;\r\n\t\t\tvar customMaterial = object.customDepthMaterial;\r\n\r\n\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\tmaterialVariants = _distanceMaterials;\r\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! customMaterial ) {\r\n\r\n\t\t\t\tvar useMorphing = false;\r\n\r\n\t\t\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\r\n\r\n\t\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\r\n\r\n\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\r\n\r\n\t\t\t\tvar variantIndex = 0;\r\n\r\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\r\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\r\n\r\n\t\t\t\tresult = materialVariants[ variantIndex ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tresult = customMaterial;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _renderer.localClippingEnabled &&\r\n\t\t\t\t\tmaterial.clipShadows === true &&\r\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\r\n\r\n\t\t\t\t// in this case we need a unique material instance reflecting the\r\n\t\t\t\t// appropriate state\r\n\r\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\r\n\r\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\r\n\r\n\t\t\t\tif ( materialsForVariant === undefined ) {\r\n\r\n\t\t\t\t\tmaterialsForVariant = {};\r\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\r\n\r\n\t\t\t\tif ( cachedMaterial === undefined ) {\r\n\r\n\t\t\t\t\tcachedMaterial = result.clone();\r\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult = cachedMaterial;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tresult.visible = material.visible;\r\n\t\t\tresult.wireframe = material.wireframe;\r\n\r\n\t\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\r\n\r\n\t\t\tresult.clipShadows = material.clipShadows;\r\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\r\n\t\t\tresult.clipIntersection = material.clipIntersection;\r\n\r\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\t\tresult.linewidth = material.linewidth;\r\n\r\n\t\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\r\n\r\n\t\t\t\tresult.referencePosition.copy( lightPositionWorld );\r\n\t\t\t\tresult.nearDistance = shadowCameraNear;\r\n\t\t\t\tresult.farDistance = shadowCameraFar;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\r\n\r\n\t\t\tif ( object.visible === false ) return;\r\n\r\n\t\t\tvar visible = object.layers.test( camera.layers );\r\n\r\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\r\n\r\n\t\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\r\n\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\r\n\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\r\n\r\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( material.visible ) {\r\n\r\n\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\r\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLState( gl, extensions, utils, capabilities ) {\r\n\r\n\t\tfunction ColorBuffer() {\r\n\r\n\t\t\tvar locked = false;\r\n\r\n\t\t\tvar color = new Vector4();\r\n\t\t\tvar currentColorMask = null;\r\n\t\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\r\n\r\n\t\t\treturn {\r\n\r\n\t\t\t\tsetMask: function ( colorMask ) {\r\n\r\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\r\n\r\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\r\n\t\t\t\t\t\tcurrentColorMask = colorMask;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetLocked: function ( lock ) {\r\n\r\n\t\t\t\t\tlocked = lock;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tif ( premultipliedAlpha === true ) {\r\n\r\n\t\t\t\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcolor.set( r, g, b, a );\r\n\r\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\r\n\r\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\r\n\t\t\t\t\t\tcurrentColorClear.copy( color );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\treset: function () {\r\n\r\n\t\t\t\t\tlocked = false;\r\n\r\n\t\t\t\t\tcurrentColorMask = null;\r\n\t\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction DepthBuffer() {\r\n\r\n\t\t\tvar locked = false;\r\n\r\n\t\t\tvar currentDepthMask = null;\r\n\t\t\tvar currentDepthFunc = null;\r\n\t\t\tvar currentDepthClear = null;\r\n\r\n\t\t\treturn {\r\n\r\n\t\t\t\tsetTest: function ( depthTest ) {\r\n\r\n\t\t\t\t\tif ( depthTest ) {\r\n\r\n\t\t\t\t\t\tenable( 2929 );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tdisable( 2929 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetMask: function ( depthMask ) {\r\n\r\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\r\n\r\n\t\t\t\t\t\tgl.depthMask( depthMask );\r\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetFunc: function ( depthFunc ) {\r\n\r\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\t\t\t\tif ( depthFunc ) {\r\n\r\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\t\t\t\tcase NeverDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase LessDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase EqualDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase GreaterDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetLocked: function ( lock ) {\r\n\r\n\t\t\t\t\tlocked = lock;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetClear: function ( depth ) {\r\n\r\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\r\n\r\n\t\t\t\t\t\tgl.clearDepth( depth );\r\n\t\t\t\t\t\tcurrentDepthClear = depth;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\treset: function () {\r\n\r\n\t\t\t\t\tlocked = false;\r\n\r\n\t\t\t\t\tcurrentDepthMask = null;\r\n\t\t\t\t\tcurrentDepthFunc = null;\r\n\t\t\t\t\tcurrentDepthClear = null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction StencilBuffer() {\r\n\r\n\t\t\tvar locked = false;\r\n\r\n\t\t\tvar currentStencilMask = null;\r\n\t\t\tvar currentStencilFunc = null;\r\n\t\t\tvar currentStencilRef = null;\r\n\t\t\tvar currentStencilFuncMask = null;\r\n\t\t\tvar currentStencilFail = null;\r\n\t\t\tvar currentStencilZFail = null;\r\n\t\t\tvar currentStencilZPass = null;\r\n\t\t\tvar currentStencilClear = null;\r\n\r\n\t\t\treturn {\r\n\r\n\t\t\t\tsetTest: function ( stencilTest ) {\r\n\r\n\t\t\t\t\tif ( stencilTest ) {\r\n\r\n\t\t\t\t\t\tenable( 2960 );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tdisable( 2960 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetMask: function ( stencilMask ) {\r\n\r\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\r\n\r\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\r\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\r\n\r\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\r\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\r\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\r\n\r\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\r\n\r\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\r\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\r\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\r\n\r\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\r\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\r\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\r\n\r\n\t\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\r\n\r\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\r\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\r\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetLocked: function ( lock ) {\r\n\r\n\t\t\t\t\tlocked = lock;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetClear: function ( stencil ) {\r\n\r\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\r\n\r\n\t\t\t\t\t\tgl.clearStencil( stencil );\r\n\t\t\t\t\t\tcurrentStencilClear = stencil;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\treset: function () {\r\n\r\n\t\t\t\t\tlocked = false;\r\n\r\n\t\t\t\t\tcurrentStencilMask = null;\r\n\t\t\t\t\tcurrentStencilFunc = null;\r\n\t\t\t\t\tcurrentStencilRef = null;\r\n\t\t\t\t\tcurrentStencilFuncMask = null;\r\n\t\t\t\t\tcurrentStencilFail = null;\r\n\t\t\t\t\tcurrentStencilZFail = null;\r\n\t\t\t\t\tcurrentStencilZPass = null;\r\n\t\t\t\t\tcurrentStencilClear = null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar colorBuffer = new ColorBuffer();\r\n\t\tvar depthBuffer = new DepthBuffer();\r\n\t\tvar stencilBuffer = new StencilBuffer();\r\n\r\n\t\tvar maxVertexAttributes = gl.getParameter( 34921 );\r\n\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\r\n\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\r\n\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\r\n\r\n\t\tvar enabledCapabilities = {};\r\n\r\n\t\tvar compressedTextureFormats = null;\r\n\r\n\t\tvar currentProgram = null;\r\n\r\n\t\tvar currentBlendingEnabled = null;\r\n\t\tvar currentBlending = null;\r\n\t\tvar currentBlendEquation = null;\r\n\t\tvar currentBlendSrc = null;\r\n\t\tvar currentBlendDst = null;\r\n\t\tvar currentBlendEquationAlpha = null;\r\n\t\tvar currentBlendSrcAlpha = null;\r\n\t\tvar currentBlendDstAlpha = null;\r\n\t\tvar currentPremultipledAlpha = false;\r\n\r\n\t\tvar currentFlipSided = null;\r\n\t\tvar currentCullFace = null;\r\n\r\n\t\tvar currentLineWidth = null;\r\n\r\n\t\tvar currentPolygonOffsetFactor = null;\r\n\t\tvar currentPolygonOffsetUnits = null;\r\n\r\n\t\tvar maxTextures = gl.getParameter( 35661 );\r\n\r\n\t\tvar lineWidthAvailable = false;\r\n\t\tvar version = 0;\r\n\t\tvar glVersion = gl.getParameter( 7938 );\r\n\r\n\t\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\r\n\r\n\t\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\r\n\t\t\tlineWidthAvailable = ( version >= 1.0 );\r\n\r\n\t\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\r\n\r\n\t\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\r\n\t\t\tlineWidthAvailable = ( version >= 2.0 );\r\n\r\n\t\t}\r\n\r\n\t\tvar currentTextureSlot = null;\r\n\t\tvar currentBoundTextures = {};\r\n\r\n\t\tvar currentScissor = new Vector4();\r\n\t\tvar currentViewport = new Vector4();\r\n\r\n\t\tfunction createTexture( type, target, count ) {\r\n\r\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\r\n\t\t\tvar texture = gl.createTexture();\r\n\r\n\t\t\tgl.bindTexture( type, texture );\r\n\t\t\tgl.texParameteri( type, 10241, 9728 );\r\n\t\t\tgl.texParameteri( type, 10240, 9728 );\r\n\r\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\r\n\r\n\t\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t}\r\n\r\n\t\tvar emptyTextures = {};\r\n\t\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\r\n\t\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\r\n\r\n\t\t// init\r\n\r\n\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\r\n\t\tdepthBuffer.setClear( 1 );\r\n\t\tstencilBuffer.setClear( 0 );\r\n\r\n\t\tenable( 2929 );\r\n\t\tdepthBuffer.setFunc( LessEqualDepth );\r\n\r\n\t\tsetFlipSided( false );\r\n\t\tsetCullFace( CullFaceBack );\r\n\t\tenable( 2884 );\r\n\r\n\t\tsetBlending( NoBlending );\r\n\r\n\t\t//\r\n\r\n\t\tfunction initAttributes() {\r\n\r\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction enableAttribute( attribute ) {\r\n\r\n\t\t\tenableAttributeAndDivisor( attribute, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\r\n\r\n\t\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\r\n\r\n\t\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\r\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableUnusedAttributes() {\r\n\r\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\r\n\r\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction enable( id ) {\r\n\r\n\t\t\tif ( enabledCapabilities[ id ] !== true ) {\r\n\r\n\t\t\t\tgl.enable( id );\r\n\t\t\t\tenabledCapabilities[ id ] = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction disable( id ) {\r\n\r\n\t\t\tif ( enabledCapabilities[ id ] !== false ) {\r\n\r\n\t\t\t\tgl.disable( id );\r\n\t\t\t\tenabledCapabilities[ id ] = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getCompressedTextureFormats() {\r\n\r\n\t\t\tif ( compressedTextureFormats === null ) {\r\n\r\n\t\t\t\tcompressedTextureFormats = [];\r\n\r\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\r\n\r\n\t\t\t\t\tvar formats = gl.getParameter( 34467 );\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn compressedTextureFormats;\r\n\r\n\t\t}\r\n\r\n\t\tfunction useProgram( program ) {\r\n\r\n\t\t\tif ( currentProgram !== program ) {\r\n\r\n\t\t\t\tgl.useProgram( program );\r\n\r\n\t\t\t\tcurrentProgram = program;\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\r\n\r\n\t\t\tif ( blending === NoBlending ) {\r\n\r\n\t\t\t\tif ( currentBlendingEnabled ) {\r\n\r\n\t\t\t\t\tdisable( 3042 );\r\n\t\t\t\t\tcurrentBlendingEnabled = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! currentBlendingEnabled ) {\r\n\r\n\t\t\t\tenable( 3042 );\r\n\t\t\t\tcurrentBlendingEnabled = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blending !== CustomBlending ) {\r\n\r\n\t\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\r\n\r\n\t\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\r\n\r\n\t\t\t\t\t\tgl.blendEquation( 32774 );\r\n\r\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\r\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\t\tswitch ( blending ) {\r\n\r\n\t\t\t\t\t\t\tcase NormalBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase AdditiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase SubtractiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase MultiplyBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tswitch ( blending ) {\r\n\r\n\t\t\t\t\t\t\tcase NormalBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase AdditiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase SubtractiveBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase MultiplyBlending:\r\n\t\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t\t\t\tcurrentBlending = blending;\r\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// custom blending\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\t\t\tcurrentPremultipledAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setMaterial( material, frontFaceCW ) {\r\n\r\n\t\t\tmaterial.side === DoubleSide\r\n\t\t\t\t? disable( 2884 )\r\n\t\t\t\t: enable( 2884 );\r\n\r\n\t\t\tvar flipSided = ( material.side === BackSide );\r\n\t\t\tif ( frontFaceCW ) flipSided = ! flipSided;\r\n\r\n\t\t\tsetFlipSided( flipSided );\r\n\r\n\t\t\t( material.blending === NormalBlending && material.transparent === false )\r\n\t\t\t\t? setBlending( NoBlending )\r\n\t\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\r\n\r\n\t\t\tdepthBuffer.setFunc( material.depthFunc );\r\n\t\t\tdepthBuffer.setTest( material.depthTest );\r\n\t\t\tdepthBuffer.setMask( material.depthWrite );\r\n\t\t\tcolorBuffer.setMask( material.colorWrite );\r\n\r\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction setFlipSided( flipSided ) {\r\n\r\n\t\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\t\tgl.frontFace( 2304 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.frontFace( 2305 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setCullFace( cullFace ) {\r\n\r\n\t\t\tif ( cullFace !== CullFaceNone ) {\r\n\r\n\t\t\t\tenable( 2884 );\r\n\r\n\t\t\t\tif ( cullFace !== currentCullFace ) {\r\n\r\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\r\n\r\n\t\t\t\t\t\tgl.cullFace( 1029 );\r\n\r\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\r\n\r\n\t\t\t\t\t\tgl.cullFace( 1028 );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tgl.cullFace( 1032 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdisable( 2884 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentCullFace = cullFace;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setLineWidth( width ) {\r\n\r\n\t\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\r\n\r\n\t\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\r\n\r\n\t\t\tif ( polygonOffset ) {\r\n\r\n\t\t\t\tenable( 32823 );\r\n\r\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\r\n\r\n\t\t\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdisable( 32823 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setScissorTest( scissorTest ) {\r\n\r\n\t\t\tif ( scissorTest ) {\r\n\r\n\t\t\t\tenable( 3089 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdisable( 3089 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// texture\r\n\r\n\t\tfunction activeTexture( webglSlot ) {\r\n\r\n\t\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\r\n\r\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction bindTexture( webglType, webglTexture ) {\r\n\r\n\t\t\tif ( currentTextureSlot === null ) {\r\n\r\n\t\t\t\tactiveTexture();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\r\n\r\n\t\t\t\tboundTexture.type = webglType;\r\n\t\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction compressedTexImage2D() {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction texImage2D() {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction texImage3D() {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tgl.texImage3D.apply( gl, arguments );\r\n\r\n\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction scissor( scissor ) {\r\n\r\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\r\n\r\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\r\n\t\t\t\tcurrentScissor.copy( scissor );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction viewport( viewport ) {\r\n\r\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\r\n\r\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\r\n\t\t\t\tcurrentViewport.copy( viewport );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction reset() {\r\n\r\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tenabledCapabilities = {};\r\n\r\n\t\t\tcompressedTextureFormats = null;\r\n\r\n\t\t\tcurrentTextureSlot = null;\r\n\t\t\tcurrentBoundTextures = {};\r\n\r\n\t\t\tcurrentProgram = null;\r\n\r\n\t\t\tcurrentBlending = null;\r\n\r\n\t\t\tcurrentFlipSided = null;\r\n\t\t\tcurrentCullFace = null;\r\n\r\n\t\t\tcolorBuffer.reset();\r\n\t\t\tdepthBuffer.reset();\r\n\t\t\tstencilBuffer.reset();\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tbuffers: {\r\n\t\t\t\tcolor: colorBuffer,\r\n\t\t\t\tdepth: depthBuffer,\r\n\t\t\t\tstencil: stencilBuffer\r\n\t\t\t},\r\n\r\n\t\t\tinitAttributes: initAttributes,\r\n\t\t\tenableAttribute: enableAttribute,\r\n\t\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\r\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes,\r\n\t\t\tenable: enable,\r\n\t\t\tdisable: disable,\r\n\t\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\r\n\r\n\t\t\tuseProgram: useProgram,\r\n\r\n\t\t\tsetBlending: setBlending,\r\n\t\t\tsetMaterial: setMaterial,\r\n\r\n\t\t\tsetFlipSided: setFlipSided,\r\n\t\t\tsetCullFace: setCullFace,\r\n\r\n\t\t\tsetLineWidth: setLineWidth,\r\n\t\t\tsetPolygonOffset: setPolygonOffset,\r\n\r\n\t\t\tsetScissorTest: setScissorTest,\r\n\r\n\t\t\tactiveTexture: activeTexture,\r\n\t\t\tbindTexture: bindTexture,\r\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\r\n\t\t\ttexImage2D: texImage2D,\r\n\t\t\ttexImage3D: texImage3D,\r\n\r\n\t\t\tscissor: scissor,\r\n\t\t\tviewport: viewport,\r\n\r\n\t\t\treset: reset\r\n\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\r\n\r\n\t\tvar _videoTextures = {};\r\n\t\tvar _canvas;\r\n\r\n\t\t//\r\n\r\n\t\tvar useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined';\r\n\r\n\t\tfunction createCanvas( width, height ) {\r\n\r\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\r\n\r\n\t\t\treturn useOffscreenCanvas ?\r\n\t\t\t\tnew OffscreenCanvas( width, height ) :\r\n\t\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\r\n\r\n\t\t}\r\n\r\n\t\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\r\n\r\n\t\t\tvar scale = 1;\r\n\r\n\t\t\t// handle case if texture exceeds max size\r\n\r\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t\tscale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// only perform resize if necessary\r\n\r\n\t\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\r\n\r\n\t\t\t\t// only perform resize for certain image types\r\n\r\n\t\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\r\n\t\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\r\n\t\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\r\n\r\n\t\t\t\t\tvar floor = needsPowerOfTwo ? _Math.floorPowerOfTwo : Math.floor;\r\n\r\n\t\t\t\t\tvar width = floor( scale * image.width );\r\n\t\t\t\t\tvar height = floor( scale * image.height );\r\n\r\n\t\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\r\n\r\n\t\t\t\t\t// cube textures can't reuse the same canvas\r\n\r\n\t\t\t\t\tvar canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\r\n\r\n\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\r\n\r\n\t\t\t\t\treturn canvas;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( 'data' in image ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn image;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn image;\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPowerOfTwo( image ) {\r\n\r\n\t\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\r\n\r\n\t\t}\r\n\r\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\r\n\r\n\t\t\tif ( capabilities.isWebGL2 ) return false;\r\n\r\n\t\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\r\n\t\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\r\n\r\n\t\t}\r\n\r\n\t\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\r\n\r\n\t\t\treturn texture.generateMipmaps && supportsMips &&\r\n\t\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateMipmap( target, texture, width, height ) {\r\n\r\n\t\t\t_gl.generateMipmap( target );\r\n\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\r\n\t\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getInternalFormat( glFormat, glType ) {\r\n\r\n\t\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\r\n\r\n\t\t\tvar internalFormat = glFormat;\r\n\r\n\t\t\tif ( glFormat === 6403 ) {\r\n\r\n\t\t\t\tif ( glType === 5126 ) internalFormat = 33326;\r\n\t\t\t\tif ( glType === 5131 ) internalFormat = 33325;\r\n\t\t\t\tif ( glType === 5121 ) internalFormat = 33321;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( glFormat === 6407 ) {\r\n\r\n\t\t\t\tif ( glType === 5126 ) internalFormat = 34837;\r\n\t\t\t\tif ( glType === 5131 ) internalFormat = 34843;\r\n\t\t\t\tif ( glType === 5121 ) internalFormat = 32849;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( glFormat === 6408 ) {\r\n\r\n\t\t\t\tif ( glType === 5126 ) internalFormat = 34836;\r\n\t\t\t\tif ( glType === 5131 ) internalFormat = 34842;\r\n\t\t\t\tif ( glType === 5121 ) internalFormat = 32856;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\r\n\t\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\r\n\r\n\t\t\t\textensions.get( 'EXT_color_buffer_float' );\r\n\r\n\t\t\t} else if ( internalFormat === 34843 || internalFormat === 34837 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn internalFormat;\r\n\r\n\t\t}\r\n\r\n\t\t// Fallback filters for non-power-of-2 textures\r\n\r\n\t\tfunction filterFallback( f ) {\r\n\r\n\t\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\r\n\r\n\t\t\t\treturn 9728;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn 9729;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction onTextureDispose( event ) {\r\n\r\n\t\t\tvar texture = event.target;\r\n\r\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\tdeallocateTexture( texture );\r\n\r\n\t\t\tif ( texture.isVideoTexture ) {\r\n\r\n\t\t\t\tdelete _videoTextures[ texture.id ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinfo.memory.textures --;\r\n\r\n\t\t}\r\n\r\n\t\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\t\tvar renderTarget = event.target;\r\n\r\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t\tinfo.memory.textures --;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction deallocateTexture( texture ) {\r\n\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t\tproperties.remove( texture );\r\n\r\n\t\t}\r\n\r\n\t\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n\t\t\tif ( ! renderTarget ) return;\r\n\r\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\r\n\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderTarget.depthTexture ) {\r\n\r\n\t\t\t\trenderTarget.depthTexture.dispose();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tproperties.remove( renderTarget.texture );\r\n\t\t\tproperties.remove( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar textureUnits = 0;\r\n\r\n\t\tfunction resetTextureUnits() {\r\n\r\n\t\t\ttextureUnits = 0;\r\n\r\n\t\t}\r\n\r\n\t\tfunction allocateTextureUnit() {\r\n\r\n\t\t\tvar textureUnit = textureUnits;\r\n\r\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttextureUnits += 1;\r\n\r\n\t\t\treturn textureUnit;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction setTexture2D( texture, slot ) {\r\n\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tvar image = texture.image;\r\n\r\n\t\t\t\tif ( image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\r\n\r\n\t\t\t\t} else if ( image.complete === false ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.activeTexture( 33984 + slot );\r\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\tfunction setTexture2DArray( texture, slot ) {\r\n\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.activeTexture( 33984 + slot );\r\n\t\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\tfunction setTexture3D( texture, slot ) {\r\n\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.activeTexture( 33984 + slot );\r\n\t\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\tfunction setTextureCube( texture, slot ) {\r\n\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\t\tinitTexture( textureProperties, texture );\r\n\r\n\t\t\t\t\tstate.activeTexture( 33984 + slot );\r\n\t\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\r\n\r\n\t\t\t\t\t_gl.pixelStorei( 37440, texture.flipY );\r\n\r\n\t\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\r\n\t\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\r\n\r\n\t\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\t\t\tsupportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2,\r\n\t\t\t\t\t\tglFormat = utils.convert( texture.format ),\r\n\t\t\t\t\t\tglType = utils.convert( texture.type ),\r\n\t\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\r\n\r\n\t\t\t\t\tsetTextureParameters( 34067, texture, supportsMips );\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\r\n\r\n\t\t\t\t\t\t// We assume images for cube map have the same size.\r\n\t\t\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.activeTexture( 33984 + slot );\r\n\t\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\r\n\r\n\t\t\tstate.activeTexture( 33984 + slot );\r\n\t\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\tfunction setTextureParameters( textureType, texture, supportsMips ) {\r\n\r\n\t\t\tvar extension;\r\n\r\n\t\t\tif ( supportsMips ) {\r\n\r\n\t\t\t\t_gl.texParameteri( textureType, 10242, utils.convert( texture.wrapS ) );\r\n\t\t\t\t_gl.texParameteri( textureType, 10243, utils.convert( texture.wrapT ) );\r\n\r\n\t\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\r\n\r\n\t\t\t\t\t_gl.texParameteri( textureType, 32882, utils.convert( texture.wrapR ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.texParameteri( textureType, 10240, utils.convert( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, 10241, utils.convert( texture.minFilter ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\r\n\t\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\r\n\r\n\t\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\r\n\r\n\t\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension ) {\r\n\r\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\r\n\r\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\r\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction initTexture( textureProperties, texture ) {\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t\tinfo.memory.textures ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\t\tvar textureType = 3553;\r\n\r\n\t\t\tif ( texture.isDataTexture2DArray ) textureType = 35866;\r\n\t\t\tif ( texture.isDataTexture3D ) textureType = 32879;\r\n\r\n\t\t\tinitTexture( textureProperties, texture );\r\n\r\n\t\t\tstate.activeTexture( 33984 + slot );\r\n\t\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\r\n\r\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\r\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\r\n\r\n\t\t\tvar needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\r\n\t\t\tvar image = resizeImage( texture.image, needsPowerOfTwo, false, capabilities.maxTextureSize );\r\n\r\n\t\t\tvar supportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2,\r\n\t\t\t\tglFormat = utils.convert( texture.format ),\r\n\t\t\t\tglType = utils.convert( texture.type ),\r\n\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\r\n\r\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\r\n\r\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\t\tif ( texture.isDepthTexture ) {\r\n\r\n\t\t\t\t// populate depth texture with dummy data\r\n\r\n\t\t\t\tglInternalFormat = 6402;\r\n\r\n\t\t\t\tif ( texture.type === FloatType ) {\r\n\r\n\t\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\r\n\t\t\t\t\tglInternalFormat = 36012;\r\n\r\n\t\t\t\t} else if ( capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\r\n\t\t\t\t\tglInternalFormat = 33189;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\r\n\r\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\r\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\r\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\r\n\r\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\r\n\t\t\t\t\t\tglType = utils.convert( texture.type );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\r\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\tif ( texture.format === DepthStencilFormat ) {\r\n\r\n\t\t\t\t\tglInternalFormat = 34041;\r\n\r\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\r\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\r\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\r\n\r\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\r\n\t\t\t\t\t\tglType = utils.convert( texture.type );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t} else if ( texture.isDataTexture ) {\r\n\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( texture.isCompressedTexture ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\r\n\r\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\r\n\t\t\t} else if ( texture.isDataTexture2DArray ) {\r\n\r\n\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\r\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\r\n\t\t\t} else if ( texture.isDataTexture3D ) {\r\n\r\n\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\r\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\r\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\r\n\r\n\t\t\t\tgenerateMipmap( 3553, texture, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t}\r\n\r\n\t\t// Render targets\r\n\r\n\t\t// Setup storage for target texture and bind it to correct framebuffer\r\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\r\n\r\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\r\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\r\n\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\r\n\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\r\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\r\n\t\t\t_gl.bindFramebuffer( 36160, null );\r\n\r\n\t\t}\r\n\r\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\r\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\r\n\r\n\t\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\r\n\r\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\tif ( isMultisample ) {\r\n\r\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\r\n\r\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 33189, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.renderbufferStorage( 36161, 33189, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\r\n\r\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\tif ( isMultisample ) {\r\n\r\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\r\n\r\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 34041, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\r\n\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\r\n\t\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\r\n\r\n\t\t\t\tif ( isMultisample ) {\r\n\r\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\r\n\r\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( 36161, null );\r\n\r\n\t\t}\r\n\r\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\r\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\r\n\r\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\r\n\t\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\r\n\r\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\r\n\r\n\t\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\r\n\r\n\t\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// upload an empty depth texture with framebuffer size\r\n\t\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\r\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\r\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\r\n\r\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\r\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\r\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\r\n\r\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\r\n\r\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\r\n\r\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\r\n\r\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\r\n\r\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow new Error( 'Unknown depthTexture format' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Setup GL resources for a non-texture depth buffer\r\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\r\n\r\n\t\t\tif ( renderTarget.depthTexture ) {\r\n\r\n\t\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\r\n\r\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\r\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindFramebuffer( 36160, null );\r\n\r\n\t\t}\r\n\r\n\t\t// Set up GL resources for the render target\r\n\t\tfunction setupRenderTarget( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\tinfo.memory.textures ++;\r\n\r\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\r\n\t\t\tvar isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\r\n\t\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2;\r\n\r\n\t\t\t// Setup framebuffer\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif ( isMultisample ) {\r\n\r\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\r\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\r\n\t\t\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\r\n\t\t\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\r\n\t\t\t\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\r\n\t\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\r\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\r\n\t\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\r\n\r\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) {\r\n\r\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\r\n\t\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\r\n\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Setup color buffer\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( 34067, renderTarget.texture, supportsMips );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\r\n\r\n\t\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( 34067, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( 3553, renderTarget.texture, supportsMips );\r\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\r\n\r\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\r\n\r\n\t\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( 3553, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Setup depth and stencil buffers\r\n\r\n\t\t\tif ( renderTarget.depthBuffer ) {\r\n\r\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\r\n\r\n\t\t\tvar texture = renderTarget.texture;\r\n\t\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2;\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\r\n\r\n\t\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? 34067 : 3553;\r\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\r\n\r\n\t\t\t\tstate.bindTexture( target, webglTexture );\r\n\t\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\r\n\t\t\t\tstate.bindTexture( target, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateMultisampleRenderTarget( renderTarget ) {\r\n\r\n\t\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\r\n\r\n\t\t\t\tif ( capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\t\t\t_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\r\n\t\t\t\t\t_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\r\n\r\n\t\t\t\t\tvar width = renderTarget.width;\r\n\t\t\t\t\tvar height = renderTarget.height;\r\n\t\t\t\t\tvar mask = 16384;\r\n\r\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\r\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\r\n\r\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getRenderTargetSamples( renderTarget ) {\r\n\r\n\t\t\treturn ( capabilities.isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\r\n\t\t\t\tMath.min( capabilities.maxSamples, renderTarget.samples ) : 0;\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateVideoTexture( texture ) {\r\n\r\n\t\t\tvar id = texture.id;\r\n\t\t\tvar frame = info.render.frame;\r\n\r\n\t\t\t// Check the last frame we updated the VideoTexture\r\n\r\n\t\t\tif ( _videoTextures[ id ] !== frame ) {\r\n\r\n\t\t\t\t_videoTextures[ id ] = frame;\r\n\t\t\t\ttexture.update();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t\tvar warnedTexture2D = false;\r\n\t\tvar warnedTextureCube = false;\r\n\r\n\t\tfunction safeSetTexture2D( texture, slot ) {\r\n\r\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\r\n\r\n\t\t\t\tif ( warnedTexture2D === false ) {\r\n\r\n\t\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\r\n\t\t\t\t\twarnedTexture2D = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture = texture.texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsetTexture2D( texture, slot );\r\n\r\n\t\t}\r\n\r\n\t\tfunction safeSetTextureCube( texture, slot ) {\r\n\r\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\r\n\r\n\t\t\t\tif ( warnedTextureCube === false ) {\r\n\r\n\t\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\r\n\t\t\t\t\twarnedTextureCube = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture = texture.texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\r\n\t\t\t// TODO: unify these code paths\r\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\r\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t// this function alone should take care of cube textures\r\n\t\t\t\tsetTextureCube( texture, slot );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\r\n\t\t\t\tsetTextureCubeDynamic( texture, slot );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\r\n\t\tthis.resetTextureUnits = resetTextureUnits;\r\n\r\n\t\tthis.setTexture2D = setTexture2D;\r\n\t\tthis.setTexture2DArray = setTexture2DArray;\r\n\t\tthis.setTexture3D = setTexture3D;\r\n\t\tthis.setTextureCube = setTextureCube;\r\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\r\n\t\tthis.setupRenderTarget = setupRenderTarget;\r\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\r\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\r\n\r\n\t\tthis.safeSetTexture2D = safeSetTexture2D;\r\n\t\tthis.safeSetTextureCube = safeSetTextureCube;\r\n\r\n\t}\n\n\t/**\r\n\t * @author thespite / http://www.twitter.com/thespite\r\n\t */\r\n\r\n\tfunction WebGLUtils( gl, extensions, capabilities ) {\r\n\r\n\t\tfunction convert( p ) {\r\n\r\n\t\t\tvar extension;\r\n\r\n\t\t\tif ( p === RepeatWrapping ) return 10497;\r\n\t\t\tif ( p === ClampToEdgeWrapping ) return 33071;\r\n\t\t\tif ( p === MirroredRepeatWrapping ) return 33648;\r\n\r\n\t\t\tif ( p === NearestFilter ) return 9728;\r\n\t\t\tif ( p === NearestMipMapNearestFilter ) return 9984;\r\n\t\t\tif ( p === NearestMipMapLinearFilter ) return 9986;\r\n\r\n\t\t\tif ( p === LinearFilter ) return 9729;\r\n\t\t\tif ( p === LinearMipMapNearestFilter ) return 9985;\r\n\t\t\tif ( p === LinearMipMapLinearFilter ) return 9987;\r\n\r\n\t\t\tif ( p === UnsignedByteType ) return 5121;\r\n\t\t\tif ( p === UnsignedShort4444Type ) return 32819;\r\n\t\t\tif ( p === UnsignedShort5551Type ) return 32820;\r\n\t\t\tif ( p === UnsignedShort565Type ) return 33635;\r\n\r\n\t\t\tif ( p === ByteType ) return 5120;\r\n\t\t\tif ( p === ShortType ) return 5122;\r\n\t\t\tif ( p === UnsignedShortType ) return 5123;\r\n\t\t\tif ( p === IntType ) return 5124;\r\n\t\t\tif ( p === UnsignedIntType ) return 5125;\r\n\t\t\tif ( p === FloatType ) return 5126;\r\n\r\n\t\t\tif ( p === HalfFloatType ) {\r\n\r\n\t\t\t\tif ( capabilities.isWebGL2 ) return 5131;\r\n\r\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === AlphaFormat ) return 6406;\r\n\t\t\tif ( p === RGBFormat ) return 6407;\r\n\t\t\tif ( p === RGBAFormat ) return 6408;\r\n\t\t\tif ( p === LuminanceFormat ) return 6409;\r\n\t\t\tif ( p === LuminanceAlphaFormat ) return 6410;\r\n\t\t\tif ( p === DepthFormat ) return 6402;\r\n\t\t\tif ( p === DepthStencilFormat ) return 34041;\r\n\t\t\tif ( p === RedFormat ) return 6403;\r\n\r\n\t\t\tif ( p === AddEquation ) return 32774;\r\n\t\t\tif ( p === SubtractEquation ) return 32778;\r\n\t\t\tif ( p === ReverseSubtractEquation ) return 32779;\r\n\r\n\t\t\tif ( p === ZeroFactor ) return 0;\r\n\t\t\tif ( p === OneFactor ) return 1;\r\n\t\t\tif ( p === SrcColorFactor ) return 768;\r\n\t\t\tif ( p === OneMinusSrcColorFactor ) return 769;\r\n\t\t\tif ( p === SrcAlphaFactor ) return 770;\r\n\t\t\tif ( p === OneMinusSrcAlphaFactor ) return 771;\r\n\t\t\tif ( p === DstAlphaFactor ) return 772;\r\n\t\t\tif ( p === OneMinusDstAlphaFactor ) return 773;\r\n\r\n\t\t\tif ( p === DstColorFactor ) return 774;\r\n\t\t\tif ( p === OneMinusDstColorFactor ) return 775;\r\n\t\t\tif ( p === SrcAlphaSaturateFactor ) return 776;\r\n\r\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\r\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\r\n\t\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === RGB_ETC1_Format ) {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\r\n\r\n\t\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\r\n\t\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\r\n\t\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\r\n\t\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\r\n\t\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\treturn p;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === MinEquation || p === MaxEquation ) {\r\n\r\n\t\t\t\tif ( capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\t\tif ( p === MinEquation ) return 32775;\r\n\t\t\t\t\tif ( p === MaxEquation ) return 32776;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\r\n\t\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( p === UnsignedInt248Type ) {\r\n\r\n\t\t\t\tif ( capabilities.isWebGL2 ) return 34042;\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\r\n\r\n\t\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn { convert: convert };\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Group() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Group';\r\n\r\n\t}\r\n\r\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Group,\r\n\r\n\t\tisGroup: true\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\r\n\tfunction Camera() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Camera';\r\n\r\n\t\tthis.matrixWorldInverse = new Matrix4();\r\n\r\n\t\tthis.projectionMatrix = new Matrix4();\r\n\t\tthis.projectionMatrixInverse = new Matrix4();\r\n\r\n\t}\r\n\r\n\tCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Camera,\r\n\r\n\t\tisCamera: true,\r\n\r\n\t\tcopy: function ( source, recursive ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\r\n\r\n\t\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\r\n\t\t\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\t\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetWorldDirection: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tvar e = this.matrixWorld.elements;\r\n\r\n\t\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author greggman / http://games.greggman.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\r\n\r\n\t\tCamera.call( this );\r\n\r\n\t\tthis.type = 'PerspectiveCamera';\r\n\r\n\t\tthis.fov = fov !== undefined ? fov : 50;\r\n\t\tthis.zoom = 1;\r\n\r\n\t\tthis.near = near !== undefined ? near : 0.1;\r\n\t\tthis.far = far !== undefined ? far : 2000;\r\n\t\tthis.focus = 10;\r\n\r\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\t\tthis.view = null;\r\n\r\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\r\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\r\n\r\n\t\tconstructor: PerspectiveCamera,\r\n\r\n\t\tisPerspectiveCamera: true,\r\n\r\n\t\tcopy: function ( source, recursive ) {\r\n\r\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\r\n\r\n\t\t\tthis.fov = source.fov;\r\n\t\t\tthis.zoom = source.zoom;\r\n\r\n\t\t\tthis.near = source.near;\r\n\t\t\tthis.far = source.far;\r\n\t\t\tthis.focus = source.focus;\r\n\r\n\t\t\tthis.aspect = source.aspect;\r\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n\t\t\tthis.filmGauge = source.filmGauge;\r\n\t\t\tthis.filmOffset = source.filmOffset;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\r\n\t\t *\r\n\t\t * The default film gauge is 35, so that the focal length can be specified for\r\n\t\t * a 35mm (full frame) camera.\r\n\t\t *\r\n\t\t * Values for focal length and film gauge must have the same unit.\r\n\t\t */\r\n\t\tsetFocalLength: function ( focalLength ) {\r\n\r\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\r\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\r\n\r\n\t\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\r\n\t\t\tthis.updateProjectionMatrix();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\r\n\t\t */\r\n\t\tgetFocalLength: function () {\r\n\r\n\t\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\r\n\r\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\r\n\r\n\t\t},\r\n\r\n\t\tgetEffectiveFOV: function () {\r\n\r\n\t\t\treturn _Math.RAD2DEG * 2 * Math.atan(\r\n\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\r\n\r\n\t\t},\r\n\r\n\t\tgetFilmWidth: function () {\r\n\r\n\t\t\t// film not completely covered in portrait format (aspect < 1)\r\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\r\n\r\n\t\t},\r\n\r\n\t\tgetFilmHeight: function () {\r\n\r\n\t\t\t// film not completely covered in landscape format (aspect > 1)\r\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t\t * multi-monitor/multi-machine setups.\r\n\t\t *\r\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t\t * the monitors are in grid like this\r\n\t\t *\r\n\t\t *   +---+---+---+\r\n\t\t *   | A | B | C |\r\n\t\t *   +---+---+---+\r\n\t\t *   | D | E | F |\r\n\t\t *   +---+---+---+\r\n\t\t *\r\n\t\t * then for each monitor you would call it like this\r\n\t\t *\r\n\t\t *   var w = 1920;\r\n\t\t *   var h = 1080;\r\n\t\t *   var fullWidth = w * 3;\r\n\t\t *   var fullHeight = h * 2;\r\n\t\t *\r\n\t\t *   --A--\r\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t\t *   --B--\r\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t\t *   --C--\r\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t\t *   --D--\r\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t\t *   --E--\r\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t\t *   --F--\r\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t\t *\r\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t\t */\r\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\t\t\tthis.aspect = fullWidth / fullHeight;\r\n\r\n\t\t\tif ( this.view === null ) {\r\n\r\n\t\t\t\tthis.view = {\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tfullWidth: 1,\r\n\t\t\t\t\tfullHeight: 1,\r\n\t\t\t\t\toffsetX: 0,\r\n\t\t\t\t\toffsetY: 0,\r\n\t\t\t\t\twidth: 1,\r\n\t\t\t\t\theight: 1\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.view.enabled = true;\r\n\t\t\tthis.view.fullWidth = fullWidth;\r\n\t\t\tthis.view.fullHeight = fullHeight;\r\n\t\t\tthis.view.offsetX = x;\r\n\t\t\tthis.view.offsetY = y;\r\n\t\t\tthis.view.width = width;\r\n\t\t\tthis.view.height = height;\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\r\n\t\t},\r\n\r\n\t\tclearViewOffset: function () {\r\n\r\n\t\t\tif ( this.view !== null ) {\r\n\r\n\t\t\t\tthis.view.enabled = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\r\n\t\t},\r\n\r\n\t\tupdateProjectionMatrix: function () {\r\n\r\n\t\t\tvar near = this.near,\r\n\t\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\r\n\t\t\t\theight = 2 * top,\r\n\t\t\t\twidth = this.aspect * height,\r\n\t\t\t\tleft = - 0.5 * width,\r\n\t\t\t\tview = this.view;\r\n\r\n\t\t\tif ( this.view !== null && this.view.enabled ) {\r\n\r\n\t\t\t\tvar fullWidth = view.fullWidth,\r\n\t\t\t\t\tfullHeight = view.fullHeight;\r\n\r\n\t\t\t\tleft += view.offsetX * width / fullWidth;\r\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\r\n\t\t\t\twidth *= view.width / fullWidth;\r\n\t\t\t\theight *= view.height / fullHeight;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar skew = this.filmOffset;\r\n\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\r\n\r\n\t\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\r\n\r\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tdata.object.fov = this.fov;\r\n\t\t\tdata.object.zoom = this.zoom;\r\n\r\n\t\t\tdata.object.near = this.near;\r\n\t\t\tdata.object.far = this.far;\r\n\t\t\tdata.object.focus = this.focus;\r\n\r\n\t\t\tdata.object.aspect = this.aspect;\r\n\r\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n\t\t\tdata.object.filmGauge = this.filmGauge;\r\n\t\t\tdata.object.filmOffset = this.filmOffset;\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction ArrayCamera( array ) {\r\n\r\n\t\tPerspectiveCamera.call( this );\r\n\r\n\t\tthis.cameras = array || [];\r\n\r\n\t}\r\n\r\n\tArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\r\n\r\n\t\tconstructor: ArrayCamera,\r\n\r\n\t\tisArrayCamera: true\r\n\r\n\t} );\n\n\t/**\r\n\t * @author jsantell / https://www.jsantell.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar cameraLPos = new Vector3();\r\n\tvar cameraRPos = new Vector3();\r\n\r\n\t/**\r\n\t * Assumes 2 cameras that are parallel and share an X-axis, and that\r\n\t * the cameras' projection and world matrices have already been set.\r\n\t * And that near and far planes are identical for both cameras.\r\n\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\r\n\t */\r\n\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\r\n\r\n\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\r\n\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\r\n\r\n\t\tvar ipd = cameraLPos.distanceTo( cameraRPos );\r\n\r\n\t\tvar projL = cameraL.projectionMatrix.elements;\r\n\t\tvar projR = cameraR.projectionMatrix.elements;\r\n\r\n\t\t// VR systems will have identical far and near planes, and\r\n\t\t// most likely identical top and bottom frustum extents.\r\n\t\t// Use the left camera for these values.\r\n\t\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\r\n\t\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\r\n\t\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\r\n\t\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\r\n\r\n\t\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\r\n\t\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\r\n\t\tvar left = near * leftFov;\r\n\t\tvar right = near * rightFov;\r\n\r\n\t\t// Calculate the new camera's position offset from the\r\n\t\t// left camera. xOffset should be roughly half `ipd`.\r\n\t\tvar zOffset = ipd / ( - leftFov + rightFov );\r\n\t\tvar xOffset = zOffset * - leftFov;\r\n\r\n\t\t// TODO: Better way to apply this offset?\r\n\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\r\n\t\tcamera.translateX( xOffset );\r\n\t\tcamera.translateZ( zOffset );\r\n\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t// Find the union of the frustum values of the cameras and scale\r\n\t\t// the values so that the near plane's position does not change in world space,\r\n\t\t// although must now be relative to the new union camera.\r\n\t\tvar near2 = near + zOffset;\r\n\t\tvar far2 = far + zOffset;\r\n\t\tvar left2 = left - xOffset;\r\n\t\tvar right2 = right + ( ipd - xOffset );\r\n\t\tvar top2 = topFov * far / far2 * near2;\r\n\t\tvar bottom2 = bottomFov * far / far2 * near2;\r\n\r\n\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebVRManager( renderer ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar device = null;\r\n\t\tvar frameData = null;\r\n\r\n\t\tvar poseTarget = null;\r\n\r\n\t\tvar controllers = [];\r\n\t\tvar standingMatrix = new Matrix4();\r\n\t\tvar standingMatrixInverse = new Matrix4();\r\n\r\n\t\tvar framebufferScaleFactor = 1.0;\r\n\r\n\t\tvar frameOfReferenceType = 'stage';\r\n\r\n\t\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\r\n\r\n\t\t\tframeData = new window.VRFrameData();\r\n\t\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\r\n\r\n\t\t}\r\n\r\n\t\tvar matrixWorldInverse = new Matrix4();\r\n\t\tvar tempQuaternion = new Quaternion();\r\n\t\tvar tempPosition = new Vector3();\r\n\r\n\t\tvar cameraL = new PerspectiveCamera();\r\n\t\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\r\n\t\tcameraL.layers.enable( 1 );\r\n\r\n\t\tvar cameraR = new PerspectiveCamera();\r\n\t\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\r\n\t\tcameraR.layers.enable( 2 );\r\n\r\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\r\n\t\tcameraVR.layers.enable( 1 );\r\n\t\tcameraVR.layers.enable( 2 );\r\n\r\n\t\t//\r\n\r\n\t\tfunction isPresenting() {\r\n\r\n\t\t\treturn device !== null && device.isPresenting === true;\r\n\r\n\t\t}\r\n\r\n\t\tvar currentSize = new Vector2(), currentPixelRatio;\r\n\r\n\t\tfunction onVRDisplayPresentChange() {\r\n\r\n\t\t\tif ( isPresenting() ) {\r\n\r\n\t\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\r\n\t\t\t\tvar renderWidth = eyeParameters.renderWidth * framebufferScaleFactor;\r\n\t\t\t\tvar renderHeight = eyeParameters.renderHeight * framebufferScaleFactor;\r\n\r\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\r\n\t\t\t\trenderer.getSize( currentSize );\r\n\r\n\t\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\r\n\r\n\t\t\t\tanimation.start();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( scope.enabled ) {\r\n\r\n\t\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimation.stop();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar triggers = [];\r\n\r\n\t\tfunction findGamepad( id ) {\r\n\r\n\t\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\r\n\r\n\t\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar gamepad = gamepads[ i ];\r\n\r\n\t\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\r\n\t\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\r\n\t\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\r\n\t\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\r\n\r\n\t\t\t\t\tif ( j === id ) return gamepad;\r\n\r\n\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateControllers() {\r\n\r\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\r\n\r\n\t\t\t\tvar controller = controllers[ i ];\r\n\r\n\t\t\t\tvar gamepad = findGamepad( i );\r\n\r\n\t\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\r\n\r\n\t\t\t\t\tif ( gamepad.pose === null ) return;\r\n\r\n\t\t\t\t\t// Pose\r\n\r\n\t\t\t\t\tvar pose = gamepad.pose;\r\n\r\n\t\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\r\n\r\n\t\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\r\n\t\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\r\n\t\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\r\n\t\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\r\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\r\n\t\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\r\n\t\t\t\t\tcontroller.visible = true;\r\n\r\n\t\t\t\t\t// Trigger\r\n\r\n\t\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\r\n\r\n\t\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\r\n\r\n\t\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\r\n\r\n\t\t\t\t\t\tif ( triggers[ i ] === true ) {\r\n\r\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\r\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcontroller.visible = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tthis.enabled = false;\r\n\r\n\t\tthis.getController = function ( id ) {\r\n\r\n\t\t\tvar controller = controllers[ id ];\r\n\r\n\t\t\tif ( controller === undefined ) {\r\n\r\n\t\t\t\tcontroller = new Group();\r\n\t\t\t\tcontroller.matrixAutoUpdate = false;\r\n\t\t\t\tcontroller.visible = false;\r\n\r\n\t\t\t\tcontrollers[ id ] = controller;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn controller;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getDevice = function () {\r\n\r\n\t\t\treturn device;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setDevice = function ( value ) {\r\n\r\n\t\t\tif ( value !== undefined ) device = value;\r\n\r\n\t\t\tanimation.setContext( value );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\r\n\r\n\t\t\tframebufferScaleFactor = value;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setFrameOfReferenceType = function ( value ) {\r\n\r\n\t\t\tframeOfReferenceType = value;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setPoseTarget = function ( object ) {\r\n\r\n\t\t\tif ( object !== undefined ) poseTarget = object;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getCamera = function ( camera ) {\r\n\r\n\t\t\tvar userHeight = frameOfReferenceType === 'stage' ? 1.6 : 0;\r\n\r\n\t\t\tif ( isPresenting() === false ) {\r\n\r\n\t\t\t\tcamera.position.set( 0, userHeight, 0 );\r\n\t\t\t\tcamera.rotation.set( 0, 0, 0 );\r\n\r\n\t\t\t\treturn camera;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdevice.depthNear = camera.near;\r\n\t\t\tdevice.depthFar = camera.far;\r\n\r\n\t\t\tdevice.getFrameData( frameData );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( frameOfReferenceType === 'stage' ) {\r\n\r\n\t\t\t\tvar stageParameters = device.stageParameters;\r\n\r\n\t\t\t\tif ( stageParameters ) {\r\n\r\n\t\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstandingMatrix.makeTranslation( 0, userHeight, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar pose = frameData.pose;\r\n\t\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\r\n\r\n\t\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\r\n\t\t\tposeObject.matrix.copy( standingMatrix );\r\n\t\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\r\n\r\n\t\t\tif ( pose.orientation !== null ) {\r\n\r\n\t\t\t\ttempQuaternion.fromArray( pose.orientation );\r\n\t\t\t\tposeObject.quaternion.multiply( tempQuaternion );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( pose.position !== null ) {\r\n\r\n\t\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\r\n\t\t\t\ttempPosition.fromArray( pose.position );\r\n\t\t\t\ttempPosition.applyQuaternion( tempQuaternion );\r\n\t\t\t\tposeObject.position.add( tempPosition );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposeObject.updateMatrixWorld();\r\n\r\n\t\t\t//\r\n\r\n\t\t\tcameraL.near = camera.near;\r\n\t\t\tcameraR.near = camera.near;\r\n\r\n\t\t\tcameraL.far = camera.far;\r\n\t\t\tcameraR.far = camera.far;\r\n\r\n\t\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\r\n\t\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\r\n\r\n\t\t\t// TODO (mrdoob) Double check this code\r\n\r\n\t\t\tstandingMatrixInverse.getInverse( standingMatrix );\r\n\r\n\t\t\tif ( frameOfReferenceType === 'stage' ) {\r\n\r\n\t\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\r\n\t\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar parent = poseObject.parent;\r\n\r\n\t\t\tif ( parent !== null ) {\r\n\r\n\t\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\r\n\t\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\r\n\t\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// envMap and Mirror needs camera.matrixWorld\r\n\r\n\t\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\r\n\t\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\r\n\r\n\t\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\r\n\t\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\r\n\r\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar layers = device.getLayers();\r\n\r\n\t\t\tif ( layers.length ) {\r\n\r\n\t\t\t\tvar layer = layers[ 0 ];\r\n\r\n\t\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\r\n\r\n\t\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\r\n\r\n\t\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateControllers();\r\n\r\n\t\t\treturn cameraVR;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getStandingMatrix = function () {\r\n\r\n\t\t\treturn standingMatrix;\r\n\r\n\t\t};\r\n\r\n\t\tthis.isPresenting = isPresenting;\r\n\r\n\t\t// Animation Loop\r\n\r\n\t\tvar animation = new WebGLAnimation();\r\n\r\n\t\tthis.setAnimationLoop = function ( callback ) {\r\n\r\n\t\t\tanimation.setAnimationLoop( callback );\r\n\r\n\t\t\tif ( isPresenting() ) animation.start();\r\n\r\n\t\t};\r\n\r\n\t\tthis.submitFrame = function () {\r\n\r\n\t\t\tif ( isPresenting() ) device.submitFrame();\r\n\r\n\t\t};\r\n\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\tif ( typeof window !== 'undefined' ) {\r\n\r\n\t\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction WebXRManager( renderer ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar device = null;\r\n\t\tvar session = null;\r\n\r\n\t\tvar framebufferScaleFactor = 1.0;\r\n\r\n\t\tvar frameOfReference = null;\r\n\t\tvar frameOfReferenceType = 'stage';\r\n\r\n\t\tvar pose = null;\r\n\r\n\t\tvar controllers = [];\r\n\t\tvar inputSources = [];\r\n\r\n\t\tfunction isPresenting() {\r\n\r\n\t\t\treturn session !== null && frameOfReference !== null;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar cameraL = new PerspectiveCamera();\r\n\t\tcameraL.layers.enable( 1 );\r\n\t\tcameraL.viewport = new Vector4();\r\n\r\n\t\tvar cameraR = new PerspectiveCamera();\r\n\t\tcameraR.layers.enable( 2 );\r\n\t\tcameraR.viewport = new Vector4();\r\n\r\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\r\n\t\tcameraVR.layers.enable( 1 );\r\n\t\tcameraVR.layers.enable( 2 );\r\n\r\n\t\t//\r\n\r\n\t\tthis.enabled = false;\r\n\r\n\t\tthis.getController = function ( id ) {\r\n\r\n\t\t\tvar controller = controllers[ id ];\r\n\r\n\t\t\tif ( controller === undefined ) {\r\n\r\n\t\t\t\tcontroller = new Group();\r\n\t\t\t\tcontroller.matrixAutoUpdate = false;\r\n\t\t\t\tcontroller.visible = false;\r\n\r\n\t\t\t\tcontrollers[ id ] = controller;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn controller;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getDevice = function () {\r\n\r\n\t\t\treturn device;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setDevice = function ( value ) {\r\n\r\n\t\t\tif ( value !== undefined ) device = value;\r\n\t\t\tif ( value instanceof XRDevice ) gl.setCompatibleXRDevice( value );\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tfunction onSessionEvent( event ) {\r\n\r\n\t\t\tvar controller = controllers[ inputSources.indexOf( event.inputSource ) ];\r\n\t\t\tif ( controller ) controller.dispatchEvent( { type: event.type } );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onSessionEnd() {\r\n\r\n\t\t\trenderer.setFramebuffer( null );\r\n\t\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\r\n\t\t\tanimation.stop();\r\n\r\n\t\t}\r\n\r\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\r\n\r\n\t\t\tframebufferScaleFactor = value;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setFrameOfReferenceType = function ( value ) {\r\n\r\n\t\t\tframeOfReferenceType = value;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setSession = function ( value ) {\r\n\r\n\t\t\tsession = value;\r\n\r\n\t\t\tif ( session !== null ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\r\n\r\n\t\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl, { framebufferScaleFactor: framebufferScaleFactor } );\r\n\t\t\t\tsession.requestFrameOfReference( frameOfReferenceType ).then( function ( value ) {\r\n\r\n\t\t\t\t\tframeOfReference = value;\r\n\r\n\t\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\r\n\r\n\t\t\t\t\tanimation.setContext( session );\r\n\t\t\t\t\tanimation.start();\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tinputSources = session.getInputSources();\r\n\r\n\t\t\t\tsession.addEventListener( 'inputsourceschange', function () {\r\n\r\n\t\t\t\t\tinputSources = session.getInputSources();\r\n\t\t\t\t\tconsole.log( inputSources );\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar controller = controllers[ i ];\r\n\t\t\t\t\t\tcontroller.userData.inputSource = inputSources[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction updateCamera( camera, parent ) {\r\n\r\n\t\t\tif ( parent === null ) {\r\n\r\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.getCamera = function ( camera ) {\r\n\r\n\t\t\tif ( isPresenting() ) {\r\n\r\n\t\t\t\tvar parent = camera.parent;\r\n\t\t\t\tvar cameras = cameraVR.cameras;\r\n\r\n\t\t\t\tupdateCamera( cameraVR, parent );\r\n\r\n\t\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\r\n\r\n\t\t\t\t\tupdateCamera( cameras[ i ], parent );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// update camera and its children\r\n\r\n\t\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\r\n\r\n\t\t\t\tvar children = camera.children;\r\n\r\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tchildren[ i ].updateMatrixWorld( true );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\r\n\r\n\t\t\t\treturn cameraVR;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn camera;\r\n\r\n\t\t};\r\n\r\n\t\tthis.isPresenting = isPresenting;\r\n\r\n\t\t// Animation Loop\r\n\r\n\t\tvar onAnimationFrameCallback = null;\r\n\r\n\t\tfunction onAnimationFrame( time, frame ) {\r\n\r\n\t\t\tpose = frame.getDevicePose( frameOfReference );\r\n\r\n\t\t\tif ( pose !== null ) {\r\n\r\n\t\t\t\tvar layer = session.baseLayer;\r\n\t\t\t\tvar views = frame.views;\r\n\r\n\t\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar view = views[ i ];\r\n\t\t\t\t\tvar viewport = layer.getViewport( view );\r\n\t\t\t\t\tvar viewMatrix = pose.getViewMatrix( view );\r\n\r\n\t\t\t\t\tvar camera = cameraVR.cameras[ i ];\r\n\t\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\r\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\r\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\r\n\r\n\t\t\t\t\tif ( i === 0 ) {\r\n\r\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\r\n\r\n\t\t\t\tvar controller = controllers[ i ];\r\n\r\n\t\t\t\tvar inputSource = inputSources[ i ];\r\n\r\n\t\t\t\tif ( inputSource ) {\r\n\r\n\t\t\t\t\tvar inputPose = frame.getInputPose( inputSource, frameOfReference );\r\n\r\n\t\t\t\t\tif ( inputPose !== null ) {\r\n\r\n\t\t\t\t\t\tif ( 'targetRay' in inputPose ) {\r\n\r\n\t\t\t\t\t\t\tcontroller.matrix.elements = inputPose.targetRay.transformMatrix;\r\n\r\n\t\t\t\t\t\t} else if ( 'pointerMatrix' in inputPose ) {\r\n\r\n\t\t\t\t\t\t\t// DEPRECATED\r\n\r\n\t\t\t\t\t\t\tcontroller.matrix.elements = inputPose.pointerMatrix;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\r\n\t\t\t\t\t\tcontroller.visible = true;\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontroller.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\r\n\r\n\t\t}\r\n\r\n\t\tvar animation = new WebGLAnimation();\r\n\t\tanimation.setAnimationLoop( onAnimationFrame );\r\n\r\n\t\tthis.setAnimationLoop = function ( callback ) {\r\n\r\n\t\t\tonAnimationFrameCallback = callback;\r\n\r\n\t\t};\r\n\r\n\t\tthis.dispose = function () {};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tthis.getStandingMatrix = function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\r\n\t\t\treturn new Matrix4();\r\n\r\n\t\t};\r\n\r\n\t\tthis.submitFrame = function () {};\r\n\r\n\t}\n\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction WebGLRenderer( parameters ) {\r\n\r\n\t\tconsole.log( 'THREE.WebGLRenderer', REVISION );\r\n\r\n\t\tparameters = parameters || {};\r\n\r\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\r\n\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\r\n\r\n\t\tvar currentRenderList = null;\r\n\t\tvar currentRenderState = null;\r\n\r\n\t\t// public properties\r\n\r\n\t\tthis.domElement = _canvas;\r\n\t\tthis.context = null;\r\n\r\n\t\t// clearing\r\n\r\n\t\tthis.autoClear = true;\r\n\t\tthis.autoClearColor = true;\r\n\t\tthis.autoClearDepth = true;\r\n\t\tthis.autoClearStencil = true;\r\n\r\n\t\t// scene graph\r\n\r\n\t\tthis.sortObjects = true;\r\n\r\n\t\t// user-defined clipping\r\n\r\n\t\tthis.clippingPlanes = [];\r\n\t\tthis.localClippingEnabled = false;\r\n\r\n\t\t// physically based shading\r\n\r\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\t\tthis.gammaInput = false;\r\n\t\tthis.gammaOutput = false;\r\n\r\n\t\t// physical lights\r\n\r\n\t\tthis.physicallyCorrectLights = false;\r\n\r\n\t\t// tone mapping\r\n\r\n\t\tthis.toneMapping = LinearToneMapping;\r\n\t\tthis.toneMappingExposure = 1.0;\r\n\t\tthis.toneMappingWhitePoint = 1.0;\r\n\r\n\t\t// morphs\r\n\r\n\t\tthis.maxMorphTargets = 8;\r\n\t\tthis.maxMorphNormals = 4;\r\n\r\n\t\t// internal properties\r\n\r\n\t\tvar _this = this,\r\n\r\n\t\t\t_isContextLost = false,\r\n\r\n\t\t\t// internal state cache\r\n\r\n\t\t\t_framebuffer = null,\r\n\r\n\t\t\t_currentRenderTarget = null,\r\n\t\t\t_currentFramebuffer = null,\r\n\t\t\t_currentMaterialId = - 1,\r\n\r\n\t\t\t// geometry and program caching\r\n\r\n\t\t\t_currentGeometryProgram = {\r\n\t\t\t\tgeometry: null,\r\n\t\t\t\tprogram: null,\r\n\t\t\t\twireframe: false\r\n\t\t\t},\r\n\r\n\t\t\t_currentCamera = null,\r\n\t\t\t_currentArrayCamera = null,\r\n\r\n\t\t\t_currentViewport = new Vector4(),\r\n\t\t\t_currentScissor = new Vector4(),\r\n\t\t\t_currentScissorTest = null,\r\n\r\n\t\t\t//\r\n\r\n\t\t\t_width = _canvas.width,\r\n\t\t\t_height = _canvas.height,\r\n\r\n\t\t\t_pixelRatio = 1,\r\n\r\n\t\t\t_viewport = new Vector4( 0, 0, _width, _height ),\r\n\t\t\t_scissor = new Vector4( 0, 0, _width, _height ),\r\n\t\t\t_scissorTest = false,\r\n\r\n\t\t\t// frustum\r\n\r\n\t\t\t_frustum = new Frustum(),\r\n\r\n\t\t\t// clipping\r\n\r\n\t\t\t_clipping = new WebGLClipping(),\r\n\t\t\t_clippingEnabled = false,\r\n\t\t\t_localClippingEnabled = false,\r\n\r\n\t\t\t// camera matrices cache\r\n\r\n\t\t\t_projScreenMatrix = new Matrix4(),\r\n\r\n\t\t\t_vector3 = new Vector3();\r\n\r\n\t\tfunction getTargetPixelRatio() {\r\n\r\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\r\n\r\n\t\t}\r\n\r\n\t\t// initialize\r\n\r\n\t\tvar _gl;\r\n\r\n\t\ttry {\r\n\r\n\t\t\tvar contextAttributes = {\r\n\t\t\t\talpha: _alpha,\r\n\t\t\t\tdepth: _depth,\r\n\t\t\t\tstencil: _stencil,\r\n\t\t\t\tantialias: _antialias,\r\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\r\n\t\t\t\tpowerPreference: _powerPreference\r\n\t\t\t};\r\n\r\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\r\n\r\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\r\n\r\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\r\n\r\n\t\t\tif ( _gl === null ) {\r\n\r\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\r\n\r\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\r\n\r\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\r\n\r\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\r\n\t\t\tthrow error;\r\n\r\n\t\t}\r\n\r\n\t\tvar extensions, capabilities, state, info;\r\n\t\tvar properties, textures, attributes, geometries, objects;\r\n\t\tvar programCache, renderLists, renderStates;\r\n\r\n\t\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\r\n\r\n\t\tvar utils;\r\n\r\n\t\tfunction initGLContext() {\r\n\r\n\t\t\textensions = new WebGLExtensions( _gl );\r\n\r\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n\t\t\tif ( ! capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\textensions.get( 'WEBGL_depth_texture' );\r\n\t\t\t\textensions.get( 'OES_texture_float' );\r\n\t\t\t\textensions.get( 'OES_texture_half_float' );\r\n\t\t\t\textensions.get( 'OES_texture_half_float_linear' );\r\n\t\t\t\textensions.get( 'OES_standard_derivatives' );\r\n\t\t\t\textensions.get( 'OES_element_index_uint' );\r\n\t\t\t\textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\textensions.get( 'OES_texture_float_linear' );\r\n\r\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\r\n\r\n\t\t\tstate = new WebGLState( _gl, extensions, utils, capabilities );\r\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\r\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\r\n\r\n\t\t\tinfo = new WebGLInfo( _gl );\r\n\t\t\tproperties = new WebGLProperties();\r\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\r\n\t\t\tattributes = new WebGLAttributes( _gl );\r\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\r\n\t\t\tobjects = new WebGLObjects( geometries, info );\r\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl );\r\n\t\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities, textures );\r\n\t\t\trenderLists = new WebGLRenderLists();\r\n\t\t\trenderStates = new WebGLRenderStates();\r\n\r\n\t\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\r\n\r\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\r\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\r\n\r\n\t\t\tinfo.programs = programCache.programs;\r\n\r\n\t\t\t_this.context = _gl;\r\n\t\t\t_this.capabilities = capabilities;\r\n\t\t\t_this.extensions = extensions;\r\n\t\t\t_this.properties = properties;\r\n\t\t\t_this.renderLists = renderLists;\r\n\t\t\t_this.state = state;\r\n\t\t\t_this.info = info;\r\n\r\n\t\t}\r\n\r\n\t\tinitGLContext();\r\n\r\n\t\t// vr\r\n\r\n\t\tvar vr = ( typeof navigator !== 'undefined' && 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\r\n\r\n\t\tthis.vr = vr;\r\n\r\n\t\t// shadow map\r\n\r\n\t\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\r\n\r\n\t\tthis.shadowMap = shadowMap;\r\n\r\n\t\t// API\r\n\r\n\t\tthis.getContext = function () {\r\n\r\n\t\t\treturn _gl;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getContextAttributes = function () {\r\n\r\n\t\t\treturn _gl.getContextAttributes();\r\n\r\n\t\t};\r\n\r\n\t\tthis.forceContextLoss = function () {\r\n\r\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\r\n\t\t\tif ( extension ) extension.loseContext();\r\n\r\n\t\t};\r\n\r\n\t\tthis.forceContextRestore = function () {\r\n\r\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\r\n\t\t\tif ( extension ) extension.restoreContext();\r\n\r\n\t\t};\r\n\r\n\t\tthis.getPixelRatio = function () {\r\n\r\n\t\t\treturn _pixelRatio;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\t\tif ( value === undefined ) return;\r\n\r\n\t\t\t_pixelRatio = value;\r\n\r\n\t\t\tthis.setSize( _width, _height, false );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getSize = function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\r\n\r\n\t\t\t\ttarget = new Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.set( _width, _height );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t\tif ( vr.isPresenting() ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\r\n\t\t\t_canvas.width = width * _pixelRatio;\r\n\t\t\t_canvas.height = height * _pixelRatio;\r\n\r\n\t\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getDrawingBufferSize = function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\r\n\r\n\t\t\t\ttarget = new Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\r\n\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\r\n\t\t\t_pixelRatio = pixelRatio;\r\n\r\n\t\t\t_canvas.width = width * pixelRatio;\r\n\t\t\t_canvas.height = height * pixelRatio;\r\n\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getCurrentViewport = function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\r\n\r\n\t\t\t\ttarget = new Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( _currentViewport );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getViewport = function ( target ) {\r\n\r\n\t\t\treturn target.copy( _viewport );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t\tif ( x.isVector4 ) {\r\n\r\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_viewport.set( x, y, width, height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getScissor = function ( target ) {\r\n\r\n\t\t\treturn target.copy( _scissor );\r\n\r\n\t\t};\r\n\r\n\t\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t\tif ( x.isVector4 ) {\r\n\r\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_scissor.set( x, y, width, height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getScissorTest = function () {\r\n\r\n\t\t\treturn _scissorTest;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setScissorTest = function ( boolean ) {\r\n\r\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\r\n\r\n\t\t};\r\n\r\n\t\t// Clearing\r\n\r\n\t\tthis.getClearColor = function () {\r\n\r\n\t\t\treturn background.getClearColor();\r\n\r\n\t\t};\r\n\r\n\t\tthis.setClearColor = function () {\r\n\r\n\t\t\tbackground.setClearColor.apply( background, arguments );\r\n\r\n\t\t};\r\n\r\n\t\tthis.getClearAlpha = function () {\r\n\r\n\t\t\treturn background.getClearAlpha();\r\n\r\n\t\t};\r\n\r\n\t\tthis.setClearAlpha = function () {\r\n\r\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\t\tvar bits = 0;\r\n\r\n\t\t\tif ( color === undefined || color ) bits |= 16384;\r\n\t\t\tif ( depth === undefined || depth ) bits |= 256;\r\n\t\t\tif ( stencil === undefined || stencil ) bits |= 1024;\r\n\r\n\t\t\t_gl.clear( bits );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clearColor = function () {\r\n\r\n\t\t\tthis.clear( true, false, false );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clearDepth = function () {\r\n\r\n\t\t\tthis.clear( false, true, false );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clearStencil = function () {\r\n\r\n\t\t\tthis.clear( false, false, true );\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\r\n\r\n\t\t\trenderLists.dispose();\r\n\t\t\trenderStates.dispose();\r\n\t\t\tproperties.dispose();\r\n\t\t\tobjects.dispose();\r\n\r\n\t\t\tvr.dispose();\r\n\r\n\t\t\tanimation.stop();\r\n\r\n\t\t};\r\n\r\n\t\t// Events\r\n\r\n\t\tfunction onContextLost( event ) {\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\r\n\r\n\t\t\t_isContextLost = true;\r\n\r\n\t\t}\r\n\r\n\t\tfunction onContextRestore( /* event */ ) {\r\n\r\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\r\n\r\n\t\t\t_isContextLost = false;\r\n\r\n\t\t\tinitGLContext();\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMaterialDispose( event ) {\r\n\r\n\t\t\tvar material = event.target;\r\n\r\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t\tdeallocateMaterial( material );\r\n\r\n\t\t}\r\n\r\n\t\t// Buffer deallocation\r\n\r\n\t\tfunction deallocateMaterial( material ) {\r\n\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t\tproperties.remove( material );\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction releaseMaterialProgramReference( material ) {\r\n\r\n\t\t\tvar programInfo = properties.get( material ).program;\r\n\r\n\t\t\tmaterial.program = undefined;\r\n\r\n\t\t\tif ( programInfo !== undefined ) {\r\n\r\n\t\t\t\tprogramCache.releaseProgram( programInfo );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Buffer rendering\r\n\r\n\t\tfunction renderObjectImmediate( object, program ) {\r\n\r\n\t\t\tobject.render( function ( object ) {\r\n\r\n\t\t\t\t_this.renderBufferImmediate( object, program );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderBufferImmediate = function ( object, program ) {\r\n\r\n\t\t\tstate.initAttributes();\r\n\r\n\t\t\tvar buffers = properties.get( object );\r\n\r\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( 34962, buffers.position );\r\n\t\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\r\n\r\n\t\t\t\tstate.enableAttribute( programAttributes.position );\r\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( 34962, buffers.normal );\r\n\t\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\r\n\r\n\t\t\t\tstate.enableAttribute( programAttributes.normal );\r\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.hasUvs ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( 34962, buffers.uv );\r\n\t\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\r\n\r\n\t\t\t\tstate.enableAttribute( programAttributes.uv );\r\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.hasColors ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( 34962, buffers.color );\r\n\t\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\r\n\r\n\t\t\t\tstate.enableAttribute( programAttributes.color );\r\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t\t_gl.drawArrays( 4, 0, object.count );\r\n\r\n\t\t\tobject.count = 0;\r\n\r\n\t\t};\r\n\r\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\r\n\r\n\t\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\r\n\r\n\t\t\tstate.setMaterial( material, frontFaceCW );\r\n\r\n\t\t\tvar program = setProgram( camera, fog, material, object );\r\n\r\n\t\t\tvar updateBuffers = false;\r\n\r\n\t\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\r\n\t\t\t\t_currentGeometryProgram.program !== program.id ||\r\n\t\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\r\n\r\n\t\t\t\t_currentGeometryProgram.geometry = geometry.id;\r\n\t\t\t\t_currentGeometryProgram.program = program.id;\r\n\t\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\r\n\t\t\t\tupdateBuffers = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.morphTargetInfluences ) {\r\n\r\n\t\t\t\tmorphtargets.update( object, geometry, material, program );\r\n\r\n\t\t\t\tupdateBuffers = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\t\tvar rangeFactor = 1;\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\r\n\t\t\t\trangeFactor = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attribute;\r\n\t\t\tvar renderer = bufferRenderer;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tattribute = attributes.get( index );\r\n\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( 34963, attribute.buffer );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar dataCount = Infinity;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tdataCount = index.count;\r\n\r\n\t\t\t} else if ( position !== undefined ) {\r\n\r\n\t\t\t\tdataCount = position.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\r\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\r\n\r\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\r\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\r\n\r\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\r\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\r\n\r\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\r\n\r\n\t\t\tif ( drawCount === 0 ) return;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( object.isMesh ) {\r\n\r\n\t\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\r\n\t\t\t\t\trenderer.setMode( 1 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tswitch ( object.drawMode ) {\r\n\r\n\t\t\t\t\t\tcase TrianglesDrawMode:\r\n\t\t\t\t\t\t\trenderer.setMode( 4 );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase TriangleStripDrawMode:\r\n\t\t\t\t\t\t\trenderer.setMode( 5 );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase TriangleFanDrawMode:\r\n\t\t\t\t\t\t\trenderer.setMode( 6 );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t} else if ( object.isLine ) {\r\n\r\n\t\t\t\tvar lineWidth = material.linewidth;\r\n\r\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\r\n\r\n\t\t\t\tif ( object.isLineSegments ) {\r\n\r\n\t\t\t\t\trenderer.setMode( 1 );\r\n\r\n\t\t\t\t} else if ( object.isLineLoop ) {\r\n\r\n\t\t\t\t\trenderer.setMode( 2 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderer.setMode( 3 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.isPoints ) {\r\n\r\n\t\t\t\trenderer.setMode( 0 );\r\n\r\n\t\t\t} else if ( object.isSprite ) {\r\n\r\n\t\t\t\trenderer.setMode( 4 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\r\n\r\n\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\r\n\r\n\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.render( drawStart, drawCount );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction setupVertexAttributes( material, program, geometry ) {\r\n\r\n\t\t\tif ( geometry && geometry.isInstancedBufferGeometry && ! capabilities.isWebGL2 ) {\r\n\r\n\t\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.initAttributes();\r\n\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\t\tfor ( var name in programAttributes ) {\r\n\r\n\t\t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n\t\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\r\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\r\n\t\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\r\n\r\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\r\n\r\n\t\t\t\t\t\tif ( attribute === undefined ) continue;\r\n\r\n\t\t\t\t\t\tvar buffer = attribute.buffer;\r\n\t\t\t\t\t\tvar type = attribute.type;\r\n\t\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t}\r\n\r\n\t\t// Compile\r\n\r\n\t\tthis.compile = function ( scene, camera ) {\r\n\r\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\r\n\t\t\tcurrentRenderState.init();\r\n\r\n\t\t\tscene.traverse( function ( object ) {\r\n\r\n\t\t\t\tif ( object.isLight ) {\r\n\r\n\t\t\t\t\tcurrentRenderState.pushLight( object );\r\n\r\n\t\t\t\t\tif ( object.castShadow ) {\r\n\r\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tcurrentRenderState.setupLights( camera );\r\n\r\n\t\t\tscene.traverse( function ( object ) {\r\n\r\n\t\t\t\tif ( object.material ) {\r\n\r\n\t\t\t\t\tif ( Array.isArray( object.material ) ) {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t};\r\n\r\n\t\t// Animation Loop\r\n\r\n\t\tvar onAnimationFrameCallback = null;\r\n\r\n\t\tfunction onAnimationFrame( time ) {\r\n\r\n\t\t\tif ( vr.isPresenting() ) return;\r\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\r\n\r\n\t\t}\r\n\r\n\t\tvar animation = new WebGLAnimation();\r\n\t\tanimation.setAnimationLoop( onAnimationFrame );\r\n\r\n\t\tif ( typeof window !== 'undefined' ) animation.setContext( window );\r\n\r\n\t\tthis.setAnimationLoop = function ( callback ) {\r\n\r\n\t\t\tonAnimationFrameCallback = callback;\r\n\t\t\tvr.setAnimationLoop( callback );\r\n\r\n\t\t\tanimation.start();\r\n\r\n\t\t};\r\n\r\n\t\t// Rendering\r\n\r\n\t\tthis.render = function ( scene, camera ) {\r\n\r\n\t\t\tvar renderTarget, forceClear;\r\n\r\n\t\t\tif ( arguments[ 2 ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\r\n\t\t\t\trenderTarget = arguments[ 2 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( arguments[ 3 ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\r\n\t\t\t\tforceClear = arguments[ 3 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! ( camera && camera.isCamera ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _isContextLost ) return;\r\n\r\n\t\t\t// reset caching for this frame\r\n\r\n\t\t\t_currentGeometryProgram.geometry = null;\r\n\t\t\t_currentGeometryProgram.program = null;\r\n\t\t\t_currentGeometryProgram.wireframe = false;\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\t\t_currentCamera = null;\r\n\r\n\t\t\t// update scene graph\r\n\r\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\t\tif ( vr.enabled ) {\r\n\r\n\t\t\t\tcamera = vr.getCamera( camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\r\n\t\t\tcurrentRenderState.init();\r\n\r\n\t\t\tscene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\r\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\r\n\r\n\t\t\tcurrentRenderList = renderLists.get( scene, camera );\r\n\t\t\tcurrentRenderList.init();\r\n\r\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\r\n\r\n\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\tcurrentRenderList.sort();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( _clippingEnabled ) _clipping.beginShadows();\r\n\r\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\r\n\r\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\r\n\r\n\t\t\tcurrentRenderState.setupLights( camera );\r\n\r\n\t\t\tif ( _clippingEnabled ) _clipping.endShadows();\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( this.info.autoReset ) this.info.reset();\r\n\r\n\t\t\tif ( renderTarget !== undefined ) {\r\n\r\n\t\t\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbackground.render( currentRenderList, scene, camera, forceClear );\r\n\r\n\t\t\t// render scene\r\n\r\n\t\t\tvar opaqueObjects = currentRenderList.opaque;\r\n\t\t\tvar transparentObjects = currentRenderList.transparent;\r\n\r\n\t\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\r\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\r\n\r\n\t\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tscene.onAfterRender( _this, scene, camera );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( _currentRenderTarget !== null ) {\r\n\r\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\r\n\r\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\r\n\r\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\t\tstate.buffers.depth.setTest( true );\r\n\t\t\tstate.buffers.depth.setMask( true );\r\n\t\t\tstate.buffers.color.setMask( true );\r\n\r\n\t\t\tstate.setPolygonOffset( false );\r\n\r\n\t\t\tif ( vr.enabled ) {\r\n\r\n\t\t\t\tvr.submitFrame();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// _gl.finish();\r\n\r\n\t\t\tcurrentRenderList = null;\r\n\t\t\tcurrentRenderState = null;\r\n\r\n\t\t};\r\n\r\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\r\n\r\n\t\t\tif ( object.visible === false ) return;\r\n\r\n\t\t\tvar visible = object.layers.test( camera.layers );\r\n\r\n\t\t\tif ( visible ) {\r\n\r\n\t\t\t\tif ( object.isGroup ) {\r\n\r\n\t\t\t\t\tgroupOrder = object.renderOrder;\r\n\r\n\t\t\t\t} else if ( object.isLight ) {\r\n\r\n\t\t\t\t\tcurrentRenderState.pushLight( object );\r\n\r\n\t\t\t\t\tif ( object.castShadow ) {\r\n\r\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( object.isSprite ) {\r\n\r\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\r\n\r\n\t\t\t\t\t\tif ( sortObjects ) {\r\n\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\r\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\t\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\t\tif ( material.visible ) {\r\n\r\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\r\n\r\n\t\t\t\t\tif ( sortObjects ) {\r\n\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\r\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\r\n\r\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\r\n\r\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\r\n\r\n\t\t\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\r\n\r\n\t\t\t\t\t\tif ( sortObjects ) {\r\n\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\r\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\t\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else if ( material.visible ) {\r\n\r\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\r\n\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar renderItem = renderList[ i ];\r\n\r\n\t\t\t\tvar object = renderItem.object;\r\n\t\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\t\tvar group = renderItem.group;\r\n\r\n\t\t\t\tif ( camera.isArrayCamera ) {\r\n\r\n\t\t\t\t\t_currentArrayCamera = camera;\r\n\r\n\t\t\t\t\tvar cameras = camera.cameras;\r\n\r\n\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tvar camera2 = cameras[ j ];\r\n\r\n\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\r\n\r\n\t\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\r\n\r\n\t\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tvar bounds = camera2.bounds;\r\n\r\n\t\t\t\t\t\t\t\tvar x = bounds.x * _width;\r\n\t\t\t\t\t\t\t\tvar y = bounds.y * _height;\r\n\t\t\t\t\t\t\t\tvar width = bounds.z * _width;\r\n\t\t\t\t\t\t\t\tvar height = bounds.w * _height;\r\n\r\n\t\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\r\n\r\n\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_currentArrayCamera = null;\r\n\r\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\r\n\r\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\r\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tif ( object.isImmediateRenderObject ) {\r\n\r\n\t\t\t\tstate.setMaterial( material );\r\n\r\n\t\t\t\tvar program = setProgram( camera, scene.fog, material, object );\r\n\r\n\t\t\t\t_currentGeometryProgram.geometry = null;\r\n\t\t\t\t_currentGeometryProgram.program = null;\r\n\t\t\t\t_currentGeometryProgram.wireframe = false;\r\n\r\n\t\t\t\trenderObjectImmediate( object, program );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\r\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\r\n\r\n\t\t}\r\n\r\n\t\tfunction initMaterial( material, fog, object ) {\r\n\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\t\tvar lights = currentRenderState.state.lights;\r\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\r\n\r\n\t\t\tvar lightsHash = materialProperties.lightsHash;\r\n\t\t\tvar lightsStateHash = lights.state.hash;\r\n\r\n\t\t\tvar parameters = programCache.getParameters(\r\n\t\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\r\n\r\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n\t\t\tvar program = materialProperties.program;\r\n\t\t\tvar programChange = true;\r\n\r\n\t\t\tif ( program === undefined ) {\r\n\r\n\t\t\t\t// new material\r\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t\t} else if ( program.code !== code ) {\r\n\r\n\t\t\t\t// changed glsl or parameters\r\n\t\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t\t} else if ( lightsHash.stateID !== lightsStateHash.stateID ||\r\n\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\r\n\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\r\n\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\r\n\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\r\n\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\r\n\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) {\r\n\r\n\t\t\t\tlightsHash.stateID = lightsStateHash.stateID;\r\n\t\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\r\n\t\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\r\n\t\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\r\n\t\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\r\n\t\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\r\n\t\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\r\n\r\n\t\t\t\tprogramChange = false;\r\n\r\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n\t\t\t\t// same glsl and uniform list\r\n\t\t\t\treturn;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// only rebuild uniform list\r\n\t\t\t\tprogramChange = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( programChange ) {\r\n\r\n\t\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\r\n\r\n\t\t\t\t\tmaterialProperties.shader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: cloneUniforms( shader.uniforms ),\r\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterialProperties.shader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\r\n\r\n\t\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\r\n\t\t\t\tcode = programCache.getProgramCode( material, parameters );\r\n\r\n\t\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\r\n\r\n\t\t\t\tmaterialProperties.program = program;\r\n\t\t\t\tmaterial.program = program;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar uniforms = materialProperties.shader.uniforms;\r\n\r\n\t\t\tif ( ! material.isShaderMaterial &&\r\n\t\t\t\t! material.isRawShaderMaterial ||\r\n\t\t\t\tmaterial.clipping === true ) {\r\n\r\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\r\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\r\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterialProperties.fog = fog;\r\n\r\n\t\t\t// store the light setup it was created for\r\n\t\t\tif ( lightsHash === undefined ) {\r\n\r\n\t\t\t\tmaterialProperties.lightsHash = lightsHash = {};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlightsHash.stateID = lightsStateHash.stateID;\r\n\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\r\n\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\r\n\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\r\n\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\r\n\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\r\n\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\r\n\r\n\t\t\tif ( material.lights ) {\r\n\r\n\t\t\t\t// wire up the material to this renderer's lighting state\r\n\r\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\r\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\r\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\r\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\r\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\r\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\r\n\r\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\r\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\r\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\r\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\r\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\r\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\r\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\r\n\t\t\t\tuniformsList =\r\n\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\r\n\r\n\t\t\tmaterialProperties.uniformsList = uniformsList;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setProgram( camera, fog, material, object ) {\r\n\r\n\t\t\ttextures.resetTextureUnits();\r\n\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\t\tvar lights = currentRenderState.state.lights;\r\n\r\n\t\t\tvar lightsHash = materialProperties.lightsHash;\r\n\t\t\tvar lightsStateHash = lights.state.hash;\r\n\r\n\t\t\tif ( _clippingEnabled ) {\r\n\r\n\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\r\n\r\n\t\t\t\t\tvar useCache =\r\n\t\t\t\t\t\tcamera === _currentCamera &&\r\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\r\n\r\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\r\n\t\t\t\t\t// object instead of the material, once it becomes feasible\r\n\t\t\t\t\t// (#8465, #8379)\r\n\t\t\t\t\t_clipping.setState(\r\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\r\n\t\t\t\t\t\tcamera, materialProperties, useCache );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.needsUpdate === false ) {\r\n\r\n\t\t\t\tif ( materialProperties.program === undefined ) {\r\n\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\r\n\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t} else if ( material.lights && ( lightsHash.stateID !== lightsStateHash.stateID ||\r\n\t\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\r\n\t\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\r\n\t\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\r\n\t\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\r\n\t\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\r\n\t\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) ) {\r\n\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\r\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\r\n\t\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\r\n\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.needsUpdate ) {\r\n\r\n\t\t\t\tinitMaterial( material, fog, object );\r\n\t\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar refreshProgram = false;\r\n\t\t\tvar refreshMaterial = false;\r\n\t\t\tvar refreshLights = false;\r\n\r\n\t\t\tvar program = materialProperties.program,\r\n\t\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\t\tm_uniforms = materialProperties.shader.uniforms;\r\n\r\n\t\t\tif ( state.useProgram( program.program ) ) {\r\n\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\t\trefreshMaterial = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\r\n\r\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\r\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( _currentCamera !== camera ) {\r\n\r\n\t\t\t\t\t_currentCamera = camera;\r\n\r\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\r\n\t\t\t\t\t// now, in case this material supports lights - or later, when\r\n\t\t\t\t\t// the next material that does gets activated:\r\n\r\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\r\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// load material specific uniforms\r\n\t\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\t\tif ( material.isShaderMaterial ||\r\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\r\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\r\n\t\t\t\t\tmaterial.envMap ) {\r\n\r\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\r\n\r\n\t\t\t\t\tif ( uCamPos !== undefined ) {\r\n\r\n\t\t\t\t\t\tuCamPos.setValue( _gl,\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( material.isMeshPhongMaterial ||\r\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\r\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\r\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\r\n\t\t\t\t\tmaterial.isShaderMaterial ||\r\n\t\t\t\t\tmaterial.skinning ) {\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\t\tif ( material.skinning ) {\r\n\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\r\n\r\n\t\t\t\tvar skeleton = object.skeleton;\r\n\r\n\t\t\t\tif ( skeleton ) {\r\n\r\n\t\t\t\t\tvar bones = skeleton.bones;\r\n\r\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\r\n\r\n\t\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\r\n\r\n\t\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\r\n\t\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\r\n\t\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\r\n\t\t\t\t\t\t\tsize = Math.max( size, 4 );\r\n\r\n\t\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\r\n\t\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\r\n\r\n\t\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\r\n\t\t\t\t\t\t\tboneTexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\r\n\t\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\r\n\t\t\t\t\t\t\tskeleton.boneTextureSize = size;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\r\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\r\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\r\n\r\n\t\t\t\tif ( material.lights ) {\r\n\r\n\t\t\t\t\t// the current material requires lighting info\r\n\r\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\r\n\t\t\t\t\t// they simply reference the renderer's state for their\r\n\t\t\t\t\t// values\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\r\n\t\t\t\t\t// the GL state when required\r\n\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( material.isMeshBasicMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isMeshLambertMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isMeshPhongMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t\t\tif ( material.isMeshToonMaterial ) {\r\n\r\n\t\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( material.isMeshStandardMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\r\n\r\n\t\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( material.isMeshMatcapMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isMeshDepthMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsDepth( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isMeshDistanceMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsDistance( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isMeshNormalMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsNormal( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isLineBasicMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t\t\tif ( material.isLineDashedMaterial ) {\r\n\r\n\t\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( material.isPointsMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isSpriteMaterial ) {\r\n\r\n\t\t\t\t\trefreshUniformsSprites( m_uniforms, material );\r\n\r\n\t\t\t\t} else if ( material.isShadowMaterial ) {\r\n\r\n\t\t\t\t\tm_uniforms.color.value = material.color;\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// RectAreaLight Texture\r\n\t\t\t\t// TODO (mrdoob): Find a nicer implementation\r\n\r\n\t\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\r\n\t\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\r\n\r\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\r\n\r\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\r\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.isSpriteMaterial ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// common matrices\r\n\r\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\r\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\r\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\r\n\r\n\t\t\treturn program;\r\n\r\n\t\t}\r\n\r\n\t\t// Uniforms (refresh uniforms objects)\r\n\r\n\t\tfunction refreshUniformsCommon( uniforms, material ) {\r\n\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\t\tif ( material.color ) {\r\n\r\n\t\t\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.emissive ) {\r\n\r\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map ) {\r\n\r\n\t\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.alphaMap ) {\r\n\r\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.specularMap ) {\r\n\r\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.envMap ) {\r\n\r\n\t\t\t\tuniforms.envMap.value = material.envMap;\r\n\r\n\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\r\n\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\r\n\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\r\n\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\r\n\t\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\r\n\r\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.lightMap ) {\r\n\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.aoMap ) {\r\n\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. specular map\r\n\t\t\t// 3. normal map\r\n\t\t\t// 4. bump map\r\n\t\t\t// 5. alpha map\r\n\t\t\t// 6. emissive map\r\n\r\n\t\t\tvar uvScaleMap;\r\n\r\n\t\t\tif ( material.map ) {\r\n\r\n\t\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t\t} else if ( material.roughnessMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.roughnessMap;\r\n\r\n\t\t\t} else if ( material.metalnessMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.metalnessMap;\r\n\r\n\t\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\t\t// backwards compatibility\r\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\r\n\r\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\t\tuvScaleMap.updateMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsLine( uniforms, material ) {\r\n\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsDash( uniforms, material ) {\r\n\r\n\t\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\t\tuniforms.scale.value = material.scale;\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsPoints( uniforms, material ) {\r\n\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\r\n\t\t\tuniforms.scale.value = _height * 0.5;\r\n\r\n\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tif ( material.map.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\t\tmaterial.map.updateMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsSprites( uniforms, material ) {\r\n\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.rotation.value = material.rotation;\r\n\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tif ( material.map.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\t\tmaterial.map.updateMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsFog( uniforms, fog ) {\r\n\r\n\t\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\t\tif ( fog.isFog ) {\r\n\r\n\t\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t\t} else if ( fog.isFogExp2 ) {\r\n\r\n\t\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\r\n\r\n\t\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\r\n\r\n\t\t\tuniforms.specular.value = material.specular;\r\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\r\n\r\n\t\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.normalMap ) {\r\n\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsToon( uniforms, material ) {\r\n\r\n\t\t\trefreshUniformsPhong( uniforms, material );\r\n\r\n\t\t\tif ( material.gradientMap ) {\r\n\r\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsStandard( uniforms, material ) {\r\n\r\n\t\t\tuniforms.roughness.value = material.roughness;\r\n\t\t\tuniforms.metalness.value = material.metalness;\r\n\r\n\t\t\tif ( material.roughnessMap ) {\r\n\r\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.metalnessMap ) {\r\n\r\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.normalMap ) {\r\n\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.envMap ) {\r\n\r\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\r\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsPhysical( uniforms, material ) {\r\n\r\n\t\t\trefreshUniformsStandard( uniforms, material );\r\n\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\r\n\r\n\t\t\tuniforms.clearCoat.value = material.clearCoat;\r\n\t\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsMatcap( uniforms, material ) {\r\n\r\n\t\t\tif ( material.matcap ) {\r\n\r\n\t\t\t\tuniforms.matcap.value = material.matcap;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.normalMap ) {\r\n\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsDepth( uniforms, material ) {\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsDistance( uniforms, material ) {\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms.referencePosition.value.copy( material.referencePosition );\r\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\r\n\t\t\tuniforms.farDistance.value = material.farDistance;\r\n\r\n\t\t}\r\n\r\n\t\tfunction refreshUniformsNormal( uniforms, material ) {\r\n\r\n\t\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.normalMap ) {\r\n\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\r\n\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\t\tuniforms.directionalLights.needsUpdate = value;\r\n\t\t\tuniforms.pointLights.needsUpdate = value;\r\n\t\t\tuniforms.spotLights.needsUpdate = value;\r\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tthis.setFramebuffer = function ( value ) {\r\n\r\n\t\t\t_framebuffer = value;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getRenderTarget = function () {\r\n\r\n\t\t\treturn _currentRenderTarget;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipMapLevel ) {\r\n\r\n\t\t\t_currentRenderTarget = renderTarget;\r\n\r\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar framebuffer = _framebuffer;\r\n\t\t\tvar isCube = false;\r\n\r\n\t\t\tif ( renderTarget ) {\r\n\r\n\t\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\r\n\t\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace || 0 ];\r\n\t\t\t\t\tisCube = true;\r\n\r\n\t\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\r\n\r\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tframebuffer = __webglFramebuffer;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\r\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\r\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\r\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\r\n\t\t\t\t_currentScissorTest = _scissorTest;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\r\n\t\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.viewport( _currentViewport );\r\n\t\t\tstate.scissor( _currentScissor );\r\n\t\t\tstate.setScissorTest( _currentScissorTest );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipMapLevel || 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\r\n\t\t\tif ( framebuffer ) {\r\n\r\n\t\t\t\tvar restore = false;\r\n\r\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\r\n\r\n\t\t\t\t\trestore = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tvar texture = renderTarget.texture;\r\n\t\t\t\t\tvar textureFormat = texture.format;\r\n\t\t\t\t\tvar textureType = texture.type;\r\n\r\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\r\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\r\n\t\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\r\n\r\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\r\n\r\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\r\n\r\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} finally {\r\n\r\n\t\t\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\r\n\r\n\t\t\tvar width = texture.image.width;\r\n\t\t\tvar height = texture.image.height;\r\n\t\t\tvar glFormat = utils.convert( texture.format );\r\n\r\n\t\t\ttextures.setTexture2D( texture, 0 );\r\n\r\n\t\t\t_gl.copyTexImage2D( 3553, level || 0, glFormat, position.x, position.y, width, height, 0 );\r\n\r\n\t\t};\r\n\r\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\r\n\r\n\t\t\tvar width = srcTexture.image.width;\r\n\t\t\tvar height = srcTexture.image.height;\r\n\t\t\tvar glFormat = utils.convert( dstTexture.format );\r\n\t\t\tvar glType = utils.convert( dstTexture.type );\r\n\r\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\r\n\r\n\t\t\tif ( srcTexture.isDataTexture ) {\r\n\r\n\t\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction FogExp2( color, density ) {\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.color = new Color( color );\r\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n\t}\r\n\r\n\tObject.assign( FogExp2.prototype, {\r\n\r\n\t\tisFogExp2: true,\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new FogExp2( this.color, this.density );\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( /* meta */ ) {\r\n\r\n\t\t\treturn {\r\n\t\t\t\ttype: 'FogExp2',\r\n\t\t\t\tcolor: this.color.getHex(),\r\n\t\t\t\tdensity: this.density\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Fog( color, near, far ) {\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.color = new Color( color );\r\n\r\n\t\tthis.near = ( near !== undefined ) ? near : 1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n\t}\r\n\r\n\tObject.assign( Fog.prototype, {\r\n\r\n\t\tisFog: true,\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new Fog( this.color, this.near, this.far );\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( /* meta */ ) {\r\n\r\n\t\t\treturn {\r\n\t\t\t\ttype: 'Fog',\r\n\t\t\t\tcolor: this.color.getHex(),\r\n\t\t\t\tnear: this.near,\r\n\t\t\t\tfar: this.far\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Scene() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Scene';\r\n\r\n\t\tthis.background = null;\r\n\t\tthis.fog = null;\r\n\t\tthis.overrideMaterial = null;\r\n\r\n\t\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n\t}\r\n\r\n\tScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Scene,\r\n\r\n\t\tisScene: true,\r\n\r\n\t\tcopy: function ( source, recursive ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\r\n\r\n\t\t\tif ( source.background !== null ) this.background = source.background.clone();\r\n\t\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\t\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\t\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\r\n\t\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\r\n\tfunction InterleavedBuffer( array, stride ) {\r\n\r\n\t\tthis.array = array;\r\n\t\tthis.stride = stride;\r\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\r\n\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t}\r\n\r\n\tObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tif ( value === true ) this.version ++;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( InterleavedBuffer.prototype, {\r\n\r\n\t\tisInterleavedBuffer: true,\r\n\r\n\t\tonUploadCallback: function () {},\r\n\r\n\t\tsetArray: function ( array ) {\r\n\r\n\t\t\tif ( Array.isArray( array ) ) {\r\n\r\n\t\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\r\n\t\t\tthis.array = array;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetDynamic: function ( value ) {\r\n\r\n\t\t\tthis.dynamic = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.count = source.count;\r\n\t\t\tthis.stride = source.stride;\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\t\tindex1 *= this.stride;\r\n\t\t\tindex2 *= attribute.stride;\r\n\r\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tset: function ( value, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.array.set( value, offset );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tonUpload: function ( callback ) {\r\n\r\n\t\t\tthis.onUploadCallback = callback;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\r\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\r\n\r\n\t\tthis.data = interleavedBuffer;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.offset = offset;\r\n\r\n\t\tthis.normalized = normalized === true;\r\n\r\n\t}\r\n\r\n\tObject.defineProperties( InterleavedBufferAttribute.prototype, {\r\n\r\n\t\tcount: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.data.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tarray: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.data.array;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( InterleavedBufferAttribute.prototype, {\r\n\r\n\t\tisInterleavedBufferAttribute: true,\r\n\r\n\t\tsetX: function ( index, x ) {\r\n\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( index, y ) {\r\n\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetZ: function ( index, z ) {\r\n\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetW: function ( index, w ) {\r\n\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetX: function ( index ) {\r\n\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t\t},\r\n\r\n\t\tgetY: function ( index ) {\r\n\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t\t},\r\n\r\n\t\tgetZ: function ( index ) {\r\n\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t\t},\r\n\r\n\t\tgetW: function ( index ) {\r\n\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t\t},\r\n\r\n\t\tsetXY: function ( index, x, y ) {\r\n\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *  rotation: <float>,\r\n\t *  sizeAttenuation: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction SpriteMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'SpriteMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.rotation = 0;\r\n\r\n\t\tthis.sizeAttenuation = true;\r\n\r\n\t\tthis.lights = false;\r\n\t\tthis.transparent = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\r\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\r\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\r\n\r\n\tSpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.rotation = source.rotation;\r\n\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tvar geometry;\r\n\r\n\tfunction Sprite( material ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tif ( geometry === undefined ) {\r\n\r\n\t\t\tgeometry = new BufferGeometry();\r\n\r\n\t\t\tvar float32Array = new Float32Array( [\r\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\r\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\r\n\t\t\t\t0.5, 0.5, 0, 1, 1,\r\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\r\n\t\t\t] );\r\n\r\n\t\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\r\n\r\n\t\t\tgeometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\r\n\t\t\tgeometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\r\n\t\t\tgeometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\r\n\r\n\t\tthis.center = new Vector2( 0.5, 0.5 );\r\n\r\n\t}\r\n\r\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Sprite,\r\n\r\n\t\tisSprite: true,\r\n\r\n\t\traycast: ( function () {\r\n\r\n\t\t\tvar intersectPoint = new Vector3();\r\n\t\t\tvar worldScale = new Vector3();\r\n\t\t\tvar mvPosition = new Vector3();\r\n\r\n\t\t\tvar alignedPosition = new Vector2();\r\n\t\t\tvar rotatedPosition = new Vector2();\r\n\t\t\tvar viewWorldMatrix = new Matrix4();\r\n\r\n\t\t\tvar vA = new Vector3();\r\n\t\t\tvar vB = new Vector3();\r\n\t\t\tvar vC = new Vector3();\r\n\r\n\t\t\tvar uvA = new Vector2();\r\n\t\t\tvar uvB = new Vector2();\r\n\t\t\tvar uvC = new Vector2();\r\n\r\n\t\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\r\n\r\n\t\t\t\t// compute position in camera space\r\n\t\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\r\n\r\n\t\t\t\t// to check if rotation is not zero\r\n\t\t\t\tif ( sin !== undefined ) {\r\n\r\n\t\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\r\n\t\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trotatedPosition.copy( alignedPosition );\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tvertexPosition.copy( mvPosition );\r\n\t\t\t\tvertexPosition.x += rotatedPosition.x;\r\n\t\t\t\tvertexPosition.y += rotatedPosition.y;\r\n\r\n\t\t\t\t// transform to world space\r\n\t\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\r\n\t\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\r\n\t\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\r\n\r\n\t\t\t\tvar rotation = this.material.rotation;\r\n\t\t\t\tvar sin, cos;\r\n\t\t\t\tif ( rotation !== 0 ) {\r\n\r\n\t\t\t\t\tcos = Math.cos( rotation );\r\n\t\t\t\t\tsin = Math.sin( rotation );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar center = this.center;\r\n\r\n\t\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\r\n\t\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\r\n\t\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\r\n\r\n\t\t\t\tuvA.set( 0, 0 );\r\n\t\t\t\tuvB.set( 1, 0 );\r\n\t\t\t\tuvC.set( 1, 1 );\r\n\r\n\t\t\t\t// check first triangle\r\n\t\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\r\n\r\n\t\t\t\tif ( intersect === null ) {\r\n\r\n\t\t\t\t\t// check second triangle\r\n\t\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\r\n\t\t\t\t\tuvB.set( 0, 1 );\r\n\r\n\t\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\r\n\t\t\t\t\tif ( intersect === null ) {\r\n\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tuv: Triangle.getUV( intersectPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() ),\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.material ).copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source );\r\n\r\n\t\t\tif ( source.center !== undefined ) this.center.copy( source.center );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction LOD() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'LOD';\r\n\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tlevels: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: []\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: LOD,\r\n\r\n\t\tisLOD: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source, false );\r\n\r\n\t\t\tvar levels = source.levels;\r\n\r\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar level = levels[ i ];\r\n\r\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddLevel: function ( object, distance ) {\r\n\r\n\t\t\tif ( distance === undefined ) distance = 0;\r\n\r\n\t\t\tdistance = Math.abs( distance );\r\n\r\n\t\t\tvar levels = this.levels;\r\n\r\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\t\t\tthis.add( object );\r\n\r\n\t\t},\r\n\r\n\t\tgetObjectForDistance: function ( distance ) {\r\n\r\n\t\t\tvar levels = this.levels;\r\n\r\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn levels[ i - 1 ].object;\r\n\r\n\t\t},\r\n\r\n\t\traycast: ( function () {\r\n\r\n\t\t\tvar matrixPosition = new Vector3();\r\n\r\n\t\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tupdate: function () {\r\n\r\n\t\t\tvar v1 = new Vector3();\r\n\t\t\tvar v2 = new Vector3();\r\n\r\n\t\t\treturn function update( camera ) {\r\n\r\n\t\t\t\tvar levels = this.levels;\r\n\r\n\t\t\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tdata.object.levels = [];\r\n\r\n\t\t\tvar levels = this.levels;\r\n\r\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar level = levels[ i ];\r\n\r\n\t\t\t\tdata.object.levels.push( {\r\n\t\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\t\tdistance: level.distance\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\r\n\tfunction SkinnedMesh( geometry, material ) {\r\n\r\n\t\tif ( geometry && geometry.isGeometry ) {\r\n\r\n\t\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tMesh.call( this, geometry, material );\r\n\r\n\t\tthis.type = 'SkinnedMesh';\r\n\r\n\t\tthis.bindMode = 'attached';\r\n\t\tthis.bindMatrix = new Matrix4();\r\n\t\tthis.bindMatrixInverse = new Matrix4();\r\n\r\n\t}\r\n\r\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\r\n\r\n\t\tconstructor: SkinnedMesh,\r\n\r\n\t\tisSkinnedMesh: true,\r\n\r\n\t\tbind: function ( skeleton, bindMatrix ) {\r\n\r\n\t\t\tthis.skeleton = skeleton;\r\n\r\n\t\t\tif ( bindMatrix === undefined ) {\r\n\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\t\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n\t\t},\r\n\r\n\t\tpose: function () {\r\n\r\n\t\t\tthis.skeleton.pose();\r\n\r\n\t\t},\r\n\r\n\t\tnormalizeSkinWeights: function () {\r\n\r\n\t\t\tvar vector = new Vector4();\r\n\r\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\r\n\r\n\t\t\tfor ( var i = 0, l = skinWeight.count; i < l; i ++ ) {\r\n\r\n\t\t\t\tvector.x = skinWeight.getX( i );\r\n\t\t\t\tvector.y = skinWeight.getY( i );\r\n\t\t\t\tvector.z = skinWeight.getZ( i );\r\n\t\t\t\tvector.w = skinWeight.getW( i );\r\n\r\n\t\t\t\tvar scale = 1.0 / vector.manhattanLength();\r\n\r\n\t\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\t\tvector.multiplyScalar( scale );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\tif ( this.bindMode === 'attached' ) {\r\n\r\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t\t\t} else if ( this.bindMode === 'detached' ) {\r\n\r\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author michael guerrero / http://realitymeltdown.com\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\r\n\tfunction Skeleton( bones, boneInverses ) {\r\n\r\n\t\t// copy the bone array\r\n\r\n\t\tbones = bones || [];\r\n\r\n\t\tthis.bones = bones.slice( 0 );\r\n\t\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\r\n\r\n\t\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\t\tif ( boneInverses === undefined ) {\r\n\r\n\t\t\tthis.calculateInverses();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\r\n\r\n\t\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject.assign( Skeleton.prototype, {\r\n\r\n\t\tcalculateInverses: function () {\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar inverse = new Matrix4();\r\n\r\n\t\t\t\tif ( this.bones[ i ] ) {\r\n\r\n\t\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boneInverses.push( inverse );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tpose: function () {\r\n\r\n\t\t\tvar bone, i, il;\r\n\r\n\t\t\t// recover the bind-time world matrices\r\n\r\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tbone = this.bones[ i ];\r\n\r\n\t\t\t\tif ( bone ) {\r\n\r\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// compute the local matrices, positions, rotations and scales\r\n\r\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tbone = this.bones[ i ];\r\n\r\n\t\t\t\tif ( bone ) {\r\n\r\n\t\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\r\n\r\n\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tupdate: ( function () {\r\n\r\n\t\t\tvar offsetMatrix = new Matrix4();\r\n\t\t\tvar identityMatrix = new Matrix4();\r\n\r\n\t\t\treturn function update() {\r\n\r\n\t\t\t\tvar bones = this.bones;\r\n\t\t\t\tvar boneInverses = this.boneInverses;\r\n\t\t\t\tvar boneMatrices = this.boneMatrices;\r\n\t\t\t\tvar boneTexture = this.boneTexture;\r\n\r\n\t\t\t\t// flatten bone matrices to array\r\n\r\n\t\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\r\n\r\n\t\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\r\n\t\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( boneTexture !== undefined ) {\r\n\r\n\t\t\t\t\tboneTexture.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t} )(),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new Skeleton( this.bones, this.boneInverses );\r\n\r\n\t\t},\r\n\r\n\t\tgetBoneByName: function ( name ) {\r\n\r\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar bone = this.bones[ i ];\r\n\r\n\t\t\t\tif ( bone.name === name ) {\r\n\r\n\t\t\t\t\treturn bone;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn undefined;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\r\n\tfunction Bone() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Bone';\r\n\r\n\t}\r\n\r\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Bone,\r\n\r\n\t\tisBone: true\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *  linecap: \"round\",\r\n\t *  linejoin: \"round\"\r\n\t * }\r\n\t */\r\n\r\n\tfunction LineBasicMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'LineBasicMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\r\n\t\tthis.linewidth = 1;\r\n\t\tthis.linecap = 'round';\r\n\t\tthis.linejoin = 'round';\r\n\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\r\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\r\n\r\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\r\n\r\n\tLineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\tthis.linecap = source.linecap;\r\n\t\tthis.linejoin = source.linejoin;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Line( geometry, material, mode ) {\r\n\r\n\t\tif ( mode === 1 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Line';\r\n\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\r\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\t}\r\n\r\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Line,\r\n\r\n\t\tisLine: true,\r\n\r\n\t\tcomputeLineDistances: ( function () {\r\n\r\n\t\t\tvar start = new Vector3();\r\n\t\t\tvar end = new Vector3();\r\n\r\n\t\t\treturn function computeLineDistances() {\r\n\r\n\t\t\t\tvar geometry = this.geometry;\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\t// we assume non-indexed geometry\r\n\r\n\t\t\t\t\tif ( geometry.index === null ) {\r\n\r\n\t\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\r\n\t\t\t\t\t\tvar lineDistances = [ 0 ];\r\n\r\n\t\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\r\n\t\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\r\n\r\n\t\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\r\n\t\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\t\tvar lineDistances = geometry.lineDistances;\r\n\r\n\t\t\t\t\tlineDistances[ 0 ] = 0;\r\n\r\n\t\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\r\n\t\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\traycast: ( function () {\r\n\r\n\t\t\tvar inverseMatrix = new Matrix4();\r\n\t\t\tvar ray = new Ray();\r\n\t\t\tvar sphere = new Sphere();\r\n\r\n\t\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\t\tvar precision = raycaster.linePrecision;\r\n\r\n\t\t\t\tvar geometry = this.geometry;\r\n\t\t\t\tvar matrixWorld = this.matrixWorld;\r\n\r\n\t\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\t\t\t\tsphere.radius += precision;\r\n\r\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\t\tvar localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t\t\tvar localPrecisionSq = localPrecision * localPrecision;\r\n\r\n\t\t\t\tvar vStart = new Vector3();\r\n\t\t\t\tvar vEnd = new Vector3();\r\n\t\t\t\tvar interSegment = new Vector3();\r\n\t\t\t\tvar interRay = new Vector3();\r\n\t\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\tvar index = geometry.index;\r\n\t\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n\t\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\r\n\r\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\r\n\r\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\r\n\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction LineSegments( geometry, material ) {\r\n\r\n\t\tLine.call( this, geometry, material );\r\n\r\n\t\tthis.type = 'LineSegments';\r\n\r\n\t}\r\n\r\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\r\n\r\n\t\tconstructor: LineSegments,\r\n\r\n\t\tisLineSegments: true,\r\n\r\n\t\tcomputeLineDistances: ( function () {\r\n\r\n\t\t\tvar start = new Vector3();\r\n\t\t\tvar end = new Vector3();\r\n\r\n\t\t\treturn function computeLineDistances() {\r\n\r\n\t\t\t\tvar geometry = this.geometry;\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\t// we assume non-indexed geometry\r\n\r\n\t\t\t\t\tif ( geometry.index === null ) {\r\n\r\n\t\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\r\n\t\t\t\t\t\tvar lineDistances = [];\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\r\n\r\n\t\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\r\n\t\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\r\n\r\n\t\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\r\n\t\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\t\tvar lineDistances = geometry.lineDistances;\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\r\n\r\n\t\t\t\t\t\tstart.copy( vertices[ i ] );\r\n\t\t\t\t\t\tend.copy( vertices[ i + 1 ] );\r\n\r\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\r\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}() )\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mgreter / http://github.com/mgreter\r\n\t */\r\n\r\n\tfunction LineLoop( geometry, material ) {\r\n\r\n\t\tLine.call( this, geometry, material );\r\n\r\n\t\tthis.type = 'LineLoop';\r\n\r\n\t}\r\n\r\n\tLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\r\n\r\n\t\tconstructor: LineLoop,\r\n\r\n\t\tisLineLoop: true,\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  size: <float>,\r\n\t *  sizeAttenuation: <bool>\r\n\t *\r\n\t *  morphTargets: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction PointsMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'PointsMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.size = 1;\r\n\t\tthis.sizeAttenuation = true;\r\n\r\n\t\tthis.morphTargets = false;\r\n\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tPointsMaterial.prototype = Object.create( Material.prototype );\r\n\tPointsMaterial.prototype.constructor = PointsMaterial;\r\n\r\n\tPointsMaterial.prototype.isPointsMaterial = true;\r\n\r\n\tPointsMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.size = source.size;\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Points( geometry, material ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Points';\r\n\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\r\n\t\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\t}\r\n\r\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Points,\r\n\r\n\t\tisPoints: true,\r\n\r\n\t\traycast: ( function () {\r\n\r\n\t\t\tvar inverseMatrix = new Matrix4();\r\n\t\t\tvar ray = new Ray();\r\n\t\t\tvar sphere = new Sphere();\r\n\r\n\t\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\t\tvar object = this;\r\n\t\t\t\tvar geometry = this.geometry;\r\n\t\t\t\tvar matrixWorld = this.matrixWorld;\r\n\t\t\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n\t\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\t\t\t\tsphere.radius += threshold;\r\n\r\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\t\t\tvar position = new Vector3();\r\n\t\t\t\tvar intersectPoint = new Vector3();\r\n\r\n\t\t\t\tfunction testPoint( point, index ) {\r\n\r\n\t\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n\t\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\r\n\t\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\tvar index = geometry.index;\r\n\t\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar a = indices[ i ];\r\n\r\n\t\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n\t\t\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.format = format !== undefined ? format : RGBFormat;\r\n\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t}\r\n\r\n\tVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\r\n\r\n\t\tconstructor: VideoTexture,\r\n\r\n\t\tisVideoTexture: true,\r\n\r\n\t\tupdate: function () {\r\n\r\n\t\t\tvar video = this.image;\r\n\r\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\r\n\r\n\t\t\t\tthis.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\r\n\r\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\t\tthis.image = { width: width, height: height };\r\n\t\tthis.mipmaps = mipmaps;\r\n\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\r\n\t\tthis.flipY = false;\r\n\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t}\r\n\r\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\r\n\tCompressedTexture.prototype.constructor = CompressedTexture;\r\n\r\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\r\n\tCanvasTexture.prototype.constructor = CanvasTexture;\r\n\tCanvasTexture.prototype.isCanvasTexture = true;\n\n\t/**\r\n\t * @author Matt DesLauriers / @mattdesl\r\n\t * @author atix / arthursilber.de\r\n\t */\r\n\r\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\r\n\r\n\t\tformat = format !== undefined ? format : DepthFormat;\r\n\r\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\r\n\r\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\r\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\r\n\r\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.image = { width: width, height: height };\r\n\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\r\n\r\n\t\tthis.flipY = false;\r\n\t\tthis.generateMipmaps\t= false;\r\n\r\n\t}\r\n\r\n\tDepthTexture.prototype = Object.create( Texture.prototype );\r\n\tDepthTexture.prototype.constructor = DepthTexture;\r\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction WireframeGeometry( geometry ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'WireframeGeometry';\r\n\r\n\t\t// buffer\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar i, j, l, o, ol;\r\n\t\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\r\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\r\n\t\tvar vertex;\r\n\r\n\t\t// different logic for Geometry and BufferGeometry\r\n\r\n\t\tif ( geometry && geometry.isGeometry ) {\r\n\r\n\t\t\t// create a data structure that contains all edges without duplicates\r\n\r\n\t\t\tvar faces = geometry.faces;\r\n\r\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tedge1 = face[ keys[ j ] ];\r\n\t\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\r\n\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\r\n\r\n\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\r\n\r\n\t\t\t\t\tif ( edges[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// generate vertices\r\n\r\n\t\t\tfor ( key in edges ) {\r\n\r\n\t\t\t\te = edges[ key ];\r\n\r\n\t\t\t\tvertex = geometry.vertices[ e.index1 ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\tvertex = geometry.vertices[ e.index2 ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry && geometry.isBufferGeometry ) {\r\n\r\n\t\t\tvar position, indices, groups;\r\n\t\t\tvar group, start, count;\r\n\t\t\tvar index1, index2;\r\n\r\n\t\t\tvertex = new Vector3();\r\n\r\n\t\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t\t// indexed BufferGeometry\r\n\r\n\t\t\t\tposition = geometry.attributes.position;\r\n\t\t\t\tindices = geometry.index;\r\n\t\t\t\tgroups = geometry.groups;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create a data structure that contains all eges without duplicates\r\n\r\n\t\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\t\tgroup = groups[ o ];\r\n\r\n\t\t\t\t\tstart = group.start;\r\n\t\t\t\t\tcount = group.count;\r\n\r\n\t\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tedge1 = indices.getX( i + j );\r\n\t\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\r\n\t\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\r\n\t\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\r\n\r\n\t\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// generate vertices\r\n\r\n\t\t\t\tfor ( key in edges ) {\r\n\r\n\t\t\t\t\te = edges[ key ];\r\n\r\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\r\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\r\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\t\tposition = geometry.attributes.position;\r\n\r\n\t\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\r\n\r\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\r\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\r\n\r\n\t\t\t\t\t\tindex1 = 3 * i + j;\r\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\r\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\r\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\r\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n\t}\r\n\r\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n\t/**\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t * Parametric Surfaces Geometry\r\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n\t */\r\n\r\n\t// ParametricGeometry\r\n\r\n\tfunction ParametricGeometry( func, slices, stacks ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'ParametricGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tfunc: func,\r\n\t\t\tslices: slices,\r\n\t\t\tstacks: stacks\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\r\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\r\n\r\n\t// ParametricBufferGeometry\r\n\r\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'ParametricBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tfunc: func,\r\n\t\t\tslices: slices,\r\n\t\t\tstacks: stacks\r\n\t\t};\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\tvar EPS = 0.00001;\r\n\r\n\t\tvar normal = new Vector3();\r\n\r\n\t\tvar p0 = new Vector3(), p1 = new Vector3();\r\n\t\tvar pu = new Vector3(), pv = new Vector3();\r\n\r\n\t\tvar i, j;\r\n\r\n\t\tif ( func.length < 3 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\r\n\r\n\t\t}\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tvar sliceCount = slices + 1;\r\n\r\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\t\tvar v = i / stacks;\r\n\r\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\t\tvar u = j / slices;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tfunc( u, v, p0 );\r\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\t// approximate tangent vectors via finite differences\r\n\r\n\t\t\t\tif ( u - EPS >= 0 ) {\r\n\r\n\t\t\t\t\tfunc( u - EPS, v, p1 );\r\n\t\t\t\t\tpu.subVectors( p0, p1 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfunc( u + EPS, v, p1 );\r\n\t\t\t\t\tpu.subVectors( p1, p0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( v - EPS >= 0 ) {\r\n\r\n\t\t\t\t\tfunc( u, v - EPS, p1 );\r\n\t\t\t\t\tpv.subVectors( p0, p1 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfunc( u, v + EPS, p1 );\r\n\t\t\t\t\tpv.subVectors( p1, p0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// cross product of tangent vectors returns surface normal\r\n\r\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( u, v );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\t\tvar a = i * sliceCount + j;\r\n\t\t\t\tvar b = i * sliceCount + j + 1;\r\n\t\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\t\tvar d = ( i + 1 ) * sliceCount + j;\r\n\r\n\t\t\t\t// faces one and two\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n\t/**\r\n\t * @author clockworkgeek / https://github.com/clockworkgeek\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// PolyhedronGeometry\r\n\r\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'PolyhedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\r\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\r\n\r\n\t// PolyhedronBufferGeometry\r\n\r\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'PolyhedronBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tradius = radius || 1;\r\n\t\tdetail = detail || 0;\r\n\r\n\t\t// default buffer data\r\n\r\n\t\tvar vertexBuffer = [];\r\n\t\tvar uvBuffer = [];\r\n\r\n\t\t// the subdivision creates the vertex buffer data\r\n\r\n\t\tsubdivide( detail );\r\n\r\n\t\t// all vertices should lie on a conceptual sphere with a given radius\r\n\r\n\t\tappplyRadius( radius );\r\n\r\n\t\t// finally, create the uv data\r\n\r\n\t\tgenerateUVs();\r\n\r\n\t\t// build non-indexed geometry\r\n\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\r\n\r\n\t\tif ( detail === 0 ) {\r\n\r\n\t\t\tthis.computeVertexNormals(); // flat normals\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.normalizeNormals(); // smooth normals\r\n\r\n\t\t}\r\n\r\n\t\t// helper functions\r\n\r\n\t\tfunction subdivide( detail ) {\r\n\r\n\t\t\tvar a = new Vector3();\r\n\t\t\tvar b = new Vector3();\r\n\t\t\tvar c = new Vector3();\r\n\r\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\r\n\r\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t// get the vertices of the face\r\n\r\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\r\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\r\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\r\n\r\n\t\t\t\t// perform subdivision\r\n\r\n\t\t\t\tsubdivideFace( a, b, c, detail );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction subdivideFace( a, b, c, detail ) {\r\n\r\n\t\t\tvar cols = Math.pow( 2, detail );\r\n\r\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\r\n\r\n\t\t\tvar v = [];\r\n\r\n\t\t\tvar i, j;\r\n\r\n\t\t\t// construct all of the vertices for this subdivision\r\n\r\n\t\t\tfor ( i = 0; i <= cols; i ++ ) {\r\n\r\n\t\t\t\tv[ i ] = [];\r\n\r\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\r\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\r\n\r\n\t\t\t\tvar rows = cols - i;\r\n\r\n\t\t\t\tfor ( j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// construct all of the faces\r\n\r\n\t\t\tfor ( i = 0; i < cols; i ++ ) {\r\n\r\n\t\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\r\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\r\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\r\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\r\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction appplyRadius( radius ) {\r\n\r\n\t\t\tvar vertex = new Vector3();\r\n\r\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\r\n\r\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\r\n\r\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\r\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\r\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\r\n\r\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\r\n\r\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\r\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\r\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateUVs() {\r\n\r\n\t\t\tvar vertex = new Vector3();\r\n\r\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\r\n\r\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\r\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\r\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\r\n\r\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\r\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\r\n\t\t\t\tuvBuffer.push( u, 1 - v );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcorrectUVs();\r\n\r\n\t\t\tcorrectSeam();\r\n\r\n\t\t}\r\n\r\n\t\tfunction correctSeam() {\r\n\r\n\t\t\t// handle case when face straddles the seam, see #3269\r\n\r\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\r\n\r\n\t\t\t\t// uv data of a single face\r\n\r\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\r\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\r\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\r\n\r\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\r\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\r\n\r\n\t\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\r\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\r\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushVertex( vertex ) {\r\n\r\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getVertexByIndex( index, vertex ) {\r\n\r\n\t\t\tvar stride = index * 3;\r\n\r\n\t\t\tvertex.x = vertices[ stride + 0 ];\r\n\t\t\tvertex.y = vertices[ stride + 1 ];\r\n\t\t\tvertex.z = vertices[ stride + 2 ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction correctUVs() {\r\n\r\n\t\t\tvar a = new Vector3();\r\n\t\t\tvar b = new Vector3();\r\n\t\t\tvar c = new Vector3();\r\n\r\n\t\t\tvar centroid = new Vector3();\r\n\r\n\t\t\tvar uvA = new Vector2();\r\n\t\t\tvar uvB = new Vector2();\r\n\t\t\tvar uvC = new Vector2();\r\n\r\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\r\n\r\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\r\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\r\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\r\n\r\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\r\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\r\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\r\n\r\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\r\n\r\n\t\t\t\tvar azi = azimuth( centroid );\r\n\r\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\r\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\r\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\r\n\r\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\r\n\r\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\r\n\r\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\t\tfunction azimuth( vector ) {\r\n\r\n\t\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// Angle above the XZ plane.\r\n\r\n\t\tfunction inclination( vector ) {\r\n\r\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// TetrahedronGeometry\r\n\r\n\tfunction TetrahedronGeometry( radius, detail ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'TetrahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\r\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\r\n\r\n\t// TetrahedronBufferGeometry\r\n\r\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\r\n\r\n\t\tvar vertices = [\r\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\r\n\t\t];\r\n\r\n\t\tvar indices = [\r\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\r\n\t\t];\r\n\r\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'TetrahedronBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\r\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// OctahedronGeometry\r\n\r\n\tfunction OctahedronGeometry( radius, detail ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'OctahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\r\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\r\n\r\n\t// OctahedronBufferGeometry\r\n\r\n\tfunction OctahedronBufferGeometry( radius, detail ) {\r\n\r\n\t\tvar vertices = [\r\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\r\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\r\n\t\t];\r\n\r\n\t\tvar indices = [\r\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\r\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\r\n\t\t\t1, 3, 4,\t1, 4, 2\r\n\t\t];\r\n\r\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'OctahedronBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\r\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// IcosahedronGeometry\r\n\r\n\tfunction IcosahedronGeometry( radius, detail ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'IcosahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\r\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\r\n\r\n\t// IcosahedronBufferGeometry\r\n\r\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\r\n\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\t\tvar vertices = [\r\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\r\n\t\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\r\n\t\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\r\n\t\t];\r\n\r\n\t\tvar indices = [\r\n\t\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\r\n\t\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\r\n\t\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\r\n\t\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\r\n\t\t];\r\n\r\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'IcosahedronBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\r\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n\t/**\r\n\t * @author Abe Pazos / https://hamoid.com\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// DodecahedronGeometry\r\n\r\n\tfunction DodecahedronGeometry( radius, detail ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'DodecahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\r\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\r\n\r\n\t// DodecahedronBufferGeometry\r\n\r\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\r\n\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\tvar r = 1 / t;\r\n\r\n\t\tvar vertices = [\r\n\r\n\t\t\t// (±1, ±1, ±1)\r\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\r\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\r\n\t\t\t1, - 1, - 1, 1, - 1, 1,\r\n\t\t\t1, 1, - 1, 1, 1, 1,\r\n\r\n\t\t\t// (0, ±1/φ, ±φ)\r\n\t\t\t 0, - r, - t, 0, - r, t,\r\n\t\t\t 0, r, - t, 0, r, t,\r\n\r\n\t\t\t// (±1/φ, ±φ, 0)\r\n\t\t\t- r, - t, 0, - r, t, 0,\r\n\t\t\t r, - t, 0, r, t, 0,\r\n\r\n\t\t\t// (±φ, 0, ±1/φ)\r\n\t\t\t- t, 0, - r, t, 0, - r,\r\n\t\t\t- t, 0, r, t, 0, r\r\n\t\t];\r\n\r\n\t\tvar indices = [\r\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\r\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\r\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\r\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\r\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\r\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\r\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\r\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\r\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\r\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\r\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\r\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\r\n\t\t];\r\n\r\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'DodecahedronBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\r\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n\t/**\r\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\r\n\t * @author WestLangley / https://github.com/WestLangley\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author miningold / https://github.com/miningold\r\n\t * @author jonobr1 / https://github.com/jonobr1\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t */\r\n\r\n\t// TubeGeometry\r\n\r\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'TubeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed\r\n\t\t};\r\n\r\n\t\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\r\n\r\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\r\n\r\n\t\t// expose internals\r\n\r\n\t\tthis.tangents = bufferGeometry.tangents;\r\n\t\tthis.normals = bufferGeometry.normals;\r\n\t\tthis.binormals = bufferGeometry.binormals;\r\n\r\n\t\t// create geometry\r\n\r\n\t\tthis.fromBufferGeometry( bufferGeometry );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\r\n\tTubeGeometry.prototype.constructor = TubeGeometry;\r\n\r\n\t// TubeBufferGeometry\r\n\r\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'TubeBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed\r\n\t\t};\r\n\r\n\t\ttubularSegments = tubularSegments || 64;\r\n\t\tradius = radius || 1;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\tclosed = closed || false;\r\n\r\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\r\n\r\n\t\t// expose internals\r\n\r\n\t\tthis.tangents = frames.tangents;\r\n\t\tthis.normals = frames.normals;\r\n\t\tthis.binormals = frames.binormals;\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar normal = new Vector3();\r\n\t\tvar uv = new Vector2();\r\n\t\tvar P = new Vector3();\r\n\r\n\t\tvar i, j;\r\n\r\n\t\t// buffer\r\n\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\t\tvar indices = [];\r\n\r\n\t\t// create buffer data\r\n\r\n\t\tgenerateBufferData();\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t// functions\r\n\r\n\t\tfunction generateBufferData() {\r\n\r\n\t\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\r\n\r\n\t\t\t\tgenerateSegment( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\r\n\t\t\t// at the regular position on the given path\r\n\t\t\t//\r\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\r\n\r\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\r\n\r\n\t\t\t// uvs are generated in a separate function.\r\n\t\t\t// this makes it easy compute correct values for closed geometries\r\n\r\n\t\t\tgenerateUVs();\r\n\r\n\t\t\t// finally create faces\r\n\r\n\t\t\tgenerateIndices();\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateSegment( i ) {\r\n\r\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\r\n\r\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\r\n\r\n\t\t\t// retrieve corresponding normal and binormal\r\n\r\n\t\t\tvar N = frames.normals[ i ];\r\n\t\t\tvar B = frames.binormals[ i ];\r\n\r\n\t\t\t// generate normals and vertices for the current segment\r\n\r\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\t\tvar sin = Math.sin( v );\r\n\t\t\t\tvar cos = - Math.cos( v );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\r\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\r\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\r\n\t\t\t\tnormal.normalize();\r\n\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = P.x + radius * normal.x;\r\n\t\t\t\tvertex.y = P.y + radius * normal.y;\r\n\t\t\t\tvertex.z = P.z + radius * normal.z;\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateIndices() {\r\n\r\n\t\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\r\n\r\n\t\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\r\n\r\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\r\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateUVs() {\r\n\r\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\t\t\tuv.x = i / tubularSegments;\r\n\t\t\t\t\tuv.y = j / radialSegments;\r\n\r\n\t\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\r\n\r\n\tTubeBufferGeometry.prototype.toJSON = function () {\r\n\r\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\r\n\r\n\t\tdata.path = this.parameters.path.toJSON();\r\n\r\n\t\treturn data;\r\n\r\n\t};\n\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t * based on http://www.blackpawn.com/texts/pqtorus/\r\n\t */\r\n\r\n\t// TorusKnotGeometry\r\n\r\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'TorusKnotGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q\r\n\t\t};\r\n\r\n\t\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\r\n\r\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\r\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\r\n\r\n\t// TorusKnotBufferGeometry\r\n\r\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'TorusKnotBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q\r\n\t\t};\r\n\r\n\t\tradius = radius || 1;\r\n\t\ttube = tube || 0.4;\r\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\r\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\t\tp = p || 2;\r\n\t\tq = q || 3;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar i, j;\r\n\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar normal = new Vector3();\r\n\r\n\t\tvar P1 = new Vector3();\r\n\t\tvar P2 = new Vector3();\r\n\r\n\t\tvar B = new Vector3();\r\n\t\tvar T = new Vector3();\r\n\t\tvar N = new Vector3();\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\r\n\r\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\r\n\r\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\r\n\r\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\r\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\r\n\r\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\r\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\r\n\r\n\t\t\t// calculate orthonormal basis\r\n\r\n\t\t\tT.subVectors( P2, P1 );\r\n\t\t\tN.addVectors( P2, P1 );\r\n\t\t\tB.crossVectors( T, N );\r\n\t\t\tN.crossVectors( B, T );\r\n\r\n\t\t\t// normalize B, N. T can be ignored, we don't use it\r\n\r\n\t\t\tB.normalize();\r\n\t\t\tN.normalize();\r\n\r\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\r\n\r\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\r\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\r\n\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\t\t\tvar cx = - tube * Math.cos( v );\r\n\t\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\t\t// now calculate the final vertex position.\r\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\r\n\r\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\r\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\r\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\r\n\r\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\r\n\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( i / tubularSegments );\r\n\t\t\t\tuvs.push( j / radialSegments );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\r\n\r\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\r\n\r\n\t\t\t\t// indices\r\n\r\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\r\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t// this function calculates the current position on the torus curve\r\n\r\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\r\n\r\n\t\t\tvar cu = Math.cos( u );\r\n\t\t\tvar su = Math.sin( u );\r\n\t\t\tvar quOverP = q / p * u;\r\n\t\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\r\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// TorusGeometry\r\n\r\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'TorusGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\r\n\tTorusGeometry.prototype.constructor = TorusGeometry;\r\n\r\n\t// TorusBufferGeometry\r\n\r\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'TorusBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\r\n\t\tradius = radius || 1;\r\n\t\ttube = tube || 0.4;\r\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\r\n\t\tarc = arc || Math.PI * 2;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar center = new Vector3();\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar normal = new Vector3();\r\n\r\n\t\tvar j, i;\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\t\tcenter.y = radius * Math.sin( u );\r\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\r\n\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( i / tubularSegments );\r\n\t\t\t\tuvs.push( j / radialSegments );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t\t// indices\r\n\r\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t * Port from https://github.com/mapbox/earcut (v2.1.2)\r\n\t */\r\n\r\n\tvar Earcut = {\r\n\r\n\t\ttriangulate: function ( data, holeIndices, dim ) {\r\n\r\n\t\t\tdim = dim || 2;\r\n\r\n\t\t\tvar hasHoles = holeIndices && holeIndices.length,\r\n\t\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\r\n\t\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\r\n\t\t\t\ttriangles = [];\r\n\r\n\t\t\tif ( ! outerNode ) return triangles;\r\n\r\n\t\t\tvar minX, minY, maxX, maxY, x, y, invSize;\r\n\r\n\t\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\r\n\r\n\t\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n\r\n\t\t\tif ( data.length > 80 * dim ) {\r\n\r\n\t\t\t\tminX = maxX = data[ 0 ];\r\n\t\t\t\tminY = maxY = data[ 1 ];\r\n\r\n\t\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\r\n\r\n\t\t\t\t\tx = data[ i ];\r\n\t\t\t\t\ty = data[ i + 1 ];\r\n\t\t\t\t\tif ( x < minX ) minX = x;\r\n\t\t\t\t\tif ( y < minY ) minY = y;\r\n\t\t\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\t\t\tif ( y > maxY ) maxY = y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n\r\n\t\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\r\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\r\n\r\n\t\t\treturn triangles;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// create a circular doubly linked list from polygon points in the specified winding order\r\n\r\n\tfunction linkedList( data, start, end, dim, clockwise ) {\r\n\r\n\t\tvar i, last;\r\n\r\n\t\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\r\n\r\n\t\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\r\n\r\n\t\t}\r\n\r\n\t\tif ( last && equals( last, last.next ) ) {\r\n\r\n\t\t\tremoveNode( last );\r\n\t\t\tlast = last.next;\r\n\r\n\t\t}\r\n\r\n\t\treturn last;\r\n\r\n\t}\r\n\r\n\t// eliminate colinear or duplicate points\r\n\r\n\tfunction filterPoints( start, end ) {\r\n\r\n\t\tif ( ! start ) return start;\r\n\t\tif ( ! end ) end = start;\r\n\r\n\t\tvar p = start, again;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tagain = false;\r\n\r\n\t\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\r\n\r\n\t\t\t\tremoveNode( p );\r\n\t\t\t\tp = end = p.prev;\r\n\t\t\t\tif ( p === p.next ) break;\r\n\t\t\t\tagain = true;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tp = p.next;\r\n\r\n\t\t\t}\r\n\r\n\t\t} while ( again || p !== end );\r\n\r\n\t\treturn end;\r\n\r\n\t}\r\n\r\n\t// main ear slicing loop which triangulates a polygon (given as a linked list)\r\n\r\n\tfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\r\n\r\n\t\tif ( ! ear ) return;\r\n\r\n\t\t// interlink polygon nodes in z-order\r\n\r\n\t\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\r\n\r\n\t\tvar stop = ear, prev, next;\r\n\r\n\t\t// iterate through ears, slicing them one by one\r\n\r\n\t\twhile ( ear.prev !== ear.next ) {\r\n\r\n\t\t\tprev = ear.prev;\r\n\t\t\tnext = ear.next;\r\n\r\n\t\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\r\n\r\n\t\t\t\t// cut off the triangle\r\n\t\t\t\ttriangles.push( prev.i / dim );\r\n\t\t\t\ttriangles.push( ear.i / dim );\r\n\t\t\t\ttriangles.push( next.i / dim );\r\n\r\n\t\t\t\tremoveNode( ear );\r\n\r\n\t\t\t\t// skipping the next vertice leads to less sliver triangles\r\n\t\t\t\tear = next.next;\r\n\t\t\t\tstop = next.next;\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tear = next;\r\n\r\n\t\t\t// if we looped through the whole remaining polygon and can't find any more ears\r\n\r\n\t\t\tif ( ear === stop ) {\r\n\r\n\t\t\t\t// try filtering points and slicing again\r\n\r\n\t\t\t\tif ( ! pass ) {\r\n\r\n\t\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\r\n\r\n\t\t\t\t\t// if this didn't work, try curing all small self-intersections locally\r\n\r\n\t\t\t\t} else if ( pass === 1 ) {\r\n\r\n\t\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\r\n\t\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\r\n\r\n\t\t\t\t\t// as a last resort, try splitting the remaining polygon into two\r\n\r\n\t\t\t\t} else if ( pass === 2 ) {\r\n\r\n\t\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// check whether a polygon node forms a valid ear with adjacent nodes\r\n\r\n\tfunction isEar( ear ) {\r\n\r\n\t\tvar a = ear.prev,\r\n\t\t\tb = ear,\r\n\t\t\tc = ear.next;\r\n\r\n\t\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\r\n\r\n\t\t// now make sure we don't have other points inside the potential ear\r\n\t\tvar p = ear.next.next;\r\n\r\n\t\twhile ( p !== ear.prev ) {\r\n\r\n\t\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction isEarHashed( ear, minX, minY, invSize ) {\r\n\r\n\t\tvar a = ear.prev,\r\n\t\t\tb = ear,\r\n\t\t\tc = ear.next;\r\n\r\n\t\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\r\n\r\n\t\t// triangle bbox; min & max are calculated like this for speed\r\n\r\n\t\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\r\n\t\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\r\n\t\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\r\n\t\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\r\n\r\n\t\t// z-order range for the current triangle bbox;\r\n\r\n\t\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\r\n\t\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\r\n\r\n\t\t// first look for points inside the triangle in increasing z-order\r\n\r\n\t\tvar p = ear.nextZ;\r\n\r\n\t\twhile ( p && p.z <= maxZ ) {\r\n\r\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\r\n\t\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\r\n\t\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\r\n\t\t\tp = p.nextZ;\r\n\r\n\t\t}\r\n\r\n\t\t// then look for points in decreasing z-order\r\n\r\n\t\tp = ear.prevZ;\r\n\r\n\t\twhile ( p && p.z >= minZ ) {\r\n\r\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\r\n\t\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\r\n\t\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\r\n\r\n\t\t\tp = p.prevZ;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t// go through all polygon nodes and cure small local self-intersections\r\n\r\n\tfunction cureLocalIntersections( start, triangles, dim ) {\r\n\r\n\t\tvar p = start;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tvar a = p.prev, b = p.next.next;\r\n\r\n\t\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\r\n\r\n\t\t\t\ttriangles.push( a.i / dim );\r\n\t\t\t\ttriangles.push( p.i / dim );\r\n\t\t\t\ttriangles.push( b.i / dim );\r\n\r\n\t\t\t\t// remove two nodes involved\r\n\r\n\t\t\t\tremoveNode( p );\r\n\t\t\t\tremoveNode( p.next );\r\n\r\n\t\t\t\tp = start = b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== start );\r\n\r\n\t\treturn p;\r\n\r\n\t}\r\n\r\n\t// try splitting polygon into two and triangulate them independently\r\n\r\n\tfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\r\n\r\n\t\t// look for a valid diagonal that divides the polygon into two\r\n\r\n\t\tvar a = start;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tvar b = a.next.next;\r\n\r\n\t\t\twhile ( b !== a.prev ) {\r\n\r\n\t\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\r\n\r\n\t\t\t\t\t// split the polygon in two by the diagonal\r\n\r\n\t\t\t\t\tvar c = splitPolygon( a, b );\r\n\r\n\t\t\t\t\t// filter colinear points around the cuts\r\n\r\n\t\t\t\t\ta = filterPoints( a, a.next );\r\n\t\t\t\t\tc = filterPoints( c, c.next );\r\n\r\n\t\t\t\t\t// run earcut on each half\r\n\r\n\t\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\r\n\t\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tb = b.next;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ta = a.next;\r\n\r\n\t\t} while ( a !== start );\r\n\r\n\t}\r\n\r\n\t// link every hole into the outer loop, producing a single-ring polygon without holes\r\n\r\n\tfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\r\n\r\n\t\tvar queue = [], i, len, start, end, list;\r\n\r\n\t\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\r\n\r\n\t\t\tstart = holeIndices[ i ] * dim;\r\n\t\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\r\n\t\t\tlist = linkedList( data, start, end, dim, false );\r\n\t\t\tif ( list === list.next ) list.steiner = true;\r\n\t\t\tqueue.push( getLeftmost( list ) );\r\n\r\n\t\t}\r\n\r\n\t\tqueue.sort( compareX );\r\n\r\n\t\t// process holes from left to right\r\n\r\n\t\tfor ( i = 0; i < queue.length; i ++ ) {\r\n\r\n\t\t\teliminateHole( queue[ i ], outerNode );\r\n\t\t\touterNode = filterPoints( outerNode, outerNode.next );\r\n\r\n\t\t}\r\n\r\n\t\treturn outerNode;\r\n\r\n\t}\r\n\r\n\tfunction compareX( a, b ) {\r\n\r\n\t\treturn a.x - b.x;\r\n\r\n\t}\r\n\r\n\t// find a bridge between vertices that connects hole with an outer ring and and link it\r\n\r\n\tfunction eliminateHole( hole, outerNode ) {\r\n\r\n\t\touterNode = findHoleBridge( hole, outerNode );\r\n\r\n\t\tif ( outerNode ) {\r\n\r\n\t\t\tvar b = splitPolygon( outerNode, hole );\r\n\r\n\t\t\tfilterPoints( b, b.next );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// David Eberly's algorithm for finding a bridge between hole and outer polygon\r\n\r\n\tfunction findHoleBridge( hole, outerNode ) {\r\n\r\n\t\tvar p = outerNode,\r\n\t\t\thx = hole.x,\r\n\t\t\thy = hole.y,\r\n\t\t\tqx = - Infinity,\r\n\t\t\tm;\r\n\r\n\t\t// find a segment intersected by a ray from the hole's leftmost point to the left;\r\n\t\t// segment's endpoint with lesser x will be potential connection point\r\n\r\n\t\tdo {\r\n\r\n\t\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\r\n\r\n\t\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\r\n\r\n\t\t\t\tif ( x <= hx && x > qx ) {\r\n\r\n\t\t\t\t\tqx = x;\r\n\r\n\t\t\t\t\tif ( x === hx ) {\r\n\r\n\t\t\t\t\t\tif ( hy === p.y ) return p;\r\n\t\t\t\t\t\tif ( hy === p.next.y ) return p.next;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== outerNode );\r\n\r\n\t\tif ( ! m ) return null;\r\n\r\n\t\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\r\n\r\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\r\n\t\t// if there are no points found, we have a valid connection;\r\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n\t\tvar stop = m,\r\n\t\t\tmx = m.x,\r\n\t\t\tmy = m.y,\r\n\t\t\ttanMin = Infinity,\r\n\t\t\ttan;\r\n\r\n\t\tp = m.next;\r\n\r\n\t\twhile ( p !== stop ) {\r\n\r\n\t\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\r\n\t\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\r\n\r\n\t\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\r\n\r\n\t\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\r\n\r\n\t\t\t\t\tm = p;\r\n\t\t\t\t\ttanMin = tan;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t}\r\n\r\n\t\treturn m;\r\n\r\n\t}\r\n\r\n\t// interlink polygon nodes in z-order\r\n\r\n\tfunction indexCurve( start, minX, minY, invSize ) {\r\n\r\n\t\tvar p = start;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\r\n\t\t\tp.prevZ = p.prev;\r\n\t\t\tp.nextZ = p.next;\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== start );\r\n\r\n\t\tp.prevZ.nextZ = null;\r\n\t\tp.prevZ = null;\r\n\r\n\t\tsortLinked( p );\r\n\r\n\t}\r\n\r\n\t// Simon Tatham's linked list merge sort algorithm\r\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\n\r\n\tfunction sortLinked( list ) {\r\n\r\n\t\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tp = list;\r\n\t\t\tlist = null;\r\n\t\t\ttail = null;\r\n\t\t\tnumMerges = 0;\r\n\r\n\t\t\twhile ( p ) {\r\n\r\n\t\t\t\tnumMerges ++;\r\n\t\t\t\tq = p;\r\n\t\t\t\tpSize = 0;\r\n\r\n\t\t\t\tfor ( i = 0; i < inSize; i ++ ) {\r\n\r\n\t\t\t\t\tpSize ++;\r\n\t\t\t\t\tq = q.nextZ;\r\n\t\t\t\t\tif ( ! q ) break;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tqSize = inSize;\r\n\r\n\t\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\r\n\r\n\t\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\r\n\r\n\t\t\t\t\t\te = p;\r\n\t\t\t\t\t\tp = p.nextZ;\r\n\t\t\t\t\t\tpSize --;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\te = q;\r\n\t\t\t\t\t\tq = q.nextZ;\r\n\t\t\t\t\t\tqSize --;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( tail ) tail.nextZ = e;\r\n\t\t\t\t\telse list = e;\r\n\r\n\t\t\t\t\te.prevZ = tail;\r\n\t\t\t\t\ttail = e;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tp = q;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttail.nextZ = null;\r\n\t\t\tinSize *= 2;\r\n\r\n\t\t} while ( numMerges > 1 );\r\n\r\n\t\treturn list;\r\n\r\n\t}\r\n\r\n\t// z-order of a point given coords and inverse of the longer side of data bbox\r\n\r\n\tfunction zOrder( x, y, minX, minY, invSize ) {\r\n\r\n\t\t// coords are transformed into non-negative 15-bit integer range\r\n\r\n\t\tx = 32767 * ( x - minX ) * invSize;\r\n\t\ty = 32767 * ( y - minY ) * invSize;\r\n\r\n\t\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\r\n\t\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\r\n\t\tx = ( x | ( x << 2 ) ) & 0x33333333;\r\n\t\tx = ( x | ( x << 1 ) ) & 0x55555555;\r\n\r\n\t\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\r\n\t\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\r\n\t\ty = ( y | ( y << 2 ) ) & 0x33333333;\r\n\t\ty = ( y | ( y << 1 ) ) & 0x55555555;\r\n\r\n\t\treturn x | ( y << 1 );\r\n\r\n\t}\r\n\r\n\t// find the leftmost node of a polygon ring\r\n\r\n\tfunction getLeftmost( start ) {\r\n\r\n\t\tvar p = start, leftmost = start;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tif ( p.x < leftmost.x ) leftmost = p;\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== start );\r\n\r\n\t\treturn leftmost;\r\n\r\n\t}\r\n\r\n\t// check if a point lies within a convex triangle\r\n\r\n\tfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\r\n\r\n\t\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\r\n\t\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\r\n\t\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\r\n\r\n\t}\r\n\r\n\t// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\n\r\n\tfunction isValidDiagonal( a, b ) {\r\n\r\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\r\n\t\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\r\n\r\n\t}\r\n\r\n\t// signed area of a triangle\r\n\r\n\tfunction area( p, q, r ) {\r\n\r\n\t\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\r\n\r\n\t}\r\n\r\n\t// check if two points are equal\r\n\r\n\tfunction equals( p1, p2 ) {\r\n\r\n\t\treturn p1.x === p2.x && p1.y === p2.y;\r\n\r\n\t}\r\n\r\n\t// check if two segments intersect\r\n\r\n\tfunction intersects( p1, q1, p2, q2 ) {\r\n\r\n\t\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\r\n\t\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\r\n\r\n\t\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\r\n\t\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\r\n\r\n\t}\r\n\r\n\t// check if a polygon diagonal intersects any polygon segments\r\n\r\n\tfunction intersectsPolygon( a, b ) {\r\n\r\n\t\tvar p = a;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n\t\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== a );\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t// check if a polygon diagonal is locally inside the polygon\r\n\r\n\tfunction locallyInside( a, b ) {\r\n\r\n\t\treturn area( a.prev, a, a.next ) < 0 ?\r\n\t\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\r\n\t\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\r\n\r\n\t}\r\n\r\n\t// check if the middle point of a polygon diagonal is inside the polygon\r\n\r\n\tfunction middleInside( a, b ) {\r\n\r\n\t\tvar p = a,\r\n\t\t\tinside = false,\r\n\t\t\tpx = ( a.x + b.x ) / 2,\r\n\t\t\tpy = ( a.y + b.y ) / 2;\r\n\r\n\t\tdo {\r\n\r\n\t\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\r\n\t\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\r\n\r\n\t\t\t\tinside = ! inside;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t} while ( p !== a );\r\n\r\n\t\treturn inside;\r\n\r\n\t}\r\n\r\n\t// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\n\r\n\tfunction splitPolygon( a, b ) {\r\n\r\n\t\tvar a2 = new Node( a.i, a.x, a.y ),\r\n\t\t\tb2 = new Node( b.i, b.x, b.y ),\r\n\t\t\tan = a.next,\r\n\t\t\tbp = b.prev;\r\n\r\n\t\ta.next = b;\r\n\t\tb.prev = a;\r\n\r\n\t\ta2.next = an;\r\n\t\tan.prev = a2;\r\n\r\n\t\tb2.next = a2;\r\n\t\ta2.prev = b2;\r\n\r\n\t\tbp.next = b2;\r\n\t\tb2.prev = bp;\r\n\r\n\t\treturn b2;\r\n\r\n\t}\r\n\r\n\t// create a node and optionally link it with previous one (in a circular doubly linked list)\r\n\r\n\tfunction insertNode( i, x, y, last ) {\r\n\r\n\t\tvar p = new Node( i, x, y );\r\n\r\n\t\tif ( ! last ) {\r\n\r\n\t\t\tp.prev = p;\r\n\t\t\tp.next = p;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tp.next = last.next;\r\n\t\t\tp.prev = last;\r\n\t\t\tlast.next.prev = p;\r\n\t\t\tlast.next = p;\r\n\r\n\t\t}\r\n\r\n\t\treturn p;\r\n\r\n\t}\r\n\r\n\tfunction removeNode( p ) {\r\n\r\n\t\tp.next.prev = p.prev;\r\n\t\tp.prev.next = p.next;\r\n\r\n\t\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\r\n\t\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\r\n\r\n\t}\r\n\r\n\tfunction Node( i, x, y ) {\r\n\r\n\t\t// vertice index in coordinates array\r\n\t\tthis.i = i;\r\n\r\n\t\t// vertex coordinates\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\t// previous and next vertice nodes in a polygon ring\r\n\t\tthis.prev = null;\r\n\t\tthis.next = null;\r\n\r\n\t\t// z-order curve value\r\n\t\tthis.z = null;\r\n\r\n\t\t// previous and next nodes in z-order\r\n\t\tthis.prevZ = null;\r\n\t\tthis.nextZ = null;\r\n\r\n\t\t// indicates whether this is a steiner point\r\n\t\tthis.steiner = false;\r\n\r\n\t}\r\n\r\n\tfunction signedArea( data, start, end, dim ) {\r\n\r\n\t\tvar sum = 0;\r\n\r\n\t\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\r\n\r\n\t\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\r\n\t\t\tj = i;\r\n\r\n\t\t}\r\n\r\n\t\treturn sum;\r\n\r\n\t}\n\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\r\n\tvar ShapeUtils = {\r\n\r\n\t\t// calculate area of the contour polygon\r\n\r\n\t\tarea: function ( contour ) {\r\n\r\n\t\t\tvar n = contour.length;\r\n\t\t\tvar a = 0.0;\r\n\r\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn a * 0.5;\r\n\r\n\t\t},\r\n\r\n\t\tisClockWise: function ( pts ) {\r\n\r\n\t\t\treturn ShapeUtils.area( pts ) < 0;\r\n\r\n\t\t},\r\n\r\n\t\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\r\n\t\t\tvar holeIndices = []; // array of hole indices\r\n\t\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\r\n\r\n\t\t\tremoveDupEndPts( contour );\r\n\t\t\taddContour( vertices, contour );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar holeIndex = contour.length;\r\n\r\n\t\t\tholes.forEach( removeDupEndPts );\r\n\r\n\t\t\tfor ( var i = 0; i < holes.length; i ++ ) {\r\n\r\n\t\t\t\tholeIndices.push( holeIndex );\r\n\t\t\t\tholeIndex += holes[ i ].length;\r\n\t\t\t\taddContour( vertices, holes[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\r\n\r\n\t\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn faces;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction removeDupEndPts( points ) {\r\n\r\n\t\tvar l = points.length;\r\n\r\n\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\r\n\r\n\t\t\tpoints.pop();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction addContour( vertices, contour ) {\r\n\r\n\t\tfor ( var i = 0; i < contour.length; i ++ ) {\r\n\r\n\t\t\tvertices.push( contour[ i ].x );\r\n\t\t\tvertices.push( contour[ i ].y );\r\n\r\n\t\t}\r\n\r\n\t}\n\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t * Creates extruded geometry from a path shape.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n\t *  depth: <float>, // Depth to extrude the shape\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n\t *  bevelSize: <float>, // how far from shape outline is bevel\r\n\t *  bevelSegments: <int>, // number of bevel layers\r\n\t *\r\n\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\r\n\t *\r\n\t *  UVGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t */\r\n\r\n\t// ExtrudeGeometry\r\n\r\n\tfunction ExtrudeGeometry( shapes, options ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'ExtrudeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\toptions: options\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\r\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\r\n\r\n\tExtrudeGeometry.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Geometry.prototype.toJSON.call( this );\r\n\r\n\t\tvar shapes = this.parameters.shapes;\r\n\t\tvar options = this.parameters.options;\r\n\r\n\t\treturn toJSON( shapes, options, data );\r\n\r\n\t};\r\n\r\n\t// ExtrudeBufferGeometry\r\n\r\n\tfunction ExtrudeBufferGeometry( shapes, options ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'ExtrudeBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\toptions: options\r\n\t\t};\r\n\r\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar verticesArray = [];\r\n\t\tvar uvArray = [];\r\n\r\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar shape = shapes[ i ];\r\n\t\t\taddShape( shape );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\r\n\r\n\t\tthis.computeVertexNormals();\r\n\r\n\t\t// functions\r\n\r\n\t\tfunction addShape( shape ) {\r\n\r\n\t\t\tvar placeholder = [];\r\n\r\n\t\t\t// options\r\n\r\n\t\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\t\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\t\t\tvar depth = options.depth !== undefined ? options.depth : 100;\r\n\r\n\t\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\r\n\t\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\r\n\t\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\r\n\t\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\t\t\tvar extrudePath = options.extrudePath;\r\n\r\n\t\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\r\n\r\n\t\t\t// deprecated options\r\n\r\n\t\t\tif ( options.amount !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\r\n\t\t\t\tdepth = options.amount;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar extrudePts, extrudeByPath = false;\r\n\t\t\tvar splineTube, binormal, normal, position2;\r\n\r\n\t\t\tif ( extrudePath ) {\r\n\r\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\t\t\textrudeByPath = true;\r\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t\t\t// SETUP TNB variables\r\n\r\n\t\t\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\r\n\r\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\t\t\tbinormal = new Vector3();\r\n\t\t\t\tnormal = new Vector3();\r\n\t\t\t\tposition2 = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Safeguards if bevels are not enabled\r\n\r\n\t\t\tif ( ! bevelEnabled ) {\r\n\r\n\t\t\t\tbevelSegments = 0;\r\n\t\t\t\tbevelThickness = 0;\r\n\t\t\t\tbevelSize = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Variables initialization\r\n\r\n\t\t\tvar ahole, h, hl; // looping of holes\r\n\r\n\t\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\t\t\tvar vertices = shapePoints.shape;\r\n\t\t\tvar holes = shapePoints.holes;\r\n\r\n\t\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\r\n\r\n\t\t\tif ( reverse ) {\r\n\r\n\t\t\t\tvertices = vertices.reverse();\r\n\r\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tahole = holes[ h ];\r\n\r\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\r\n\r\n\t\t\t/* Vertices */\r\n\r\n\t\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tahole = holes[ h ];\r\n\r\n\t\t\t\tvertices = vertices.concat( ahole );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction scalePt2( pt, vec, size ) {\r\n\r\n\t\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar b, bs, t, z,\r\n\t\t\t\tvert, vlen = vertices.length,\r\n\t\t\t\tface, flen = faces.length;\r\n\r\n\r\n\t\t\t// Find directions for point movement\r\n\r\n\r\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t\t//\r\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\r\n\r\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\t\t\tvar v_prev_x = inPt.x - inPrev.x,\r\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\r\n\t\t\t\tvar v_next_x = inNext.x - inPt.x,\r\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\r\n\r\n\t\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t\t\t// check for collinear edges\r\n\t\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t// not collinear\r\n\r\n\t\t\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\r\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t\t//  but prevent crazy spikes\r\n\t\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\t\t\tvar direction_eq = false; // assumes: opposite\r\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\t\t\tv_trans_y = v_prev_x;\r\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar contourMovements = [];\r\n\r\n\t\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holesMovements = [],\r\n\t\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tahole = holes[ h ];\r\n\r\n\t\t\t\toneHoleMovements = [];\r\n\r\n\t\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tholesMovements.push( oneHoleMovements );\r\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\t\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\t\t\tt = b / bevelSegments;\r\n\t\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\r\n\t\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\r\n\r\n\t\t\t\t// contract shape\r\n\r\n\t\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\t\t\tv( vert.x, vert.y, - z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// expand holes\r\n\r\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tahole = holes[ h ];\r\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbs = bevelSize;\r\n\r\n\t\t\t// Back facing vertices\r\n\r\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Add stepped vertices...\r\n\t\t\t// Including front facing vertices\r\n\r\n\t\t\tvar s;\r\n\r\n\t\t\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\t\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Add bevel segments planes\r\n\r\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\t\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\t\t\tt = b / bevelSegments;\r\n\t\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\r\n\t\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\r\n\r\n\t\t\t\t// contract shape\r\n\r\n\t\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// expand holes\r\n\r\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tahole = holes[ h ];\r\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* Faces */\r\n\r\n\t\t\t// Top and bottom faces\r\n\r\n\t\t\tbuildLidFaces();\r\n\r\n\t\t\t// Sides faces\r\n\r\n\t\t\tbuildSideFaces();\r\n\r\n\r\n\t\t\t/////  Internal functions\r\n\r\n\t\t\tfunction buildLidFaces() {\r\n\r\n\t\t\t\tvar start = verticesArray.length / 3;\r\n\r\n\t\t\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\t\t\tvar layer = 0; // steps + 1\r\n\t\t\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t\t\t// Bottom faces\r\n\r\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t\t\t// Top faces\r\n\r\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Bottom faces\r\n\r\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Top faces\r\n\r\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Create faces for the z-sides of the shape\r\n\r\n\t\t\tfunction buildSideFaces() {\r\n\r\n\t\t\t\tvar start = verticesArray.length / 3;\r\n\t\t\t\tvar layeroffset = 0;\r\n\t\t\t\tsidewalls( contour, layeroffset );\r\n\t\t\t\tlayeroffset += contour.length;\r\n\r\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tahole = holes[ h ];\r\n\t\t\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t\t\t//, true\r\n\t\t\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\t\t\tvar j, k;\r\n\t\t\t\ti = contour.length;\r\n\r\n\t\t\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\t\t\tj = i;\r\n\t\t\t\t\tk = i - 1;\r\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\t\t\tvar s = 0,\r\n\t\t\t\t\t\tsl = steps + bevelSegments * 2;\r\n\r\n\t\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\t\t\tf4( a, b, c, d );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction v( x, y, z ) {\r\n\r\n\t\t\t\tplaceholder.push( x );\r\n\t\t\t\tplaceholder.push( y );\r\n\t\t\t\tplaceholder.push( z );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction f3( a, b, c ) {\r\n\r\n\t\t\t\taddVertex( a );\r\n\t\t\t\taddVertex( b );\r\n\t\t\t\taddVertex( c );\r\n\r\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\r\n\t\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\r\n\r\n\t\t\t\taddUV( uvs[ 0 ] );\r\n\t\t\t\taddUV( uvs[ 1 ] );\r\n\t\t\t\taddUV( uvs[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction f4( a, b, c, d ) {\r\n\r\n\t\t\t\taddVertex( a );\r\n\t\t\t\taddVertex( b );\r\n\t\t\t\taddVertex( d );\r\n\r\n\t\t\t\taddVertex( b );\r\n\t\t\t\taddVertex( c );\r\n\t\t\t\taddVertex( d );\r\n\r\n\r\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\r\n\t\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\r\n\r\n\t\t\t\taddUV( uvs[ 0 ] );\r\n\t\t\t\taddUV( uvs[ 1 ] );\r\n\t\t\t\taddUV( uvs[ 3 ] );\r\n\r\n\t\t\t\taddUV( uvs[ 1 ] );\r\n\t\t\t\taddUV( uvs[ 2 ] );\r\n\t\t\t\taddUV( uvs[ 3 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction addVertex( index ) {\r\n\r\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\r\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\r\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction addUV( vector2 ) {\r\n\r\n\t\t\t\tuvArray.push( vector2.x );\r\n\t\t\t\tuvArray.push( vector2.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\r\n\r\n\tExtrudeBufferGeometry.prototype.toJSON = function () {\r\n\r\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\r\n\r\n\t\tvar shapes = this.parameters.shapes;\r\n\t\tvar options = this.parameters.options;\r\n\r\n\t\treturn toJSON( shapes, options, data );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tvar WorldUVGenerator = {\r\n\r\n\t\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\r\n\r\n\t\t\tvar a_x = vertices[ indexA * 3 ];\r\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\r\n\t\t\tvar b_x = vertices[ indexB * 3 ];\r\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\r\n\t\t\tvar c_x = vertices[ indexC * 3 ];\r\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew Vector2( a_x, a_y ),\r\n\t\t\t\tnew Vector2( b_x, b_y ),\r\n\t\t\t\tnew Vector2( c_x, c_y )\r\n\t\t\t];\r\n\r\n\t\t},\r\n\r\n\t\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\t\tvar a_x = vertices[ indexA * 3 ];\r\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\r\n\t\t\tvar a_z = vertices[ indexA * 3 + 2 ];\r\n\t\t\tvar b_x = vertices[ indexB * 3 ];\r\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\r\n\t\t\tvar b_z = vertices[ indexB * 3 + 2 ];\r\n\t\t\tvar c_x = vertices[ indexC * 3 ];\r\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\r\n\t\t\tvar c_z = vertices[ indexC * 3 + 2 ];\r\n\t\t\tvar d_x = vertices[ indexD * 3 ];\r\n\t\t\tvar d_y = vertices[ indexD * 3 + 1 ];\r\n\t\t\tvar d_z = vertices[ indexD * 3 + 2 ];\r\n\r\n\t\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew Vector2( a_x, 1 - a_z ),\r\n\t\t\t\t\tnew Vector2( b_x, 1 - b_z ),\r\n\t\t\t\t\tnew Vector2( c_x, 1 - c_z ),\r\n\t\t\t\t\tnew Vector2( d_x, 1 - d_z )\r\n\t\t\t\t];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew Vector2( a_y, 1 - a_z ),\r\n\t\t\t\t\tnew Vector2( b_y, 1 - b_z ),\r\n\t\t\t\t\tnew Vector2( c_y, 1 - c_z ),\r\n\t\t\t\t\tnew Vector2( d_y, 1 - d_z )\r\n\t\t\t\t];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t};\r\n\r\n\tfunction toJSON( shapes, options, data ) {\r\n\r\n\t\t//\r\n\r\n\t\tdata.shapes = [];\r\n\r\n\t\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar shape = shapes[ i ];\r\n\r\n\t\t\t\tdata.shapes.push( shape.uuid );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdata.shapes.push( shapes.uuid );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\r\n\r\n\t\treturn data;\r\n\r\n\t}\n\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * Text = 3D Text\r\n\t *\r\n\t * parameters = {\r\n\t *  font: <THREE.Font>, // font\r\n\t *\r\n\t *  size: <float>, // size of the text\r\n\t *  height: <float>, // thickness to extrude text\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into text bevel goes\r\n\t *  bevelSize: <float> // how far from text outline is bevel\r\n\t * }\r\n\t */\r\n\r\n\t// TextGeometry\r\n\r\n\tfunction TextGeometry( text, parameters ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'TextGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\ttext: text,\r\n\t\t\tparameters: parameters\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tTextGeometry.prototype = Object.create( Geometry.prototype );\r\n\tTextGeometry.prototype.constructor = TextGeometry;\r\n\r\n\t// TextBufferGeometry\r\n\r\n\tfunction TextBufferGeometry( text, parameters ) {\r\n\r\n\t\tparameters = parameters || {};\r\n\r\n\t\tvar font = parameters.font;\r\n\r\n\t\tif ( ! ( font && font.isFont ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\r\n\t\t\treturn new Geometry();\r\n\r\n\t\t}\r\n\r\n\t\tvar shapes = font.generateShapes( text, parameters.size );\r\n\r\n\t\t// translate parameters to ExtrudeGeometry API\r\n\r\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t\t// defaults\r\n\r\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\t\tExtrudeBufferGeometry.call( this, shapes, parameters );\r\n\r\n\t\tthis.type = 'TextBufferGeometry';\r\n\r\n\t}\r\n\r\n\tTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\r\n\tTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// SphereGeometry\r\n\r\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'SphereGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\r\n\tSphereGeometry.prototype.constructor = SphereGeometry;\r\n\r\n\t// SphereBufferGeometry\r\n\r\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'SphereBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tradius = radius || 1;\r\n\r\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\t\tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n\t\tvar ix, iy;\r\n\r\n\t\tvar index = 0;\r\n\t\tvar grid = [];\r\n\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar normal = new Vector3();\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\r\n\r\n\t\t\tvar verticesRow = [];\r\n\r\n\t\t\tvar v = iy / heightSegments;\r\n\r\n\t\t\t// special case for the poles\r\n\r\n\t\t\tvar uOffset = ( iy == 0 ) ? 0.5 / widthSegments : ( ( iy == heightSegments ) ? - 0.5 / widthSegments : 0 );\r\n\r\n\t\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\r\n\r\n\t\t\t\tvar u = ix / widthSegments;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormal.copy( vertex ).normalize();\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\r\n\r\n\t\t\t\tverticesRow.push( index ++ );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgrid.push( verticesRow );\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\r\n\r\n\t\t\t\tvar a = grid[ iy ][ ix + 1 ];\r\n\t\t\t\tvar b = grid[ iy ][ ix ];\r\n\t\t\t\tvar c = grid[ iy + 1 ][ ix ];\r\n\t\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\r\n\r\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\r\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n\t/**\r\n\t * @author Kaleb Murphy\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// RingGeometry\r\n\r\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'RingGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\r\n\tRingGeometry.prototype.constructor = RingGeometry;\r\n\r\n\t// RingBufferGeometry\r\n\r\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'RingBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tinnerRadius = innerRadius || 0.5;\r\n\t\touterRadius = outerRadius || 1;\r\n\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// some helper variables\r\n\r\n\t\tvar segment;\r\n\t\tvar radius = innerRadius;\r\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar uv = new Vector2();\r\n\t\tvar j, i;\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\r\n\r\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\r\n\r\n\t\t\t\t// values are generate from the inside of the ring to the outside\r\n\r\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\r\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\r\n\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// increase the radius for next row of vertices\r\n\r\n\t\t\tradius += radiusStep;\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\r\n\r\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\r\n\r\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\r\n\r\n\t\t\t\tsegment = i + thetaSegmentLevel;\r\n\r\n\t\t\t\tvar a = segment;\r\n\t\t\t\tvar b = segment + thetaSegments + 1;\r\n\t\t\t\tvar c = segment + thetaSegments + 2;\r\n\t\t\t\tvar d = segment + 1;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n\t/**\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author bhouston / http://clara.io\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// LatheGeometry\r\n\r\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'LatheGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\r\n\tLatheGeometry.prototype.constructor = LatheGeometry;\r\n\r\n\t// LatheBufferGeometry\r\n\r\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'LatheBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\r\n\t\tsegments = Math.floor( segments ) || 12;\r\n\t\tphiStart = phiStart || 0;\r\n\t\tphiLength = phiLength || Math.PI * 2;\r\n\r\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\r\n\r\n\t\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\r\n\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar base;\r\n\t\tvar inverseSegments = 1.0 / segments;\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar uv = new Vector2();\r\n\t\tvar i, j;\r\n\r\n\t\t// generate vertices and uvs\r\n\r\n\t\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\t\tvar sin = Math.sin( phi );\r\n\t\t\tvar cos = Math.cos( phi );\r\n\r\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = points[ j ].x * sin;\r\n\t\t\t\tvertex.y = points[ j ].y;\r\n\t\t\t\tvertex.z = points[ j ].x * cos;\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuv.x = i / segments;\r\n\t\t\t\tuv.y = j / ( points.length - 1 );\r\n\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\t\tbase = j + i * points.length;\r\n\r\n\t\t\t\tvar a = base;\r\n\t\t\t\tvar b = base + points.length;\r\n\t\t\t\tvar c = base + points.length + 1;\r\n\t\t\t\tvar d = base + 1;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t// generate normals\r\n\r\n\t\tthis.computeVertexNormals();\r\n\r\n\t\t// if the geometry is closed, we need to average the normals along the seam.\r\n\t\t// because the corresponding vertices are identical (but still have different UVs).\r\n\r\n\t\tif ( phiLength === Math.PI * 2 ) {\r\n\r\n\t\t\tvar normals = this.attributes.normal.array;\r\n\t\t\tvar n1 = new Vector3();\r\n\t\t\tvar n2 = new Vector3();\r\n\t\t\tvar n = new Vector3();\r\n\r\n\t\t\t// this is the buffer offset for the last line of vertices\r\n\r\n\t\t\tbase = segments * points.length * 3;\r\n\r\n\t\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\r\n\r\n\t\t\t\t// select the normal of the vertex in the first line\r\n\r\n\t\t\t\tn1.x = normals[ j + 0 ];\r\n\t\t\t\tn1.y = normals[ j + 1 ];\r\n\t\t\t\tn1.z = normals[ j + 2 ];\r\n\r\n\t\t\t\t// select the normal of the vertex in the last line\r\n\r\n\t\t\t\tn2.x = normals[ base + j + 0 ];\r\n\t\t\t\tn2.y = normals[ base + j + 1 ];\r\n\t\t\t\tn2.z = normals[ base + j + 2 ];\r\n\r\n\t\t\t\t// average normals\r\n\r\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\r\n\r\n\t\t\t\t// assign the new values to both normals\r\n\r\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\r\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\r\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n\t/**\r\n\t * @author jonobr1 / http://jonobr1.com\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// ShapeGeometry\r\n\r\n\tfunction ShapeGeometry( shapes, curveSegments ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'ShapeGeometry';\r\n\r\n\t\tif ( typeof curveSegments === 'object' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\r\n\r\n\t\t\tcurveSegments = curveSegments.curveSegments;\r\n\r\n\t\t}\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\tcurveSegments: curveSegments\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\r\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\r\n\r\n\tShapeGeometry.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Geometry.prototype.toJSON.call( this );\r\n\r\n\t\tvar shapes = this.parameters.shapes;\r\n\r\n\t\treturn toJSON$1( shapes, data );\r\n\r\n\t};\r\n\r\n\t// ShapeBufferGeometry\r\n\r\n\tfunction ShapeBufferGeometry( shapes, curveSegments ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'ShapeBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\tcurveSegments: curveSegments\r\n\t\t};\r\n\r\n\t\tcurveSegments = curveSegments || 12;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar groupStart = 0;\r\n\t\tvar groupCount = 0;\r\n\r\n\t\t// allow single and array values for \"shapes\" parameter\r\n\r\n\t\tif ( Array.isArray( shapes ) === false ) {\r\n\r\n\t\t\taddShape( shapes );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\r\n\r\n\t\t\t\taddShape( shapes[ i ] );\r\n\r\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\r\n\r\n\t\t\t\tgroupStart += groupCount;\r\n\t\t\t\tgroupCount = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\r\n\t\t// helper functions\r\n\r\n\t\tfunction addShape( shape ) {\r\n\r\n\t\t\tvar i, l, shapeHole;\r\n\r\n\t\t\tvar indexOffset = vertices.length / 3;\r\n\t\t\tvar points = shape.extractPoints( curveSegments );\r\n\r\n\t\t\tvar shapeVertices = points.shape;\r\n\t\t\tvar shapeHoles = points.holes;\r\n\r\n\t\t\t// check direction of vertices\r\n\r\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\r\n\r\n\t\t\t\tshapeVertices = shapeVertices.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tshapeHole = shapeHoles[ i ];\r\n\r\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\r\n\r\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\r\n\r\n\t\t\t// join vertices of inner and outer paths to a single array\r\n\r\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tshapeHole = shapeHoles[ i ];\r\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// vertices, normals, uvs\r\n\r\n\t\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar vertex = shapeVertices[ i ];\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// incides\r\n\r\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tvar a = face[ 0 ] + indexOffset;\r\n\t\t\t\tvar b = face[ 1 ] + indexOffset;\r\n\t\t\t\tvar c = face[ 2 ] + indexOffset;\r\n\r\n\t\t\t\tindices.push( a, b, c );\r\n\t\t\t\tgroupCount += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\r\n\r\n\tShapeBufferGeometry.prototype.toJSON = function () {\r\n\r\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\r\n\r\n\t\tvar shapes = this.parameters.shapes;\r\n\r\n\t\treturn toJSON$1( shapes, data );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tfunction toJSON$1( shapes, data ) {\r\n\r\n\t\tdata.shapes = [];\r\n\r\n\t\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar shape = shapes[ i ];\r\n\r\n\t\t\t\tdata.shapes.push( shape.uuid );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdata.shapes.push( shapes.uuid );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\n\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'EdgesGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tthresholdAngle: thresholdAngle\r\n\t\t};\r\n\r\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\t\t// buffer\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\r\n\t\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\r\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\t// prepare source geometry\r\n\r\n\t\tvar geometry2;\r\n\r\n\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\tgeometry2 = new Geometry();\r\n\t\t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgeometry2 = geometry.clone();\r\n\r\n\t\t}\r\n\r\n\t\tgeometry2.mergeVertices();\r\n\t\tgeometry2.computeFaceNormals();\r\n\r\n\t\tvar sourceVertices = geometry2.vertices;\r\n\t\tvar faces = geometry2.faces;\r\n\r\n\t\t// now create a data structure where each entry represents an edge with its adjoining faces\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge1 = face[ keys[ j ] ];\r\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\r\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\r\n\r\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\r\n\r\n\t\t\t\tif ( edges[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tedges[ key ].face2 = i;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate vertices\r\n\r\n\t\tfor ( key in edges ) {\r\n\r\n\t\t\tvar e = edges[ key ];\r\n\r\n\t\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\r\n\r\n\t\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\t\tvar vertex = sourceVertices[ e.index1 ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\tvertex = sourceVertices[ e.index2 ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n\t}\r\n\r\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\t// CylinderGeometry\r\n\r\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'CylinderGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\r\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\r\n\r\n\t// CylinderBufferGeometry\r\n\r\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'CylinderBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\r\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\r\n\t\theight = height || 1;\r\n\r\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\t\theightSegments = Math.floor( heightSegments ) || 1;\r\n\r\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar index = 0;\r\n\t\tvar indexArray = [];\r\n\t\tvar halfHeight = height / 2;\r\n\t\tvar groupStart = 0;\r\n\r\n\t\t// generate geometry\r\n\r\n\t\tgenerateTorso();\r\n\r\n\t\tif ( openEnded === false ) {\r\n\r\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\r\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\tfunction generateTorso() {\r\n\r\n\t\t\tvar x, y;\r\n\t\t\tvar normal = new Vector3();\r\n\t\t\tvar vertex = new Vector3();\r\n\r\n\t\t\tvar groupCount = 0;\r\n\r\n\t\t\t// this will be used to calculate the normal\r\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\r\n\r\n\t\t\t// generate vertices, normals and uvs\r\n\r\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\t\t\tvar indexRow = [];\r\n\r\n\t\t\t\tvar v = y / heightSegments;\r\n\r\n\t\t\t\t// calculate the radius of the current row\r\n\r\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\r\n\r\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\r\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\r\n\r\n\t\t\t\t\t// vertex\r\n\r\n\t\t\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\r\n\t\t\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t\t// normal\r\n\r\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\r\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t\t// uv\r\n\r\n\t\t\t\t\tuvs.push( u, 1 - v );\r\n\r\n\t\t\t\t\t// save index of vertex in respective row\r\n\r\n\t\t\t\t\tindexRow.push( index ++ );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// now save vertices of the row in our index array\r\n\r\n\t\t\t\tindexArray.push( indexRow );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// generate indices\r\n\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\t\t\t// we use the index array to access the correct indices\r\n\r\n\t\t\t\t\tvar a = indexArray[ y ][ x ];\r\n\t\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\r\n\t\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\r\n\t\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t\t\t// update group counter\r\n\r\n\t\t\t\t\tgroupCount += 6;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateCap( top ) {\r\n\r\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\r\n\r\n\t\t\tvar uv = new Vector2();\r\n\t\t\tvar vertex = new Vector3();\r\n\r\n\t\t\tvar groupCount = 0;\r\n\r\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\r\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\r\n\r\n\t\t\t// save the index of the first center vertex\r\n\t\t\tcenterIndexStart = index;\r\n\r\n\t\t\t// first we generate the center vertex data of the cap.\r\n\t\t\t// because the geometry needs one set of uvs per face,\r\n\t\t\t// we must generate a center vertex per face/segment\r\n\r\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormals.push( 0, sign, 0 );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( 0.5, 0.5 );\r\n\r\n\t\t\t\t// increase index\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// save the index of the last center vertex\r\n\r\n\t\t\tcenterIndexEnd = index;\r\n\r\n\t\t\t// now we generate the surrounding vertices, normals and uvs\r\n\r\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\tvar u = x / radialSegments;\r\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\r\n\r\n\t\t\t\tvar cosTheta = Math.cos( theta );\r\n\t\t\t\tvar sinTheta = Math.sin( theta );\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\t\tvertex.y = halfHeight * sign;\r\n\t\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormals.push( 0, sign, 0 );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\r\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t\t// increase index\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// generate indices\r\n\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\t\tvar c = centerIndexStart + x;\r\n\t\t\t\tvar i = centerIndexEnd + x;\r\n\r\n\t\t\t\tif ( top === true ) {\r\n\r\n\t\t\t\t\t// face top\r\n\r\n\t\t\t\t\tindices.push( i, i + 1, c );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// face bottom\r\n\r\n\t\t\t\t\tindices.push( i + 1, i, c );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroupCount += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n\t/**\r\n\t * @author abelnation / http://github.com/abelnation\r\n\t */\r\n\r\n\t// ConeGeometry\r\n\r\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\r\n\r\n\t\tthis.type = 'ConeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\r\n\tConeGeometry.prototype.constructor = ConeGeometry;\r\n\r\n\t// ConeBufferGeometry\r\n\r\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\r\n\r\n\t\tthis.type = 'ConeBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\r\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t * @author hughes\r\n\t */\r\n\r\n\t// CircleGeometry\r\n\r\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\t\tGeometry.call( this );\r\n\r\n\t\tthis.type = 'CircleGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\r\n\t\tthis.mergeVertices();\r\n\r\n\t}\r\n\r\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\r\n\tCircleGeometry.prototype.constructor = CircleGeometry;\r\n\r\n\t// CircleBufferGeometry\r\n\r\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'CircleBufferGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tradius = radius || 1;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\t\t// buffers\r\n\r\n\t\tvar indices = [];\r\n\t\tvar vertices = [];\r\n\t\tvar normals = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tvar i, s;\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar uv = new Vector2();\r\n\r\n\t\t// center point\r\n\r\n\t\tvertices.push( 0, 0, 0 );\r\n\t\tnormals.push( 0, 0, 1 );\r\n\t\tuvs.push( 0.5, 0.5 );\r\n\r\n\t\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\r\n\r\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\t\t// vertex\r\n\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// normal\r\n\r\n\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t// uvs\r\n\r\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\r\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\t\tindices.push( i, i + 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\n\tvar Geometries = /*#__PURE__*/Object.freeze({\n\t\tWireframeGeometry: WireframeGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeBufferGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusBufferGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tTextBufferGeometry: TextBufferGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereBufferGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingBufferGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheBufferGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeBufferGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeBufferGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleBufferGeometry,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxBufferGeometry\n\t});\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <THREE.Color>\r\n\t * }\r\n\t */\r\n\r\n\tfunction ShadowMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'ShadowMaterial';\r\n\r\n\t\tthis.color = new Color( 0x000000 );\r\n\t\tthis.transparent = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tShadowMaterial.prototype = Object.create( Material.prototype );\r\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\r\n\r\n\tShadowMaterial.prototype.isShadowMaterial = true;\r\n\r\n\tShadowMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction RawShaderMaterial( parameters ) {\r\n\r\n\t\tShaderMaterial.call( this, parameters );\r\n\r\n\t\tthis.type = 'RawShaderMaterial';\r\n\r\n\t}\r\n\r\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\r\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\r\n\r\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  roughness: <float>,\r\n\t *  metalness: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissive: <hex>,\r\n\t *  emissiveIntensity: <float>\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  roughnessMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  metalnessMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  envMapIntensity: <float>\r\n\t *\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshStandardMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.defines = { 'STANDARD': '' };\r\n\r\n\t\tthis.type = 'MeshStandardMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\t\tthis.roughness = 0.5;\r\n\t\tthis.metalness = 0.5;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.roughnessMap = null;\r\n\r\n\t\tthis.metalnessMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.envMapIntensity = 1.0;\r\n\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\r\n\r\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\r\n\r\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.defines = { 'STANDARD': '' };\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.roughness = source.roughness;\r\n\t\tthis.metalness = source.metalness;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.roughnessMap = source.roughnessMap;\r\n\r\n\t\tthis.metalnessMap = source.metalnessMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.envMapIntensity = source.envMapIntensity;\r\n\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *  reflectivity: <float>\r\n\t *  clearCoat: <float>\r\n\t *  clearCoatRoughness: <float>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshPhysicalMaterial( parameters ) {\r\n\r\n\t\tMeshStandardMaterial.call( this );\r\n\r\n\t\tthis.defines = { 'PHYSICAL': '' };\r\n\r\n\t\tthis.type = 'MeshPhysicalMaterial';\r\n\r\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\r\n\r\n\t\tthis.clearCoat = 0.0;\r\n\t\tthis.clearCoatRoughness = 0.0;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\r\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\r\n\r\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\r\n\r\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.defines = { 'PHYSICAL': '' };\r\n\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\r\n\t\tthis.clearCoat = source.clearCoat;\r\n\t\tthis.clearCoatRoughness = source.clearCoatRoughness;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  specular: <hex>,\r\n\t *  shininess: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissive: <hex>,\r\n\t *  emissiveIntensity: <float>\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshPhongMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshPhongMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\t\tthis.specular = new Color( 0x111111 );\r\n\t\tthis.shininess = 30;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.specularMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\r\n\r\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\r\n\r\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.specular.copy( source.specular );\r\n\t\tthis.shininess = source.shininess;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\t/**\r\n\t * @author takahirox / http://github.com/takahirox\r\n\t *\r\n\t * parameters = {\r\n\t *  gradientMap: new THREE.Texture( <Image> )\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshToonMaterial( parameters ) {\r\n\r\n\t\tMeshPhongMaterial.call( this );\r\n\r\n\t\tthis.defines = { 'TOON': '' };\r\n\r\n\t\tthis.type = 'MeshToonMaterial';\r\n\r\n\t\tthis.gradientMap = null;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\r\n\tMeshToonMaterial.prototype.constructor = MeshToonMaterial;\r\n\r\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\r\n\r\n\tMeshToonMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMeshPhongMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.gradientMap = source.gradientMap;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshNormalMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.fog = false;\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\r\n\r\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\r\n\r\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissive: <hex>,\r\n\t *  emissiveIntensity: <float>\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshLambertMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.type = 'MeshLambertMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.specularMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\r\n\r\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\r\n\r\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  matcap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>\r\n\t * }\r\n\t */\r\n\r\n\tfunction MeshMatcapMaterial( parameters ) {\r\n\r\n\t\tMaterial.call( this );\r\n\r\n\t\tthis.defines = { 'MATCAP': '' };\r\n\r\n\t\tthis.type = 'MeshMatcapMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\r\n\t\tthis.matcap = null;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\r\n\t\tthis.lights = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tMeshMatcapMaterial.prototype = Object.create( Material.prototype );\r\n\tMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\r\n\r\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\r\n\r\n\tMeshMatcapMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.defines = { 'MATCAP': '' };\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.matcap = source.matcap;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *\r\n\t *  scale: <float>,\r\n\t *  dashSize: <float>,\r\n\t *  gapSize: <float>\r\n\t * }\r\n\t */\r\n\r\n\tfunction LineDashedMaterial( parameters ) {\r\n\r\n\t\tLineBasicMaterial.call( this );\r\n\r\n\t\tthis.type = 'LineDashedMaterial';\r\n\r\n\t\tthis.scale = 1;\r\n\t\tthis.dashSize = 3;\r\n\t\tthis.gapSize = 1;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\r\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\r\n\r\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\r\n\r\n\tLineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n\t\tLineBasicMaterial.prototype.copy.call( this, source );\r\n\r\n\t\tthis.scale = source.scale;\r\n\t\tthis.dashSize = source.dashSize;\r\n\t\tthis.gapSize = source.gapSize;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\n\n\tvar Materials = /*#__PURE__*/Object.freeze({\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\t/**\r\n\t * @author tschw\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\r\n\tvar AnimationUtils = {\r\n\r\n\t\t// same as Array.prototype.slice, but also works on typed arrays\r\n\t\tarraySlice: function ( array, from, to ) {\r\n\r\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\r\n\r\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\r\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\r\n\t\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array.slice( from, to );\r\n\r\n\t\t},\r\n\r\n\t\t// converts an array to a specific type\r\n\t\tconvertArray: function ( array, type, forceClone ) {\r\n\r\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\r\n\t\t\t\t! forceClone && array.constructor === type ) return array;\r\n\r\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\r\n\r\n\t\t\t\treturn new type( array ); // create typed array\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\r\n\r\n\t\t},\r\n\r\n\t\tisTypedArray: function ( object ) {\r\n\r\n\t\t\treturn ArrayBuffer.isView( object ) &&\r\n\t\t\t\t! ( object instanceof DataView );\r\n\r\n\t\t},\r\n\r\n\t\t// returns an array by which times and values can be sorted\r\n\t\tgetKeyframeOrder: function ( times ) {\r\n\r\n\t\t\tfunction compareTime( i, j ) {\r\n\r\n\t\t\t\treturn times[ i ] - times[ j ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar n = times.length;\r\n\t\t\tvar result = new Array( n );\r\n\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\r\n\r\n\t\t\tresult.sort( compareTime );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t},\r\n\r\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\r\n\t\tsortedArray: function ( values, stride, order ) {\r\n\r\n\t\t\tvar nValues = values.length;\r\n\t\t\tvar result = new values.constructor( nValues );\r\n\r\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\r\n\r\n\t\t\t\tvar srcOffset = order[ i ] * stride;\r\n\r\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t},\r\n\r\n\t\t// function for parsing AOS keyframe formats\r\n\t\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\r\n\r\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\r\n\r\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\r\n\r\n\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( key === undefined ) return; // no data\r\n\r\n\t\t\tvar value = key[ valuePropertyName ];\r\n\t\t\tif ( value === undefined ) return; // no data\r\n\r\n\t\t\tif ( Array.isArray( value ) ) {\r\n\r\n\t\t\t\tdo {\r\n\r\n\t\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t\t} while ( key !== undefined );\r\n\r\n\t\t\t} else if ( value.toArray !== undefined ) {\r\n\r\n\t\t\t\t// ...assume THREE.Math-ish\r\n\r\n\t\t\t\tdo {\r\n\r\n\t\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\t\tvalue.toArray( values, values.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t\t} while ( key !== undefined );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// otherwise push as-is\r\n\r\n\t\t\t\tdo {\r\n\r\n\t\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\t\tvalues.push( value );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t\t} while ( key !== undefined );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\n\n\t/**\r\n\t * Abstract base class of interpolants over parametric samples.\r\n\t *\r\n\t * The parameter domain is one dimensional, typically the time or a path\r\n\t * along a curve defined by the data.\r\n\t *\r\n\t * The sample values can have any dimensionality and derived classes may\r\n\t * apply special interpretations to the data.\r\n\t *\r\n\t * This class provides the interval seek in a Template Method, deferring\r\n\t * the actual interpolation to derived classes.\r\n\t *\r\n\t * Time complexity is O(1) for linear access crossing at most two points\r\n\t * and O(log N) for random access, where N is the number of positions.\r\n\t *\r\n\t * References:\r\n\t *\r\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tthis.parameterPositions = parameterPositions;\r\n\t\tthis._cachedIndex = 0;\r\n\r\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\r\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\r\n\t\tthis.sampleValues = sampleValues;\r\n\t\tthis.valueSize = sampleSize;\r\n\r\n\t}\r\n\r\n\tObject.assign( Interpolant.prototype, {\r\n\r\n\t\tevaluate: function ( t ) {\r\n\r\n\t\t\tvar pp = this.parameterPositions,\r\n\t\t\t\ti1 = this._cachedIndex,\r\n\r\n\t\t\t\tt1 = pp[ i1 ],\r\n\t\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\t\tvalidate_interval: {\r\n\r\n\t\t\t\tseek: {\r\n\r\n\t\t\t\t\tvar right;\r\n\r\n\t\t\t\t\tlinear_scan: {\r\n\r\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\r\n\t\t\t\t\t\t//- slower code:\r\n\t\t\t\t\t\t//-\r\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\r\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\r\n\r\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\r\n\r\n\t\t\t\t\t\t\t\t\t// after end\r\n\r\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\t\tt0 = t1;\r\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\r\n\r\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\r\n\t\t\t\t\t\t\tright = pp.length;\r\n\t\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//- slower code:\r\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\r\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\r\n\r\n\t\t\t\t\t\t\t// looping?\r\n\r\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( t < t1global ) {\r\n\r\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\r\n\t\t\t\t\t\t\t\tt0 = t1global;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// linear reverse scan\r\n\r\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\t// before start\r\n\r\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\t\tt1 = t0;\r\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\r\n\r\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\r\n\t\t\t\t\t\t\tright = i1;\r\n\t\t\t\t\t\t\ti1 = 0;\r\n\t\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// the interval is valid\r\n\r\n\t\t\t\t\t\tbreak validate_interval;\r\n\r\n\t\t\t\t\t} // linear scan\r\n\r\n\t\t\t\t\t// binary search\r\n\r\n\t\t\t\t\twhile ( i1 < right ) {\r\n\r\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\r\n\r\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\r\n\r\n\t\t\t\t\t\t\tright = mid;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ti1 = mid + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tt1 = pp[ i1 ];\r\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\t\t\t\t// check boundary cases, again\r\n\r\n\t\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} // seek\r\n\r\n\t\t\t\tthis._cachedIndex = i1;\r\n\r\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\r\n\r\n\t\t\t} // validate_interval\r\n\r\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\r\n\r\n\t\t},\r\n\r\n\t\tsettings: null, // optional, subclass-specific settings structure\r\n\t\t// Note: The indirection allows central control of many interpolants.\r\n\r\n\t\t// --- Protected interface\r\n\r\n\t\tDefaultSettings_: {},\r\n\r\n\t\tgetSettings_: function () {\r\n\r\n\t\t\treturn this.settings || this.DefaultSettings_;\r\n\r\n\t\t},\r\n\r\n\t\tcopySampleValue_: function ( index ) {\r\n\r\n\t\t\t// copies a sample value to the result buffer\r\n\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\t\t\t\toffset = index * stride;\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tresult[ i ] = values[ offset + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t},\r\n\r\n\t\t// Template methods for derived classes:\r\n\r\n\t\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\r\n\r\n\t\t\tthrow new Error( 'call to abstract method' );\r\n\t\t\t// implementations shall return this.resultBuffer\r\n\r\n\t\t},\r\n\r\n\t\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\r\n\r\n\t\t\t// empty\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\r\n\tObject.assign( Interpolant.prototype, {\r\n\r\n\t\t//( 0, t, t0 ), returns this.resultBuffer\r\n\t\tbeforeStart_: Interpolant.prototype.copySampleValue_,\r\n\r\n\t\t//( N-1, tN-1, t ), returns this.resultBuffer\r\n\t\tafterEnd_: Interpolant.prototype.copySampleValue_,\r\n\r\n\t} );\n\n\t/**\r\n\t * Fast and simple cubic spline interpolant.\r\n\t *\r\n\t * It was derived from a Hermitian construction setting the first derivative\r\n\t * at each sample position to the linear slope between neighboring positions\r\n\t * over their parameter interval.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t\tthis._weightPrev = - 0;\r\n\t\tthis._offsetPrev = - 0;\r\n\t\tthis._weightNext = - 0;\r\n\t\tthis._offsetNext = - 0;\r\n\r\n\t}\r\n\r\n\tCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\r\n\r\n\t\tconstructor: CubicInterpolant,\r\n\r\n\t\tDefaultSettings_: {\r\n\r\n\t\t\tendingStart: ZeroCurvatureEnding,\r\n\t\t\tendingEnd: ZeroCurvatureEnding\r\n\r\n\t\t},\r\n\r\n\t\tintervalChanged_: function ( i1, t0, t1 ) {\r\n\r\n\t\t\tvar pp = this.parameterPositions,\r\n\t\t\t\tiPrev = i1 - 2,\r\n\t\t\t\tiNext = i1 + 1,\r\n\r\n\t\t\t\ttPrev = pp[ iPrev ],\r\n\t\t\t\ttNext = pp[ iNext ];\r\n\r\n\t\t\tif ( tPrev === undefined ) {\r\n\r\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\r\n\r\n\t\t\t\t\tcase ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t\t// f'(t0) = 0\r\n\t\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase WrapAroundEnding:\r\n\r\n\t\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\t\tiPrev = pp.length - 2;\r\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\r\n\t\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\t\ttPrev = t1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tNext === undefined ) {\r\n\r\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\r\n\r\n\t\t\t\t\tcase ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t\t// f'(tN) = 0\r\n\t\t\t\t\t\tiNext = i1;\r\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase WrapAroundEnding:\r\n\r\n\t\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\t\tiNext = 1;\r\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\r\n\t\t\t\t\t\tiNext = i1 - 1;\r\n\t\t\t\t\t\ttNext = t0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\r\n\t\t\t\tstride = this.valueSize;\r\n\r\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\r\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\r\n\t\t\tthis._offsetPrev = iPrev * stride;\r\n\t\t\tthis._offsetNext = iNext * stride;\r\n\r\n\t\t},\r\n\r\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\r\n\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\r\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\r\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\r\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\r\n\r\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\t\tpp = p * p,\r\n\t\t\t\tppp = pp * p;\r\n\r\n\t\t\t// evaluate polynomials\r\n\r\n\t\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\r\n\t\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\r\n\t\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\r\n\t\t\tvar sN = wN * ppp - wN * pp;\r\n\r\n\t\t\t// combine data linearly\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tresult[ i ] =\r\n\t\t\t\t\t\tsP * values[ oP + i ] +\r\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\r\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\r\n\t\t\t\t\t\tsN * values[ oN + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\r\n\r\n\t\tconstructor: LinearInterpolant,\r\n\r\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\r\n\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\r\n\t\t\t\toffset1 = i1 * stride,\r\n\t\t\t\toffset0 = offset1 - stride,\r\n\r\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\t\tweight0 = 1 - weight1;\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tresult[ i ] =\r\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\r\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t *\r\n\t * Interpolant that evaluates to the sample value at the position preceeding\r\n\t * the parameter.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\r\n\r\n\t\tconstructor: DiscreteInterpolant,\r\n\r\n\t\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\r\n\r\n\t\t\treturn this.copySampleValue_( i1 - 1 );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t *\r\n\t * A timed sequence of keyframes for a specific property.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\r\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\r\n\r\n\t\tthis.name = name;\r\n\r\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\r\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\r\n\r\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\r\n\r\n\t}\r\n\r\n\t// Static methods\r\n\r\n\tObject.assign( KeyframeTrack, {\r\n\r\n\t\t// Serialization (in static context, because of constructor invocation\r\n\t\t// and automatic invocation of .toJSON):\r\n\r\n\t\ttoJSON: function ( track ) {\r\n\r\n\t\t\tvar trackType = track.constructor;\r\n\r\n\t\t\tvar json;\r\n\r\n\t\t\t// derived classes can define a static toJSON method\r\n\t\t\tif ( trackType.toJSON !== undefined ) {\r\n\r\n\t\t\t\tjson = trackType.toJSON( track );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// by default, we assume the data can be serialized as-is\r\n\t\t\t\tjson = {\r\n\r\n\t\t\t\t\t'name': track.name,\r\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\r\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar interpolation = track.getInterpolation();\r\n\r\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\r\n\r\n\t\t\t\t\tjson.interpolation = interpolation;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tjson.type = track.ValueTypeName; // mandatory\r\n\r\n\t\t\treturn json;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( KeyframeTrack.prototype, {\r\n\r\n\t\tconstructor: KeyframeTrack,\r\n\r\n\t\tTimeBufferType: Float32Array,\r\n\r\n\t\tValueBufferType: Float32Array,\r\n\r\n\t\tDefaultInterpolation: InterpolateLinear,\r\n\r\n\t\tInterpolantFactoryMethodDiscrete: function ( result ) {\r\n\r\n\t\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t\t},\r\n\r\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\r\n\r\n\t\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t\t},\r\n\r\n\t\tInterpolantFactoryMethodSmooth: function ( result ) {\r\n\r\n\t\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t\t},\r\n\r\n\t\tsetInterpolation: function ( interpolation ) {\r\n\r\n\t\t\tvar factoryMethod;\r\n\r\n\t\t\tswitch ( interpolation ) {\r\n\r\n\t\t\t\tcase InterpolateDiscrete:\r\n\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase InterpolateLinear:\r\n\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase InterpolateSmooth:\r\n\r\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( factoryMethod === undefined ) {\r\n\r\n\t\t\t\tvar message = \"unsupported interpolation for \" +\r\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\r\n\r\n\t\t\t\tif ( this.createInterpolant === undefined ) {\r\n\r\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\r\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\r\n\r\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.createInterpolant = factoryMethod;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetInterpolation: function () {\r\n\r\n\t\t\tswitch ( this.createInterpolant ) {\r\n\r\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\r\n\r\n\t\t\t\t\treturn InterpolateDiscrete;\r\n\r\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\r\n\r\n\t\t\t\t\treturn InterpolateLinear;\r\n\r\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\r\n\r\n\t\t\t\t\treturn InterpolateSmooth;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tgetValueSize: function () {\r\n\r\n\t\t\treturn this.values.length / this.times.length;\r\n\r\n\t\t},\r\n\r\n\t\t// move all keyframes either forwards or backwards in time\r\n\t\tshift: function ( timeOffset ) {\r\n\r\n\t\t\tif ( timeOffset !== 0.0 ) {\r\n\r\n\t\t\t\tvar times = this.times;\r\n\r\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\ttimes[ i ] += timeOffset;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n\t\tscale: function ( timeScale ) {\r\n\r\n\t\t\tif ( timeScale !== 1.0 ) {\r\n\r\n\t\t\t\tvar times = this.times;\r\n\r\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\ttimes[ i ] *= timeScale;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n\t\ttrim: function ( startTime, endTime ) {\r\n\r\n\t\t\tvar times = this.times,\r\n\t\t\t\tnKeys = times.length,\r\n\t\t\t\tfrom = 0,\r\n\t\t\t\tto = nKeys - 1;\r\n\r\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\r\n\r\n\t\t\t\t++ from;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\r\n\r\n\t\t\t\t-- to;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t++ to; // inclusive -> exclusive bound\r\n\r\n\t\t\tif ( from !== 0 || to !== nKeys ) {\r\n\r\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\r\n\t\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\r\n\r\n\t\t\t\tvar stride = this.getValueSize();\r\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\r\n\t\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n\t\tvalidate: function () {\r\n\r\n\t\t\tvar valid = true;\r\n\r\n\t\t\tvar valueSize = this.getValueSize();\r\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\r\n\t\t\t\tvalid = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar times = this.times,\r\n\t\t\t\tvalues = this.values,\r\n\r\n\t\t\t\tnKeys = times.length;\r\n\r\n\t\t\tif ( nKeys === 0 ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\r\n\t\t\t\tvalid = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar prevTime = null;\r\n\r\n\t\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\r\n\r\n\t\t\t\tvar currTime = times[ i ];\r\n\r\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( prevTime !== null && prevTime > currTime ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprevTime = currTime;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( values !== undefined ) {\r\n\r\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\t\tvar value = values[ i ];\r\n\r\n\t\t\t\t\t\tif ( isNaN( value ) ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\r\n\t\t\t\t\t\t\tvalid = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn valid;\r\n\r\n\t\t},\r\n\r\n\t\t// removes equivalent sequential keys as common in morph target sequences\r\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\r\n\t\toptimize: function () {\r\n\r\n\t\t\tvar times = this.times,\r\n\t\t\t\tvalues = this.values,\r\n\t\t\t\tstride = this.getValueSize(),\r\n\r\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\r\n\r\n\t\t\t\twriteIndex = 1,\r\n\t\t\t\tlastIndex = times.length - 1;\r\n\r\n\t\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\r\n\r\n\t\t\t\tvar keep = false;\r\n\r\n\t\t\t\tvar time = times[ i ];\r\n\t\t\t\tvar timeNext = times[ i + 1 ];\r\n\r\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\r\n\r\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\r\n\r\n\t\t\t\t\tif ( ! smoothInterpolation ) {\r\n\r\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\r\n\r\n\t\t\t\t\t\tvar offset = i * stride,\r\n\t\t\t\t\t\t\toffsetP = offset - stride,\r\n\t\t\t\t\t\t\toffsetN = offset + stride;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\r\n\r\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\r\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\r\n\r\n\t\t\t\t\t\t\t\tkeep = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tkeep = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// in-place compaction\r\n\r\n\t\t\t\tif ( keep ) {\r\n\r\n\t\t\t\t\tif ( i !== writeIndex ) {\r\n\r\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\r\n\r\n\t\t\t\t\t\tvar readOffset = i * stride,\r\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t++ writeIndex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// flush last keyframe (compaction looks ahead)\r\n\r\n\t\t\tif ( lastIndex > 0 ) {\r\n\r\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\r\n\r\n\t\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t++ writeIndex;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( writeIndex !== times.length ) {\r\n\r\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\r\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\tvar times = AnimationUtils.arraySlice( this.times, 0 );\r\n\t\t\tvar values = AnimationUtils.arraySlice( this.values, 0 );\r\n\r\n\t\t\tvar TypedKeyframeTrack = this.constructor;\r\n\t\t\tvar track = new TypedKeyframeTrack( this.name, times, values );\r\n\r\n\t\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\r\n\t\t\ttrack.createInterpolant = this.createInterpolant;\r\n\r\n\t\t\treturn track;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t *\r\n\t * A Track of Boolean keyframe values.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction BooleanKeyframeTrack( name, times, values ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values );\r\n\r\n\t}\r\n\r\n\tBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: BooleanKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'bool',\r\n\t\tValueBufferType: Array,\r\n\r\n\t\tDefaultInterpolation: InterpolateDiscrete,\r\n\r\n\t\tInterpolantFactoryMethodLinear: undefined,\r\n\t\tInterpolantFactoryMethodSmooth: undefined\r\n\r\n\t\t// Note: Actually this track could have a optimized / compressed\r\n\t\t// representation of a single value and a custom interpolant that\r\n\t\t// computes \"firstValue ^ isOdd( index )\".\r\n\r\n\t} );\n\n\t/**\r\n\t *\r\n\t * A Track of keyframe values that represent color.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n\t}\r\n\r\n\tColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: ColorKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'color'\r\n\r\n\t\t// ValueBufferType is inherited\r\n\r\n\t\t// DefaultInterpolation is inherited\r\n\r\n\t\t// Note: Very basic implementation and nothing special yet.\r\n\t\t// However, this is the place for color space parameterization.\r\n\r\n\t} );\n\n\t/**\r\n\t *\r\n\t * A Track of numeric keyframe values.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n\t}\r\n\r\n\tNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: NumberKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'number'\r\n\r\n\t\t// ValueBufferType is inherited\r\n\r\n\t\t// DefaultInterpolation is inherited\r\n\r\n\t} );\n\n\t/**\r\n\t * Spherical linear unit quaternion interpolant.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\r\n\r\n\t\tconstructor: QuaternionLinearInterpolant,\r\n\r\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\r\n\r\n\t\t\tvar result = this.resultBuffer,\r\n\t\t\t\tvalues = this.sampleValues,\r\n\t\t\t\tstride = this.valueSize,\r\n\r\n\t\t\t\toffset = i1 * stride,\r\n\r\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\r\n\r\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\r\n\r\n\t\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t *\r\n\t * A Track of quaternion keyframe values.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n\t}\r\n\r\n\tQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: QuaternionKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'quaternion',\r\n\r\n\t\t// ValueBufferType is inherited\r\n\r\n\t\tDefaultInterpolation: InterpolateLinear,\r\n\r\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\r\n\r\n\t\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t\t},\r\n\r\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\r\n\r\n\t} );\n\n\t/**\r\n\t *\r\n\t * A Track that interpolates Strings\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n\t}\r\n\r\n\tStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: StringKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'string',\r\n\t\tValueBufferType: Array,\r\n\r\n\t\tDefaultInterpolation: InterpolateDiscrete,\r\n\r\n\t\tInterpolantFactoryMethodLinear: undefined,\r\n\r\n\t\tInterpolantFactoryMethodSmooth: undefined\r\n\r\n\t} );\n\n\t/**\r\n\t *\r\n\t * A Track of vectored keyframe values.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n\t}\r\n\r\n\tVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\r\n\r\n\t\tconstructor: VectorKeyframeTrack,\r\n\r\n\t\tValueTypeName: 'vector'\r\n\r\n\t\t// ValueBufferType is inherited\r\n\r\n\t\t// DefaultInterpolation is inherited\r\n\r\n\t} );\n\n\t/**\r\n\t *\r\n\t * Reusable set of Tracks that represent an animation.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\r\n\tfunction AnimationClip( name, duration, tracks ) {\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.tracks = tracks;\r\n\t\tthis.duration = ( duration !== undefined ) ? duration : - 1;\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\t// this means it should figure out its duration by scanning the tracks\r\n\t\tif ( this.duration < 0 ) {\r\n\r\n\t\t\tthis.resetDuration();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTrackTypeForValueTypeName( typeName ) {\r\n\r\n\t\tswitch ( typeName.toLowerCase() ) {\r\n\r\n\t\t\tcase 'scalar':\r\n\t\t\tcase 'double':\r\n\t\t\tcase 'float':\r\n\t\t\tcase 'number':\r\n\t\t\tcase 'integer':\r\n\r\n\t\t\t\treturn NumberKeyframeTrack;\r\n\r\n\t\t\tcase 'vector':\r\n\t\t\tcase 'vector2':\r\n\t\t\tcase 'vector3':\r\n\t\t\tcase 'vector4':\r\n\r\n\t\t\t\treturn VectorKeyframeTrack;\r\n\r\n\t\t\tcase 'color':\r\n\r\n\t\t\t\treturn ColorKeyframeTrack;\r\n\r\n\t\t\tcase 'quaternion':\r\n\r\n\t\t\t\treturn QuaternionKeyframeTrack;\r\n\r\n\t\t\tcase 'bool':\r\n\t\t\tcase 'boolean':\r\n\r\n\t\t\t\treturn BooleanKeyframeTrack;\r\n\r\n\t\t\tcase 'string':\r\n\r\n\t\t\t\treturn StringKeyframeTrack;\r\n\r\n\t\t}\r\n\r\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\r\n\r\n\t}\r\n\r\n\tfunction parseKeyframeTrack( json ) {\r\n\r\n\t\tif ( json.type === undefined ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\r\n\r\n\t\t}\r\n\r\n\t\tvar trackType = getTrackTypeForValueTypeName( json.type );\r\n\r\n\t\tif ( json.times === undefined ) {\r\n\r\n\t\t\tvar times = [], values = [];\r\n\r\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\r\n\r\n\t\t\tjson.times = times;\r\n\t\t\tjson.values = values;\r\n\r\n\t\t}\r\n\r\n\t\t// derived classes can define a static parse method\r\n\t\tif ( trackType.parse !== undefined ) {\r\n\r\n\t\t\treturn trackType.parse( json );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// by default, we assume a constructor compatible with the base\r\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject.assign( AnimationClip, {\r\n\r\n\t\tparse: function ( json ) {\r\n\r\n\t\t\tvar tracks = [],\r\n\t\t\t\tjsonTracks = json.tracks,\r\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\r\n\r\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks );\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( clip ) {\r\n\r\n\t\t\tvar tracks = [],\r\n\t\t\t\tclipTracks = clip.tracks;\r\n\r\n\t\t\tvar json = {\r\n\r\n\t\t\t\t'name': clip.name,\r\n\t\t\t\t'duration': clip.duration,\r\n\t\t\t\t'tracks': tracks,\r\n\t\t\t\t'uuid': clip.uuid\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn json;\r\n\r\n\t\t},\r\n\r\n\t\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\r\n\r\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\r\n\t\t\tvar tracks = [];\r\n\r\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tvar times = [];\r\n\t\t\t\tvar values = [];\r\n\r\n\t\t\t\ttimes.push(\r\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\r\n\t\t\t\t\ti,\r\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\r\n\r\n\t\t\t\tvalues.push( 0, 1, 0 );\r\n\r\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\r\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\r\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\r\n\r\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\r\n\t\t\t\t// last frame as well for perfect loop.\r\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\r\n\r\n\t\t\t\t\ttimes.push( numMorphTargets );\r\n\t\t\t\t\tvalues.push( values[ 0 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttracks.push(\r\n\t\t\t\t\tnew NumberKeyframeTrack(\r\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\r\n\t\t\t\t\t\ttimes, values\r\n\t\t\t\t\t).scale( 1.0 / fps ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new AnimationClip( name, - 1, tracks );\r\n\r\n\t\t},\r\n\r\n\t\tfindByName: function ( objectOrClipArray, name ) {\r\n\r\n\t\t\tvar clipArray = objectOrClipArray;\r\n\r\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\r\n\r\n\t\t\t\tvar o = objectOrClipArray;\r\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\r\n\r\n\t\t\t\tif ( clipArray[ i ].name === name ) {\r\n\r\n\t\t\t\t\treturn clipArray[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t},\r\n\r\n\t\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\r\n\r\n\t\t\tvar animationToMorphTargets = {};\r\n\r\n\t\t\t// tested with https://regex101.com/ on trick sequences\r\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\r\n\r\n\t\t\t// sort morph target names into animation groups based\r\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\r\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\r\n\r\n\t\t\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\t\t\tvar name = parts[ 1 ];\r\n\r\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\r\n\t\t\t\t\tif ( ! animationMorphTargets ) {\r\n\r\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar clips = [];\r\n\r\n\t\t\tfor ( var name in animationToMorphTargets ) {\r\n\r\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn clips;\r\n\r\n\t\t},\r\n\r\n\t\t// parse the animation.hierarchy format\r\n\t\tparseAnimation: function ( animation, bones ) {\r\n\r\n\t\t\tif ( ! animation ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\r\n\r\n\t\t\t\t// only return track if there are actually keys.\r\n\t\t\t\tif ( animationKeys.length !== 0 ) {\r\n\r\n\t\t\t\t\tvar times = [];\r\n\t\t\t\t\tvar values = [];\r\n\r\n\t\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\r\n\r\n\t\t\t\t\t// empty keys are filtered out, so check again\r\n\t\t\t\t\tif ( times.length !== 0 ) {\r\n\r\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar tracks = [];\r\n\r\n\t\t\tvar clipName = animation.name || 'default';\r\n\t\t\t// automatic length determination in AnimationClip.\r\n\t\t\tvar duration = animation.length || - 1;\r\n\t\t\tvar fps = animation.fps || 30;\r\n\r\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\r\n\r\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\r\n\r\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\r\n\r\n\t\t\t\t// skip empty tracks\r\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\r\n\r\n\t\t\t\t// process morph targets\r\n\t\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\r\n\r\n\t\t\t\t\t// figure out all morph targets used in this track\r\n\t\t\t\t\tvar morphTargetNames = {};\r\n\r\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\r\n\r\n\t\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\r\n\r\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// create a track for each morph target with all zero\r\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\r\n\t\t\t\t\t// the morphTarget is named.\r\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\r\n\r\n\t\t\t\t\t\tvar times = [];\r\n\t\t\t\t\t\tvar values = [];\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\r\n\r\n\t\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\r\n\r\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\r\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// ...assume skeletal animation\r\n\r\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\r\n\r\n\t\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\r\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\r\n\r\n\t\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\r\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\r\n\r\n\t\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\r\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tracks.length === 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks );\r\n\r\n\t\t\treturn clip;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( AnimationClip.prototype, {\r\n\r\n\t\tresetDuration: function () {\r\n\r\n\t\t\tvar tracks = this.tracks, duration = 0;\r\n\r\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar track = this.tracks[ i ];\r\n\r\n\t\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.duration = duration;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttrim: function () {\r\n\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tvalidate: function () {\r\n\r\n\t\t\tvar valid = true;\r\n\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\t\tvalid = valid && this.tracks[ i ].validate();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn valid;\r\n\r\n\t\t},\r\n\r\n\t\toptimize: function () {\r\n\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\t\tthis.tracks[ i ].optimize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\tvar tracks = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\t\ttracks.push( this.tracks[ i ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new AnimationClip( this.name, this.duration, tracks );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar Cache = {\r\n\r\n\t\tenabled: false,\r\n\r\n\t\tfiles: {},\r\n\r\n\t\tadd: function ( key, file ) {\r\n\r\n\t\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\t\tthis.files[ key ] = file;\r\n\r\n\t\t},\r\n\r\n\t\tget: function ( key ) {\r\n\r\n\t\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\t\treturn this.files[ key ];\r\n\r\n\t\t},\r\n\r\n\t\tremove: function ( key ) {\r\n\r\n\t\t\tdelete this.files[ key ];\r\n\r\n\t\t},\r\n\r\n\t\tclear: function () {\r\n\r\n\t\t\tthis.files = {};\r\n\r\n\t\t}\r\n\r\n\t};\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar isLoading = false;\r\n\t\tvar itemsLoaded = 0;\r\n\t\tvar itemsTotal = 0;\r\n\t\tvar urlModifier = undefined;\r\n\r\n\t\t// Refer to #5689 for the reason why we don't set .onStart\r\n\t\t// in the constructor\r\n\r\n\t\tthis.onStart = undefined;\r\n\t\tthis.onLoad = onLoad;\r\n\t\tthis.onProgress = onProgress;\r\n\t\tthis.onError = onError;\r\n\r\n\t\tthis.itemStart = function ( url ) {\r\n\r\n\t\t\titemsTotal ++;\r\n\r\n\t\t\tif ( isLoading === false ) {\r\n\r\n\t\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tisLoading = true;\r\n\r\n\t\t};\r\n\r\n\t\tthis.itemEnd = function ( url ) {\r\n\r\n\t\t\titemsLoaded ++;\r\n\r\n\t\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\t\tisLoading = false;\r\n\r\n\t\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.itemError = function ( url ) {\r\n\r\n\t\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\t\tscope.onError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.resolveURL = function ( url ) {\r\n\r\n\t\t\tif ( urlModifier ) {\r\n\r\n\t\t\t\treturn urlModifier( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn url;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setURLModifier = function ( transform ) {\r\n\r\n\t\t\turlModifier = transform;\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tvar DefaultLoadingManager = new LoadingManager();\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar loading = {};\r\n\r\n\tfunction FileLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( FileLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tif ( url === undefined ) url = '';\r\n\r\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar cached = Cache.get( url );\r\n\r\n\t\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t\treturn cached;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Check if request is duplicate\r\n\r\n\t\t\tif ( loading[ url ] !== undefined ) {\r\n\r\n\t\t\t\tloading[ url ].push( {\r\n\r\n\t\t\t\t\tonLoad: onLoad,\r\n\t\t\t\t\tonProgress: onProgress,\r\n\t\t\t\t\tonError: onError\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Check for data: URI\r\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\r\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\r\n\r\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\r\n\t\t\tif ( dataUriRegexResult ) {\r\n\r\n\t\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\r\n\t\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\r\n\t\t\t\tvar data = dataUriRegexResult[ 3 ];\r\n\r\n\t\t\t\tdata = decodeURIComponent( data );\r\n\r\n\t\t\t\tif ( isBase64 ) data = atob( data );\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tvar response;\r\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\r\n\r\n\t\t\t\t\tswitch ( responseType ) {\r\n\r\n\t\t\t\t\t\tcase 'arraybuffer':\r\n\t\t\t\t\t\tcase 'blob':\r\n\r\n\t\t\t\t\t\t\tvar view = new Uint8Array( data.length );\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\r\n\r\n\t\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tresponse = view.buffer;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'document':\r\n\r\n\t\t\t\t\t\t\tvar parser = new DOMParser();\r\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'json':\r\n\r\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault: // 'text' or other\r\n\r\n\t\t\t\t\t\t\tresponse = data;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\r\n\t\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( response );\r\n\r\n\t\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t\t}, 0 );\r\n\r\n\t\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\r\n\t\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\t\tif ( onError ) onError( error );\r\n\r\n\t\t\t\t\t\tscope.manager.itemError( url );\r\n\t\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t\t}, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Initialise array for duplicate requests\r\n\r\n\t\t\t\tloading[ url ] = [];\r\n\r\n\t\t\t\tloading[ url ].push( {\r\n\r\n\t\t\t\t\tonLoad: onLoad,\r\n\t\t\t\t\tonProgress: onProgress,\r\n\t\t\t\t\tonError: onError\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tvar request = new XMLHttpRequest();\r\n\r\n\t\t\t\trequest.open( 'GET', url, true );\r\n\r\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\t\t\tvar response = this.response;\r\n\r\n\t\t\t\t\tCache.add( url, response );\r\n\r\n\t\t\t\t\tvar callbacks = loading[ url ];\r\n\r\n\t\t\t\t\tdelete loading[ url ];\r\n\r\n\t\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\r\n\r\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\r\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\r\n\r\n\t\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar callback = callbacks[ i ];\r\n\t\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar callback = callbacks[ i ];\r\n\t\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tscope.manager.itemError( url );\r\n\t\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, false );\r\n\r\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\t\tvar callbacks = loading[ url ];\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar callback = callbacks[ i ];\r\n\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, false );\r\n\r\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\t\t\tvar callbacks = loading[ url ];\r\n\r\n\t\t\t\t\tdelete loading[ url ];\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar callback = callbacks[ i ];\r\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError( url );\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, false );\r\n\r\n\t\t\t\trequest.addEventListener( 'abort', function ( event ) {\r\n\r\n\t\t\t\t\tvar callbacks = loading[ url ];\r\n\r\n\t\t\t\t\tdelete loading[ url ];\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar callback = callbacks[ i ];\r\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError( url );\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, false );\r\n\r\n\t\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n\t\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\r\n\r\n\t\t\t\tfor ( var header in this.requestHeader ) {\r\n\r\n\t\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\trequest.send( null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn request;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetResponseType: function ( value ) {\r\n\r\n\t\t\tthis.responseType = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetWithCredentials: function ( value ) {\r\n\r\n\t\t\tthis.withCredentials = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetMimeType: function ( value ) {\r\n\r\n\t\t\tthis.mimeType = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetRequestHeader: function ( value ) {\r\n\r\n\t\t\tthis.requestHeader = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author bhouston / http://clara.io/\r\n\t */\r\n\r\n\tfunction AnimationLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( AnimationLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar loader = new FileLoader( scope.manager );\r\n\t\t\tloader.setPath( scope.path );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( json ) {\r\n\r\n\t\t\tvar animations = [];\r\n\r\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\r\n\r\n\t\t\t\tvar clip = AnimationClip.parse( json[ i ] );\r\n\r\n\t\t\t\tanimations.push( clip );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn animations;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n\t */\r\n\r\n\tfunction CompressedTextureLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\r\n\t}\r\n\r\n\tObject.assign( CompressedTextureLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar images = [];\r\n\r\n\t\t\tvar texture = new CompressedTexture();\r\n\t\t\ttexture.image = images;\r\n\r\n\t\t\tvar loader = new FileLoader( this.manager );\r\n\t\t\tloader.setPath( this.path );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n\t\t\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, onProgress, onError );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\t\tvar loaded = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}, onProgress, onError );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author Nikos M. / https://github.com/foo123/\r\n\t *\r\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n\t */\r\n\r\n\tfunction DataTextureLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\r\n\t}\r\n\r\n\tObject.assign( DataTextureLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar texture = new DataTexture();\r\n\r\n\t\t\tvar loader = new FileLoader( this.manager );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\t\tloader.setPath( this.path );\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\t\tif ( ! texData ) return;\r\n\r\n\t\t\t\tif ( texData.image !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t\t} else if ( texData.data !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\r\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\r\n\r\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\r\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearMipMapLinearFilter;\r\n\r\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\r\n\r\n\t\t\t\tif ( texData.format !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( texData.type !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texData.mipmaps !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texData.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\r\n\tfunction ImageLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( ImageLoader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tif ( url === undefined ) url = '';\r\n\r\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar cached = Cache.get( url );\r\n\r\n\t\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t\treturn cached;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\r\n\r\n\t\t\tfunction onImageLoad() {\r\n\r\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\r\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\r\n\r\n\t\t\t\tCache.add( url, this );\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onImageError( event ) {\r\n\r\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\r\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\r\n\r\n\t\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\timage.addEventListener( 'load', onImageLoad, false );\r\n\t\t\timage.addEventListener( 'error', onImageError, false );\r\n\r\n\t\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\r\n\r\n\t\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\timage.src = url;\r\n\r\n\t\t\treturn image;\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\r\n\tfunction CubeTextureLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( CubeTextureLoader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar texture = new CubeTexture();\r\n\r\n\t\t\tvar loader = new ImageLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setPath( this.path );\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\r\n\r\n\t\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\t\tloaded ++;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, undefined, onError );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\r\n\tfunction TextureLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( TextureLoader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar texture = new Texture();\r\n\r\n\t\t\tvar loader = new ImageLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setPath( this.path );\r\n\r\n\t\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\t\ttexture.image = image;\r\n\r\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\r\n\t\t\t\tvar isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\r\n\r\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Extensible curve object\r\n\t *\r\n\t * Some common of curve methods:\r\n\t * .getPoint( t, optionalTarget ), .getTangent( t )\r\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u )\r\n\t * .getPoints(), .getSpacedPoints()\r\n\t * .getLength()\r\n\t * .updateArcLengths()\r\n\t *\r\n\t * This following curves inherit from THREE.Curve:\r\n\t *\r\n\t * -- 2D curves --\r\n\t * THREE.ArcCurve\r\n\t * THREE.CubicBezierCurve\r\n\t * THREE.EllipseCurve\r\n\t * THREE.LineCurve\r\n\t * THREE.QuadraticBezierCurve\r\n\t * THREE.SplineCurve\r\n\t *\r\n\t * -- 3D curves --\r\n\t * THREE.CatmullRomCurve3\r\n\t * THREE.CubicBezierCurve3\r\n\t * THREE.LineCurve3\r\n\t * THREE.QuadraticBezierCurve3\r\n\t *\r\n\t * A series of curves can be represented as a THREE.CurvePath.\r\n\t *\r\n\t **/\r\n\r\n\t/**************************************************************\r\n\t *\tAbstract Curve base class\r\n\t **************************************************************/\r\n\r\n\tfunction Curve() {\r\n\r\n\t\tthis.type = 'Curve';\r\n\r\n\t\tthis.arcLengthDivisions = 200;\r\n\r\n\t}\r\n\r\n\tObject.assign( Curve.prototype, {\r\n\r\n\t\t// Virtual base class method to overwrite and implement in subclasses\r\n\t\t//\t- t [0 .. 1]\r\n\r\n\t\tgetPoint: function ( /* t, optionalTarget */ ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\r\n\t\t\treturn null;\r\n\r\n\t\t},\r\n\r\n\t\t// Get point at relative position in curve according to arc length\r\n\t\t// - u [0 .. 1]\r\n\r\n\t\tgetPointAt: function ( u, optionalTarget ) {\r\n\r\n\t\t\tvar t = this.getUtoTmapping( u );\r\n\t\t\treturn this.getPoint( t, optionalTarget );\r\n\r\n\t\t},\r\n\r\n\t\t// Get sequence of points using getPoint( t )\r\n\r\n\t\tgetPoints: function ( divisions ) {\r\n\r\n\t\t\tif ( divisions === undefined ) divisions = 5;\r\n\r\n\t\t\tvar points = [];\r\n\r\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\r\n\t\t},\r\n\r\n\t\t// Get sequence of points using getPointAt( u )\r\n\r\n\t\tgetSpacedPoints: function ( divisions ) {\r\n\r\n\t\t\tif ( divisions === undefined ) divisions = 5;\r\n\r\n\t\t\tvar points = [];\r\n\r\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\r\n\t\t},\r\n\r\n\t\t// Get total curve arc length\r\n\r\n\t\tgetLength: function () {\r\n\r\n\t\t\tvar lengths = this.getLengths();\r\n\t\t\treturn lengths[ lengths.length - 1 ];\r\n\r\n\t\t},\r\n\r\n\t\t// Get list of cumulative segment lengths\r\n\r\n\t\tgetLengths: function ( divisions ) {\r\n\r\n\t\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\r\n\r\n\t\t\tif ( this.cacheArcLengths &&\r\n\t\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\r\n\t\t\t\t! this.needsUpdate ) {\r\n\r\n\t\t\t\treturn this.cacheArcLengths;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.needsUpdate = false;\r\n\r\n\t\t\tvar cache = [];\r\n\t\t\tvar current, last = this.getPoint( 0 );\r\n\t\t\tvar p, sum = 0;\r\n\r\n\t\t\tcache.push( 0 );\r\n\r\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\t\t\tcurrent = this.getPoint( p / divisions );\r\n\t\t\t\tsum += current.distanceTo( last );\r\n\t\t\t\tcache.push( sum );\r\n\t\t\t\tlast = current;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cacheArcLengths = cache;\r\n\r\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\r\n\r\n\t\t},\r\n\r\n\t\tupdateArcLengths: function () {\r\n\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t\tthis.getLengths();\r\n\r\n\t\t},\r\n\r\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\n\t\tgetUtoTmapping: function ( u, distance ) {\r\n\r\n\t\t\tvar arcLengths = this.getLengths();\r\n\r\n\t\t\tvar i = 0, il = arcLengths.length;\r\n\r\n\t\t\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\t\t\tif ( distance ) {\r\n\r\n\t\t\t\ttargetArcLength = distance;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\t\t\tvar low = 0, high = il - 1, comparison;\r\n\r\n\t\t\twhile ( low <= high ) {\r\n\r\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\t\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\t\t\tlow = i + 1;\r\n\r\n\t\t\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\t\t\thigh = i - 1;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\thigh = i;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// DONE\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\ti = high;\r\n\r\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\t\t\treturn i / ( il - 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\t\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t\t\t// determine where we are between the 'before' and 'after' points\r\n\r\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t\t\t// add that fractional amount to t\r\n\r\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t},\r\n\r\n\t\t// Returns a unit vector tangent at t\r\n\t\t// In case any sub curve does not implement its tangent derivation,\r\n\t\t// 2 points a small delta apart will be used to find its gradient\r\n\t\t// which seems to give a reasonable approximation\r\n\r\n\t\tgetTangent: function ( t ) {\r\n\r\n\t\t\tvar delta = 0.0001;\r\n\t\t\tvar t1 = t - delta;\r\n\t\t\tvar t2 = t + delta;\r\n\r\n\t\t\t// Capping in case of danger\r\n\r\n\t\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\t\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\t\t\tvar pt1 = this.getPoint( t1 );\r\n\t\t\tvar pt2 = this.getPoint( t2 );\r\n\r\n\t\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\t\treturn vec.normalize();\r\n\r\n\t\t},\r\n\r\n\t\tgetTangentAt: function ( u ) {\r\n\r\n\t\t\tvar t = this.getUtoTmapping( u );\r\n\t\t\treturn this.getTangent( t );\r\n\r\n\t\t},\r\n\r\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\r\n\r\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\r\n\t\t\tvar normal = new Vector3();\r\n\r\n\t\t\tvar tangents = [];\r\n\t\t\tvar normals = [];\r\n\t\t\tvar binormals = [];\r\n\r\n\t\t\tvar vec = new Vector3();\r\n\t\t\tvar mat = new Matrix4();\r\n\r\n\t\t\tvar i, u, theta;\r\n\r\n\t\t\t// compute the tangent vectors for each segment on the curve\r\n\r\n\t\t\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\t\t\tu = i / segments;\r\n\r\n\t\t\t\ttangents[ i ] = this.getTangentAt( u );\r\n\t\t\t\ttangents[ i ].normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t\t// and in the direction of the minimum tangent xyz component\r\n\r\n\t\t\tnormals[ 0 ] = new Vector3();\r\n\t\t\tbinormals[ 0 ] = new Vector3();\r\n\t\t\tvar min = Number.MAX_VALUE;\r\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\r\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\r\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\t\tif ( tx <= min ) {\r\n\r\n\t\t\t\tmin = tx;\r\n\t\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ty <= min ) {\r\n\r\n\t\t\t\tmin = ty;\r\n\t\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tz <= min ) {\r\n\r\n\t\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\r\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\r\n\r\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\r\n\r\n\t\t\t\t\tvec.normalize();\r\n\r\n\t\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\t\t\tif ( closed === true ) {\r\n\r\n\t\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\r\n\t\t\t\ttheta /= segments;\r\n\r\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\r\n\r\n\t\t\t\t\ttheta = - theta;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\t\t\t\t// twist a little...\r\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\ttangents: tangents,\r\n\t\t\t\tnormals: normals,\r\n\t\t\t\tbinormals: binormals\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.5,\r\n\t\t\t\t\ttype: 'Curve',\r\n\t\t\t\t\tgenerator: 'Curve.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\r\n\t\t\tdata.type = this.type;\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tfromJSON: function ( json ) {\r\n\r\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'EllipseCurve';\r\n\r\n\t\tthis.aX = aX || 0;\r\n\t\tthis.aY = aY || 0;\r\n\r\n\t\tthis.xRadius = xRadius || 1;\r\n\t\tthis.yRadius = yRadius || 1;\r\n\r\n\t\tthis.aStartAngle = aStartAngle || 0;\r\n\t\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\r\n\r\n\t\tthis.aClockwise = aClockwise || false;\r\n\r\n\t\tthis.aRotation = aRotation || 0;\r\n\r\n\t}\r\n\r\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\r\n\tEllipseCurve.prototype.constructor = EllipseCurve;\r\n\r\n\tEllipseCurve.prototype.isEllipseCurve = true;\r\n\r\n\tEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector2();\r\n\r\n\t\tvar twoPi = Math.PI * 2;\r\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\r\n\r\n\t\t// ensures that deltaAngle is 0 .. 2 PI\r\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\r\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\r\n\r\n\t\tif ( deltaAngle < Number.EPSILON ) {\r\n\r\n\t\t\tif ( samePoints ) {\r\n\r\n\t\t\t\tdeltaAngle = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdeltaAngle = twoPi;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.aClockwise === true && ! samePoints ) {\r\n\r\n\t\t\tif ( deltaAngle === twoPi ) {\r\n\r\n\t\t\t\tdeltaAngle = - twoPi;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\r\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\t\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\t\tvar cos = Math.cos( this.aRotation );\r\n\t\t\tvar sin = Math.sin( this.aRotation );\r\n\r\n\t\t\tvar tx = x - this.aX;\r\n\t\t\tvar ty = y - this.aY;\r\n\r\n\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\tx = tx * cos - ty * sin + this.aX;\r\n\t\t\ty = tx * sin + ty * cos + this.aY;\r\n\r\n\t\t}\r\n\r\n\t\treturn point.set( x, y );\r\n\r\n\t};\r\n\r\n\tEllipseCurve.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.aX = source.aX;\r\n\t\tthis.aY = source.aY;\r\n\r\n\t\tthis.xRadius = source.xRadius;\r\n\t\tthis.yRadius = source.yRadius;\r\n\r\n\t\tthis.aStartAngle = source.aStartAngle;\r\n\t\tthis.aEndAngle = source.aEndAngle;\r\n\r\n\t\tthis.aClockwise = source.aClockwise;\r\n\r\n\t\tthis.aRotation = source.aRotation;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\r\n\tEllipseCurve.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.aX = this.aX;\r\n\t\tdata.aY = this.aY;\r\n\r\n\t\tdata.xRadius = this.xRadius;\r\n\t\tdata.yRadius = this.yRadius;\r\n\r\n\t\tdata.aStartAngle = this.aStartAngle;\r\n\t\tdata.aEndAngle = this.aEndAngle;\r\n\r\n\t\tdata.aClockwise = this.aClockwise;\r\n\r\n\t\tdata.aRotation = this.aRotation;\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tEllipseCurve.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.aX = json.aX;\r\n\t\tthis.aY = json.aY;\r\n\r\n\t\tthis.xRadius = json.xRadius;\r\n\t\tthis.yRadius = json.yRadius;\r\n\r\n\t\tthis.aStartAngle = json.aStartAngle;\r\n\t\tthis.aEndAngle = json.aEndAngle;\r\n\r\n\t\tthis.aClockwise = json.aClockwise;\r\n\r\n\t\tthis.aRotation = json.aRotation;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n\t\tthis.type = 'ArcCurve';\r\n\r\n\t}\r\n\r\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\r\n\tArcCurve.prototype.constructor = ArcCurve;\r\n\r\n\tArcCurve.prototype.isArcCurve = true;\n\n\t/**\r\n\t * @author zz85 https://github.com/zz85\r\n\t *\r\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\r\n\t * cusps and self-intersections in non-uniform catmull rom curves.\r\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n\t *\r\n\t * curve.type accepts centripetal(default), chordal and catmullrom\r\n\t * curve.tension is used for catmullrom which defaults to 0.5\r\n\t */\r\n\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\r\n\t\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\r\n\r\n\t\t/*\r\n\t\t * Compute coefficients for a cubic polynomial\r\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t\t * such that\r\n\t\t *   p(0) = x0, p(1) = x1\r\n\t\t *  and\r\n\t\t *   p'(0) = t0, p'(1) = t1.\r\n\t\t */\r\n\t\tfunction init( x0, x1, t0, t1 ) {\r\n\r\n\t\t\tc0 = x0;\r\n\t\t\tc1 = t0;\r\n\t\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\r\n\r\n\t\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t\t\t},\r\n\r\n\t\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t\t\t// rescale tangents for parametrization in [0,1]\r\n\t\t\t\tt1 *= dt1;\r\n\t\t\t\tt2 *= dt1;\r\n\r\n\t\t\t\tinit( x1, x2, t1, t2 );\r\n\r\n\t\t\t},\r\n\r\n\t\t\tcalc: function ( t ) {\r\n\r\n\t\t\t\tvar t2 = t * t;\r\n\t\t\t\tvar t3 = t2 * t;\r\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar tmp = new Vector3();\r\n\tvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\r\n\r\n\tfunction CatmullRomCurve3( points, closed, curveType, tension ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'CatmullRomCurve3';\r\n\r\n\t\tthis.points = points || [];\r\n\t\tthis.closed = closed || false;\r\n\t\tthis.curveType = curveType || 'centripetal';\r\n\t\tthis.tension = tension || 0.5;\r\n\r\n\t}\r\n\r\n\tCatmullRomCurve3.prototype = Object.create( Curve.prototype );\r\n\tCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\r\n\r\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\r\n\r\n\tCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector3();\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar l = points.length;\r\n\r\n\t\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\r\n\t\tvar intPoint = Math.floor( p );\r\n\t\tvar weight = p - intPoint;\r\n\r\n\t\tif ( this.closed ) {\r\n\r\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\r\n\r\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\tintPoint = l - 2;\r\n\t\t\tweight = 1;\r\n\r\n\t\t}\r\n\r\n\t\tvar p0, p1, p2, p3; // 4 points\r\n\r\n\t\tif ( this.closed || intPoint > 0 ) {\r\n\r\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// extrapolate first point\r\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\tp0 = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tp1 = points[ intPoint % l ];\r\n\t\tp2 = points[ ( intPoint + 1 ) % l ];\r\n\r\n\t\tif ( this.closed || intPoint + 2 < l ) {\r\n\r\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// extrapolate last point\r\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\r\n\t\t\tp3 = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\r\n\r\n\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\r\n\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t// safety check for repeated points\r\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t} else if ( this.curveType === 'catmullrom' ) {\r\n\r\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\r\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\r\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\r\n\r\n\t\t}\r\n\r\n\t\tpoint.set(\r\n\t\t\tpx.calc( weight ),\r\n\t\t\tpy.calc( weight ),\r\n\t\t\tpz.calc( weight )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tCatmullRomCurve3.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = source.points[ i ];\r\n\r\n\t\t\tthis.points.push( point.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.closed = source.closed;\r\n\t\tthis.curveType = source.curveType;\r\n\t\tthis.tension = source.tension;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tCatmullRomCurve3.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.points = [];\r\n\r\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = this.points[ i ];\r\n\t\t\tdata.points.push( point.toArray() );\r\n\r\n\t\t}\r\n\r\n\t\tdata.closed = this.closed;\r\n\t\tdata.curveType = this.curveType;\r\n\t\tdata.tension = this.tension;\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tCatmullRomCurve3.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = json.points[ i ];\r\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.closed = json.closed;\r\n\t\tthis.curveType = json.curveType;\r\n\t\tthis.tension = json.tension;\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t * Bezier Curves formulas obtained from\r\n\t * http://en.wikipedia.org/wiki/Bézier_curve\r\n\t */\r\n\r\n\tfunction CatmullRom( t, p0, p1, p2, p3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction QuadraticBezierP0( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * p;\r\n\r\n\t}\r\n\r\n\tfunction QuadraticBezierP1( t, p ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t}\r\n\r\n\tfunction QuadraticBezierP2( t, p ) {\r\n\r\n\t\treturn t * t * p;\r\n\r\n\t}\r\n\r\n\tfunction QuadraticBezier( t, p0, p1, p2 ) {\r\n\r\n\t\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\r\n\t\t\tQuadraticBezierP2( t, p2 );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction CubicBezierP0( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\r\n\t}\r\n\r\n\tfunction CubicBezierP1( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\r\n\t}\r\n\r\n\tfunction CubicBezierP2( t, p ) {\r\n\r\n\t\treturn 3 * ( 1 - t ) * t * t * p;\r\n\r\n\t}\r\n\r\n\tfunction CubicBezierP3( t, p ) {\r\n\r\n\t\treturn t * t * t * p;\r\n\r\n\t}\r\n\r\n\tfunction CubicBezier( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\r\n\t\t\tCubicBezierP3( t, p3 );\r\n\r\n\t}\n\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'CubicBezierCurve';\r\n\r\n\t\tthis.v0 = v0 || new Vector2();\r\n\t\tthis.v1 = v1 || new Vector2();\r\n\t\tthis.v2 = v2 || new Vector2();\r\n\t\tthis.v3 = v3 || new Vector2();\r\n\r\n\t}\r\n\r\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\r\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\r\n\r\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\r\n\r\n\tCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector2();\r\n\r\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\r\n\r\n\t\tpoint.set(\r\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\r\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\t\tthis.v3.copy( source.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\t\tdata.v3 = this.v3.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\t\tthis.v3.fromArray( json.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\tfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'CubicBezierCurve3';\r\n\r\n\t\tthis.v0 = v0 || new Vector3();\r\n\t\tthis.v1 = v1 || new Vector3();\r\n\t\tthis.v2 = v2 || new Vector3();\r\n\t\tthis.v3 = v3 || new Vector3();\r\n\r\n\t}\r\n\r\n\tCubicBezierCurve3.prototype = Object.create( Curve.prototype );\r\n\tCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\r\n\r\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\r\n\r\n\tCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector3();\r\n\r\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\r\n\r\n\t\tpoint.set(\r\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\r\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\r\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve3.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\t\tthis.v3.copy( source.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve3.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\t\tdata.v3 = this.v3.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tCubicBezierCurve3.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\t\tthis.v3.fromArray( json.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\tfunction LineCurve( v1, v2 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'LineCurve';\r\n\r\n\t\tthis.v1 = v1 || new Vector2();\r\n\t\tthis.v2 = v2 || new Vector2();\r\n\r\n\t}\r\n\r\n\tLineCurve.prototype = Object.create( Curve.prototype );\r\n\tLineCurve.prototype.constructor = LineCurve;\r\n\r\n\tLineCurve.prototype.isLineCurve = true;\r\n\r\n\tLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector2();\r\n\r\n\t\tif ( t === 1 ) {\r\n\r\n\t\t\tpoint.copy( this.v2 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\r\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\r\n\tLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\r\n\r\n\t\treturn this.getPoint( u, optionalTarget );\r\n\r\n\t};\r\n\r\n\tLineCurve.prototype.getTangent = function ( /* t */ ) {\r\n\r\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n\t\treturn tangent.normalize();\r\n\r\n\t};\r\n\r\n\tLineCurve.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tLineCurve.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tLineCurve.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\tfunction LineCurve3( v1, v2 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'LineCurve3';\r\n\r\n\t\tthis.v1 = v1 || new Vector3();\r\n\t\tthis.v2 = v2 || new Vector3();\r\n\r\n\t}\r\n\r\n\tLineCurve3.prototype = Object.create( Curve.prototype );\r\n\tLineCurve3.prototype.constructor = LineCurve3;\r\n\r\n\tLineCurve3.prototype.isLineCurve3 = true;\r\n\r\n\tLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector3();\r\n\r\n\t\tif ( t === 1 ) {\r\n\r\n\t\t\tpoint.copy( this.v2 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\r\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\r\n\tLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\r\n\r\n\t\treturn this.getPoint( u, optionalTarget );\r\n\r\n\t};\r\n\r\n\tLineCurve3.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tLineCurve3.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tLineCurve3.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'QuadraticBezierCurve';\r\n\r\n\t\tthis.v0 = v0 || new Vector2();\r\n\t\tthis.v1 = v1 || new Vector2();\r\n\t\tthis.v2 = v2 || new Vector2();\r\n\r\n\t}\r\n\r\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\r\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\r\n\r\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\r\n\r\n\tQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector2();\r\n\r\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\r\n\r\n\t\tpoint.set(\r\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\r\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\tfunction QuadraticBezierCurve3( v0, v1, v2 ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'QuadraticBezierCurve3';\r\n\r\n\t\tthis.v0 = v0 || new Vector3();\r\n\t\tthis.v1 = v1 || new Vector3();\r\n\t\tthis.v2 = v2 || new Vector3();\r\n\r\n\t}\r\n\r\n\tQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\r\n\tQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\r\n\r\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\r\n\r\n\tQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector3();\r\n\r\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\r\n\r\n\t\tpoint.set(\r\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\r\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\r\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve3.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve3.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'SplineCurve';\r\n\r\n\t\tthis.points = points || [];\r\n\r\n\t}\r\n\r\n\tSplineCurve.prototype = Object.create( Curve.prototype );\r\n\tSplineCurve.prototype.constructor = SplineCurve;\r\n\r\n\tSplineCurve.prototype.isSplineCurve = true;\r\n\r\n\tSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\t\tvar point = optionalTarget || new Vector2();\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar p = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( p );\r\n\t\tvar weight = p - intPoint;\r\n\r\n\t\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar p1 = points[ intPoint ];\r\n\t\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tpoint.set(\r\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\r\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t};\r\n\r\n\tSplineCurve.prototype.copy = function ( source ) {\r\n\r\n\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = source.points[ i ];\r\n\r\n\t\t\tthis.points.push( point.clone() );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tSplineCurve.prototype.toJSON = function () {\r\n\r\n\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\tdata.points = [];\r\n\r\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = this.points[ i ];\r\n\t\t\tdata.points.push( point.toArray() );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t};\r\n\r\n\tSplineCurve.prototype.fromJSON = function ( json ) {\r\n\r\n\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = json.points[ i ];\r\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t};\n\n\n\n\tvar Curves = /*#__PURE__*/Object.freeze({\n\t\tArcCurve: ArcCurve,\n\t\tCatmullRomCurve3: CatmullRomCurve3,\n\t\tCubicBezierCurve: CubicBezierCurve,\n\t\tCubicBezierCurve3: CubicBezierCurve3,\n\t\tEllipseCurve: EllipseCurve,\n\t\tLineCurve: LineCurve,\n\t\tLineCurve3: LineCurve3,\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\t\tSplineCurve: SplineCurve\n\t});\n\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t **/\r\n\r\n\t/**************************************************************\r\n\t *\tCurved Path - a curve path is simply a array of connected\r\n\t *  curves, but retains the api of a curve\r\n\t **************************************************************/\r\n\r\n\tfunction CurvePath() {\r\n\r\n\t\tCurve.call( this );\r\n\r\n\t\tthis.type = 'CurvePath';\r\n\r\n\t\tthis.curves = [];\r\n\t\tthis.autoClose = false; // Automatically closes the path\r\n\r\n\t}\r\n\r\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\r\n\r\n\t\tconstructor: CurvePath,\r\n\r\n\t\tadd: function ( curve ) {\r\n\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t},\r\n\r\n\t\tclosePath: function () {\r\n\r\n\t\t\t// Add a line curve if start and end of lines are not connected\r\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// To get accurate point with reference to\r\n\t\t// entire path distance at time t,\r\n\t\t// following has to be done:\r\n\r\n\t\t// 1. Length of each sub path have to be known\r\n\t\t// 2. Locate and identify type of curve\r\n\t\t// 3. Get t for the curve\r\n\t\t// 4. Return curve.getPointAt(t')\r\n\r\n\t\tgetPoint: function ( t ) {\r\n\r\n\t\t\tvar d = t * this.getLength();\r\n\t\t\tvar curveLengths = this.getCurveLengths();\r\n\t\t\tvar i = 0;\r\n\r\n\t\t\t// To think about boundaries points.\r\n\r\n\t\t\twhile ( i < curveLengths.length ) {\r\n\r\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\r\n\t\t\t\t\tvar curve = this.curves[ i ];\r\n\r\n\t\t\t\t\tvar segmentLength = curve.getLength();\r\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\r\n\r\n\t\t\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n\t\t},\r\n\r\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t\t// getPoint() depends on getLength\r\n\r\n\t\tgetLength: function () {\r\n\r\n\t\t\tvar lens = this.getCurveLengths();\r\n\t\t\treturn lens[ lens.length - 1 ];\r\n\r\n\t\t},\r\n\r\n\t\t// cacheLengths must be recalculated.\r\n\t\tupdateArcLengths: function () {\r\n\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t\tthis.cacheLengths = null;\r\n\t\t\tthis.getCurveLengths();\r\n\r\n\t\t},\r\n\r\n\t\t// Compute lengths and cache them\r\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\n\t\tgetCurveLengths: function () {\r\n\r\n\t\t\t// We use cache values if curves and cache array are same length\r\n\r\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\t\t\treturn this.cacheLengths;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Get length of sub-curve\r\n\t\t\t// Push sums into cached array\r\n\r\n\t\t\tvar lengths = [], sums = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\t\tlengths.push( sums );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cacheLengths = lengths;\r\n\r\n\t\t\treturn lengths;\r\n\r\n\t\t},\r\n\r\n\t\tgetSpacedPoints: function ( divisions ) {\r\n\r\n\t\t\tif ( divisions === undefined ) divisions = 40;\r\n\r\n\t\t\tvar points = [];\r\n\r\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\r\n\r\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.autoClose ) {\r\n\r\n\t\t\t\tpoints.push( points[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\r\n\t\t},\r\n\r\n\t\tgetPoints: function ( divisions ) {\r\n\r\n\t\t\tdivisions = divisions || 12;\r\n\r\n\t\t\tvar points = [], last;\r\n\r\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\r\n\r\n\t\t\t\tvar curve = curves[ i ];\r\n\t\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\r\n\t\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\r\n\t\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\r\n\t\t\t\t\t\t\t: divisions;\r\n\r\n\t\t\t\tvar pts = curve.getPoints( resolution );\r\n\r\n\t\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\r\n\r\n\t\t\t\t\tvar point = pts[ j ];\r\n\r\n\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\r\n\r\n\t\t\t\t\tpoints.push( point );\r\n\t\t\t\t\tlast = point;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\r\n\r\n\t\t\t\tpoints.push( points[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn points;\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tCurve.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.curves = [];\r\n\r\n\t\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar curve = source.curves[ i ];\r\n\r\n\t\t\t\tthis.curves.push( curve.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.autoClose = source.autoClose;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = Curve.prototype.toJSON.call( this );\r\n\r\n\t\t\tdata.autoClose = this.autoClose;\r\n\t\t\tdata.curves = [];\r\n\r\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar curve = this.curves[ i ];\r\n\t\t\t\tdata.curves.push( curve.toJSON() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tfromJSON: function ( json ) {\r\n\r\n\t\t\tCurve.prototype.fromJSON.call( this, json );\r\n\r\n\t\t\tthis.autoClose = json.autoClose;\r\n\t\t\tthis.curves = [];\r\n\r\n\t\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar curve = json.curves[ i ];\r\n\t\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Creates free form 2d path using series of points, lines or curves.\r\n\t **/\r\n\r\n\tfunction Path( points ) {\r\n\r\n\t\tCurvePath.call( this );\r\n\r\n\t\tthis.type = 'Path';\r\n\r\n\t\tthis.currentPoint = new Vector2();\r\n\r\n\t\tif ( points ) {\r\n\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\r\n\r\n\t\tconstructor: Path,\r\n\r\n\t\tsetFromPoints: function ( points ) {\r\n\r\n\t\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\r\n\r\n\t\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tmoveTo: function ( x, y ) {\r\n\r\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\r\n\r\n\t\t},\r\n\r\n\t\tlineTo: function ( x, y ) {\r\n\r\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t\tthis.currentPoint.set( x, y );\r\n\r\n\t\t},\r\n\r\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\r\n\r\n\t\t\tvar curve = new QuadraticBezierCurve(\r\n\t\t\t\tthis.currentPoint.clone(),\r\n\t\t\t\tnew Vector2( aCPx, aCPy ),\r\n\t\t\t\tnew Vector2( aX, aY )\r\n\t\t\t);\r\n\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t\tthis.currentPoint.set( aX, aY );\r\n\r\n\t\t},\r\n\r\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\r\n\t\t\tvar curve = new CubicBezierCurve(\r\n\t\t\t\tthis.currentPoint.clone(),\r\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\r\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\r\n\t\t\t\tnew Vector2( aX, aY )\r\n\t\t\t);\r\n\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t\tthis.currentPoint.set( aX, aY );\r\n\r\n\t\t},\r\n\r\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\r\n\r\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\r\n\r\n\t\t\tvar curve = new SplineCurve( npts );\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\r\n\r\n\t\t},\r\n\r\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\t\tvar x0 = this.currentPoint.x;\r\n\t\t\tvar y0 = this.currentPoint.y;\r\n\r\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n\t\t},\r\n\r\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n\t\t},\r\n\r\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\t\tvar x0 = this.currentPoint.x;\r\n\t\t\tvar y0 = this.currentPoint.y;\r\n\r\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n\t\t},\r\n\r\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n\t\t\tif ( this.curves.length > 0 ) {\r\n\r\n\t\t\t\t// if a previous curve is present, attempt to join\r\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\r\n\r\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\r\n\r\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.curves.push( curve );\r\n\r\n\t\t\tvar lastPoint = curve.getPoint( 1 );\r\n\t\t\tthis.currentPoint.copy( lastPoint );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tCurvePath.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.currentPoint.copy( source.currentPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = CurvePath.prototype.toJSON.call( this );\r\n\r\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tfromJSON: function ( json ) {\r\n\r\n\t\t\tCurvePath.prototype.fromJSON.call( this, json );\r\n\r\n\t\t\tthis.currentPoint.fromArray( json.currentPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Defines a 2d shape plane using paths.\r\n\t **/\r\n\r\n\t// STEP 1 Create a path.\r\n\t// STEP 2 Turn path into shape.\r\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n\t// STEP 3a - Extract points from each shape, turn to vertices\r\n\t// STEP 3b - Triangulate each shape, add faces.\r\n\r\n\tfunction Shape( points ) {\r\n\r\n\t\tPath.call( this, points );\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\tthis.type = 'Shape';\r\n\r\n\t\tthis.holes = [];\r\n\r\n\t}\r\n\r\n\tShape.prototype = Object.assign( Object.create( Path.prototype ), {\r\n\r\n\t\tconstructor: Shape,\r\n\r\n\t\tgetPointsHoles: function ( divisions ) {\r\n\r\n\t\t\tvar holesPts = [];\r\n\r\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn holesPts;\r\n\r\n\t\t},\r\n\r\n\t\t// get points of shape and holes (keypoints based on segments parameter)\r\n\r\n\t\textractPoints: function ( divisions ) {\r\n\r\n\t\t\treturn {\r\n\r\n\t\t\t\tshape: this.getPoints( divisions ),\r\n\t\t\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tPath.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.holes = [];\r\n\r\n\t\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar hole = source.holes[ i ];\r\n\r\n\t\t\t\tthis.holes.push( hole.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar data = Path.prototype.toJSON.call( this );\r\n\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.holes = [];\r\n\r\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar hole = this.holes[ i ];\r\n\t\t\t\tdata.holes.push( hole.toJSON() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t},\r\n\r\n\t\tfromJSON: function ( json ) {\r\n\r\n\t\t\tPath.prototype.fromJSON.call( this, json );\r\n\r\n\t\t\tthis.uuid = json.uuid;\r\n\t\t\tthis.holes = [];\r\n\r\n\t\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar hole = json.holes[ i ];\r\n\t\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Light( color, intensity ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Light';\r\n\r\n\t\tthis.color = new Color( color );\r\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\r\n\r\n\t\tthis.receiveShadow = undefined;\r\n\r\n\t}\r\n\r\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Light,\r\n\r\n\t\tisLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tObject3D.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.color.copy( source.color );\r\n\t\t\tthis.intensity = source.intensity;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tdata.object.color = this.color.getHex();\r\n\t\t\tdata.object.intensity = this.intensity;\r\n\r\n\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\r\n\r\n\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\r\n\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\r\n\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\r\n\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\r\n\r\n\t\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\r\n\r\n\t\tLight.call( this, skyColor, intensity );\r\n\r\n\t\tthis.type = 'HemisphereLight';\r\n\r\n\t\tthis.castShadow = undefined;\r\n\r\n\t\tthis.position.copy( Object3D.DefaultUp );\r\n\t\tthis.updateMatrix();\r\n\r\n\t\tthis.groundColor = new Color( groundColor );\r\n\r\n\t}\r\n\r\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: HemisphereLight,\r\n\r\n\t\tisHemisphereLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLight.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.groundColor.copy( source.groundColor );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction LightShadow( camera ) {\r\n\r\n\t\tthis.camera = camera;\r\n\r\n\t\tthis.bias = 0;\r\n\t\tthis.radius = 1;\r\n\r\n\t\tthis.mapSize = new Vector2( 512, 512 );\r\n\r\n\t\tthis.map = null;\r\n\t\tthis.matrix = new Matrix4();\r\n\r\n\t}\r\n\r\n\tObject.assign( LightShadow.prototype, {\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tthis.camera = source.camera.clone();\r\n\r\n\t\t\tthis.bias = source.bias;\r\n\t\t\tthis.radius = source.radius;\r\n\r\n\t\t\tthis.mapSize.copy( source.mapSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function () {\r\n\r\n\t\t\tvar object = {};\r\n\r\n\t\t\tif ( this.bias !== 0 ) object.bias = this.bias;\r\n\t\t\tif ( this.radius !== 1 ) object.radius = this.radius;\r\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\r\n\r\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\r\n\t\t\tdelete object.camera.matrix;\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction SpotLightShadow() {\r\n\r\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\r\n\r\n\t}\r\n\r\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\r\n\r\n\t\tconstructor: SpotLightShadow,\r\n\r\n\t\tisSpotLightShadow: true,\r\n\r\n\t\tupdate: function ( light ) {\r\n\r\n\t\t\tvar camera = this.camera;\r\n\r\n\t\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\r\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\r\n\t\t\tvar far = light.distance || camera.far;\r\n\r\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\r\n\r\n\t\t\t\tcamera.fov = fov;\r\n\t\t\t\tcamera.aspect = aspect;\r\n\t\t\t\tcamera.far = far;\r\n\t\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\r\n\r\n\t\tLight.call( this, color, intensity );\r\n\r\n\t\tthis.type = 'SpotLight';\r\n\r\n\t\tthis.position.copy( Object3D.DefaultUp );\r\n\t\tthis.updateMatrix();\r\n\r\n\t\tthis.target = new Object3D();\r\n\r\n\t\tObject.defineProperty( this, 'power', {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\t// intensity = power per solid angle.\r\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\t\treturn this.intensity * Math.PI;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( power ) {\r\n\r\n\t\t\t\t// intensity = power per solid angle.\r\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\t\tthis.intensity = power / Math.PI;\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\t\tthis.shadow = new SpotLightShadow();\r\n\r\n\t}\r\n\r\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: SpotLight,\r\n\r\n\t\tisSpotLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLight.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.distance = source.distance;\r\n\t\t\tthis.angle = source.angle;\r\n\t\t\tthis.penumbra = source.penumbra;\r\n\t\t\tthis.decay = source.decay;\r\n\r\n\t\t\tthis.target = source.target.clone();\r\n\r\n\t\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\r\n\tfunction PointLight( color, intensity, distance, decay ) {\r\n\r\n\t\tLight.call( this, color, intensity );\r\n\r\n\t\tthis.type = 'PointLight';\r\n\r\n\t\tObject.defineProperty( this, 'power', {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\t// intensity = power per solid angle.\r\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\t\treturn this.intensity * 4 * Math.PI;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( power ) {\r\n\r\n\t\t\t\t// intensity = power per solid angle.\r\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\t\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\r\n\r\n\t}\r\n\r\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: PointLight,\r\n\r\n\t\tisPointLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLight.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.distance = source.distance;\r\n\t\t\tthis.decay = source.decay;\r\n\r\n\t\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author arose / http://github.com/arose\r\n\t */\r\n\r\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\r\n\r\n\t\tCamera.call( this );\r\n\r\n\t\tthis.type = 'OrthographicCamera';\r\n\r\n\t\tthis.zoom = 1;\r\n\t\tthis.view = null;\r\n\r\n\t\tthis.left = ( left !== undefined ) ? left : - 1;\r\n\t\tthis.right = ( right !== undefined ) ? right : 1;\r\n\t\tthis.top = ( top !== undefined ) ? top : 1;\r\n\t\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\r\n\r\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\r\n\r\n\t\tconstructor: OrthographicCamera,\r\n\r\n\t\tisOrthographicCamera: true,\r\n\r\n\t\tcopy: function ( source, recursive ) {\r\n\r\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\r\n\r\n\t\t\tthis.left = source.left;\r\n\t\t\tthis.right = source.right;\r\n\t\t\tthis.top = source.top;\r\n\t\t\tthis.bottom = source.bottom;\r\n\t\t\tthis.near = source.near;\r\n\t\t\tthis.far = source.far;\r\n\r\n\t\t\tthis.zoom = source.zoom;\r\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\t\t\tif ( this.view === null ) {\r\n\r\n\t\t\t\tthis.view = {\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tfullWidth: 1,\r\n\t\t\t\t\tfullHeight: 1,\r\n\t\t\t\t\toffsetX: 0,\r\n\t\t\t\t\toffsetY: 0,\r\n\t\t\t\t\twidth: 1,\r\n\t\t\t\t\theight: 1\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.view.enabled = true;\r\n\t\t\tthis.view.fullWidth = fullWidth;\r\n\t\t\tthis.view.fullHeight = fullHeight;\r\n\t\t\tthis.view.offsetX = x;\r\n\t\t\tthis.view.offsetY = y;\r\n\t\t\tthis.view.width = width;\r\n\t\t\tthis.view.height = height;\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\r\n\t\t},\r\n\r\n\t\tclearViewOffset: function () {\r\n\r\n\t\t\tif ( this.view !== null ) {\r\n\r\n\t\t\t\tthis.view.enabled = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateProjectionMatrix();\r\n\r\n\t\t},\r\n\r\n\t\tupdateProjectionMatrix: function () {\r\n\r\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\t\tvar cx = ( this.right + this.left ) / 2;\r\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\t\t\tvar left = cx - dx;\r\n\t\t\tvar right = cx + dx;\r\n\t\t\tvar top = cy + dy;\r\n\t\t\tvar bottom = cy - dy;\r\n\r\n\t\t\tif ( this.view !== null && this.view.enabled ) {\r\n\r\n\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\r\n\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\r\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\r\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\r\n\r\n\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\r\n\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\r\n\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\r\n\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\r\n\r\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tdata.object.zoom = this.zoom;\r\n\t\t\tdata.object.left = this.left;\r\n\t\t\tdata.object.right = this.right;\r\n\t\t\tdata.object.top = this.top;\r\n\t\t\tdata.object.bottom = this.bottom;\r\n\t\t\tdata.object.near = this.near;\r\n\t\t\tdata.object.far = this.far;\r\n\r\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction DirectionalLightShadow( ) {\r\n\r\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\r\n\r\n\t}\r\n\r\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\r\n\r\n\t\tconstructor: DirectionalLightShadow\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction DirectionalLight( color, intensity ) {\r\n\r\n\t\tLight.call( this, color, intensity );\r\n\r\n\t\tthis.type = 'DirectionalLight';\r\n\r\n\t\tthis.position.copy( Object3D.DefaultUp );\r\n\t\tthis.updateMatrix();\r\n\r\n\t\tthis.target = new Object3D();\r\n\r\n\t\tthis.shadow = new DirectionalLightShadow();\r\n\r\n\t}\r\n\r\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: DirectionalLight,\r\n\r\n\t\tisDirectionalLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLight.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.target = source.target.clone();\r\n\r\n\t\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction AmbientLight( color, intensity ) {\r\n\r\n\t\tLight.call( this, color, intensity );\r\n\r\n\t\tthis.type = 'AmbientLight';\r\n\r\n\t\tthis.castShadow = undefined;\r\n\r\n\t}\r\n\r\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: AmbientLight,\r\n\r\n\t\tisAmbientLight: true\r\n\r\n\t} );\n\n\t/**\r\n\t * @author abelnation / http://github.com/abelnation\r\n\t */\r\n\r\n\tfunction RectAreaLight( color, intensity, width, height ) {\r\n\r\n\t\tLight.call( this, color, intensity );\r\n\r\n\t\tthis.type = 'RectAreaLight';\r\n\r\n\t\tthis.width = ( width !== undefined ) ? width : 10;\r\n\t\tthis.height = ( height !== undefined ) ? height : 10;\r\n\r\n\t}\r\n\r\n\tRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n\t\tconstructor: RectAreaLight,\r\n\r\n\t\tisRectAreaLight: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLight.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoJSON: function ( meta ) {\r\n\r\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\r\n\r\n\t\t\tdata.object.width = this.width;\r\n\t\t\tdata.object.height = this.height;\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction MaterialLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\t\tthis.textures = {};\r\n\r\n\t}\r\n\r\n\tObject.assign( MaterialLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar loader = new FileLoader( scope.manager );\r\n\t\t\tloader.setPath( scope.path );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( json ) {\r\n\r\n\t\t\tvar textures = this.textures;\r\n\r\n\t\t\tfunction getTexture( name ) {\r\n\r\n\t\t\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn textures[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar material = new Materials[ json.type ]();\r\n\r\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\r\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\r\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\r\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\r\n\t\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\r\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\t\tif ( json.fog !== undefined ) material.fog = json.fog;\r\n\t\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\r\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\t\tif ( json.combine !== undefined ) material.combine = json.combine;\r\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\r\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\r\n\t\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\r\n\r\n\t\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\r\n\r\n\t\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\r\n\t\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\r\n\t\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\r\n\t\t\tif ( json.scale !== undefined ) material.scale = json.scale;\r\n\r\n\t\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\r\n\t\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\r\n\t\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\r\n\r\n\t\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\r\n\t\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\r\n\t\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\r\n\r\n\t\t\tif ( json.visible !== undefined ) material.visible = json.visible;\r\n\t\t\tif ( json.userData !== undefined ) material.userData = json.userData;\r\n\r\n\t\t\t// Shader Material\r\n\r\n\t\t\tif ( json.uniforms !== undefined ) {\r\n\r\n\t\t\t\tfor ( var name in json.uniforms ) {\r\n\r\n\t\t\t\t\tvar uniform = json.uniforms[ name ];\r\n\r\n\t\t\t\t\tmaterial.uniforms[ name ] = {};\r\n\r\n\t\t\t\t\tswitch ( uniform.type ) {\r\n\r\n\t\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'v2':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'v3':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'v4':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'm3':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\r\n\r\n\t\t\t\t\t\tcase 'm4':\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.defines !== undefined ) material.defines = json.defines;\r\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\r\n\t\t\tif ( json.extensions !== undefined ) {\r\n\r\n\t\t\t\tfor ( var key in json.extensions ) {\r\n\r\n\t\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Deprecated\r\n\r\n\t\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\r\n\r\n\t\t\t// for PointsMaterial\r\n\r\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t\t// maps\r\n\r\n\t\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\r\n\t\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\r\n\r\n\t\t\tif ( json.alphaMap !== undefined ) {\r\n\r\n\t\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\r\n\t\t\t\tmaterial.transparent = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\r\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\r\n\t\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\r\n\t\t\tif ( json.normalScale !== undefined ) {\r\n\r\n\t\t\t\tvar normalScale = json.normalScale;\r\n\r\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\r\n\r\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\r\n\r\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\r\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\r\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\r\n\r\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\r\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\r\n\r\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\r\n\r\n\t\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\r\n\t\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\r\n\r\n\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\r\n\r\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\r\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\r\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetTextures: function ( value ) {\r\n\r\n\t\t\tthis.textures = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author Don McCurdy / https://www.donmccurdy.com\r\n\t */\r\n\r\n\tvar LoaderUtils = {\r\n\r\n\t\tdecodeText: function ( array ) {\r\n\r\n\t\t\tif ( typeof TextDecoder !== 'undefined' ) {\r\n\r\n\t\t\t\treturn new TextDecoder().decode( array );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\r\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\r\n\r\n\t\t\tvar s = '';\r\n\r\n\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t// Implicitly assumes little-endian.\r\n\t\t\t\ts += String.fromCharCode( array[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Merges multi-byte utf-8 characters.\r\n\t\t\treturn decodeURIComponent( escape( s ) );\r\n\r\n\t\t},\r\n\r\n\t\textractUrlBase: function ( url ) {\r\n\r\n\t\t\tvar index = url.lastIndexOf( '/' );\r\n\r\n\t\t\tif ( index === - 1 ) return './';\r\n\r\n\t\t\treturn url.substr( 0, index + 1 );\r\n\r\n\t\t}\r\n\r\n\t};\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction BufferGeometryLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( BufferGeometryLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar loader = new FileLoader( scope.manager );\r\n\t\t\tloader.setPath( scope.path );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( json ) {\r\n\r\n\t\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\t\tvar index = json.data.index;\r\n\r\n\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\r\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attributes = json.data.attributes;\r\n\r\n\t\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\r\n\r\n\t\t\t\tvar bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\r\n\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\r\n\t\t\t\tgeometry.addAttribute( key, bufferAttribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphAttributes = json.data.morphAttributes;\r\n\r\n\t\t\tif ( morphAttributes ) {\r\n\r\n\t\t\t\tfor ( var key in morphAttributes ) {\r\n\r\n\t\t\t\t\tvar attributeArray = morphAttributes[ key ];\r\n\r\n\t\t\t\t\tvar array = [];\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar attribute = attributeArray[ i ];\r\n\t\t\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\r\n\r\n\t\t\t\t\t\tvar bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\r\n\t\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\r\n\t\t\t\t\t\tarray.push( bufferAttribute );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.morphAttributes[ key ] = array;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\t\tvar center = new Vector3();\r\n\r\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.name ) geometry.name = json.name;\r\n\t\t\tif ( json.userData ) geometry.userData = json.userData;\r\n\r\n\t\t\treturn geometry;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tvar TYPED_ARRAYS = {\r\n\t\tInt8Array: Int8Array,\r\n\t\tUint8Array: Uint8Array,\r\n\t\t// Workaround for IE11 pre KB2929437. See #11440\r\n\t\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\r\n\t\tInt16Array: Int16Array,\r\n\t\tUint16Array: Uint16Array,\r\n\t\tInt32Array: Int32Array,\r\n\t\tUint32Array: Uint32Array,\r\n\t\tFloat32Array: Float32Array,\r\n\t\tFloat64Array: Float64Array\r\n\t};\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction ObjectLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\t\tthis.resourcePath = '';\r\n\r\n\t}\r\n\r\n\tObject.assign( ObjectLoader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path;\r\n\t\t\tthis.resourcePath = this.resourcePath || path;\r\n\r\n\t\t\tvar loader = new FileLoader( scope.manager );\r\n\t\t\tloader.setPath( this.path );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\tvar json = null;\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tjson = JSON.parse( text );\r\n\r\n\t\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\t\tif ( onError !== undefined ) onError( error );\r\n\r\n\t\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\r\n\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.parse( json, onLoad );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetResourcePath: function ( value ) {\r\n\r\n\t\t\tthis.resourcePath = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( json, onLoad ) {\r\n\r\n\t\t\tvar shapes = this.parseShape( json.shapes );\r\n\t\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\r\n\r\n\t\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tvar textures = this.parseTextures( json.textures, images );\r\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\r\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\t\tif ( json.animations ) {\r\n\r\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t},\r\n\r\n\t\tparseShape: function ( json ) {\r\n\r\n\t\t\tvar shapes = {};\r\n\r\n\t\t\tif ( json !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\r\n\r\n\t\t\t\t\tshapes[ shape.uuid ] = shape;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shapes;\r\n\r\n\t\t},\r\n\r\n\t\tparseGeometries: function ( json, shapes ) {\r\n\r\n\t\t\tvar geometries = {};\r\n\r\n\t\t\tif ( json !== undefined ) {\r\n\r\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar geometry;\r\n\t\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\r\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'CircleGeometry':\r\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'CylinderGeometry':\r\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'ConeGeometry':\r\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'SphereGeometry':\r\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\t\t\t\t\t\tcase 'DodecahedronBufferGeometry':\r\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\t\t\t\t\t\tcase 'IcosahedronBufferGeometry':\r\n\t\t\t\t\t\tcase 'OctahedronGeometry':\r\n\t\t\t\t\t\tcase 'OctahedronBufferGeometry':\r\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\t\t\t\t\t\tcase 'TetrahedronBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'RingGeometry':\r\n\t\t\t\t\t\tcase 'RingBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'TorusGeometry':\r\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\t\tdata.q\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'TubeGeometry':\r\n\t\t\t\t\t\tcase 'TubeBufferGeometry':\r\n\r\n\t\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\r\n\t\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.closed\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'LatheGeometry':\r\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.points,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'PolyhedronGeometry':\r\n\t\t\t\t\t\tcase 'PolyhedronBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.vertices,\r\n\t\t\t\t\t\t\t\tdata.indices,\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.details\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'ShapeGeometry':\r\n\t\t\t\t\t\tcase 'ShapeBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tvar geometryShapes = [];\r\n\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\r\n\r\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tgeometryShapes,\r\n\t\t\t\t\t\t\t\tdata.curveSegments\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\r\n\t\t\t\t\t\tcase 'ExtrudeGeometry':\r\n\t\t\t\t\t\tcase 'ExtrudeBufferGeometry':\r\n\r\n\t\t\t\t\t\t\tvar geometryShapes = [];\r\n\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\r\n\r\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\r\n\r\n\t\t\t\t\t\t\tif ( extrudePath !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n\t\t\t\t\t\t\t\tgeometryShapes,\r\n\t\t\t\t\t\t\t\tdata.options\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\t\tif ( 'THREE' in window && 'LegacyJSONLoader' in THREE ) {\r\n\r\n\t\t\t\t\t\t\t\tvar geometryLoader = new THREE.LegacyJSONLoader();\r\n\t\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.resourcePath ).geometry;\r\n\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".' );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\t\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\r\n\r\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometries;\r\n\r\n\t\t},\r\n\r\n\t\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\t\tvar cache = {}; // MultiMaterial\r\n\t\t\tvar materials = {};\r\n\r\n\t\t\tif ( json !== undefined ) {\r\n\r\n\t\t\t\tvar loader = new MaterialLoader();\r\n\t\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\t\tif ( data.type === 'MultiMaterial' ) {\r\n\r\n\t\t\t\t\t\t// Deprecated\r\n\r\n\t\t\t\t\t\tvar array = [];\r\n\r\n\t\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar material = data.materials[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaterials[ data.uuid ] = array;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn materials;\r\n\r\n\t\t},\r\n\r\n\t\tparseAnimations: function ( json ) {\r\n\r\n\t\t\tvar animations = [];\r\n\r\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tvar clip = AnimationClip.parse( data );\r\n\r\n\t\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\r\n\r\n\t\t\t\tanimations.push( clip );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn animations;\r\n\r\n\t\t},\r\n\r\n\t\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\t\tvar scope = this;\r\n\t\t\tvar images = {};\r\n\r\n\t\t\tfunction loadImage( url ) {\r\n\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, undefined, function () {\r\n\r\n\t\t\t\t\tscope.manager.itemError( url );\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\t\tvar manager = new LoadingManager( onLoad );\r\n\r\n\t\t\t\tvar loader = new ImageLoader( manager );\r\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar image = json[ i ];\r\n\t\t\t\t\tvar url = image.url;\r\n\r\n\t\t\t\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\t\t\t\t// load array of images e.g CubeTexture\r\n\r\n\t\t\t\t\t\timages[ image.uuid ] = [];\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar currentUrl = url[ j ];\r\n\r\n\t\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\r\n\r\n\t\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// load single image\r\n\r\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\r\n\r\n\t\t\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn images;\r\n\r\n\t\t},\r\n\r\n\t\tparseTextures: function ( json, images ) {\r\n\r\n\t\t\tfunction parseConstant( value, type ) {\r\n\r\n\t\t\t\tif ( typeof value === 'number' ) return value;\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\t\treturn type[ value ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar textures = {};\r\n\r\n\t\t\tif ( json !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar texture;\r\n\r\n\t\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\r\n\r\n\t\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttexture = new Texture( images[ data.image ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\r\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\r\n\r\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\r\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\r\n\t\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\r\n\t\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\r\n\r\n\t\t\t\t\tif ( data.wrap !== undefined ) {\r\n\r\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\r\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\r\n\t\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\r\n\t\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\r\n\r\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\r\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\r\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\r\n\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\r\n\r\n\t\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\r\n\t\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\r\n\r\n\t\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn textures;\r\n\r\n\t\t},\r\n\r\n\t\tparseObject: function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tfunction getGeometry( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getMaterial( name ) {\r\n\r\n\t\t\t\tif ( name === undefined ) return undefined;\r\n\r\n\t\t\t\tif ( Array.isArray( name ) ) {\r\n\r\n\t\t\t\t\tvar array = [];\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar uuid = name[ i ];\r\n\r\n\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tarray.push( materials[ uuid ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn array;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new Scene();\r\n\r\n\t\t\t\t\tif ( data.background !== undefined ) {\r\n\r\n\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\r\n\r\n\t\t\t\t\t\t\tobject.background = new Color( data.background );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( data.fog !== undefined ) {\r\n\r\n\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\r\n\r\n\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\r\n\r\n\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\r\n\r\n\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\r\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\r\n\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\r\n\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\r\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\r\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'RectAreaLight':\r\n\r\n\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SkinnedMesh':\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tvar geometry = getGeometry( data.geometry );\r\n\t\t\t\t\tvar material = getMaterial( data.material );\r\n\r\n\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\r\n\r\n\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tobject = new Mesh( geometry, material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( data.drawMode !== undefined ) object.setDrawMode( data.drawMode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\r\n\t\t\t\t\tobject = new LOD();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LineLoop':\r\n\r\n\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LineSegments':\r\n\r\n\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\r\n\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tobject.matrix.fromArray( data.matrix );\r\n\r\n\t\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\r\n\t\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif ( data.shadow ) {\r\n\r\n\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\r\n\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\r\n\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\r\n\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\r\n\t\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\t\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tvar children = data.children;\r\n\r\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\t\tvar levels = data.levels;\r\n\r\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tvar TEXTURE_MAPPING = {\r\n\t\tUVMapping: UVMapping,\r\n\t\tCubeReflectionMapping: CubeReflectionMapping,\r\n\t\tCubeRefractionMapping: CubeRefractionMapping,\r\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\r\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\r\n\t\tSphericalReflectionMapping: SphericalReflectionMapping,\r\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\r\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\r\n\t};\r\n\r\n\tvar TEXTURE_WRAPPING = {\r\n\t\tRepeatWrapping: RepeatWrapping,\r\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\r\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\r\n\t};\r\n\r\n\tvar TEXTURE_FILTER = {\r\n\t\tNearestFilter: NearestFilter,\r\n\t\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\r\n\t\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\r\n\t\tLinearFilter: LinearFilter,\r\n\t\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\r\n\t\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\r\n\t};\n\n\t/**\r\n\t * @author thespite / http://clicktorelease.com/\r\n\t */\r\n\r\n\r\n\tfunction ImageBitmapLoader( manager ) {\r\n\r\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( typeof fetch === 'undefined' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\r\n\t\tthis.options = undefined;\r\n\r\n\t}\r\n\r\n\tImageBitmapLoader.prototype = {\r\n\r\n\t\tconstructor: ImageBitmapLoader,\r\n\r\n\t\tsetOptions: function setOptions( options ) {\r\n\r\n\t\t\tthis.options = options;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tif ( url === undefined ) url = '';\r\n\r\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar cached = Cache.get( url );\r\n\r\n\t\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t\treturn cached;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfetch( url ).then( function ( res ) {\r\n\r\n\t\t\t\treturn res.blob();\r\n\r\n\t\t\t} ).then( function ( blob ) {\r\n\r\n\t\t\t\tif ( scope.options === undefined ) {\r\n\r\n\t\t\t\t\t// Workaround for FireFox. It causes an error if you pass options.\r\n\t\t\t\t\treturn createImageBitmap( blob );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn createImageBitmap( blob, scope.options );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} ).then( function ( imageBitmap ) {\r\n\r\n\t\t\t\tCache.add( url, imageBitmap );\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} ).catch( function ( e ) {\r\n\r\n\t\t\t\tif ( onError ) onError( e );\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( /* value */ ) {\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t};\n\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\r\n\t **/\r\n\r\n\tfunction ShapePath() {\r\n\r\n\t\tthis.type = 'ShapePath';\r\n\r\n\t\tthis.color = new Color();\r\n\r\n\t\tthis.subPaths = [];\r\n\t\tthis.currentPath = null;\r\n\r\n\t}\r\n\r\n\tObject.assign( ShapePath.prototype, {\r\n\r\n\t\tmoveTo: function ( x, y ) {\r\n\r\n\t\t\tthis.currentPath = new Path();\r\n\t\t\tthis.subPaths.push( this.currentPath );\r\n\t\t\tthis.currentPath.moveTo( x, y );\r\n\r\n\t\t},\r\n\r\n\t\tlineTo: function ( x, y ) {\r\n\r\n\t\t\tthis.currentPath.lineTo( x, y );\r\n\r\n\t\t},\r\n\r\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\r\n\r\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\r\n\r\n\t\t},\r\n\r\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\r\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\r\n\r\n\t\t},\r\n\r\n\t\tsplineThru: function ( pts ) {\r\n\r\n\t\t\tthis.currentPath.splineThru( pts );\r\n\r\n\t\t},\r\n\r\n\t\ttoShapes: function ( isCCW, noHoles ) {\r\n\r\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\t\t\tvar shapes = [];\r\n\r\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\t\t\tvar tmpShape = new Shape();\r\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn shapes;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\t\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\t\tvar inside = false;\r\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\t\t\tvar edgeLowPt = inPolygon[ p ];\r\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t// not parallel\r\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t\t// continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tinside;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\r\n\r\n\t\t\tvar subPaths = this.subPaths;\r\n\t\t\tif ( subPaths.length === 0 ) return [];\r\n\r\n\t\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\t\t\tif ( subPaths.length === 1 ) {\r\n\r\n\t\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\t\ttmpShape = new Shape();\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\t\tshapes.push( tmpShape );\r\n\t\t\t\treturn shapes;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t\t\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\t\t\tvar betterShapeHoles = [];\r\n\t\t\tvar newShapes = [];\r\n\t\t\tvar newShapeHoles = [];\r\n\t\t\tvar mainIdx = 0;\r\n\t\t\tvar tmpPoints;\r\n\r\n\t\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\r\n\r\n\t\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\t\tsolid = isClockWise( tmpPoints );\r\n\t\t\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\t\t\tif ( solid ) {\r\n\r\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\r\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t\t\t//console.log('cw', i);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t\t\t//console.log('ccw', i);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\t\t\tif ( newShapes.length > 1 ) {\r\n\r\n\t\t\t\tvar ambiguous = false;\r\n\t\t\t\tvar toChange = [];\r\n\r\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\r\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\t\t\tvar hole_unassigned = true;\r\n\r\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\t\t\tif ( toChange.length > 0 ) {\r\n\r\n\t\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar tmpHoles;\r\n\r\n\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\t\tshapes.push( tmpShape );\r\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\t\treturn shapes;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\r\n\tfunction Font( data ) {\r\n\r\n\t\tthis.type = 'Font';\r\n\r\n\t\tthis.data = data;\r\n\r\n\t}\r\n\r\n\tObject.assign( Font.prototype, {\r\n\r\n\t\tisFont: true,\r\n\r\n\t\tgenerateShapes: function ( text, size ) {\r\n\r\n\t\t\tif ( size === undefined ) size = 100;\r\n\r\n\t\t\tvar shapes = [];\r\n\t\t\tvar paths = createPaths( text, size, this.data );\r\n\r\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shapes;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tfunction createPaths( text, size, data ) {\r\n\r\n\t\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\r\n\t\tvar scale = size / data.resolution;\r\n\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\r\n\r\n\t\tvar paths = [];\r\n\r\n\t\tvar offsetX = 0, offsetY = 0;\r\n\r\n\t\tfor ( var i = 0; i < chars.length; i ++ ) {\r\n\r\n\t\t\tvar char = chars[ i ];\r\n\r\n\t\t\tif ( char === '\\n' ) {\r\n\r\n\t\t\t\toffsetX = 0;\r\n\t\t\t\toffsetY -= line_height;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\r\n\t\t\t\toffsetX += ret.offsetX;\r\n\t\t\t\tpaths.push( ret.path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn paths;\r\n\r\n\t}\r\n\r\n\tfunction createPath( char, scale, offsetX, offsetY, data ) {\r\n\r\n\t\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\r\n\r\n\t\tif ( ! glyph ) return;\r\n\r\n\t\tvar path = new ShapePath();\r\n\r\n\t\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\r\n\r\n\t\tif ( glyph.o ) {\r\n\r\n\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\r\n\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\r\n\r\n\t\t\t\tvar action = outline[ i ++ ];\r\n\r\n\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\t\tcase 'm': // moveTo\r\n\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\r\n\r\n\t\t\t\t\t\tpath.moveTo( x, y );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'l': // lineTo\r\n\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\r\n\r\n\t\t\t\t\t\tpath.lineTo( x, y );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'q': // quadraticCurveTo\r\n\r\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\r\n\r\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'b': // bezierCurveTo\r\n\r\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\r\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\r\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\r\n\r\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn { offsetX: glyph.ha * scale, path: path };\r\n\r\n\t}\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction FontLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( FontLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar loader = new FileLoader( this.manager );\r\n\t\t\tloader.setPath( this.path );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\t\tvar json;\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tjson = JSON.parse( text );\r\n\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\r\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar font = scope.parse( json );\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( font );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( json ) {\r\n\r\n\t\t\treturn new Font( json );\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Loader() {}\r\n\r\n\tLoader.Handlers = {\r\n\r\n\t\thandlers: [],\r\n\r\n\t\tadd: function ( regex, loader ) {\r\n\r\n\t\t\tthis.handlers.push( regex, loader );\r\n\r\n\t\t},\r\n\r\n\t\tget: function ( file ) {\r\n\r\n\t\t\tvar handlers = this.handlers;\r\n\r\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\t\tvar regex = handlers[ i ];\r\n\t\t\t\tvar loader = handlers[ i + 1 ];\r\n\r\n\t\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\t\treturn loader;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tObject.assign( Loader.prototype, {\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tonLoadStart: function () {},\r\n\r\n\t\tonLoadProgress: function () {},\r\n\r\n\t\tonLoadComplete: function () {},\r\n\r\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n\t\t\tvar array = [];\r\n\r\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tcreateMaterial: ( function () {\r\n\r\n\t\t\tvar BlendingMode = {\r\n\t\t\t\tNoBlending: NoBlending,\r\n\t\t\t\tNormalBlending: NormalBlending,\r\n\t\t\t\tAdditiveBlending: AdditiveBlending,\r\n\t\t\t\tSubtractiveBlending: SubtractiveBlending,\r\n\t\t\t\tMultiplyBlending: MultiplyBlending,\r\n\t\t\t\tCustomBlending: CustomBlending\r\n\t\t\t};\r\n\r\n\t\t\tvar color = new Color();\r\n\t\t\tvar textureLoader = new TextureLoader();\r\n\t\t\tvar materialLoader = new MaterialLoader();\r\n\r\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\r\n\t\t\t\t// convert from old material format\r\n\r\n\t\t\t\tvar textures = {};\r\n\r\n\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\t\t\tvar fullPath = texturePath + path;\r\n\t\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\r\n\r\n\t\t\t\t\tvar texture;\r\n\r\n\t\t\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( repeat !== undefined ) {\r\n\r\n\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\r\n\r\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\r\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\t\t\ttexture.offset.fromArray( offset );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( wrap !== undefined ) {\r\n\r\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\r\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\r\n\r\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\r\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( anisotropy !== undefined ) {\r\n\r\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar uuid = _Math.generateUUID();\r\n\r\n\t\t\t\t\ttextures[ uuid ] = texture;\r\n\r\n\t\t\t\t\treturn uuid;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tvar json = {\r\n\t\t\t\t\tuuid: _Math.generateUUID(),\r\n\t\t\t\t\ttype: 'MeshLambertMaterial'\r\n\t\t\t\t};\r\n\r\n\t\t\t\tfor ( var name in m ) {\r\n\r\n\t\t\t\t\tvar value = m[ name ];\r\n\r\n\t\t\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\t\t\tcase 'DbgColor':\r\n\t\t\t\t\t\tcase 'DbgIndex':\r\n\t\t\t\t\t\tcase 'opticalDensity':\r\n\t\t\t\t\t\tcase 'illumination':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'DbgName':\r\n\t\t\t\t\t\t\tjson.name = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'blending':\r\n\t\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorAmbient':\r\n\t\t\t\t\t\tcase 'mapAmbient':\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorDiffuse':\r\n\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorSpecular':\r\n\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorEmissive':\r\n\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'specularCoef':\r\n\t\t\t\t\t\t\tjson.shininess = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'shading':\r\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\r\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\r\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapDiffuse':\r\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\r\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\r\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\r\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapEmissive':\r\n\t\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapEmissiveRepeat':\r\n\t\t\t\t\t\tcase 'mapEmissiveOffset':\r\n\t\t\t\t\t\tcase 'mapEmissiveWrap':\r\n\t\t\t\t\t\tcase 'mapEmissiveAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapLight':\r\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapLightRepeat':\r\n\t\t\t\t\t\tcase 'mapLightOffset':\r\n\t\t\t\t\t\tcase 'mapLightWrap':\r\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAO':\r\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAORepeat':\r\n\t\t\t\t\t\tcase 'mapAOOffset':\r\n\t\t\t\t\t\tcase 'mapAOWrap':\r\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapBump':\r\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapBumpScale':\r\n\t\t\t\t\t\t\tjson.bumpScale = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapBumpRepeat':\r\n\t\t\t\t\t\tcase 'mapBumpOffset':\r\n\t\t\t\t\t\tcase 'mapBumpWrap':\r\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapNormal':\r\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapNormalFactor':\r\n\t\t\t\t\t\t\tjson.normalScale = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapNormalRepeat':\r\n\t\t\t\t\t\tcase 'mapNormalOffset':\r\n\t\t\t\t\t\tcase 'mapNormalWrap':\r\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapSpecular':\r\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\r\n\t\t\t\t\t\tcase 'mapSpecularOffset':\r\n\t\t\t\t\t\tcase 'mapSpecularWrap':\r\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapMetalness':\r\n\t\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapMetalnessRepeat':\r\n\t\t\t\t\t\tcase 'mapMetalnessOffset':\r\n\t\t\t\t\t\tcase 'mapMetalnessWrap':\r\n\t\t\t\t\t\tcase 'mapMetalnessAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapRoughness':\r\n\t\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapRoughnessRepeat':\r\n\t\t\t\t\t\tcase 'mapRoughnessOffset':\r\n\t\t\t\t\t\tcase 'mapRoughnessWrap':\r\n\t\t\t\t\t\tcase 'mapRoughnessAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAlpha':\r\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\r\n\t\t\t\t\t\tcase 'mapAlphaOffset':\r\n\t\t\t\t\t\tcase 'mapAlphaWrap':\r\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'flipSided':\r\n\t\t\t\t\t\t\tjson.side = BackSide;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'doubleSided':\r\n\t\t\t\t\t\t\tjson.side = DoubleSide;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'transparency':\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\r\n\t\t\t\t\t\t\tjson.opacity = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'depthTest':\r\n\t\t\t\t\t\tcase 'depthWrite':\r\n\t\t\t\t\t\tcase 'colorWrite':\r\n\t\t\t\t\t\tcase 'opacity':\r\n\t\t\t\t\t\tcase 'reflectivity':\r\n\t\t\t\t\t\tcase 'transparent':\r\n\t\t\t\t\t\tcase 'visible':\r\n\t\t\t\t\t\tcase 'wireframe':\r\n\t\t\t\t\t\t\tjson[ name ] = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'vertexColors':\r\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\r\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\r\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\r\n\r\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\r\n\r\n\t\t\t\tmaterialLoader.setTextures( textures );\r\n\r\n\t\t\t\treturn materialLoader.parse( json );\r\n\r\n\t\t\t};\r\n\r\n\t\t} )()\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tvar context;\r\n\r\n\tvar AudioContext = {\r\n\r\n\t\tgetContext: function () {\r\n\r\n\t\t\tif ( context === undefined ) {\r\n\r\n\t\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn context;\r\n\r\n\t\t},\r\n\r\n\t\tsetContext: function ( value ) {\r\n\r\n\t\t\tcontext = value;\r\n\r\n\t\t}\r\n\r\n\t};\n\n\t/**\r\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\r\n\t */\r\n\r\n\tfunction AudioLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tObject.assign( AudioLoader.prototype, {\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar loader = new FileLoader( this.manager );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\t\tloader.setPath( this.path );\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\r\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\r\n\t\t\t\tvar bufferCopy = buffer.slice( 0 );\r\n\r\n\t\t\t\tvar context = AudioContext.getContext();\r\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\r\n\r\n\t\t\t\t\tonLoad( audioBuffer );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction StereoCamera() {\r\n\r\n\t\tthis.type = 'StereoCamera';\r\n\r\n\t\tthis.aspect = 1;\r\n\r\n\t\tthis.eyeSep = 0.064;\r\n\r\n\t\tthis.cameraL = new PerspectiveCamera();\r\n\t\tthis.cameraL.layers.enable( 1 );\r\n\t\tthis.cameraL.matrixAutoUpdate = false;\r\n\r\n\t\tthis.cameraR = new PerspectiveCamera();\r\n\t\tthis.cameraR.layers.enable( 2 );\r\n\t\tthis.cameraR.matrixAutoUpdate = false;\r\n\r\n\t}\r\n\r\n\tObject.assign( StereoCamera.prototype, {\r\n\r\n\t\tupdate: ( function () {\r\n\r\n\t\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\r\n\r\n\t\t\tvar eyeRight = new Matrix4();\r\n\t\t\tvar eyeLeft = new Matrix4();\r\n\r\n\t\t\treturn function update( camera ) {\r\n\r\n\t\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\r\n\r\n\t\t\t\tif ( needsUpdate ) {\r\n\r\n\t\t\t\t\tinstance = this;\r\n\t\t\t\t\tfocus = camera.focus;\r\n\t\t\t\t\tfov = camera.fov;\r\n\t\t\t\t\taspect = camera.aspect * this.aspect;\r\n\t\t\t\t\tnear = camera.near;\r\n\t\t\t\t\tfar = camera.far;\r\n\t\t\t\t\tzoom = camera.zoom;\r\n\r\n\t\t\t\t\t// Off-axis stereoscopic effect based on\r\n\t\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\r\n\r\n\t\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\r\n\t\t\t\t\teyeSep = this.eyeSep / 2;\r\n\t\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\r\n\t\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\r\n\t\t\t\t\tvar xmin, xmax;\r\n\r\n\t\t\t\t\t// translate xOffset\r\n\r\n\t\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\r\n\t\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\r\n\r\n\t\t\t\t\t// for left eye\r\n\r\n\t\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\r\n\t\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\r\n\r\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\r\n\r\n\t\t\t\t\t// for right eye\r\n\r\n\t\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\r\n\t\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\r\n\r\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\r\n\t\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\r\n\r\n\t\t\t};\r\n\r\n\t\t} )()\r\n\r\n\t} );\n\n\t/**\r\n\t * Camera for rendering cube maps\r\n\t *\t- renders scene into axis-aligned cube\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tfunction CubeCamera( near, far, cubeResolution, options ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'CubeCamera';\r\n\r\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPX.up.set( 0, - 1, 0 );\r\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\r\n\t\tthis.add( cameraPX );\r\n\r\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNX.up.set( 0, - 1, 0 );\r\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\r\n\t\tthis.add( cameraNX );\r\n\r\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPY.up.set( 0, 0, 1 );\r\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\r\n\t\tthis.add( cameraPY );\r\n\r\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNY.up.set( 0, 0, - 1 );\r\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\r\n\t\tthis.add( cameraNY );\r\n\r\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPZ.up.set( 0, - 1, 0 );\r\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\r\n\t\tthis.add( cameraPZ );\r\n\r\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNZ.up.set( 0, - 1, 0 );\r\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\r\n\t\tthis.add( cameraNZ );\r\n\r\n\t\toptions = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\r\n\r\n\t\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\r\n\t\tthis.renderTarget.texture.name = \"CubeCamera\";\r\n\r\n\t\tthis.update = function ( renderer, scene ) {\r\n\r\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\t\tvar renderTarget = this.renderTarget;\r\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\r\n\r\n\t\t\trenderTarget.texture.generateMipmaps = false;\r\n\r\n\t\t\trenderer.setRenderTarget( renderTarget, 0 );\r\n\t\t\trenderer.render( scene, cameraPX );\r\n\r\n\t\t\trenderer.setRenderTarget( renderTarget, 1 );\r\n\t\t\trenderer.render( scene, cameraNX );\r\n\r\n\t\t\trenderer.setRenderTarget( renderTarget, 2 );\r\n\t\t\trenderer.render( scene, cameraPY );\r\n\r\n\t\t\trenderer.setRenderTarget( renderTarget, 3 );\r\n\t\t\trenderer.render( scene, cameraNY );\r\n\r\n\t\t\trenderer.setRenderTarget( renderTarget, 4 );\r\n\t\t\trenderer.render( scene, cameraPZ );\r\n\r\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\r\n\r\n\t\t\trenderer.setRenderTarget( renderTarget, 5 );\r\n\t\t\trenderer.render( scene, cameraNZ );\r\n\r\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t\t};\r\n\r\n\t\tthis.clear = function ( renderer, color, depth, stencil ) {\r\n\r\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\t\tvar renderTarget = this.renderTarget;\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\trenderer.setRenderTarget( renderTarget, i );\r\n\r\n\t\t\t\trenderer.clear( color, depth, stencil );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\r\n\tCubeCamera.prototype.constructor = CubeCamera;\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction Clock( autoStart ) {\r\n\r\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\t\tthis.startTime = 0;\r\n\t\tthis.oldTime = 0;\r\n\t\tthis.elapsedTime = 0;\r\n\r\n\t\tthis.running = false;\r\n\r\n\t}\r\n\r\n\tObject.assign( Clock.prototype, {\r\n\r\n\t\tstart: function () {\r\n\r\n\t\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\r\n\r\n\t\t\tthis.oldTime = this.startTime;\r\n\t\t\tthis.elapsedTime = 0;\r\n\t\t\tthis.running = true;\r\n\r\n\t\t},\r\n\r\n\t\tstop: function () {\r\n\r\n\t\t\tthis.getElapsedTime();\r\n\t\t\tthis.running = false;\r\n\t\t\tthis.autoStart = false;\r\n\r\n\t\t},\r\n\r\n\t\tgetElapsedTime: function () {\r\n\r\n\t\t\tthis.getDelta();\r\n\t\t\treturn this.elapsedTime;\r\n\r\n\t\t},\r\n\r\n\t\tgetDelta: function () {\r\n\r\n\t\t\tvar diff = 0;\r\n\r\n\t\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\t\tthis.start();\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.running ) {\r\n\r\n\t\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\r\n\r\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\r\n\t\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn diff;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction AudioListener() {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'AudioListener';\r\n\r\n\t\tthis.context = AudioContext.getContext();\r\n\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( this.context.destination );\r\n\r\n\t\tthis.filter = null;\r\n\r\n\t\tthis.timeDelta = 0;\r\n\r\n\t}\r\n\r\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: AudioListener,\r\n\r\n\t\tgetInput: function () {\r\n\r\n\t\t\treturn this.gain;\r\n\r\n\t\t},\r\n\r\n\t\tremoveFilter: function ( ) {\r\n\r\n\t\t\tif ( this.filter !== null ) {\r\n\r\n\t\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\t\tthis.filter.disconnect( this.context.destination );\r\n\t\t\t\tthis.gain.connect( this.context.destination );\r\n\t\t\t\tthis.filter = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetFilter: function () {\r\n\r\n\t\t\treturn this.filter;\r\n\r\n\t\t},\r\n\r\n\t\tsetFilter: function ( value ) {\r\n\r\n\t\t\tif ( this.filter !== null ) {\r\n\r\n\t\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\t\tthis.filter.disconnect( this.context.destination );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.gain.disconnect( this.context.destination );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.filter = value;\r\n\t\t\tthis.gain.connect( this.filter );\r\n\t\t\tthis.filter.connect( this.context.destination );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetMasterVolume: function () {\r\n\r\n\t\t\treturn this.gain.gain.value;\r\n\r\n\t\t},\r\n\r\n\t\tsetMasterVolume: function ( value ) {\r\n\r\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrixWorld: ( function () {\r\n\r\n\t\t\tvar position = new Vector3();\r\n\t\t\tvar quaternion = new Quaternion();\r\n\t\t\tvar scale = new Vector3();\r\n\r\n\t\t\tvar orientation = new Vector3();\r\n\t\t\tvar clock = new Clock();\r\n\r\n\t\t\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\t\tvar listener = this.context.listener;\r\n\t\t\t\tvar up = this.up;\r\n\r\n\t\t\t\tthis.timeDelta = clock.getDelta();\r\n\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t\t\tif ( listener.positionX ) {\r\n\r\n\t\t\t\t\t// code path for Chrome (see #14393)\r\n\r\n\t\t\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\r\n\r\n\t\t\t\t\tlistener.positionX.linearRampToValueAtTime( position.x, endTime );\r\n\t\t\t\t\tlistener.positionY.linearRampToValueAtTime( position.y, endTime );\r\n\t\t\t\t\tlistener.positionZ.linearRampToValueAtTime( position.z, endTime );\r\n\t\t\t\t\tlistener.forwardX.linearRampToValueAtTime( orientation.x, endTime );\r\n\t\t\t\t\tlistener.forwardY.linearRampToValueAtTime( orientation.y, endTime );\r\n\t\t\t\t\tlistener.forwardZ.linearRampToValueAtTime( orientation.z, endTime );\r\n\t\t\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\r\n\t\t\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\r\n\t\t\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t} )()\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\r\n\t */\r\n\r\n\tfunction Audio( listener ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.type = 'Audio';\r\n\r\n\t\tthis.listener = listener;\r\n\t\tthis.context = listener.context;\r\n\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( listener.getInput() );\r\n\r\n\t\tthis.autoplay = false;\r\n\r\n\t\tthis.buffer = null;\r\n\t\tthis.detune = 0;\r\n\t\tthis.loop = false;\r\n\t\tthis.startTime = 0;\r\n\t\tthis.offset = 0;\r\n\t\tthis.playbackRate = 1;\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.hasPlaybackControl = true;\r\n\t\tthis.sourceType = 'empty';\r\n\r\n\t\tthis.filters = [];\r\n\r\n\t}\r\n\r\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\t\tconstructor: Audio,\r\n\r\n\t\tgetOutput: function () {\r\n\r\n\t\t\treturn this.gain;\r\n\r\n\t\t},\r\n\r\n\t\tsetNodeSource: function ( audioNode ) {\r\n\r\n\t\t\tthis.hasPlaybackControl = false;\r\n\t\t\tthis.sourceType = 'audioNode';\r\n\t\t\tthis.source = audioNode;\r\n\t\t\tthis.connect();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetMediaElementSource: function ( mediaElement ) {\r\n\r\n\t\t\tthis.hasPlaybackControl = false;\r\n\t\t\tthis.sourceType = 'mediaNode';\r\n\t\t\tthis.source = this.context.createMediaElementSource( mediaElement );\r\n\t\t\tthis.connect();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetBuffer: function ( audioBuffer ) {\r\n\r\n\t\t\tthis.buffer = audioBuffer;\r\n\t\t\tthis.sourceType = 'buffer';\r\n\r\n\t\t\tif ( this.autoplay ) this.play();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tplay: function () {\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar source = this.context.createBufferSource();\r\n\r\n\t\t\tsource.buffer = this.buffer;\r\n\t\t\tsource.loop = this.loop;\r\n\t\t\tsource.onended = this.onEnded.bind( this );\r\n\t\t\tthis.startTime = this.context.currentTime;\r\n\t\t\tsource.start( this.startTime, this.offset );\r\n\r\n\t\t\tthis.isPlaying = true;\r\n\r\n\t\t\tthis.source = source;\r\n\r\n\t\t\tthis.setDetune( this.detune );\r\n\t\t\tthis.setPlaybackRate( this.playbackRate );\r\n\r\n\t\t\treturn this.connect();\r\n\r\n\t\t},\r\n\r\n\t\tpause: function () {\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tthis.source.stop();\r\n\t\t\t\tthis.source.onended = null;\r\n\t\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\r\n\t\t\t\tthis.isPlaying = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tstop: function () {\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.source.stop();\r\n\t\t\tthis.source.onended = null;\r\n\t\t\tthis.offset = 0;\r\n\t\t\tthis.isPlaying = false;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tconnect: function () {\r\n\r\n\t\t\tif ( this.filters.length > 0 ) {\r\n\r\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\r\n\r\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.source.connect( this.getOutput() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdisconnect: function () {\r\n\r\n\t\t\tif ( this.filters.length > 0 ) {\r\n\r\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\r\n\r\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.source.disconnect( this.getOutput() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetFilters: function () {\r\n\r\n\t\t\treturn this.filters;\r\n\r\n\t\t},\r\n\r\n\t\tsetFilters: function ( value ) {\r\n\r\n\t\t\tif ( ! value ) value = [];\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tthis.disconnect();\r\n\t\t\t\tthis.filters = value;\r\n\t\t\t\tthis.connect();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.filters = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetDetune: function ( value ) {\r\n\r\n\t\t\tthis.detune = value;\r\n\r\n\t\t\tif ( this.source.detune === undefined ) return; // only set detune when available\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetDetune: function () {\r\n\r\n\t\t\treturn this.detune;\r\n\r\n\t\t},\r\n\r\n\t\tgetFilter: function () {\r\n\r\n\t\t\treturn this.getFilters()[ 0 ];\r\n\r\n\t\t},\r\n\r\n\t\tsetFilter: function ( filter ) {\r\n\r\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\r\n\r\n\t\t},\r\n\r\n\t\tsetPlaybackRate: function ( value ) {\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.playbackRate = value;\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetPlaybackRate: function () {\r\n\r\n\t\t\treturn this.playbackRate;\r\n\r\n\t\t},\r\n\r\n\t\tonEnded: function () {\r\n\r\n\t\t\tthis.isPlaying = false;\r\n\r\n\t\t},\r\n\r\n\t\tgetLoop: function () {\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.loop;\r\n\r\n\t\t},\r\n\r\n\t\tsetLoop: function ( value ) {\r\n\r\n\t\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.loop = value;\r\n\r\n\t\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t\tthis.source.loop = this.loop;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetVolume: function () {\r\n\r\n\t\t\treturn this.gain.gain.value;\r\n\r\n\t\t},\r\n\r\n\t\tsetVolume: function ( value ) {\r\n\r\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction PositionalAudio( listener ) {\r\n\r\n\t\tAudio.call( this, listener );\r\n\r\n\t\tthis.panner = this.context.createPanner();\r\n\t\tthis.panner.connect( this.gain );\r\n\r\n\t}\r\n\r\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\r\n\r\n\t\tconstructor: PositionalAudio,\r\n\r\n\t\tgetOutput: function () {\r\n\r\n\t\t\treturn this.panner;\r\n\r\n\t\t},\r\n\r\n\t\tgetRefDistance: function () {\r\n\r\n\t\t\treturn this.panner.refDistance;\r\n\r\n\t\t},\r\n\r\n\t\tsetRefDistance: function ( value ) {\r\n\r\n\t\t\tthis.panner.refDistance = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetRolloffFactor: function () {\r\n\r\n\t\t\treturn this.panner.rolloffFactor;\r\n\r\n\t\t},\r\n\r\n\t\tsetRolloffFactor: function ( value ) {\r\n\r\n\t\t\tthis.panner.rolloffFactor = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetDistanceModel: function () {\r\n\r\n\t\t\treturn this.panner.distanceModel;\r\n\r\n\t\t},\r\n\r\n\t\tsetDistanceModel: function ( value ) {\r\n\r\n\t\t\tthis.panner.distanceModel = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetMaxDistance: function () {\r\n\r\n\t\t\treturn this.panner.maxDistance;\r\n\r\n\t\t},\r\n\r\n\t\tsetMaxDistance: function ( value ) {\r\n\r\n\t\t\tthis.panner.maxDistance = value;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\r\n\r\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\r\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\r\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tupdateMatrixWorld: ( function () {\r\n\r\n\t\t\tvar position = new Vector3();\r\n\t\t\tvar quaternion = new Quaternion();\r\n\t\t\tvar scale = new Vector3();\r\n\r\n\t\t\tvar orientation = new Vector3();\r\n\r\n\t\t\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\r\n\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t\t\tvar panner = this.panner;\r\n\r\n\t\t\t\tif ( panner.positionX ) {\r\n\r\n\t\t\t\t\t// code path for Chrome and Firefox (see #14393)\r\n\r\n\t\t\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\r\n\r\n\t\t\t\t\tpanner.positionX.linearRampToValueAtTime( position.x, endTime );\r\n\t\t\t\t\tpanner.positionY.linearRampToValueAtTime( position.y, endTime );\r\n\t\t\t\t\tpanner.positionZ.linearRampToValueAtTime( position.z, endTime );\r\n\t\t\t\t\tpanner.orientationX.linearRampToValueAtTime( orientation.x, endTime );\r\n\t\t\t\t\tpanner.orientationY.linearRampToValueAtTime( orientation.y, endTime );\r\n\t\t\t\t\tpanner.orientationZ.linearRampToValueAtTime( orientation.z, endTime );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tpanner.setPosition( position.x, position.y, position.z );\r\n\t\t\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t} )()\r\n\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction AudioAnalyser( audio, fftSize ) {\r\n\r\n\t\tthis.analyser = audio.context.createAnalyser();\r\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\r\n\r\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\r\n\r\n\t\taudio.getOutput().connect( this.analyser );\r\n\r\n\t}\r\n\r\n\tObject.assign( AudioAnalyser.prototype, {\r\n\r\n\t\tgetFrequencyData: function () {\r\n\r\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\r\n\r\n\t\t\treturn this.data;\r\n\r\n\t\t},\r\n\r\n\t\tgetAverageFrequency: function () {\r\n\r\n\t\t\tvar value = 0, data = this.getFrequencyData();\r\n\r\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\t\tvalue += data[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn value / data.length;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t *\r\n\t * Buffered scene graph property that allows weighted accumulation.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\r\n\r\n\t\tthis.binding = binding;\r\n\t\tthis.valueSize = valueSize;\r\n\r\n\t\tvar bufferType = Float64Array,\r\n\t\t\tmixFunction;\r\n\r\n\t\tswitch ( typeName ) {\r\n\r\n\t\t\tcase 'quaternion':\r\n\t\t\t\tmixFunction = this._slerp;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'string':\r\n\t\t\tcase 'bool':\r\n\t\t\t\tbufferType = Array;\r\n\t\t\t\tmixFunction = this._select;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tmixFunction = this._lerp;\r\n\r\n\t\t}\r\n\r\n\t\tthis.buffer = new bufferType( valueSize * 4 );\r\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\r\n\t\t//\r\n\t\t// interpolators can use .buffer as their .result\r\n\t\t// the data then goes to 'incoming'\r\n\t\t//\r\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\r\n\t\t// the cumulative result and are compared to detect\r\n\t\t// changes\r\n\t\t//\r\n\t\t// 'orig' stores the original state of the property\r\n\r\n\t\tthis._mixBufferRegion = mixFunction;\r\n\r\n\t\tthis.cumulativeWeight = 0;\r\n\r\n\t\tthis.useCount = 0;\r\n\t\tthis.referenceCount = 0;\r\n\r\n\t}\r\n\r\n\tObject.assign( PropertyMixer.prototype, {\r\n\r\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\r\n\t\taccumulate: function ( accuIndex, weight ) {\r\n\r\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\r\n\t\t\t// the weight and shouldn't have made the call in the first place\r\n\r\n\t\t\tvar buffer = this.buffer,\r\n\t\t\t\tstride = this.valueSize,\r\n\t\t\t\toffset = accuIndex * stride + stride,\r\n\r\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\r\n\r\n\t\t\tif ( currentWeight === 0 ) {\r\n\r\n\t\t\t\t// accuN := incoming * weight\r\n\r\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentWeight = weight;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// accuN := accuN + incoming * weight\r\n\r\n\t\t\t\tcurrentWeight += weight;\r\n\t\t\t\tvar mix = weight / currentWeight;\r\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cumulativeWeight = currentWeight;\r\n\r\n\t\t},\r\n\r\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\r\n\t\tapply: function ( accuIndex ) {\r\n\r\n\t\t\tvar stride = this.valueSize,\r\n\t\t\t\tbuffer = this.buffer,\r\n\t\t\t\toffset = accuIndex * stride + stride,\r\n\r\n\t\t\t\tweight = this.cumulativeWeight,\r\n\r\n\t\t\t\tbinding = this.binding;\r\n\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\r\n\t\t\tif ( weight < 1 ) {\r\n\r\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\r\n\r\n\t\t\t\tvar originalValueOffset = stride * 3;\r\n\r\n\t\t\t\tthis._mixBufferRegion(\r\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\r\n\r\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\r\n\r\n\t\t\t\t\t// value has changed -> update scene graph\r\n\r\n\t\t\t\t\tbinding.setValue( buffer, offset );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// remember the state of the bound property and copy it to both accus\r\n\t\tsaveOriginalState: function () {\r\n\r\n\t\t\tvar binding = this.binding;\r\n\r\n\t\t\tvar buffer = this.buffer,\r\n\t\t\t\tstride = this.valueSize,\r\n\r\n\t\t\t\toriginalValueOffset = stride * 3;\r\n\r\n\t\t\tbinding.getValue( buffer, originalValueOffset );\r\n\r\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\r\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\r\n\t\t},\r\n\r\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\r\n\t\trestoreOriginalState: function () {\r\n\r\n\t\t\tvar originalValueOffset = this.valueSize * 3;\r\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\r\n\r\n\t\t},\r\n\r\n\r\n\t\t// mix functions\r\n\r\n\t\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\t\tif ( t >= 0.5 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\r\n\r\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\r\n\r\n\t\t},\r\n\r\n\t\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\t\tvar s = 1 - t;\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tvar j = dstOffset + i;\r\n\r\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t *\r\n\t * A reference to a real property in the scene graph.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\t// Characters [].:/ are reserved for track binding syntax.\r\n\tvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\r\n\r\n\tfunction Composite( targetGroup, path, optionalParsedPath ) {\r\n\r\n\t\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\r\n\r\n\t\tthis._targetGroup = targetGroup;\r\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\r\n\r\n\t}\r\n\r\n\tObject.assign( Composite.prototype, {\r\n\r\n\t\tgetValue: function ( array, offset ) {\r\n\r\n\t\t\tthis.bind(); // bind all binding\r\n\r\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\r\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\r\n\r\n\t\t\t// and only call .getValue on the first\r\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\r\n\r\n\t\t},\r\n\r\n\t\tsetValue: function ( array, offset ) {\r\n\r\n\t\t\tvar bindings = this._bindings;\r\n\r\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tbindings[ i ].setValue( array, offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tbind: function () {\r\n\r\n\t\t\tvar bindings = this._bindings;\r\n\r\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tbindings[ i ].bind();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tunbind: function () {\r\n\r\n\t\t\tvar bindings = this._bindings;\r\n\r\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tbindings[ i ].unbind();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\r\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\r\n\r\n\t\tthis.path = path;\r\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\r\n\r\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\r\n\r\n\t\tthis.rootNode = rootNode;\r\n\r\n\t}\r\n\r\n\tObject.assign( PropertyBinding, {\r\n\r\n\t\tComposite: Composite,\r\n\r\n\t\tcreate: function ( root, path, parsedPath ) {\r\n\r\n\t\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\r\n\r\n\t\t\t\treturn new PropertyBinding( root, path, parsedPath );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Replaces spaces with underscores and removes unsupported characters from\r\n\t\t * node names, to ensure compatibility with parseTrackName().\r\n\t\t *\r\n\t\t * @param {string} name Node name to be sanitized.\r\n\t\t * @return {string}\r\n\t\t */\r\n\t\tsanitizeNodeName: ( function () {\r\n\r\n\t\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\r\n\r\n\t\t\treturn function sanitizeNodeName( name ) {\r\n\r\n\t\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\r\n\r\n\t\t\t};\r\n\r\n\t\t}() ),\r\n\r\n\t\tparseTrackName: function () {\r\n\r\n\t\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\r\n\t\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\r\n\t\t\t// instead, we exclude reserved characters and match everything else.\r\n\t\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\r\n\t\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\r\n\r\n\t\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\r\n\t\t\t// be matched to parse the rest of the track name.\r\n\t\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\r\n\r\n\t\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\r\n\t\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\r\n\r\n\t\t\t// Object on target node, and accessor. May not contain reserved\r\n\t\t\t// characters. Accessor may contain any character except closing bracket.\r\n\t\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\r\n\r\n\t\t\t// Property and accessor. May not contain reserved characters. Accessor may\r\n\t\t\t// contain any non-bracket characters.\r\n\t\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\r\n\r\n\t\t\tvar trackRe = new RegExp( ''\r\n\t\t\t\t+ '^'\r\n\t\t\t\t+ directoryRe\r\n\t\t\t\t+ nodeRe\r\n\t\t\t\t+ objectRe\r\n\t\t\t\t+ propertyRe\r\n\t\t\t\t+ '$'\r\n\t\t\t);\r\n\r\n\t\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\r\n\r\n\t\t\treturn function parseTrackName( trackName ) {\r\n\r\n\t\t\t\tvar matches = trackRe.exec( trackName );\r\n\r\n\t\t\t\tif ( ! matches ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar results = {\r\n\t\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\r\n\t\t\t\t\tnodeName: matches[ 2 ],\r\n\t\t\t\t\tobjectName: matches[ 3 ],\r\n\t\t\t\t\tobjectIndex: matches[ 4 ],\r\n\t\t\t\t\tpropertyName: matches[ 5 ], // required\r\n\t\t\t\t\tpropertyIndex: matches[ 6 ]\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\r\n\r\n\t\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\r\n\r\n\t\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\r\n\r\n\t\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\r\n\t\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\r\n\t\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\r\n\t\t\t\t\t// include '.' characters).\r\n\t\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\r\n\t\t\t\t\t\tresults.objectName = objectName;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn results;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tfindNode: function ( root, nodeName ) {\r\n\r\n\t\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\r\n\r\n\t\t\t\treturn root;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// search into skeleton bones.\r\n\t\t\tif ( root.skeleton ) {\r\n\r\n\t\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\r\n\r\n\t\t\t\tif ( bone !== undefined ) {\r\n\r\n\t\t\t\t\treturn bone;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// search into node subtree.\r\n\t\t\tif ( root.children ) {\r\n\r\n\t\t\t\tvar searchNodeSubtree = function ( children ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar childNode = children[ i ];\r\n\r\n\t\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\r\n\r\n\t\t\t\t\t\t\treturn childNode;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\r\n\r\n\t\t\t\t\t\tif ( result ) return result;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\r\n\r\n\t\t\t\tif ( subTreeNode ) {\r\n\r\n\t\t\t\t\treturn subTreeNode;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\r\n\r\n\t\t// these are used to \"bind\" a nonexistent property\r\n\t\t_getValue_unavailable: function () {},\r\n\t\t_setValue_unavailable: function () {},\r\n\r\n\t\tBindingType: {\r\n\t\t\tDirect: 0,\r\n\t\t\tEntireArray: 1,\r\n\t\t\tArrayElement: 2,\r\n\t\t\tHasFromToArray: 3\r\n\t\t},\r\n\r\n\t\tVersioning: {\r\n\t\t\tNone: 0,\r\n\t\t\tNeedsUpdate: 1,\r\n\t\t\tMatrixWorldNeedsUpdate: 2\r\n\t\t},\r\n\r\n\t\tGetterByBindingType: [\r\n\r\n\t\t\tfunction getValue_direct( buffer, offset ) {\r\n\r\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction getValue_array( buffer, offset ) {\r\n\r\n\t\t\t\tvar source = this.resolvedProperty;\r\n\r\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\r\n\r\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction getValue_toArray( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t],\r\n\r\n\t\tSetterByBindingTypeAndVersioning: [\r\n\r\n\t\t\t[\r\n\t\t\t\t// Direct\r\n\r\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t], [\r\n\r\n\t\t\t\t// EntireArray\r\n\r\n\t\t\t\tfunction setValue_array( buffer, offset ) {\r\n\r\n\t\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t], [\r\n\r\n\t\t\t\t// ArrayElement\r\n\r\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t], [\r\n\r\n\t\t\t\t// HasToFromArray\r\n\r\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t]\r\n\r\n\t\t],\r\n\r\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\r\n\r\n\t\t\tthis.bind();\r\n\t\t\tthis.getValue( targetArray, offset );\r\n\r\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\r\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\r\n\t\t\t// prototype version of these methods with one that represents\r\n\t\t\t// the bound state. When the property is not found, the methods\r\n\t\t\t// become no-ops.\r\n\r\n\t\t},\r\n\r\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\r\n\r\n\t\t\tthis.bind();\r\n\t\t\tthis.setValue( sourceArray, offset );\r\n\r\n\t\t},\r\n\r\n\t\t// create getter / setter pair for a property in the scene graph\r\n\t\tbind: function () {\r\n\r\n\t\t\tvar targetObject = this.node,\r\n\t\t\t\tparsedPath = this.parsedPath,\r\n\r\n\t\t\t\tobjectName = parsedPath.objectName,\r\n\t\t\t\tpropertyName = parsedPath.propertyName,\r\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\r\n\r\n\t\t\tif ( ! targetObject ) {\r\n\r\n\t\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\r\n\r\n\t\t\t\tthis.node = targetObject;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// set fail state so we can just 'return' on error\r\n\t\t\tthis.getValue = this._getValue_unavailable;\r\n\t\t\tthis.setValue = this._setValue_unavailable;\r\n\r\n\t\t\t// ensure there is a value node\r\n\t\t\tif ( ! targetObject ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( objectName ) {\r\n\r\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\r\n\r\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\r\n\t\t\t\tswitch ( objectName ) {\r\n\r\n\t\t\t\t\tcase 'materials':\r\n\r\n\t\t\t\t\t\tif ( ! targetObject.material ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'bones':\r\n\r\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\r\n\t\t\t\t\t\t// and convert the integer string to a true integer.\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\r\n\r\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\r\n\r\n\t\t\t\t\t\t\t\tobjectIndex = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( objectIndex !== undefined ) {\r\n\r\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// resolve property\r\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\r\n\r\n\t\t\tif ( nodeProperty === undefined ) {\r\n\r\n\t\t\t\tvar nodeName = parsedPath.nodeName;\r\n\r\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\r\n\t\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// determine versioning scheme\r\n\t\t\tvar versioning = this.Versioning.None;\r\n\r\n\t\t\tthis.targetObject = targetObject;\r\n\r\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\r\n\r\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\r\n\r\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\r\n\r\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// determine how the property gets bound\r\n\t\t\tvar bindingType = this.BindingType.Direct;\r\n\r\n\t\t\tif ( propertyIndex !== undefined ) {\r\n\r\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\r\n\r\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\r\n\r\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\r\n\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\tif ( ! targetObject.geometry ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\r\n\r\n\t\t\t\t\t\t\t\tpropertyIndex = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\r\n\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\r\n\r\n\t\t\t\t\t\t\t\tpropertyIndex = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\r\n\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\t\t\tthis.propertyIndex = propertyIndex;\r\n\r\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\r\n\r\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\r\n\r\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\r\n\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t\t} else if ( Array.isArray( nodeProperty ) ) {\r\n\r\n\t\t\t\tbindingType = this.BindingType.EntireArray;\r\n\r\n\t\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.propertyName = propertyName;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// select getter / setter\r\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\r\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\r\n\r\n\t\t},\r\n\r\n\t\tunbind: function () {\r\n\r\n\t\t\tthis.node = null;\r\n\r\n\t\t\t// back to the prototype version of getValue / setValue\r\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\r\n\t\t\tthis.getValue = this._getValue_unbound;\r\n\t\t\tthis.setValue = this._setValue_unbound;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\r\n\tObject.assign( PropertyBinding.prototype, {\r\n\r\n\t\t// initial state of these methods that calls 'bind'\r\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\r\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\r\n\r\n\t} );\n\n\t/**\r\n\t *\r\n\t * A group of objects that receives a shared animation state.\r\n\t *\r\n\t * Usage:\r\n\t *\r\n\t *  - Add objects you would otherwise pass as 'root' to the\r\n\t *    constructor or the .clipAction method of AnimationMixer.\r\n\t *\r\n\t *  - Instead pass this object as 'root'.\r\n\t *\r\n\t *  - You can also add and remove objects later when the mixer\r\n\t *    is running.\r\n\t *\r\n\t * Note:\r\n\t *\r\n\t *    Objects of this class appear as one object to the mixer,\r\n\t *    so cache control of the individual objects must be done\r\n\t *    on the group.\r\n\t *\r\n\t * Limitation:\r\n\t *\r\n\t *  - The animated properties must be compatible among the\r\n\t *    all objects in the group.\r\n\t *\r\n\t *  - A single property can either be controlled through a\r\n\t *    target group or directly, but not both.\r\n\t *\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction AnimationObjectGroup() {\r\n\r\n\t\tthis.uuid = _Math.generateUUID();\r\n\r\n\t\t// cached objects followed by the active ones\r\n\t\tthis._objects = Array.prototype.slice.call( arguments );\r\n\r\n\t\tthis.nCachedObjects_ = 0; // threshold\r\n\t\t// note: read by PropertyBinding.Composite\r\n\r\n\t\tvar indices = {};\r\n\t\tthis._indicesByUUID = indices; // for bookkeeping\r\n\r\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tindices[ arguments[ i ].uuid ] = i;\r\n\r\n\t\t}\r\n\r\n\t\tthis._paths = []; // inside: string\r\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\r\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\r\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tthis.stats = {\r\n\r\n\t\t\tobjects: {\r\n\t\t\t\tget total() {\r\n\r\n\t\t\t\t\treturn scope._objects.length;\r\n\r\n\t\t\t\t},\r\n\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tget bindingsPerObject() {\r\n\r\n\t\t\t\treturn scope._bindings.length;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tObject.assign( AnimationObjectGroup.prototype, {\r\n\r\n\t\tisAnimationObjectGroup: true,\r\n\r\n\t\tadd: function () {\r\n\r\n\t\t\tvar objects = this._objects,\r\n\t\t\t\tnObjects = objects.length,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\tpaths = this._paths,\r\n\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = bindings.length,\r\n\t\t\t\tknownObject = undefined;\r\n\r\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar object = arguments[ i ],\r\n\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\t\tif ( index === undefined ) {\r\n\r\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\r\n\r\n\t\t\t\t\tindex = nObjects ++;\r\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\r\n\t\t\t\t\tobjects.push( object );\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( index < nCachedObjects ) {\r\n\r\n\t\t\t\t\tknownObject = objects[ index ];\r\n\r\n\t\t\t\t\t// move existing object to the ACTIVE region\r\n\r\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\r\n\r\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\r\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\r\n\t\t\t\t\t\tif ( binding === undefined ) {\r\n\r\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\r\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\r\n\t\t\t\t\t\t\t// or may not exist\r\n\r\n\t\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( objects[ index ] !== knownObject ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\r\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\r\n\r\n\t\t\t\t} // else the object is already where we want it to be\r\n\r\n\t\t\t} // for arguments\r\n\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t\t},\r\n\r\n\t\tremove: function () {\r\n\r\n\t\t\tvar objects = this._objects,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = bindings.length;\r\n\r\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar object = arguments[ i ],\r\n\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\r\n\r\n\t\t\t\t\t// move existing object into the CACHED region\r\n\r\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\r\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\r\n\r\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\r\n\r\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\r\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\r\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\r\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} // for arguments\r\n\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t\t},\r\n\r\n\t\t// remove & forget\r\n\t\tuncache: function () {\r\n\r\n\t\t\tvar objects = this._objects,\r\n\t\t\t\tnObjects = objects.length,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = bindings.length;\r\n\r\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar object = arguments[ i ],\r\n\t\t\t\t\tuuid = object.uuid,\r\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\r\n\r\n\t\t\t\t\tif ( index < nCachedObjects ) {\r\n\r\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\r\n\r\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\r\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\r\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\t\t// last cached object takes this object's place\r\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\t\t\t// last object goes to the activated slot and pop\r\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\r\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\r\n\t\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\r\n\r\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\r\n\t\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// object is active, just swap with the last and pop\r\n\r\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\r\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\r\n\t\t\t\t\t\tobjects[ index ] = lastObject;\r\n\t\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\r\n\r\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\r\n\t\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} // cached or active\r\n\r\n\t\t\t\t} // if object is known\r\n\r\n\t\t\t} // for arguments\r\n\r\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t\t},\r\n\r\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\r\n\r\n\t\tsubscribe_: function ( path, parsedPath ) {\r\n\r\n\t\t\t// returns an array of bindings for the given path that is changed\r\n\t\t\t// according to the contained objects in the group\r\n\r\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\t\tindex = indicesByPath[ path ],\r\n\t\t\t\tbindings = this._bindings;\r\n\r\n\t\t\tif ( index !== undefined ) return bindings[ index ];\r\n\r\n\t\t\tvar paths = this._paths,\r\n\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\tobjects = this._objects,\r\n\t\t\t\tnObjects = objects.length,\r\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\t\tbindingsForPath = new Array( nObjects );\r\n\r\n\t\t\tindex = bindings.length;\r\n\r\n\t\t\tindicesByPath[ path ] = index;\r\n\r\n\t\t\tpaths.push( path );\r\n\t\t\tparsedPaths.push( parsedPath );\r\n\t\t\tbindings.push( bindingsForPath );\r\n\r\n\t\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar object = objects[ i ];\r\n\t\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn bindingsForPath;\r\n\r\n\t\t},\r\n\r\n\t\tunsubscribe_: function ( path ) {\r\n\r\n\t\t\t// tells the group to forget about a property path and no longer\r\n\t\t\t// update the array previously obtained with 'subscribe_'\r\n\r\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\t\tindex = indicesByPath[ path ];\r\n\r\n\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\tvar paths = this._paths,\r\n\t\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\t\tbindings = this._bindings,\r\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\r\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\r\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\r\n\r\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\r\n\r\n\t\t\t\tbindings[ index ] = lastBindings;\r\n\t\t\t\tbindings.pop();\r\n\r\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\r\n\t\t\t\tparsedPaths.pop();\r\n\r\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\r\n\t\t\t\tpaths.pop();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t *\r\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\r\n\t * objects.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t *\r\n\t */\r\n\r\n\tfunction AnimationAction( mixer, clip, localRoot ) {\r\n\r\n\t\tthis._mixer = mixer;\r\n\t\tthis._clip = clip;\r\n\t\tthis._localRoot = localRoot || null;\r\n\r\n\t\tvar tracks = clip.tracks,\r\n\t\t\tnTracks = tracks.length,\r\n\t\t\tinterpolants = new Array( nTracks );\r\n\r\n\t\tvar interpolantSettings = {\r\n\t\t\tendingStart: ZeroCurvatureEnding,\r\n\t\t\tendingEnd: ZeroCurvatureEnding\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\r\n\t\t\tinterpolants[ i ] = interpolant;\r\n\t\t\tinterpolant.settings = interpolantSettings;\r\n\r\n\t\t}\r\n\r\n\t\tthis._interpolantSettings = interpolantSettings;\r\n\r\n\t\tthis._interpolants = interpolants; // bound by the mixer\r\n\r\n\t\t// inside: PropertyMixer (managed by the mixer)\r\n\t\tthis._propertyBindings = new Array( nTracks );\r\n\r\n\t\tthis._cacheIndex = null; // for the memory manager\r\n\t\tthis._byClipCacheIndex = null; // for the memory manager\r\n\r\n\t\tthis._timeScaleInterpolant = null;\r\n\t\tthis._weightInterpolant = null;\r\n\r\n\t\tthis.loop = LoopRepeat;\r\n\t\tthis._loopCount = - 1;\r\n\r\n\t\t// global mixer time when the action is to be started\r\n\t\t// it's set back to 'null' upon start of the action\r\n\t\tthis._startTime = null;\r\n\r\n\t\t// scaled local time of the action\r\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\r\n\t\tthis.time = 0;\r\n\r\n\t\tthis.timeScale = 1;\r\n\t\tthis._effectiveTimeScale = 1;\r\n\r\n\t\tthis.weight = 1;\r\n\t\tthis._effectiveWeight = 1;\r\n\r\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\r\n\r\n\t\tthis.paused = false; // true -> zero effective time scale\r\n\t\tthis.enabled = true; // false -> zero effective weight\r\n\r\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\r\n\r\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\r\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\r\n\r\n\t}\r\n\r\n\tObject.assign( AnimationAction.prototype, {\r\n\r\n\t\t// State & Scheduling\r\n\r\n\t\tplay: function () {\r\n\r\n\t\t\tthis._mixer._activateAction( this );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tstop: function () {\r\n\r\n\t\t\tthis._mixer._deactivateAction( this );\r\n\r\n\t\t\treturn this.reset();\r\n\r\n\t\t},\r\n\r\n\t\treset: function () {\r\n\r\n\t\t\tthis.paused = false;\r\n\t\t\tthis.enabled = true;\r\n\r\n\t\t\tthis.time = 0; // restart clip\r\n\t\t\tthis._loopCount = - 1;// forget previous loops\r\n\t\t\tthis._startTime = null;// forget scheduling\r\n\r\n\t\t\treturn this.stopFading().stopWarping();\r\n\r\n\t\t},\r\n\r\n\t\tisRunning: function () {\r\n\r\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\r\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\r\n\r\n\t\t},\r\n\r\n\t\t// return true when play has been called\r\n\t\tisScheduled: function () {\r\n\r\n\t\t\treturn this._mixer._isActiveAction( this );\r\n\r\n\t\t},\r\n\r\n\t\tstartAt: function ( time ) {\r\n\r\n\t\t\tthis._startTime = time;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetLoop: function ( mode, repetitions ) {\r\n\r\n\t\t\tthis.loop = mode;\r\n\t\t\tthis.repetitions = repetitions;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// Weight\r\n\r\n\t\t// set the weight stopping any scheduled fading\r\n\t\t// although .enabled = false yields an effective weight of zero, this\r\n\t\t// method does *not* change .enabled, because it would be confusing\r\n\t\tsetEffectiveWeight: function ( weight ) {\r\n\r\n\t\t\tthis.weight = weight;\r\n\r\n\t\t\t// note: same logic as when updated at runtime\r\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\r\n\r\n\t\t\treturn this.stopFading();\r\n\r\n\t\t},\r\n\r\n\t\t// return the weight considering fading and .enabled\r\n\t\tgetEffectiveWeight: function () {\r\n\r\n\t\t\treturn this._effectiveWeight;\r\n\r\n\t\t},\r\n\r\n\t\tfadeIn: function ( duration ) {\r\n\r\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\r\n\r\n\t\t},\r\n\r\n\t\tfadeOut: function ( duration ) {\r\n\r\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\r\n\r\n\t\t},\r\n\r\n\t\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\r\n\r\n\t\t\tfadeOutAction.fadeOut( duration );\r\n\t\t\tthis.fadeIn( duration );\r\n\r\n\t\t\tif ( warp ) {\r\n\r\n\t\t\t\tvar fadeInDuration = this._clip.duration,\r\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\r\n\r\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\r\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\r\n\r\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\r\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\r\n\r\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\r\n\r\n\t\t},\r\n\r\n\t\tstopFading: function () {\r\n\r\n\t\t\tvar weightInterpolant = this._weightInterpolant;\r\n\r\n\t\t\tif ( weightInterpolant !== null ) {\r\n\r\n\t\t\t\tthis._weightInterpolant = null;\r\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// Time Scale Control\r\n\r\n\t\t// set the time scale stopping any scheduled warping\r\n\t\t// although .paused = true yields an effective time scale of zero, this\r\n\t\t// method does *not* change .paused, because it would be confusing\r\n\t\tsetEffectiveTimeScale: function ( timeScale ) {\r\n\r\n\t\t\tthis.timeScale = timeScale;\r\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\r\n\r\n\t\t\treturn this.stopWarping();\r\n\r\n\t\t},\r\n\r\n\t\t// return the time scale considering warping and .paused\r\n\t\tgetEffectiveTimeScale: function () {\r\n\r\n\t\t\treturn this._effectiveTimeScale;\r\n\r\n\t\t},\r\n\r\n\t\tsetDuration: function ( duration ) {\r\n\r\n\t\t\tthis.timeScale = this._clip.duration / duration;\r\n\r\n\t\t\treturn this.stopWarping();\r\n\r\n\t\t},\r\n\r\n\t\tsyncWith: function ( action ) {\r\n\r\n\t\t\tthis.time = action.time;\r\n\t\t\tthis.timeScale = action.timeScale;\r\n\r\n\t\t\treturn this.stopWarping();\r\n\r\n\t\t},\r\n\r\n\t\thalt: function ( duration ) {\r\n\r\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\r\n\r\n\t\t},\r\n\r\n\t\twarp: function ( startTimeScale, endTimeScale, duration ) {\r\n\r\n\t\t\tvar mixer = this._mixer, now = mixer.time,\r\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\r\n\r\n\t\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\t\tif ( interpolant === null ) {\r\n\r\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\r\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar times = interpolant.parameterPositions,\r\n\t\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\t\ttimes[ 0 ] = now;\r\n\t\t\ttimes[ 1 ] = now + duration;\r\n\r\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\r\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tstopWarping: function () {\r\n\r\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\tif ( timeScaleInterpolant !== null ) {\r\n\r\n\t\t\t\tthis._timeScaleInterpolant = null;\r\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// Object Accessors\r\n\r\n\t\tgetMixer: function () {\r\n\r\n\t\t\treturn this._mixer;\r\n\r\n\t\t},\r\n\r\n\t\tgetClip: function () {\r\n\r\n\t\t\treturn this._clip;\r\n\r\n\t\t},\r\n\r\n\t\tgetRoot: function () {\r\n\r\n\t\t\treturn this._localRoot || this._mixer._root;\r\n\r\n\t\t},\r\n\r\n\t\t// Interna\r\n\r\n\t\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\r\n\r\n\t\t\t// called by the mixer\r\n\r\n\t\t\tif ( ! this.enabled ) {\r\n\r\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\r\n\r\n\t\t\t\tthis._updateWeight( time );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar startTime = this._startTime;\r\n\r\n\t\t\tif ( startTime !== null ) {\r\n\r\n\t\t\t\t// check for scheduled start of action\r\n\r\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\r\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\r\n\r\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// start\r\n\r\n\t\t\t\tthis._startTime = null; // unschedule\r\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// apply time scale and advance time\r\n\r\n\t\t\tdeltaTime *= this._updateTimeScale( time );\r\n\t\t\tvar clipTime = this._updateTime( deltaTime );\r\n\r\n\t\t\t// note: _updateTime may disable the action resulting in\r\n\t\t\t// an effective weight of 0\r\n\r\n\t\t\tvar weight = this._updateWeight( time );\r\n\r\n\t\t\tif ( weight > 0 ) {\r\n\r\n\t\t\t\tvar interpolants = this._interpolants;\r\n\t\t\t\tvar propertyMixers = this._propertyBindings;\r\n\r\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\r\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_updateWeight: function ( time ) {\r\n\r\n\t\t\tvar weight = 0;\r\n\r\n\t\t\tif ( this.enabled ) {\r\n\r\n\t\t\t\tweight = this.weight;\r\n\t\t\t\tvar interpolant = this._weightInterpolant;\r\n\r\n\t\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\t\tweight *= interpolantValue;\r\n\r\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\t\tthis.stopFading();\r\n\r\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\r\n\r\n\t\t\t\t\t\t\t// faded out, disable\r\n\t\t\t\t\t\t\tthis.enabled = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._effectiveWeight = weight;\r\n\t\t\treturn weight;\r\n\r\n\t\t},\r\n\r\n\t\t_updateTimeScale: function ( time ) {\r\n\r\n\t\t\tvar timeScale = 0;\r\n\r\n\t\t\tif ( ! this.paused ) {\r\n\r\n\t\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\t\ttimeScale *= interpolantValue;\r\n\r\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\t\tthis.stopWarping();\r\n\r\n\t\t\t\t\t\tif ( timeScale === 0 ) {\r\n\r\n\t\t\t\t\t\t\t// motion has halted, pause\r\n\t\t\t\t\t\t\tthis.paused = true;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// warp done - apply final time scale\r\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._effectiveTimeScale = timeScale;\r\n\t\t\treturn timeScale;\r\n\r\n\t\t},\r\n\r\n\t\t_updateTime: function ( deltaTime ) {\r\n\r\n\t\t\tvar time = this.time + deltaTime;\r\n\t\t\tvar duration = this._clip.duration;\r\n\t\t\tvar loop = this.loop;\r\n\t\t\tvar loopCount = this._loopCount;\r\n\r\n\t\t\tvar pingPong = ( loop === LoopPingPong );\r\n\r\n\t\t\tif ( deltaTime === 0 ) {\r\n\r\n\t\t\t\tif ( loopCount === - 1 ) return time;\r\n\r\n\t\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( loop === LoopOnce ) {\r\n\r\n\t\t\t\tif ( loopCount === - 1 ) {\r\n\r\n\t\t\t\t\t// just started\r\n\r\n\t\t\t\t\tthis._loopCount = 0;\r\n\t\t\t\t\tthis._setEndings( true, true, false );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\thandle_stop: {\r\n\r\n\t\t\t\t\tif ( time >= duration ) {\r\n\r\n\t\t\t\t\t\ttime = duration;\r\n\r\n\t\t\t\t\t} else if ( time < 0 ) {\r\n\r\n\t\t\t\t\t\ttime = 0;\r\n\r\n\t\t\t\t\t} else break handle_stop;\r\n\r\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else { // repetitive Repeat or PingPong\r\n\r\n\t\t\t\tif ( loopCount === - 1 ) {\r\n\r\n\t\t\t\t\t// just started\r\n\r\n\t\t\t\t\tif ( deltaTime >= 0 ) {\r\n\r\n\t\t\t\t\t\tloopCount = 0;\r\n\r\n\t\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// when looping in reverse direction, the initial\r\n\t\t\t\t\t\t// transition through zero counts as a repetition,\r\n\t\t\t\t\t\t// so leave loopCount at -1\r\n\r\n\t\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( time >= duration || time < 0 ) {\r\n\r\n\t\t\t\t\t// wrap around\r\n\r\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\r\n\t\t\t\t\ttime -= duration * loopDelta;\r\n\r\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\r\n\r\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\r\n\r\n\t\t\t\t\tif ( pending <= 0 ) {\r\n\r\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\r\n\r\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\r\n\r\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// keep running\r\n\r\n\t\t\t\t\t\tif ( pending === 1 ) {\r\n\r\n\t\t\t\t\t\t\t// entering the last round\r\n\r\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\r\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._loopCount = loopCount;\r\n\r\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\r\n\r\n\t\t\t\t\t// invert time for the \"pong round\"\r\n\r\n\t\t\t\t\tthis.time = time;\r\n\t\t\t\t\treturn duration - time;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.time = time;\r\n\t\t\treturn time;\r\n\r\n\t\t},\r\n\r\n\t\t_setEndings: function ( atStart, atEnd, pingPong ) {\r\n\r\n\t\t\tvar settings = this._interpolantSettings;\r\n\r\n\t\t\tif ( pingPong ) {\r\n\r\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\r\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\r\n\r\n\t\t\t\tif ( atStart ) {\r\n\r\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( atEnd ) {\r\n\r\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_scheduleFading: function ( duration, weightNow, weightThen ) {\r\n\r\n\t\t\tvar mixer = this._mixer, now = mixer.time,\r\n\t\t\t\tinterpolant = this._weightInterpolant;\r\n\r\n\t\t\tif ( interpolant === null ) {\r\n\r\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\r\n\t\t\t\tthis._weightInterpolant = interpolant;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar times = interpolant.parameterPositions,\r\n\t\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\t\ttimes[ 0 ] = now;\r\n\t\t\tvalues[ 0 ] = weightNow;\r\n\t\t\ttimes[ 1 ] = now + duration;\r\n\t\t\tvalues[ 1 ] = weightThen;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t *\r\n\t * Player for AnimationClips.\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t * @author tschw\r\n\t */\r\n\r\n\tfunction AnimationMixer( root ) {\r\n\r\n\t\tthis._root = root;\r\n\t\tthis._initMemoryManager();\r\n\t\tthis._accuIndex = 0;\r\n\r\n\t\tthis.time = 0;\r\n\r\n\t\tthis.timeScale = 1.0;\r\n\r\n\t}\r\n\r\n\tAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\r\n\r\n\t\tconstructor: AnimationMixer,\r\n\r\n\t\t_bindAction: function ( action, prototypeAction ) {\r\n\r\n\t\t\tvar root = action._localRoot || this._root,\r\n\t\t\t\ttracks = action._clip.tracks,\r\n\t\t\t\tnTracks = tracks.length,\r\n\t\t\t\tbindings = action._propertyBindings,\r\n\t\t\t\tinterpolants = action._interpolants,\r\n\t\t\t\trootUuid = root.uuid,\r\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( bindingsByName === undefined ) {\r\n\r\n\t\t\t\tbindingsByName = {};\r\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\t\t\tvar track = tracks[ i ],\r\n\t\t\t\t\ttrackName = track.name,\r\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\r\n\r\n\t\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbinding = bindings[ i ];\r\n\r\n\t\t\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\t\t\t// existing binding, make sure the cache knows\r\n\r\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\r\n\r\n\t\t\t\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\r\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\r\n\r\n\t\t\t\t\tbinding = new PropertyMixer(\r\n\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\r\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\r\n\r\n\t\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_activateAction: function ( action ) {\r\n\r\n\t\t\tif ( ! this._isActiveAction( action ) ) {\r\n\r\n\t\t\t\tif ( action._cacheIndex === null ) {\r\n\r\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\r\n\t\t\t\t\t// appears to be still using it -> rebind\r\n\r\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\r\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\r\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n\t\t\t\t\tthis._bindAction( action,\r\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\r\n\r\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar bindings = action._propertyBindings;\r\n\r\n\t\t\t\t// increment reference counts / sort out state\r\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\r\n\r\n\t\t\t\t\t\tthis._lendBinding( binding );\r\n\t\t\t\t\t\tbinding.saveOriginalState();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._lendAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_deactivateAction: function ( action ) {\r\n\r\n\t\t\tif ( this._isActiveAction( action ) ) {\r\n\r\n\t\t\t\tvar bindings = action._propertyBindings;\r\n\r\n\t\t\t\t// decrement reference counts / sort out state\r\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\r\n\r\n\t\t\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\t\t\tthis._takeBackBinding( binding );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._takeBackAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// Memory manager\r\n\r\n\t\t_initMemoryManager: function () {\r\n\r\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\r\n\t\t\tthis._nActiveActions = 0;\r\n\r\n\t\t\tthis._actionsByClip = {};\r\n\t\t\t// inside:\r\n\t\t\t// {\r\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\r\n\t\t\t// \tactionByRoot: AnimationAction - lookup\r\n\t\t\t// }\r\n\r\n\r\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\r\n\t\t\tthis._nActiveBindings = 0;\r\n\r\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\r\n\r\n\r\n\t\t\tthis._controlInterpolants = []; // same game as above\r\n\t\t\tthis._nActiveControlInterpolants = 0;\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tthis.stats = {\r\n\r\n\t\t\t\tactions: {\r\n\t\t\t\t\tget total() {\r\n\r\n\t\t\t\t\t\treturn scope._actions.length;\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\t\treturn scope._nActiveActions;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tbindings: {\r\n\t\t\t\t\tget total() {\r\n\r\n\t\t\t\t\t\treturn scope._bindings.length;\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\t\treturn scope._nActiveBindings;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tcontrolInterpolants: {\r\n\t\t\t\t\tget total() {\r\n\r\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\t// Memory management for AnimationAction objects\r\n\r\n\t\t_isActiveAction: function ( action ) {\r\n\r\n\t\t\tvar index = action._cacheIndex;\r\n\t\t\treturn index !== null && index < this._nActiveActions;\r\n\r\n\t\t},\r\n\r\n\t\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\r\n\r\n\t\t\tif ( actionsForClip === undefined ) {\r\n\r\n\t\t\t\tactionsForClip = {\r\n\r\n\t\t\t\t\tknownActions: [ action ],\r\n\t\t\t\t\tactionByRoot: {}\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\taction._byClipCacheIndex = 0;\r\n\r\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\r\n\r\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\r\n\t\t\t\tknownActions.push( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t\taction._cacheIndex = actions.length;\r\n\t\t\tactions.push( action );\r\n\r\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\r\n\r\n\t\t},\r\n\r\n\t\t_removeInactiveAction: function ( action ) {\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\r\n\t\t\t\tcacheIndex = action._cacheIndex;\r\n\r\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\t\tactions.pop();\r\n\r\n\t\t\taction._cacheIndex = null;\r\n\r\n\r\n\t\t\tvar clipUuid = action._clip.uuid,\r\n\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\r\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\r\n\r\n\t\t\t\tlastKnownAction =\r\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\r\n\r\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\r\n\r\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\r\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\r\n\t\t\tknownActionsForClip.pop();\r\n\r\n\t\t\taction._byClipCacheIndex = null;\r\n\r\n\r\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\r\n\t\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\r\n\r\n\t\t\tdelete actionByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( knownActionsForClip.length === 0 ) {\r\n\r\n\t\t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t\t},\r\n\r\n\t\t_removeInactiveBindingsForAction: function ( action ) {\r\n\r\n\t\t\tvar bindings = action._propertyBindings;\r\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\r\n\r\n\t\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_lendAction: function ( action ) {\r\n\r\n\t\t\t// [ active actions |  inactive actions  ]\r\n\t\t\t// [  active actions >| inactive actions ]\r\n\t\t\t//                 s        a\r\n\t\t\t//                  <-swap->\r\n\t\t\t//                 a        s\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\r\n\r\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\r\n\r\n\t\t\taction._cacheIndex = lastActiveIndex;\r\n\t\t\tactions[ lastActiveIndex ] = action;\r\n\r\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\r\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\r\n\r\n\t\t},\r\n\r\n\t\t_takeBackAction: function ( action ) {\r\n\r\n\t\t\t// [  active actions  | inactive actions ]\r\n\t\t\t// [ active actions |< inactive actions  ]\r\n\t\t\t//        a        s\r\n\t\t\t//         <-swap->\r\n\t\t\t//        s        a\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\r\n\r\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\r\n\r\n\t\t\taction._cacheIndex = firstInactiveIndex;\r\n\t\t\tactions[ firstInactiveIndex ] = action;\r\n\r\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\r\n\t\t\tactions[ prevIndex ] = lastActiveAction;\r\n\r\n\t\t},\r\n\r\n\t\t// Memory management for PropertyMixer objects\r\n\r\n\t\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\r\n\r\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n\t\t\t\tbindings = this._bindings;\r\n\r\n\t\t\tif ( bindingByName === undefined ) {\r\n\r\n\t\t\t\tbindingByName = {};\r\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbindingByName[ trackName ] = binding;\r\n\r\n\t\t\tbinding._cacheIndex = bindings.length;\r\n\t\t\tbindings.push( binding );\r\n\r\n\t\t},\r\n\r\n\t\t_removeInactiveBinding: function ( binding ) {\r\n\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tpropBinding = binding.binding,\r\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\r\n\t\t\t\ttrackName = propBinding.path,\r\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\r\n\t\t\t\tcacheIndex = binding._cacheIndex;\r\n\r\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\r\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\r\n\t\t\tbindings.pop();\r\n\r\n\t\t\tdelete bindingByName[ trackName ];\r\n\r\n\t\t\tremove_empty_map: {\r\n\r\n\t\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\r\n\r\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_lendBinding: function ( binding ) {\r\n\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\r\n\r\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\r\n\r\n\t\t\tbinding._cacheIndex = lastActiveIndex;\r\n\t\t\tbindings[ lastActiveIndex ] = binding;\r\n\r\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\r\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\r\n\r\n\t\t},\r\n\r\n\t\t_takeBackBinding: function ( binding ) {\r\n\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\r\n\r\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\r\n\r\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\r\n\t\t\tbindings[ firstInactiveIndex ] = binding;\r\n\r\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\r\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\r\n\r\n\t\t},\r\n\r\n\r\n\t\t// Memory management of Interpolants for weight and time scale\r\n\r\n\t\t_lendControlInterpolant: function () {\r\n\r\n\t\t\tvar interpolants = this._controlInterpolants,\r\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\r\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\r\n\r\n\t\t\tif ( interpolant === undefined ) {\r\n\r\n\t\t\t\tinterpolant = new LinearInterpolant(\r\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\r\n\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\r\n\r\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\r\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn interpolant;\r\n\r\n\t\t},\r\n\r\n\t\t_takeBackControlInterpolant: function ( interpolant ) {\r\n\r\n\t\t\tvar interpolants = this._controlInterpolants,\r\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\r\n\r\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\r\n\r\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\r\n\r\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\r\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\r\n\r\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\r\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\r\n\r\n\t\t},\r\n\r\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\r\n\r\n\t\t// return an action for a clip optionally using a custom root target\r\n\t\t// object (this method allocates a lot of dynamic memory in case a\r\n\t\t// previously unknown clip/root combination is specified)\r\n\t\tclipAction: function ( clip, optionalRoot ) {\r\n\r\n\t\t\tvar root = optionalRoot || this._root,\r\n\t\t\t\trootUuid = root.uuid,\r\n\r\n\t\t\t\tclipObject = typeof clip === 'string' ?\r\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\r\n\r\n\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\r\n\r\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\r\n\t\t\t\tprototypeAction = null;\r\n\r\n\t\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\t\tvar existingAction =\r\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\r\n\r\n\t\t\t\tif ( existingAction !== undefined ) {\r\n\r\n\t\t\t\t\treturn existingAction;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// we know the clip, so we don't have to parse all\r\n\t\t\t\t// the bindings again but can just copy\r\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\r\n\r\n\t\t\t\t// also, take the clip from the prototype action\r\n\t\t\t\tif ( clipObject === null )\r\n\t\t\t\t\tclipObject = prototypeAction._clip;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// clip must be known when specified via string\r\n\t\t\tif ( clipObject === null ) return null;\r\n\r\n\t\t\t// allocate all resources required to run it\r\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\r\n\r\n\t\t\tthis._bindAction( newAction, prototypeAction );\r\n\r\n\t\t\t// and make the action known to the memory manager\r\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\r\n\r\n\t\t\treturn newAction;\r\n\r\n\t\t},\r\n\r\n\t\t// get an existing action\r\n\t\texistingAction: function ( clip, optionalRoot ) {\r\n\r\n\t\t\tvar root = optionalRoot || this._root,\r\n\t\t\t\trootUuid = root.uuid,\r\n\r\n\t\t\t\tclipObject = typeof clip === 'string' ?\r\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\r\n\r\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\r\n\r\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n\t\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t},\r\n\r\n\t\t// deactivates all previously scheduled actions\r\n\t\tstopAllAction: function () {\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tnActions = this._nActiveActions,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\t\tthis._nActiveActions = 0;\r\n\t\t\tthis._nActiveBindings = 0;\r\n\r\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\r\n\t\t\t\tactions[ i ].reset();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\r\n\t\t\t\tbindings[ i ].useCount = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// advance the time and update apply the animation\r\n\t\tupdate: function ( deltaTime ) {\r\n\r\n\t\t\tdeltaTime *= this.timeScale;\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tnActions = this._nActiveActions,\r\n\r\n\t\t\t\ttime = this.time += deltaTime,\r\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\r\n\r\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\r\n\r\n\t\t\t// run active actions\r\n\r\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\r\n\t\t\t\tvar action = actions[ i ];\r\n\r\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update scene graph\r\n\r\n\t\t\tvar bindings = this._bindings,\r\n\t\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\r\n\t\t\t\tbindings[ i ].apply( accuIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// return this mixer's root target object\r\n\t\tgetRoot: function () {\r\n\r\n\t\t\treturn this._root;\r\n\r\n\t\t},\r\n\r\n\t\t// free all resources specific to a particular clip\r\n\t\tuncacheClip: function ( clip ) {\r\n\r\n\t\t\tvar actions = this._actions,\r\n\t\t\t\tclipUuid = clip.uuid,\r\n\t\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\r\n\r\n\t\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\r\n\t\t\t\t// iteration state and also require updating the state we can\r\n\t\t\t\t// just throw away\r\n\r\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\r\n\r\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tvar action = actionsToRemove[ i ];\r\n\r\n\t\t\t\t\tthis._deactivateAction( action );\r\n\r\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\r\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\r\n\r\n\t\t\t\t\taction._cacheIndex = null;\r\n\t\t\t\t\taction._byClipCacheIndex = null;\r\n\r\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\t\t\t\tactions.pop();\r\n\r\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// free all resources specific to a particular root target object\r\n\t\tuncacheRoot: function ( root ) {\r\n\r\n\t\t\tvar rootUuid = root.uuid,\r\n\t\t\t\tactionsByClip = this._actionsByClip;\r\n\r\n\t\t\tfor ( var clipUuid in actionsByClip ) {\r\n\r\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\r\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\r\n\r\n\t\t\t\tif ( action !== undefined ) {\r\n\r\n\t\t\t\t\tthis._deactivateAction( action );\r\n\t\t\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( bindingByName !== undefined ) {\r\n\r\n\t\t\t\tfor ( var trackName in bindingByName ) {\r\n\r\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\r\n\t\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// remove a targeted clip from the cache\r\n\t\tuncacheAction: function ( clip, optionalRoot ) {\r\n\r\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\r\n\r\n\t\t\tif ( action !== null ) {\r\n\r\n\t\t\t\tthis._deactivateAction( action );\r\n\t\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Uniform( value ) {\r\n\r\n\t\tif ( typeof value === 'string' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\r\n\t\t\tvalue = arguments[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t\tthis.value = value;\r\n\r\n\t}\r\n\r\n\tUniform.prototype.clone = function () {\r\n\r\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\r\n\r\n\t};\n\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\r\n\tfunction InstancedBufferGeometry() {\r\n\r\n\t\tBufferGeometry.call( this );\r\n\r\n\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\tthis.maxInstancedCount = undefined;\r\n\r\n\t}\r\n\r\n\tInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\r\n\r\n\t\tconstructor: InstancedBufferGeometry,\r\n\r\n\t\tisInstancedBufferGeometry: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tBufferGeometry.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.maxInstancedCount = source.maxInstancedCount;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\r\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\r\n\r\n\t\tInterleavedBuffer.call( this, array, stride );\r\n\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n\t}\r\n\r\n\tInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\r\n\r\n\t\tconstructor: InstancedInterleavedBuffer,\r\n\r\n\t\tisInstancedInterleavedBuffer: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tInterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\r\n\tfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\r\n\r\n\t\tif ( typeof ( normalized ) === 'number' ) {\r\n\r\n\t\t\tmeshPerAttribute = normalized;\r\n\r\n\t\t\tnormalized = false;\r\n\r\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\r\n\r\n\t\t}\r\n\r\n\t\tBufferAttribute.call( this, array, itemSize, normalized );\r\n\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n\t}\r\n\r\n\tInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\r\n\r\n\t\tconstructor: InstancedBufferAttribute,\r\n\r\n\t\tisInstancedBufferAttribute: true,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tBufferAttribute.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author bhouston / http://clara.io/\r\n\t * @author stephomi / http://stephaneginier.com/\r\n\t */\r\n\r\n\tfunction Raycaster( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: {},\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t\tObject.defineProperties( this.params, {\r\n\t\t\tPointCloud: {\r\n\t\t\t\tget: function () {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\treturn this.Points;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tfunction ascSort( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t}\r\n\r\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tObject.assign( Raycaster.prototype, {\r\n\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\r\n\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n\t\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive, optionalTarget ) {\r\n\r\n\t\t\tvar intersects = optionalTarget || [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( ascSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive, optionalTarget ) {\r\n\r\n\t\t\tvar intersects = optionalTarget || [];\r\n\r\n\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( ascSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n\t *\r\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\r\n\t * The azimuthal angle (theta) is measured from the positive z-axiz.\r\n\t */\r\n\r\n\tfunction Spherical( radius, phi, theta ) {\r\n\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\r\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\r\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tObject.assign( Spherical.prototype, {\r\n\r\n\t\tset: function ( radius, phi, theta ) {\r\n\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.phi = phi;\r\n\t\t\tthis.theta = theta;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( other ) {\r\n\r\n\t\t\tthis.radius = other.radius;\r\n\t\t\tthis.phi = other.phi;\r\n\t\t\tthis.theta = other.theta;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t// restrict phi to be betwee EPS and PI-EPS\r\n\t\tmakeSafe: function () {\r\n\r\n\t\t\tvar EPS = 0.000001;\r\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromVector3: function ( v ) {\r\n\r\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\r\n\r\n\t\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tif ( this.radius === 0 ) {\r\n\r\n\t\t\t\tthis.theta = 0;\r\n\t\t\t\tthis.phi = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.theta = Math.atan2( x, z );\r\n\t\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\r\n\t *\r\n\t */\r\n\r\n\tfunction Cylindrical( radius, theta, y ) {\r\n\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\r\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\r\n\t\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tObject.assign( Cylindrical.prototype, {\r\n\r\n\t\tset: function ( radius, theta, y ) {\r\n\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.theta = theta;\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( other ) {\r\n\r\n\t\t\tthis.radius = other.radius;\r\n\t\t\tthis.theta = other.theta;\r\n\t\t\tthis.y = other.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromVector3: function ( v ) {\r\n\r\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\r\n\r\n\t\t\tthis.radius = Math.sqrt( x * x + z * z );\r\n\t\t\tthis.theta = Math.atan2( x, z );\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Box2( min, max ) {\r\n\r\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\r\n\r\n\t}\r\n\r\n\tObject.assign( Box2.prototype, {\r\n\r\n\t\tset: function ( min, max ) {\r\n\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromPoints: function ( points ) {\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCenterAndSize: function () {\r\n\r\n\t\t\tvar v1 = new Vector2();\r\n\r\n\t\t\treturn function setFromCenterAndSize( center, size ) {\r\n\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( box ) {\r\n\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmakeEmpty: function () {\r\n\r\n\t\t\tthis.min.x = this.min.y = + Infinity;\r\n\t\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tisEmpty: function () {\r\n\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t\t},\r\n\r\n\t\tgetCenter: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\r\n\t\t\t\ttarget = new Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t\t},\r\n\r\n\t\tgetSize: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\r\n\t\t\t\ttarget = new Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\r\n\r\n\t\t},\r\n\r\n\t\texpandByPoint: function ( point ) {\r\n\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\texpandByVector: function ( vector ) {\r\n\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\texpandByScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tcontainsPoint: function ( point ) {\r\n\r\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\r\n\r\n\t\t},\r\n\r\n\t\tcontainsBox: function ( box ) {\r\n\r\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\r\n\r\n\t\t},\r\n\r\n\t\tgetParameter: function ( point, target ) {\r\n\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\r\n\t\t\t\ttarget = new Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t\t);\r\n\r\n\t\t},\r\n\r\n\t\tintersectsBox: function ( box ) {\r\n\r\n\t\t\t// using 4 splitting planes to rule out intersections\r\n\r\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\r\n\r\n\t\t},\r\n\r\n\t\tclampPoint: function ( point, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToPoint: function () {\r\n\r\n\t\t\tvar v1 = new Vector2();\r\n\r\n\t\t\treturn function distanceToPoint( point ) {\r\n\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tintersect: function ( box ) {\r\n\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tunion: function ( box ) {\r\n\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttranslate: function ( offset ) {\r\n\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( box ) {\r\n\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\r\n\tfunction Line3( start, end ) {\r\n\r\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\r\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\r\n\r\n\t}\r\n\r\n\tObject.assign( Line3.prototype, {\r\n\r\n\t\tset: function ( start, end ) {\r\n\r\n\t\t\tthis.start.copy( start );\r\n\t\t\tthis.end.copy( end );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( line ) {\r\n\r\n\t\t\tthis.start.copy( line.start );\r\n\t\t\tthis.end.copy( line.end );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tgetCenter: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t\t},\r\n\r\n\t\tdelta: function ( target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn target.subVectors( this.end, this.start );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceSq: function () {\r\n\r\n\t\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t\t},\r\n\r\n\t\tdistance: function () {\r\n\r\n\t\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t\t},\r\n\r\n\t\tat: function ( t, target ) {\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\r\n\r\n\t\t},\r\n\r\n\t\tclosestPointToPointParameter: function () {\r\n\r\n\t\t\tvar startP = new Vector3();\r\n\t\t\tvar startEnd = new Vector3();\r\n\r\n\t\t\treturn function closestPointToPointParameter( point, clampToLine ) {\r\n\r\n\t\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\t\tt = _Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn t;\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\r\n\t\tclosestPointToPoint: function ( point, clampToLine, target ) {\r\n\r\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\t\tif ( target === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\r\n\t\t\t\ttarget = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\t\tthis.start.applyMatrix4( matrix );\r\n\t\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( line ) {\r\n\r\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\r\n\tfunction ImmediateRenderObject( material ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.material = material;\r\n\t\tthis.render = function ( /* renderCallback */ ) {};\r\n\r\n\t}\r\n\r\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\r\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\r\n\r\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction VertexNormalsHelper( object, size, hex, linewidth ) {\r\n\r\n\t\tthis.object = object;\r\n\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t\t//\r\n\r\n\t\tvar nNormals = 0;\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\r\n\r\n\t\t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\r\n\r\n\t\t\tnNormals = objGeometry.attributes.normal.count;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\r\n\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\r\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t\t//\r\n\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\r\n\tVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\r\n\r\n\tVertexNormalsHelper.prototype.update = ( function () {\r\n\r\n\t\tvar v1 = new Vector3();\r\n\t\tvar v2 = new Vector3();\r\n\t\tvar normalMatrix = new Matrix3();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\t\tif ( objGeometry && objGeometry.isGeometry ) {\r\n\r\n\t\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\t\tvar idx = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\r\n\r\n\t\t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n\t\t\t\tvar idx = 0;\r\n\r\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t};\r\n\r\n\t}() );\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction SpotLightHelper( light, color ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tvar positions = [\r\n\t\t\t0, 0, 0, \t0, 0, 1,\r\n\t\t\t0, 0, 0, \t1, 0, 1,\r\n\t\t\t0, 0, 0,\t- 1, 0, 1,\r\n\t\t\t0, 0, 0, \t0, 1, 1,\r\n\t\t\t0, 0, 0, \t0, - 1, 1\r\n\t\t];\r\n\r\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\r\n\r\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\r\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\r\n\r\n\t\t\tpositions.push(\r\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\r\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { fog: false } );\r\n\r\n\t\tthis.cone = new LineSegments( geometry, material );\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\r\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\r\n\r\n\tSpotLightHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\r\n\t};\r\n\r\n\tSpotLightHelper.prototype.update = function () {\r\n\r\n\t\tvar vector = new Vector3();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\r\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\t\tvector.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\t\tthis.cone.lookAt( vector );\r\n\r\n\t\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\t\tthis.cone.material.color.set( this.color );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.cone.material.color.copy( this.light.color );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}();\n\n\t/**\r\n\t * @author Sean Griffin / http://twitter.com/sgrif\r\n\t * @author Michael Guerrero / http://realitymeltdown.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author ikerr / http://verold.com\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction getBoneList( object ) {\r\n\r\n\t\tvar boneList = [];\r\n\r\n\t\tif ( object && object.isBone ) {\r\n\r\n\t\t\tboneList.push( object );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn boneList;\r\n\r\n\t}\r\n\r\n\tfunction SkeletonHelper( object ) {\r\n\r\n\t\tvar bones = getBoneList( object );\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tvar vertices = [];\r\n\t\tvar colors = [];\r\n\r\n\t\tvar color1 = new Color( 0, 0, 1 );\r\n\t\tvar color2 = new Color( 0, 1, 0 );\r\n\r\n\t\tfor ( var i = 0; i < bones.length; i ++ ) {\r\n\r\n\t\t\tvar bone = bones[ i ];\r\n\r\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\r\n\r\n\t\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\r\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\t\tLineSegments.call( this, geometry, material );\r\n\r\n\t\tthis.root = object;\r\n\t\tthis.bones = bones;\r\n\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t}\r\n\r\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\r\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\r\n\r\n\tSkeletonHelper.prototype.updateMatrixWorld = function () {\r\n\r\n\t\tvar vector = new Vector3();\r\n\r\n\t\tvar boneMatrix = new Matrix4();\r\n\t\tvar matrixWorldInv = new Matrix4();\r\n\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\t\tvar bones = this.bones;\r\n\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar position = geometry.getAttribute( 'position' );\r\n\r\n\t\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\r\n\r\n\t\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\r\n\r\n\t\t\t\tvar bone = bones[ i ];\r\n\r\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\r\n\r\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\r\n\t\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\r\n\t\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\tj += 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\r\n\r\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t};\r\n\r\n\t}();\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction PointLightHelper( light, sphereSize, color ) {\r\n\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\r\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\t\tMesh.call( this, geometry, material );\r\n\r\n\t\tthis.matrix = this.light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.update();\r\n\r\n\r\n\t\t/*\r\n\t\tvar distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\r\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\t\tvar d = light.distance;\r\n\r\n\t\tif ( d === 0.0 ) {\r\n\r\n\t\t\tthis.lightDistance.visible = false;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t\t}\r\n\r\n\t\tthis.add( this.lightDistance );\r\n\t\t*/\r\n\r\n\t}\r\n\r\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\r\n\tPointLightHelper.prototype.constructor = PointLightHelper;\r\n\r\n\tPointLightHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t};\r\n\r\n\tPointLightHelper.prototype.update = function () {\r\n\r\n\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\tthis.material.color.set( this.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.material.color.copy( this.light.color );\r\n\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\tvar d = this.light.distance;\r\n\r\n\t\tif ( d === 0.0 ) {\r\n\r\n\t\t\tthis.lightDistance.visible = false;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.lightDistance.visible = true;\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t\t}\r\n\t\t*/\r\n\r\n\t};\n\n\t/**\r\n\t * @author abelnation / http://github.com/abelnation\r\n\t * @author Mugen87 / http://github.com/Mugen87\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t *\r\n\t *  This helper must be added as a child of the light\r\n\t */\r\n\r\n\tfunction RectAreaLightHelper( light, color ) {\r\n\r\n\t\tthis.type = 'RectAreaLightHelper';\r\n\r\n\t\tthis.light = light;\r\n\r\n\t\tthis.color = color; // optional hardwired color for the helper\r\n\r\n\t\tvar positions = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tvar material = new LineBasicMaterial( { fog: false } );\r\n\r\n\t\tLine.call( this, geometry, material );\r\n\r\n\t\t//\r\n\r\n\t\tvar positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\r\n\r\n\t\tvar geometry2 = new BufferGeometry();\r\n\t\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\r\n\t\tgeometry2.computeBoundingSphere();\r\n\r\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { side: BackSide, fog: false } ) ) );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tRectAreaLightHelper.prototype = Object.create( Line.prototype );\r\n\tRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\r\n\r\n\tRectAreaLightHelper.prototype.update = function () {\r\n\r\n\t\tthis.scale.set( 0.5 * this.light.width, 0.5 * this.light.height, 1 );\r\n\r\n\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\tthis.material.color.set( this.color );\r\n\t\t\tthis.children[ 0 ].material.color.set( this.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\t\t// prevent hue shift\r\n\t\t\tvar c = this.material.color;\r\n\t\t\tvar max = Math.max( c.r, c.g, c.b );\r\n\t\t\tif ( max > 1 ) c.multiplyScalar( 1 / max );\r\n\r\n\t\t\tthis.children[ 0 ].material.color.copy( this.material.color );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tRectAreaLightHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\t\tthis.children[ 0 ].geometry.dispose();\r\n\t\tthis.children[ 0 ].material.dispose();\r\n\r\n\t};\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction HemisphereLightHelper( light, size, color ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tvar geometry = new OctahedronBufferGeometry( size );\r\n\t\tgeometry.rotateY( Math.PI * 0.5 );\r\n\r\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\r\n\r\n\t\tvar position = geometry.getAttribute( 'position' );\r\n\t\tvar colors = new Float32Array( position.count * 3 );\r\n\r\n\t\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\r\n\r\n\t\tthis.add( new Mesh( geometry, this.material ) );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\r\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\r\n\r\n\tHemisphereLightHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.children[ 0 ].geometry.dispose();\r\n\t\tthis.children[ 0 ].material.dispose();\r\n\r\n\t};\r\n\r\n\tHemisphereLightHelper.prototype.update = function () {\r\n\r\n\t\tvar vector = new Vector3();\r\n\r\n\t\tvar color1 = new Color();\r\n\t\tvar color2 = new Color();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tvar mesh = this.children[ 0 ];\r\n\r\n\t\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\t\tthis.material.color.set( this.color );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\r\n\r\n\t\t\t\tcolor1.copy( this.light.color );\r\n\t\t\t\tcolor2.copy( this.light.groundColor );\r\n\r\n\t\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\r\n\r\n\t\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolors.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\r\n\t\t};\r\n\r\n\t}();\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction GridHelper( size, divisions, color1, color2 ) {\r\n\r\n\t\tsize = size || 10;\r\n\t\tdivisions = divisions || 10;\r\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\r\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\r\n\r\n\t\tvar center = divisions / 2;\r\n\t\tvar step = size / divisions;\r\n\t\tvar halfSize = size / 2;\r\n\r\n\t\tvar vertices = [], colors = [];\r\n\r\n\t\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\r\n\r\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\r\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\r\n\r\n\t\t\tvar color = i === center ? color1 : color2;\r\n\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\r\n\t\t}\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\r\n\r\n\t\tLineSegments.call( this, geometry, material );\r\n\r\n\t}\r\n\r\n\tGridHelper.prototype = Object.assign( Object.create( LineSegments.prototype ), {\r\n\r\n\t\tconstructor: GridHelper,\r\n\r\n\t\tcopy: function ( source ) {\r\n\r\n\t\t\tLineSegments.prototype.copy.call( this, source );\r\n\r\n\t\t\tthis.geometry.copy( source.geometry );\r\n\t\t\tthis.material.copy( source.material );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor().copy( this );\r\n\r\n\t\t}\r\n\r\n\t} );\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / http://github.com/Mugen87\r\n\t * @author Hectate / http://www.github.com/Hectate\r\n\t */\r\n\r\n\tfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\r\n\r\n\t\tradius = radius || 10;\r\n\t\tradials = radials || 16;\r\n\t\tcircles = circles || 8;\r\n\t\tdivisions = divisions || 64;\r\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\r\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\r\n\r\n\t\tvar vertices = [];\r\n\t\tvar colors = [];\r\n\r\n\t\tvar x, z;\r\n\t\tvar v, i, j, r, color;\r\n\r\n\t\t// create the radials\r\n\r\n\t\tfor ( i = 0; i <= radials; i ++ ) {\r\n\r\n\t\t\tv = ( i / radials ) * ( Math.PI * 2 );\r\n\r\n\t\t\tx = Math.sin( v ) * radius;\r\n\t\t\tz = Math.cos( v ) * radius;\r\n\r\n\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\tvertices.push( x, 0, z );\r\n\r\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\r\n\r\n\t\t\tcolors.push( color.r, color.g, color.b );\r\n\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t}\r\n\r\n\t\t// create the circles\r\n\r\n\t\tfor ( i = 0; i <= circles; i ++ ) {\r\n\r\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\r\n\r\n\t\t\tr = radius - ( radius / circles * i );\r\n\r\n\t\t\tfor ( j = 0; j < divisions; j ++ ) {\r\n\r\n\t\t\t\t// first vertex\r\n\r\n\t\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\r\n\r\n\t\t\t\tx = Math.sin( v ) * r;\r\n\t\t\t\tz = Math.cos( v ) * r;\r\n\r\n\t\t\t\tvertices.push( x, 0, z );\r\n\t\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t\t\t// second vertex\r\n\r\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\r\n\r\n\t\t\t\tx = Math.sin( v ) * r;\r\n\t\t\t\tz = Math.cos( v ) * r;\r\n\r\n\t\t\t\tvertices.push( x, 0, z );\r\n\t\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\r\n\r\n\t\tLineSegments.call( this, geometry, material );\r\n\r\n\t}\r\n\r\n\tPolarGridHelper.prototype = Object.create( LineSegments.prototype );\r\n\tPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n\t/**\r\n\t * @author Mugen87 / http://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction PositionalAudioHelper( audio, range, divisionsInnerAngle, divisionsOuterAngle ) {\r\n\r\n\t\tthis.audio = audio;\r\n\t\tthis.range = range || 1;\r\n\t\tthis.divisionsInnerAngle = divisionsInnerAngle || 16;\r\n\t\tthis.divisionsOuterAngle = divisionsOuterAngle || 2;\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tvar divisions = this.divisionsInnerAngle + this.divisionsOuterAngle * 2;\r\n\t\tvar positions = new Float32Array( ( divisions * 3 + 3 ) * 3 );\r\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\r\n\r\n\t\tvar materialInnerAngle = new LineBasicMaterial( { color: 0x00ff00 } );\r\n\t\tvar materialOuterAngle = new LineBasicMaterial( { color: 0xffff00 } );\r\n\r\n\t\tLine.call( this, geometry, [ materialOuterAngle, materialInnerAngle ] );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tPositionalAudioHelper.prototype = Object.create( Line.prototype );\r\n\tPositionalAudioHelper.prototype.constructor = PositionalAudioHelper;\r\n\r\n\tPositionalAudioHelper.prototype.update = function () {\r\n\r\n\t\tvar audio = this.audio;\r\n\t\tvar range = this.range;\r\n\t\tvar divisionsInnerAngle = this.divisionsInnerAngle;\r\n\t\tvar divisionsOuterAngle = this.divisionsOuterAngle;\r\n\r\n\t\tvar coneInnerAngle = _Math.degToRad( audio.panner.coneInnerAngle );\r\n\t\tvar coneOuterAngle = _Math.degToRad( audio.panner.coneOuterAngle );\r\n\r\n\t\tvar halfConeInnerAngle = coneInnerAngle / 2;\r\n\t\tvar halfConeOuterAngle = coneOuterAngle / 2;\r\n\r\n\t\tvar start = 0;\r\n\t\tvar count = 0;\r\n\t\tvar i, stride;\r\n\r\n\t\tvar geometry = this.geometry;\r\n\t\tvar positionAttribute = geometry.attributes.position;\r\n\r\n\t\tgeometry.clearGroups();\r\n\r\n\t\t//\r\n\r\n\t\tfunction generateSegment( from, to, divisions, materialIndex ) {\r\n\r\n\t\t\tvar step = ( to - from ) / divisions;\r\n\r\n\t\t\tpositionAttribute.setXYZ( start, 0, 0, 0 );\r\n\t\t\tcount ++;\r\n\r\n\t\t\tfor ( i = from; i < to; i += step ) {\r\n\r\n\t\t\t\tstride = start + count;\r\n\r\n\t\t\t\tpositionAttribute.setXYZ( stride, Math.sin( i ) * range, 0, Math.cos( i ) * range );\r\n\t\t\t\tpositionAttribute.setXYZ( stride + 1, Math.sin( Math.min( i + step, to ) ) * range, 0, Math.cos( Math.min( i + step, to ) ) * range );\r\n\t\t\t\tpositionAttribute.setXYZ( stride + 2, 0, 0, 0 );\r\n\r\n\t\t\t\tcount += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.addGroup( start, count, materialIndex );\r\n\r\n\t\t\tstart += count;\r\n\t\t\tcount = 0;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tgenerateSegment( - halfConeOuterAngle, - halfConeInnerAngle, divisionsOuterAngle, 0 );\r\n\t\tgenerateSegment( - halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1 );\r\n\t\tgenerateSegment( halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0 );\r\n\r\n\t\t//\r\n\r\n\t\tpositionAttribute.needsUpdate = true;\r\n\r\n\t\tif ( coneInnerAngle === coneOuterAngle ) this.material[ 0 ].visible = false;\r\n\r\n\t};\r\n\r\n\tPositionalAudioHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material[ 0 ].dispose();\r\n\t\tthis.material[ 1 ].dispose();\r\n\r\n\t};\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction FaceNormalsHelper( object, size, hex, linewidth ) {\r\n\r\n\t\t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n\t\tthis.object = object;\r\n\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t\t//\r\n\r\n\t\tvar nNormals = 0;\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\r\n\r\n\t\t\tnNormals = objGeometry.faces.length;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\r\n\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\r\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t\t//\r\n\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\r\n\tFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\r\n\r\n\tFaceNormalsHelper.prototype.update = ( function () {\r\n\r\n\t\tvar v1 = new Vector3();\r\n\t\tvar v2 = new Vector3();\r\n\t\tvar normalMatrix = new Matrix3();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t};\r\n\r\n\t}() );\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction DirectionalLightHelper( light, size, color ) {\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tif ( size === undefined ) size = 1;\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\r\n\t\t\t- size, size, 0,\r\n\t\t\tsize, size, 0,\r\n\t\t\tsize, - size, 0,\r\n\t\t\t- size, - size, 0,\r\n\t\t\t- size, size, 0\r\n\t\t], 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { fog: false } );\r\n\r\n\t\tthis.lightPlane = new Line( geometry, material );\r\n\t\tthis.add( this.lightPlane );\r\n\r\n\t\tgeometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\r\n\r\n\t\tthis.targetLine = new Line( geometry, material );\r\n\t\tthis.add( this.targetLine );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\r\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\r\n\r\n\tDirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\t\tthis.lightPlane.geometry.dispose();\r\n\t\tthis.lightPlane.material.dispose();\r\n\t\tthis.targetLine.geometry.dispose();\r\n\t\tthis.targetLine.material.dispose();\r\n\r\n\t};\r\n\r\n\tDirectionalLightHelper.prototype.update = function () {\r\n\r\n\t\tvar v1 = new Vector3();\r\n\t\tvar v2 = new Vector3();\r\n\t\tvar v3 = new Vector3();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\t\tthis.lightPlane.lookAt( v2 );\r\n\r\n\t\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\t\tthis.lightPlane.material.color.set( this.color );\r\n\t\t\t\tthis.targetLine.material.color.set( this.color );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.lightPlane.material.color.copy( this.light.color );\r\n\t\t\t\tthis.targetLine.material.color.copy( this.light.color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.targetLine.lookAt( v2 );\r\n\t\t\tthis.targetLine.scale.z = v3.length();\r\n\r\n\t\t};\r\n\r\n\t}();\n\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author Mugen87 / https://github.com/Mugen87\r\n\t *\r\n\t *\t- shows frustum, line of sight and up of the camera\r\n\t *\t- suitable for fast updates\r\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\r\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n\t */\r\n\r\n\tfunction CameraHelper( camera ) {\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\r\n\r\n\t\tvar vertices = [];\r\n\t\tvar colors = [];\r\n\r\n\t\tvar pointMap = {};\r\n\r\n\t\t// colors\r\n\r\n\t\tvar colorFrustum = new Color( 0xffaa00 );\r\n\t\tvar colorCone = new Color( 0xff0000 );\r\n\t\tvar colorUp = new Color( 0x00aaff );\r\n\t\tvar colorTarget = new Color( 0xffffff );\r\n\t\tvar colorCross = new Color( 0x333333 );\r\n\r\n\t\t// near\r\n\r\n\t\taddLine( 'n1', 'n2', colorFrustum );\r\n\t\taddLine( 'n2', 'n4', colorFrustum );\r\n\t\taddLine( 'n4', 'n3', colorFrustum );\r\n\t\taddLine( 'n3', 'n1', colorFrustum );\r\n\r\n\t\t// far\r\n\r\n\t\taddLine( 'f1', 'f2', colorFrustum );\r\n\t\taddLine( 'f2', 'f4', colorFrustum );\r\n\t\taddLine( 'f4', 'f3', colorFrustum );\r\n\t\taddLine( 'f3', 'f1', colorFrustum );\r\n\r\n\t\t// sides\r\n\r\n\t\taddLine( 'n1', 'f1', colorFrustum );\r\n\t\taddLine( 'n2', 'f2', colorFrustum );\r\n\t\taddLine( 'n3', 'f3', colorFrustum );\r\n\t\taddLine( 'n4', 'f4', colorFrustum );\r\n\r\n\t\t// cone\r\n\r\n\t\taddLine( 'p', 'n1', colorCone );\r\n\t\taddLine( 'p', 'n2', colorCone );\r\n\t\taddLine( 'p', 'n3', colorCone );\r\n\t\taddLine( 'p', 'n4', colorCone );\r\n\r\n\t\t// up\r\n\r\n\t\taddLine( 'u1', 'u2', colorUp );\r\n\t\taddLine( 'u2', 'u3', colorUp );\r\n\t\taddLine( 'u3', 'u1', colorUp );\r\n\r\n\t\t// target\r\n\r\n\t\taddLine( 'c', 't', colorTarget );\r\n\t\taddLine( 'p', 'c', colorCross );\r\n\r\n\t\t// cross\r\n\r\n\t\taddLine( 'cn1', 'cn2', colorCross );\r\n\t\taddLine( 'cn3', 'cn4', colorCross );\r\n\r\n\t\taddLine( 'cf1', 'cf2', colorCross );\r\n\t\taddLine( 'cf3', 'cf4', colorCross );\r\n\r\n\t\tfunction addLine( a, b, color ) {\r\n\r\n\t\t\taddPoint( a, color );\r\n\t\t\taddPoint( b, color );\r\n\r\n\t\t}\r\n\r\n\t\tfunction addPoint( id, color ) {\r\n\r\n\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tLineSegments.call( this, geometry, material );\r\n\r\n\t\tthis.camera = camera;\r\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\r\n\r\n\t\tthis.matrix = camera.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.pointMap = pointMap;\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\r\n\tCameraHelper.prototype.constructor = CameraHelper;\r\n\r\n\tCameraHelper.prototype.update = function () {\r\n\r\n\t\tvar geometry, pointMap;\r\n\r\n\t\tvar vector = new Vector3();\r\n\t\tvar camera = new Camera();\r\n\r\n\t\tfunction setPoint( point, x, y, z ) {\r\n\r\n\t\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\t\tvar points = pointMap[ point ];\r\n\r\n\t\t\tif ( points !== undefined ) {\r\n\r\n\t\t\t\tvar position = geometry.getAttribute( 'position' );\r\n\r\n\t\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tgeometry = this.geometry;\r\n\t\t\tpointMap = this.pointMap;\r\n\r\n\t\t\tvar w = 1, h = 1;\r\n\r\n\t\t\t// we need just camera projection matrix inverse\r\n\t\t\t// world matrix must be identity\r\n\r\n\t\t\tcamera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\r\n\r\n\t\t\t// center / target\r\n\r\n\t\t\tsetPoint( 'c', 0, 0, - 1 );\r\n\t\t\tsetPoint( 't', 0, 0, 1 );\r\n\r\n\t\t\t// near\r\n\r\n\t\t\tsetPoint( 'n1', - w, - h, - 1 );\r\n\t\t\tsetPoint( 'n2', w, - h, - 1 );\r\n\t\t\tsetPoint( 'n3', - w, h, - 1 );\r\n\t\t\tsetPoint( 'n4', w, h, - 1 );\r\n\r\n\t\t\t// far\r\n\r\n\t\t\tsetPoint( 'f1', - w, - h, 1 );\r\n\t\t\tsetPoint( 'f2', w, - h, 1 );\r\n\t\t\tsetPoint( 'f3', - w, h, 1 );\r\n\t\t\tsetPoint( 'f4', w, h, 1 );\r\n\r\n\t\t\t// up\r\n\r\n\t\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( 'u3', 0, h * 2, - 1 );\r\n\r\n\t\t\t// cross\r\n\r\n\t\t\tsetPoint( 'cf1', - w, 0, 1 );\r\n\t\t\tsetPoint( 'cf2', w, 0, 1 );\r\n\t\t\tsetPoint( 'cf3', 0, - h, 1 );\r\n\t\t\tsetPoint( 'cf4', 0, h, 1 );\r\n\r\n\t\t\tsetPoint( 'cn1', - w, 0, - 1 );\r\n\t\t\tsetPoint( 'cn2', w, 0, - 1 );\r\n\t\t\tsetPoint( 'cn3', 0, - h, - 1 );\r\n\t\t\tsetPoint( 'cn4', 0, h, - 1 );\r\n\r\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\r\n\r\n\t\t};\r\n\r\n\t}();\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Mugen87 / http://github.com/Mugen87\r\n\t */\r\n\r\n\tfunction BoxHelper( object, color ) {\r\n\r\n\t\tthis.object = object;\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\tvar positions = new Float32Array( 8 * 3 );\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\r\n\r\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\r\n\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\r\n\tBoxHelper.prototype.constructor = BoxHelper;\r\n\r\n\tBoxHelper.prototype.update = ( function () {\r\n\r\n\t\tvar box = new Box3();\r\n\r\n\t\treturn function update( object ) {\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.object !== undefined ) {\r\n\r\n\t\t\t\tbox.setFromObject( this.object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( box.isEmpty() ) return;\r\n\r\n\t\t\tvar min = box.min;\r\n\t\t\tvar max = box.max;\r\n\r\n\t\t\t/*\r\n\t\t\t  5____4\r\n\t\t\t1/___0/|\r\n\t\t\t| 6__|_7\r\n\t\t\t2/___3/\r\n\r\n\t\t\t0: max.x, max.y, max.z\r\n\t\t\t1: min.x, max.y, max.z\r\n\t\t\t2: min.x, min.y, max.z\r\n\t\t\t3: max.x, min.y, max.z\r\n\t\t\t4: max.x, max.y, min.z\r\n\t\t\t5: min.x, max.y, min.z\r\n\t\t\t6: min.x, min.y, min.z\r\n\t\t\t7: max.x, min.y, min.z\r\n\t\t\t*/\r\n\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\t\tvar array = position.array;\r\n\r\n\t\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\r\n\t\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\r\n\t\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\r\n\t\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t\t};\r\n\r\n\t} )();\r\n\r\n\tBoxHelper.prototype.setFromObject = function ( object ) {\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.update();\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tBoxHelper.prototype.copy = function ( source ) {\r\n\r\n\t\tLineSegments.prototype.copy.call( this, source );\r\n\r\n\t\tthis.object = source.object;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tBoxHelper.prototype.clone = function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t};\n\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction Box3Helper( box, hex ) {\r\n\r\n\t\tthis.type = 'Box3Helper';\r\n\r\n\t\tthis.box = box;\r\n\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\r\n\t\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\r\n\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\r\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n\tBox3Helper.prototype = Object.create( LineSegments.prototype );\r\n\tBox3Helper.prototype.constructor = Box3Helper;\r\n\r\n\tBox3Helper.prototype.updateMatrixWorld = function ( force ) {\r\n\r\n\t\tvar box = this.box;\r\n\r\n\t\tif ( box.isEmpty() ) return;\r\n\r\n\t\tbox.getCenter( this.position );\r\n\r\n\t\tbox.getSize( this.scale );\r\n\r\n\t\tthis.scale.multiplyScalar( 0.5 );\r\n\r\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t};\n\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\r\n\tfunction PlaneHelper( plane, size, hex ) {\r\n\r\n\t\tthis.type = 'PlaneHelper';\r\n\r\n\t\tthis.plane = plane;\r\n\r\n\t\tthis.size = ( size === undefined ) ? 1 : size;\r\n\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\t\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\r\n\r\n\t\t//\r\n\r\n\t\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\r\n\r\n\t\tvar geometry2 = new BufferGeometry();\r\n\t\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\r\n\t\tgeometry2.computeBoundingSphere();\r\n\r\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\r\n\r\n\t}\r\n\r\n\tPlaneHelper.prototype = Object.create( Line.prototype );\r\n\tPlaneHelper.prototype.constructor = PlaneHelper;\r\n\r\n\tPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\r\n\r\n\t\tvar scale = - this.plane.constant;\r\n\r\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\r\n\r\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\r\n\r\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\r\n\r\n\t\tthis.lookAt( this.plane.normal );\r\n\r\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t};\n\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author zz85 / http://github.com/zz85\r\n\t * @author bhouston / http://clara.io\r\n\t *\r\n\t * Creates an arrow for visualizing directions\r\n\t *\r\n\t * Parameters:\r\n\t *  dir - Vector3\r\n\t *  origin - Vector3\r\n\t *  length - Number\r\n\t *  color - color in hex value\r\n\t *  headLength - Number\r\n\t *  headWidth - Number\r\n\t */\r\n\r\n\tvar lineGeometry, coneGeometry;\r\n\r\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tObject3D.call( this );\r\n\r\n\t\tif ( dir === undefined ) dir = new Vector3( 0, 0, 1 );\r\n\t\tif ( origin === undefined ) origin = new Vector3( 0, 0, 0 );\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tif ( lineGeometry === undefined ) {\r\n\r\n\t\t\tlineGeometry = new BufferGeometry();\r\n\t\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\r\n\r\n\t\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\r\n\t\t\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.position.copy( origin );\r\n\r\n\t\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\r\n\t\tthis.line.matrixAutoUpdate = false;\r\n\t\tthis.add( this.line );\r\n\r\n\t\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\r\n\tArrowHelper.prototype.constructor = ArrowHelper;\r\n\r\n\tArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\t\tvar axis = new Vector3();\r\n\t\tvar radians;\r\n\r\n\t\treturn function setDirection( dir ) {\r\n\r\n\t\t\t// dir is assumed to be normalized\r\n\r\n\t\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}() );\r\n\r\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\r\n\t\tthis.line.updateMatrix();\r\n\r\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\t\tthis.cone.position.y = length;\r\n\t\tthis.cone.updateMatrix();\r\n\r\n\t};\r\n\r\n\tArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\t\tthis.line.material.color.copy( color );\r\n\t\tthis.cone.material.color.copy( color );\r\n\r\n\t};\r\n\r\n\tArrowHelper.prototype.copy = function ( source ) {\r\n\r\n\t\tObject3D.prototype.copy.call( this, source, false );\r\n\r\n\t\tthis.line.copy( source.line );\r\n\t\tthis.cone.copy( source.cone );\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tArrowHelper.prototype.clone = function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t};\n\n\t/**\r\n\t * @author sroucheray / http://sroucheray.org/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction AxesHelper( size ) {\r\n\r\n\t\tsize = size || 1;\r\n\r\n\t\tvar vertices = [\r\n\t\t\t0, 0, 0,\tsize, 0, 0,\r\n\t\t\t0, 0, 0,\t0, size, 0,\r\n\t\t\t0, 0, 0,\t0, 0, size\r\n\t\t];\r\n\r\n\t\tvar colors = [\r\n\t\t\t1, 0, 0,\t1, 0.6, 0,\r\n\t\t\t0, 1, 0,\t0.6, 1, 0,\r\n\t\t\t0, 0, 1,\t0, 0.6, 1\r\n\t\t];\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\r\n\r\n\t\tLineSegments.call( this, geometry, material );\r\n\r\n\t}\r\n\r\n\tAxesHelper.prototype = Object.create( LineSegments.prototype );\r\n\tAxesHelper.prototype.constructor = AxesHelper;\n\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\r\n\tfunction Face4( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\r\n\r\n\t}\r\n\r\n\tvar LineStrip = 0;\r\n\r\n\tvar LinePieces = 1;\r\n\r\n\tfunction MeshFaceMaterial( materials ) {\r\n\r\n\t\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\r\n\t\treturn materials;\r\n\r\n\t}\r\n\r\n\tfunction MultiMaterial( materials ) {\r\n\r\n\t\tif ( materials === undefined ) materials = [];\r\n\r\n\t\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\r\n\t\tmaterials.isMultiMaterial = true;\r\n\t\tmaterials.materials = materials;\r\n\t\tmaterials.clone = function () {\r\n\r\n\t\t\treturn materials.slice();\r\n\r\n\t\t};\r\n\t\treturn materials;\r\n\r\n\t}\r\n\r\n\tfunction PointCloud( geometry, material ) {\r\n\r\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t\treturn new Points( geometry, material );\r\n\r\n\t}\r\n\r\n\tfunction Particle( material ) {\r\n\r\n\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\r\n\t\treturn new Sprite( material );\r\n\r\n\t}\r\n\r\n\tfunction ParticleSystem( geometry, material ) {\r\n\r\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t\treturn new Points( geometry, material );\r\n\r\n\t}\r\n\r\n\tfunction PointCloudMaterial( parameters ) {\r\n\r\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new PointsMaterial( parameters );\r\n\r\n\t}\r\n\r\n\tfunction ParticleBasicMaterial( parameters ) {\r\n\r\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new PointsMaterial( parameters );\r\n\r\n\t}\r\n\r\n\tfunction ParticleSystemMaterial( parameters ) {\r\n\r\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new PointsMaterial( parameters );\r\n\r\n\t}\r\n\r\n\tfunction Vertex( x, y, z ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\r\n\t\treturn new Vector3( x, y, z );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction DynamicBufferAttribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\t\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n\t}\r\n\r\n\tfunction Int8Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\r\n\t\treturn new Int8BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Uint8Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\r\n\t\treturn new Uint8BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\r\n\t\treturn new Uint8ClampedBufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Int16Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\r\n\t\treturn new Int16BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Uint16Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\r\n\t\treturn new Uint16BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Int32Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\r\n\t\treturn new Int32BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Uint32Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\r\n\t\treturn new Uint32BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Float32Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\r\n\t\treturn new Float32BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\tfunction Float64Attribute( array, itemSize ) {\r\n\r\n\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\r\n\t\treturn new Float64BufferAttribute( array, itemSize );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tCurve.create = function ( construct, getPoint ) {\r\n\r\n\t\tconsole.log( 'THREE.Curve.create() has been deprecated' );\r\n\r\n\t\tconstruct.prototype = Object.create( Curve.prototype );\r\n\t\tconstruct.prototype.constructor = construct;\r\n\t\tconstruct.prototype.getPoint = getPoint;\r\n\r\n\t\treturn construct;\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tObject.assign( CurvePath.prototype, {\r\n\r\n\t\tcreatePointsGeometry: function ( divisions ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\r\n\r\n\t\t\t// generate geometry from path points (for Line or Points objects)\r\n\r\n\t\t\tvar pts = this.getPoints( divisions );\r\n\t\t\treturn this.createGeometry( pts );\r\n\r\n\t\t},\r\n\r\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\r\n\r\n\t\t\t// generate geometry from equidistant sampling along the path\r\n\r\n\t\t\tvar pts = this.getSpacedPoints( divisions );\r\n\t\t\treturn this.createGeometry( pts );\r\n\r\n\t\t},\r\n\r\n\t\tcreateGeometry: function ( points ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\r\n\r\n\t\t\tvar geometry = new Geometry();\r\n\r\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar point = points[ i ];\r\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.assign( Path.prototype, {\r\n\r\n\t\tfromPoints: function ( points ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tfunction ClosedSplineCurve3( points ) {\r\n\r\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\r\n\r\n\t\tCatmullRomCurve3.call( this, points );\r\n\t\tthis.type = 'catmullrom';\r\n\t\tthis.closed = true;\r\n\r\n\t}\r\n\r\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\r\n\r\n\t//\r\n\r\n\tfunction SplineCurve3( points ) {\r\n\r\n\t\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\r\n\r\n\t\tCatmullRomCurve3.call( this, points );\r\n\t\tthis.type = 'catmullrom';\r\n\r\n\t}\r\n\r\n\tSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\r\n\r\n\t//\r\n\r\n\tfunction Spline( points ) {\r\n\r\n\t\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\r\n\r\n\t\tCatmullRomCurve3.call( this, points );\r\n\t\tthis.type = 'catmullrom';\r\n\r\n\t}\r\n\r\n\tSpline.prototype = Object.create( CatmullRomCurve3.prototype );\r\n\r\n\tObject.assign( Spline.prototype, {\r\n\r\n\t\tinitFromArray: function ( /* a */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\r\n\r\n\t\t},\r\n\t\tgetControlPointsArray: function ( /* optionalTarget */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\r\n\r\n\t\t},\r\n\t\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tfunction AxisHelper( size ) {\r\n\r\n\t\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\r\n\t\treturn new AxesHelper( size );\r\n\r\n\t}\r\n\r\n\tfunction BoundingBoxHelper( object, color ) {\r\n\r\n\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\r\n\t\treturn new BoxHelper( object, color );\r\n\r\n\t}\r\n\r\n\tfunction EdgesHelper( object, hex ) {\r\n\r\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\r\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\r\n\r\n\t}\r\n\r\n\tGridHelper.prototype.setColors = function () {\r\n\r\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\r\n\r\n\t};\r\n\r\n\tSkeletonHelper.prototype.update = function () {\r\n\r\n\t\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\r\n\r\n\t};\r\n\r\n\tfunction WireframeHelper( object, hex ) {\r\n\r\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\r\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tObject.assign( Loader.prototype, {\r\n\r\n\t\textractUrlBase: function ( url ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\r\n\t\t\treturn LoaderUtils.extractUrlBase( url );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tfunction XHRLoader( manager ) {\r\n\r\n\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\r\n\t\treturn new FileLoader( manager );\r\n\r\n\t}\r\n\r\n\tfunction BinaryTextureLoader( manager ) {\r\n\r\n\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\r\n\t\treturn new DataTextureLoader( manager );\r\n\r\n\t}\r\n\r\n\tObject.assign( ObjectLoader.prototype, {\r\n\r\n\t\tsetTexturePath: function ( value ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\r\n\t\t\treturn this.setResourcePath( value );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.assign( Box2.prototype, {\r\n\r\n\t\tcenter: function ( optionalTarget ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\r\n\t\t\treturn this.getCenter( optionalTarget );\r\n\r\n\t\t},\r\n\t\tempty: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\r\n\t\t\treturn this.isEmpty();\r\n\r\n\t\t},\r\n\t\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\t\treturn this.intersectsBox( box );\r\n\r\n\t\t},\r\n\t\tsize: function ( optionalTarget ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\r\n\t\t\treturn this.getSize( optionalTarget );\r\n\r\n\t\t}\r\n\t} );\r\n\r\n\tObject.assign( Box3.prototype, {\r\n\r\n\t\tcenter: function ( optionalTarget ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\r\n\t\t\treturn this.getCenter( optionalTarget );\r\n\r\n\t\t},\r\n\t\tempty: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\r\n\t\t\treturn this.isEmpty();\r\n\r\n\t\t},\r\n\t\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\t\treturn this.intersectsBox( box );\r\n\r\n\t\t},\r\n\t\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t},\r\n\t\tsize: function ( optionalTarget ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\r\n\t\t\treturn this.getSize( optionalTarget );\r\n\r\n\t\t}\r\n\t} );\r\n\r\n\tLine3.prototype.center = function ( optionalTarget ) {\r\n\r\n\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\r\n\t\treturn this.getCenter( optionalTarget );\r\n\r\n\t};\r\n\r\n\tObject.assign( _Math, {\r\n\r\n\t\trandom16: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\r\n\t\t\treturn Math.random();\r\n\r\n\t\t},\r\n\r\n\t\tnearestPowerOfTwo: function ( value ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\r\n\t\t\treturn _Math.floorPowerOfTwo( value );\r\n\r\n\t\t},\r\n\r\n\t\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\r\n\t\t\treturn _Math.ceilPowerOfTwo( value );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Matrix3.prototype, {\r\n\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\r\n\t\t\treturn this.toArray( array, offset );\r\n\r\n\t\t},\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix3( this );\r\n\r\n\t\t},\r\n\t\tmultiplyVector3Array: function ( /* a */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\r\n\r\n\t\t},\r\n\t\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\r\n\t\t\treturn this.applyToBufferAttribute( buffer );\r\n\r\n\t\t},\r\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Matrix4.prototype, {\r\n\r\n\t\textractPosition: function ( m ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\t\treturn this.copyPosition( m );\r\n\r\n\t\t},\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\r\n\t\t\treturn this.toArray( array, offset );\r\n\r\n\t\t},\r\n\t\tgetPosition: function () {\r\n\r\n\t\t\tvar v1;\r\n\r\n\t\t\treturn function getPosition() {\r\n\r\n\t\t\t\tif ( v1 === undefined ) v1 = new Vector3();\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\t\t\t\treturn v1.setFromMatrixColumn( this, 3 );\r\n\r\n\t\t\t};\r\n\r\n\t\t}(),\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t\t},\r\n\t\tmultiplyToArray: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\r\n\r\n\t\t},\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\r\n\t\t},\r\n\t\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\r\n\t\t},\r\n\t\tmultiplyVector3Array: function ( /* a */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\r\n\r\n\t\t},\r\n\t\trotateAxis: function ( v ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t\t\tv.transformDirection( this );\r\n\r\n\t\t},\r\n\t\tcrossVector: function ( vector ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\r\n\t\t},\r\n\t\ttranslate: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\r\n\t\t},\r\n\t\trotateX: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\r\n\t\t},\r\n\t\trotateY: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\r\n\t\t},\r\n\t\trotateZ: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\r\n\t\t},\r\n\t\trotateByAxis: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\r\n\t\t},\r\n\t\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\r\n\t\t\treturn this.applyToBufferAttribute( buffer );\r\n\r\n\t\t},\r\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\r\n\r\n\t\t},\r\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\r\n\t\t\treturn this.makePerspective( left, right, top, bottom, near, far );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tPlane.prototype.isIntersectionLine = function ( line ) {\r\n\r\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\r\n\t\treturn this.intersectsLine( line );\r\n\r\n\t};\r\n\r\n\tQuaternion.prototype.multiplyVector3 = function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t};\r\n\r\n\tObject.assign( Ray.prototype, {\r\n\r\n\t\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\t\treturn this.intersectsBox( box );\r\n\r\n\t\t},\r\n\t\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\r\n\t\t\treturn this.intersectsPlane( plane );\r\n\r\n\t\t},\r\n\t\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Triangle.prototype, {\r\n\r\n\t\tarea: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\r\n\t\t\treturn this.getArea();\r\n\r\n\t\t},\r\n\t\tbarycoordFromPoint: function ( point, target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\r\n\t\t\treturn this.getBarycoord( point, target );\r\n\r\n\t\t},\r\n\t\tmidpoint: function ( target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\r\n\t\t\treturn this.getMidpoint( target );\r\n\r\n\t\t},\r\n\t\tnormal: function ( target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\r\n\t\t\treturn this.getNormal( target );\r\n\r\n\t\t},\r\n\t\tplane: function ( target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\r\n\t\t\treturn this.getPlane( target );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Triangle, {\r\n\r\n\t\tbarycoordFromPoint: function ( point, a, b, c, target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\r\n\t\t\treturn Triangle.getBarycoord( point, a, b, c, target );\r\n\r\n\t\t},\r\n\t\tnormal: function ( a, b, c, target ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\r\n\t\t\treturn Triangle.getNormal( a, b, c, target );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Shape.prototype, {\r\n\r\n\t\textractAllPoints: function ( divisions ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\r\n\t\t\treturn this.extractPoints( divisions );\r\n\r\n\t\t},\r\n\t\textrude: function ( options ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\r\n\t\t\treturn new ExtrudeGeometry( this, options );\r\n\r\n\t\t},\r\n\t\tmakeGeometry: function ( options ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\r\n\t\t\treturn new ShapeGeometry( this, options );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector2.prototype, {\r\n\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\r\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\r\n\r\n\t\t},\r\n\t\tdistanceToManhattan: function ( v ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\r\n\t\t\treturn this.manhattanDistanceTo( v );\r\n\r\n\t\t},\r\n\t\tlengthManhattan: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\r\n\t\t\treturn this.manhattanLength();\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector3.prototype, {\r\n\r\n\t\tsetEulerFromRotationMatrix: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\r\n\t\t},\r\n\t\tsetEulerFromQuaternion: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\r\n\t\t},\r\n\t\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t\t},\r\n\t\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t\t\treturn this.setFromMatrixScale( m );\r\n\r\n\t\t},\r\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\r\n\r\n\t\t},\r\n\t\tapplyProjection: function ( m ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\r\n\t\t\treturn this.applyMatrix4( m );\r\n\r\n\t\t},\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\r\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\r\n\r\n\t\t},\r\n\t\tdistanceToManhattan: function ( v ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\r\n\t\t\treturn this.manhattanDistanceTo( v );\r\n\r\n\t\t},\r\n\t\tlengthManhattan: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\r\n\t\t\treturn this.manhattanLength();\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector4.prototype, {\r\n\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\r\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\r\n\r\n\t\t},\r\n\t\tlengthManhattan: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\r\n\t\t\treturn this.manhattanLength();\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.assign( Geometry.prototype, {\r\n\r\n\t\tcomputeTangents: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n\t\t},\r\n\t\tcomputeLineDistances: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Object3D.prototype, {\r\n\r\n\t\tgetChildByName: function ( name ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\t\treturn this.getObjectByName( name );\r\n\r\n\t\t},\r\n\t\trenderDepth: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\r\n\t\t},\r\n\t\ttranslate: function ( distance, axis ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t\t},\r\n\t\tgetWorldRotation: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( Object3D.prototype, {\r\n\r\n\t\teulerOrder: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\t\treturn this.rotation.order;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\t\tthis.rotation.order = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tuseQuaternion: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( LOD.prototype, {\r\n\r\n\t\tobjects: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\treturn this.levels;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\r\n\r\n\t\t},\r\n\t\tset: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tSkinnedMesh.prototype.initBones = function () {\r\n\r\n\t\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\r\n\r\n\t};\r\n\r\n\tObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\r\n\t\t\treturn this.arcLengthDivisions;\r\n\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\r\n\t\t\tthis.arcLengthDivisions = value;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\r\n\r\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\r\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\r\n\r\n\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\r\n\t\tthis.setFocalLength( focalLength );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( Light.prototype, {\r\n\t\tonlyShadow: {\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraFov: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\r\n\t\t\t\tthis.shadow.camera.fov = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraLeft: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\r\n\t\t\t\tthis.shadow.camera.left = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraRight: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\r\n\t\t\t\tthis.shadow.camera.right = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraTop: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\r\n\t\t\t\tthis.shadow.camera.top = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraBottom: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\r\n\t\t\t\tthis.shadow.camera.bottom = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraNear: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\r\n\t\t\t\tthis.shadow.camera.near = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraFar: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\r\n\t\t\t\tthis.shadow.camera.far = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraVisible: {\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowBias: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\r\n\t\t\t\tthis.shadow.bias = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowDarkness: {\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapWidth: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\r\n\t\t\t\tthis.shadow.mapSize.width = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapHeight: {\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\r\n\t\t\t\tthis.shadow.mapSize.height = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( BufferAttribute.prototype, {\r\n\r\n\t\tlength: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\r\n\t\t\t\treturn this.array.length;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tcopyIndicesArray: function ( /* indices */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( BufferGeometry.prototype, {\r\n\r\n\t\taddIndex: function ( index ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\t\tthis.setIndex( index );\r\n\r\n\t\t},\r\n\t\taddDrawCall: function ( start, count, indexOffset ) {\r\n\r\n\t\t\tif ( indexOffset !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\r\n\t\t\t}\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\t\tthis.addGroup( start, count );\r\n\r\n\t\t},\r\n\t\tclearDrawCalls: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\t\tthis.clearGroups();\r\n\r\n\t\t},\r\n\t\tcomputeTangents: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\r\n\t\t},\r\n\t\tcomputeOffsets: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( BufferGeometry.prototype, {\r\n\r\n\t\tdrawcalls: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\t\treturn this.groups;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\toffsets: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\t\treturn this.groups;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.assign( ExtrudeBufferGeometry.prototype, {\r\n\r\n\t\tgetArrays: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\r\n\r\n\t\t},\r\n\r\n\t\taddShapeList: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\r\n\r\n\t\t},\r\n\r\n\t\taddShape: function () {\r\n\r\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( Uniform.prototype, {\r\n\r\n\t\tdynamic: {\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate: {\r\n\t\t\tvalue: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( Material.prototype, {\r\n\r\n\t\twrapAround: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\toverdraw: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\twrapRGB: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\r\n\t\t\t\treturn new Color();\r\n\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tshading: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\r\n\t\t\t\tthis.flatShading = ( value === FlatShading );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\r\n\r\n\t\tmetal: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( ShaderMaterial.prototype, {\r\n\r\n\t\tderivatives: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\t\treturn this.extensions.derivatives;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\t\tthis.extensions.derivatives = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.assign( WebGLRenderer.prototype, {\r\n\r\n\t\tclearTarget: function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\t\tthis.clear( color, depth, stencil );\r\n\r\n\t\t},\r\n\t\tanimate: function ( callback ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\r\n\t\t\tthis.setAnimationLoop( callback );\r\n\r\n\t\t},\r\n\t\tgetCurrentRenderTarget: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\r\n\t\t\treturn this.getRenderTarget();\r\n\r\n\t\t},\r\n\t\tgetMaxAnisotropy: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\r\n\t\t\treturn this.capabilities.getMaxAnisotropy();\r\n\r\n\t\t},\r\n\t\tgetPrecision: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\r\n\t\t\treturn this.capabilities.precision;\r\n\r\n\t\t},\r\n\t\tresetGLState: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\r\n\t\t\treturn this.state.reset();\r\n\r\n\t\t},\r\n\t\tsupportsFloatTextures: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\r\n\r\n\t\t},\r\n\t\tsupportsHalfFloatTextures: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\t},\r\n\t\tsupportsStandardDerivatives: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\r\n\r\n\t\t},\r\n\t\tsupportsCompressedTextureS3TC: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\t},\r\n\t\tsupportsCompressedTexturePVRTC: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\t},\r\n\t\tsupportsBlendMinMax: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\t},\r\n\t\tsupportsVertexTextures: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\r\n\t\t\treturn this.capabilities.vertexTextures;\r\n\r\n\t\t},\r\n\t\tsupportsInstancedArrays: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t},\r\n\t\tenableScissorTest: function ( boolean ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\r\n\t\t\tthis.setScissorTest( boolean );\r\n\r\n\t\t},\r\n\t\tinitMaterial: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\r\n\t\t},\r\n\t\taddPrePlugin: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\r\n\t\t},\r\n\t\taddPostPlugin: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\r\n\t\t},\r\n\t\tupdateShadowMap: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\r\n\t\t},\r\n\t\tsetFaceCulling: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\r\n\r\n\t\t},\r\n\t\tallocTextureUnit: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\r\n\r\n\t\t},\r\n\t\tsetTexture: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\r\n\r\n\t\t},\r\n\t\tsetTexture2D: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\r\n\r\n\t\t},\r\n\t\tsetTextureCube: function () {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( WebGLRenderer.prototype, {\r\n\r\n\t\tshadowMapEnabled: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.shadowMap.enabled;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\tthis.shadowMap.enabled = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapType: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.shadowMap.type;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\tthis.shadowMap.type = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapCullFace: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( /* value */ ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n\tObject.defineProperties( WebGLShadowMap.prototype, {\r\n\r\n\t\tcullFace: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( /* cullFace */ ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\trenderReverseSided: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\trenderSingleSided: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t},\r\n\t\t\tset: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( WebGLRenderTargetCube.prototype, {\r\n\r\n\t\tactiveCubeFace: {\r\n\t\t\tset: function ( /* value */ ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tactiveMipMapLevel: {\r\n\t\t\tset: function ( /* value */ ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\r\n\r\n\t\twrapS: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\t\treturn this.texture.wrapS;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\t\tthis.texture.wrapS = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\twrapT: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\t\treturn this.texture.wrapT;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\t\tthis.texture.wrapT = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tmagFilter: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\t\treturn this.texture.magFilter;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\t\tthis.texture.magFilter = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tminFilter: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\t\treturn this.texture.minFilter;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\t\tthis.texture.minFilter = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tanisotropy: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\t\treturn this.texture.anisotropy;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\t\tthis.texture.anisotropy = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\toffset: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\t\treturn this.texture.offset;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\t\tthis.texture.offset = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\trepeat: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\t\treturn this.texture.repeat;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\t\tthis.texture.repeat = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tformat: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\t\treturn this.texture.format;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\t\tthis.texture.format = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\ttype: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\t\treturn this.texture.type;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\t\tthis.texture.type = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tgenerateMipmaps: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\t\treturn this.texture.generateMipmaps;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\t\tthis.texture.generateMipmaps = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tObject.defineProperties( WebVRManager.prototype, {\r\n\r\n\t\tstanding: {\r\n\t\t\tset: function ( /* value */ ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tuserHeight: {\r\n\t\t\tset: function ( /* value */ ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebVRManager: .userHeight has been removed.' );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t//\r\n\r\n\tAudio.prototype.load = function ( file ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\r\n\t\tvar scope = this;\r\n\t\tvar audioLoader = new AudioLoader();\r\n\t\taudioLoader.load( file, function ( buffer ) {\r\n\r\n\t\t\tscope.setBuffer( buffer );\r\n\r\n\t\t} );\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\tAudioAnalyser.prototype.getData = function () {\r\n\r\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\r\n\t\treturn this.getFrequencyData();\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\r\n\t\treturn this.update( renderer, scene );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tvar GeometryUtils = {\r\n\r\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\t\t\tvar matrix;\r\n\r\n\t\t\tif ( geometry2.isMesh ) {\r\n\r\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\t\tmatrix = geometry2.matrix;\r\n\t\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t\t},\r\n\r\n\t\tcenter: function ( geometry ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\t\treturn geometry.center();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tImageUtils.crossOrigin = undefined;\r\n\r\n\tImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\r\n\r\n\t\tvar loader = new TextureLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\r\n\r\n\t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t};\r\n\r\n\tImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\r\n\r\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\r\n\r\n\t\tvar loader = new CubeTextureLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\r\n\r\n\t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t};\r\n\r\n\tImageUtils.loadCompressedTexture = function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\r\n\r\n\t};\r\n\r\n\tImageUtils.loadCompressedTextureCube = function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tfunction Projector() {\r\n\r\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\t\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\t\tvector.project( camera );\r\n\r\n\t\t};\r\n\r\n\t\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\t\tvector.unproject( camera );\r\n\r\n\t\t};\r\n\r\n\t\tthis.pickingRay = function () {\r\n\r\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction CanvasRenderer() {\r\n\r\n\t\tconsole.error( 'THREE.CanvasRenderer has been removed' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction JSONLoader() {\r\n\r\n\t\tconsole.error( 'THREE.JSONLoader has been removed.' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar SceneUtils = {\r\n\r\n\t\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\r\n\r\n\t\t},\r\n\r\n\t\tdetach: function ( /* child, parent, scene */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\r\n\r\n\t\t},\r\n\r\n\t\tattach: function ( /* child, scene, parent */ ) {\r\n\r\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tfunction LensFlare() {\r\n\r\n\t\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\r\n\r\n\t}\n\n\texports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.ShaderLib = ShaderLib;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.FogExp2 = FogExp2;\n\texports.Fog = Fog;\n\texports.Scene = Scene;\n\texports.Sprite = Sprite;\n\texports.LOD = LOD;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.Skeleton = Skeleton;\n\texports.Bone = Bone;\n\texports.Mesh = Mesh;\n\texports.LineSegments = LineSegments;\n\texports.LineLoop = LineLoop;\n\texports.Line = Line;\n\texports.Points = Points;\n\texports.Group = Group;\n\texports.VideoTexture = VideoTexture;\n\texports.DataTexture = DataTexture;\n\texports.DataTexture2DArray = DataTexture2DArray;\n\texports.DataTexture3D = DataTexture3D;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CubeTexture = CubeTexture;\n\texports.CanvasTexture = CanvasTexture;\n\texports.DepthTexture = DepthTexture;\n\texports.Texture = Texture;\n\texports.AnimationLoader = AnimationLoader;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.TextureLoader = TextureLoader;\n\texports.ObjectLoader = ObjectLoader;\n\texports.MaterialLoader = MaterialLoader;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.LoadingManager = LoadingManager;\n\texports.ImageLoader = ImageLoader;\n\texports.ImageBitmapLoader = ImageBitmapLoader;\n\texports.FontLoader = FontLoader;\n\texports.FileLoader = FileLoader;\n\texports.Loader = Loader;\n\texports.LoaderUtils = LoaderUtils;\n\texports.Cache = Cache;\n\texports.AudioLoader = AudioLoader;\n\texports.SpotLightShadow = SpotLightShadow;\n\texports.SpotLight = SpotLight;\n\texports.PointLight = PointLight;\n\texports.RectAreaLight = RectAreaLight;\n\texports.HemisphereLight = HemisphereLight;\n\texports.DirectionalLightShadow = DirectionalLightShadow;\n\texports.DirectionalLight = DirectionalLight;\n\texports.AmbientLight = AmbientLight;\n\texports.LightShadow = LightShadow;\n\texports.Light = Light;\n\texports.StereoCamera = StereoCamera;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.CubeCamera = CubeCamera;\n\texports.ArrayCamera = ArrayCamera;\n\texports.Camera = Camera;\n\texports.AudioListener = AudioListener;\n\texports.PositionalAudio = PositionalAudio;\n\texports.AudioContext = AudioContext;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.Audio = Audio;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.PropertyMixer = PropertyMixer;\n\texports.PropertyBinding = PropertyBinding;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.AnimationUtils = AnimationUtils;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationClip = AnimationClip;\n\texports.Uniform = Uniform;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.BufferGeometry = BufferGeometry;\n\texports.Geometry = Geometry;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.Face3 = Face3;\n\texports.Object3D = Object3D;\n\texports.Raycaster = Raycaster;\n\texports.Layers = Layers;\n\texports.EventDispatcher = EventDispatcher;\n\texports.Clock = Clock;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.Interpolant = Interpolant;\n\texports.Triangle = Triangle;\n\texports.Math = _Math;\n\texports.Spherical = Spherical;\n\texports.Cylindrical = Cylindrical;\n\texports.Plane = Plane;\n\texports.Frustum = Frustum;\n\texports.Sphere = Sphere;\n\texports.Ray = Ray;\n\texports.Matrix4 = Matrix4;\n\texports.Matrix3 = Matrix3;\n\texports.Box3 = Box3;\n\texports.Box2 = Box2;\n\texports.Line3 = Line3;\n\texports.Euler = Euler;\n\texports.Vector4 = Vector4;\n\texports.Vector3 = Vector3;\n\texports.Vector2 = Vector2;\n\texports.Quaternion = Quaternion;\n\texports.Color = Color;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.VertexNormalsHelper = VertexNormalsHelper;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.PointLightHelper = PointLightHelper;\n\texports.RectAreaLightHelper = RectAreaLightHelper;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.GridHelper = GridHelper;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.PositionalAudioHelper = PositionalAudioHelper;\n\texports.FaceNormalsHelper = FaceNormalsHelper;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.CameraHelper = CameraHelper;\n\texports.BoxHelper = BoxHelper;\n\texports.Box3Helper = Box3Helper;\n\texports.PlaneHelper = PlaneHelper;\n\texports.ArrowHelper = ArrowHelper;\n\texports.AxesHelper = AxesHelper;\n\texports.Shape = Shape;\n\texports.Path = Path;\n\texports.ShapePath = ShapePath;\n\texports.Font = Font;\n\texports.CurvePath = CurvePath;\n\texports.Curve = Curve;\n\texports.ImageUtils = ImageUtils;\n\texports.ShapeUtils = ShapeUtils;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.TubeBufferGeometry = TubeBufferGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusBufferGeometry = TorusBufferGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.TextBufferGeometry = TextBufferGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.SphereBufferGeometry = SphereBufferGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.RingBufferGeometry = RingBufferGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.LatheBufferGeometry = LatheBufferGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapeBufferGeometry = ShapeBufferGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.ConeBufferGeometry = ConeBufferGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.CircleBufferGeometry = CircleBufferGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.CubeGeometry = BoxGeometry;\n\texports.BoxBufferGeometry = BoxBufferGeometry;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.PointsMaterial = PointsMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.Material = Material;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.BufferAttribute = BufferAttribute;\n\texports.ArcCurve = ArcCurve;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.EllipseCurve = EllipseCurve;\n\texports.LineCurve = LineCurve;\n\texports.LineCurve3 = LineCurve3;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.SplineCurve = SplineCurve;\n\texports.REVISION = REVISION;\n\texports.MOUSE = MOUSE;\n\texports.CullFaceNone = CullFaceNone;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.FrontSide = FrontSide;\n\texports.BackSide = BackSide;\n\texports.DoubleSide = DoubleSide;\n\texports.FlatShading = FlatShading;\n\texports.SmoothShading = SmoothShading;\n\texports.NoColors = NoColors;\n\texports.FaceColors = FaceColors;\n\texports.VertexColors = VertexColors;\n\texports.NoBlending = NoBlending;\n\texports.NormalBlending = NormalBlending;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.CustomBlending = CustomBlending;\n\texports.AddEquation = AddEquation;\n\texports.SubtractEquation = SubtractEquation;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.MinEquation = MinEquation;\n\texports.MaxEquation = MaxEquation;\n\texports.ZeroFactor = ZeroFactor;\n\texports.OneFactor = OneFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.NeverDepth = NeverDepth;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.EqualDepth = EqualDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterDepth = GreaterDepth;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.MixOperation = MixOperation;\n\texports.AddOperation = AddOperation;\n\texports.NoToneMapping = NoToneMapping;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n\texports.UVMapping = UVMapping;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.SphericalReflectionMapping = SphericalReflectionMapping;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.ByteType = ByteType;\n\texports.ShortType = ShortType;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.IntType = IntType;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.FloatType = FloatType;\n\texports.HalfFloatType = HalfFloatType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.AlphaFormat = AlphaFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBAFormat = RGBAFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.RGBEFormat = RGBEFormat;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.RedFormat = RedFormat;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LoopPingPong = LoopPingPong;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.LinearEncoding = LinearEncoding;\n\texports.sRGBEncoding = sRGBEncoding;\n\texports.GammaEncoding = GammaEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n\texports.Face4 = Face4;\n\texports.LineStrip = LineStrip;\n\texports.LinePieces = LinePieces;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MultiMaterial = MultiMaterial;\n\texports.PointCloud = PointCloud;\n\texports.Particle = Particle;\n\texports.ParticleSystem = ParticleSystem;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Vertex = Vertex;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\texports.SplineCurve3 = SplineCurve3;\n\texports.Spline = Spline;\n\texports.AxisHelper = AxisHelper;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.EdgesHelper = EdgesHelper;\n\texports.WireframeHelper = WireframeHelper;\n\texports.XHRLoader = XHRLoader;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.GeometryUtils = GeometryUtils;\n\texports.Projector = Projector;\n\texports.CanvasRenderer = CanvasRenderer;\n\texports.JSONLoader = JSONLoader;\n\texports.SceneUtils = SceneUtils;\n\texports.LensFlare = LensFlare;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","/*!\n * vanilla-picker v2.8.0\n * https://vanilla-picker.js.org\n *\n * Copyright 2017-2019 Andreas Borgen (https://github.com/Sphinxxxx), Adam Brooks (https://github.com/dissimulate)\n * Released under the ISC license.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Picker = factory());\n}(this, (function () { 'use strict';\n\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  String.prototype.startsWith = String.prototype.startsWith || function (needle) {\n  \treturn this.indexOf(needle) === 0;\n  };\n  String.prototype.padStart = String.prototype.padStart || function (len, pad) {\n  \tvar str = this;while (str.length < len) {\n  \t\tstr = pad + str;\n  \t}return str;\n  };\n\n  var colorNames = { aliceblue: '#f0f8ff', antiquewhite: '#faebd7', aqua: '#00ffff', aquamarine: '#7fffd4', azure: '#f0ffff', beige: '#f5f5dc', bisque: '#ffe4c4', black: '#000000', blanchedalmond: '#ffebcd', blue: '#0000ff', blueviolet: '#8a2be2', brown: '#a52a2a', burlywood: '#deb887', cadetblue: '#5f9ea0', chartreuse: '#7fff00', chocolate: '#d2691e', coral: '#ff7f50', cornflowerblue: '#6495ed', cornsilk: '#fff8dc', crimson: '#dc143c', cyan: '#00ffff', darkblue: '#00008b', darkcyan: '#008b8b', darkgoldenrod: '#b8860b', darkgray: '#a9a9a9', darkgreen: '#006400', darkgrey: '#a9a9a9', darkkhaki: '#bdb76b', darkmagenta: '#8b008b', darkolivegreen: '#556b2f', darkorange: '#ff8c00', darkorchid: '#9932cc', darkred: '#8b0000', darksalmon: '#e9967a', darkseagreen: '#8fbc8f', darkslateblue: '#483d8b', darkslategray: '#2f4f4f', darkslategrey: '#2f4f4f', darkturquoise: '#00ced1', darkviolet: '#9400d3', deeppink: '#ff1493', deepskyblue: '#00bfff', dimgray: '#696969', dimgrey: '#696969', dodgerblue: '#1e90ff', firebrick: '#b22222', floralwhite: '#fffaf0', forestgreen: '#228b22', fuchsia: '#ff00ff', gainsboro: '#dcdcdc', ghostwhite: '#f8f8ff', gold: '#ffd700', goldenrod: '#daa520', gray: '#808080', green: '#008000', greenyellow: '#adff2f', grey: '#808080', honeydew: '#f0fff0', hotpink: '#ff69b4', indianred: '#cd5c5c', indigo: '#4b0082', ivory: '#fffff0', khaki: '#f0e68c', lavender: '#e6e6fa', lavenderblush: '#fff0f5', lawngreen: '#7cfc00', lemonchiffon: '#fffacd', lightblue: '#add8e6', lightcoral: '#f08080', lightcyan: '#e0ffff', lightgoldenrodyellow: '#fafad2', lightgray: '#d3d3d3', lightgreen: '#90ee90', lightgrey: '#d3d3d3', lightpink: '#ffb6c1', lightsalmon: '#ffa07a', lightseagreen: '#20b2aa', lightskyblue: '#87cefa', lightslategray: '#778899', lightslategrey: '#778899', lightsteelblue: '#b0c4de', lightyellow: '#ffffe0', lime: '#00ff00', limegreen: '#32cd32', linen: '#faf0e6', magenta: '#ff00ff', maroon: '#800000', mediumaquamarine: '#66cdaa', mediumblue: '#0000cd', mediumorchid: '#ba55d3', mediumpurple: '#9370db', mediumseagreen: '#3cb371', mediumslateblue: '#7b68ee', mediumspringgreen: '#00fa9a', mediumturquoise: '#48d1cc', mediumvioletred: '#c71585', midnightblue: '#191970', mintcream: '#f5fffa', mistyrose: '#ffe4e1', moccasin: '#ffe4b5', navajowhite: '#ffdead', navy: '#000080', oldlace: '#fdf5e6', olive: '#808000', olivedrab: '#6b8e23', orange: '#ffa500', orangered: '#ff4500', orchid: '#da70d6', palegoldenrod: '#eee8aa', palegreen: '#98fb98', paleturquoise: '#afeeee', palevioletred: '#db7093', papayawhip: '#ffefd5', peachpuff: '#ffdab9', peru: '#cd853f', pink: '#ffc0cb', plum: '#dda0dd', powderblue: '#b0e0e6', purple: '#800080', rebeccapurple: '#663399', red: '#ff0000', rosybrown: '#bc8f8f', royalblue: '#4169e1', saddlebrown: '#8b4513', salmon: '#fa8072', sandybrown: '#f4a460', seagreen: '#2e8b57', seashell: '#fff5ee', sienna: '#a0522d', silver: '#c0c0c0', skyblue: '#87ceeb', slateblue: '#6a5acd', slategray: '#708090', slategrey: '#708090', snow: '#fffafa', springgreen: '#00ff7f', steelblue: '#4682b4', tan: '#d2b48c', teal: '#008080', thistle: '#d8bfd8', tomato: '#ff6347', turquoise: '#40e0d0', violet: '#ee82ee', wheat: '#f5deb3', white: '#ffffff', whitesmoke: '#f5f5f5', yellow: '#ffff00', yellowgreen: '#9acd32' };\n\n  function printNum(num) {\n  \tvar decs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  \tvar str = decs > 0 ? num.toFixed(decs).replace(/0+$/, '').replace(/\\.$/, '') : num.toString();\n  \treturn str || '0';\n  }\n\n  var Color = function () {\n  \tfunction Color(r, g, b, a) {\n  \t\tclassCallCheck(this, Color);\n\n\n  \t\tvar that = this;\n  \t\tfunction parseString(input) {\n\n  \t\t\tif (input.startsWith('hsl')) {\n  \t\t\t\tvar _input$match$map = input.match(/([\\-\\d\\.e]+)/g).map(Number),\n  \t\t\t\t    _input$match$map2 = slicedToArray(_input$match$map, 4),\n  \t\t\t\t    h = _input$match$map2[0],\n  \t\t\t\t    s = _input$match$map2[1],\n  \t\t\t\t    l = _input$match$map2[2],\n  \t\t\t\t    _a = _input$match$map2[3];\n\n  \t\t\t\tif (_a === undefined) {\n  \t\t\t\t\t_a = 1;\n  \t\t\t\t}\n\n  \t\t\t\th /= 360;\n  \t\t\t\ts /= 100;\n  \t\t\t\tl /= 100;\n  \t\t\t\tthat.hsla = [h, s, l, _a];\n  \t\t\t}\n\n  \t\t\telse if (input.startsWith('rgb')) {\n  \t\t\t\t\tvar _input$match$map3 = input.match(/([\\-\\d\\.e]+)/g).map(Number),\n  \t\t\t\t\t    _input$match$map4 = slicedToArray(_input$match$map3, 4),\n  \t\t\t\t\t    _r = _input$match$map4[0],\n  \t\t\t\t\t    _g = _input$match$map4[1],\n  \t\t\t\t\t    _b = _input$match$map4[2],\n  \t\t\t\t\t    _a2 = _input$match$map4[3];\n\n  \t\t\t\t\tif (_a2 === undefined) {\n  \t\t\t\t\t\t_a2 = 1;\n  \t\t\t\t\t}\n\n  \t\t\t\t\tthat.rgba = [_r, _g, _b, _a2];\n  \t\t\t\t}\n\n  \t\t\t\telse {\n  \t\t\t\t\t\tif (input.startsWith('#')) {\n  \t\t\t\t\t\t\tthat.rgba = Color.hexToRgb(input);\n  \t\t\t\t\t\t} else {\n  \t\t\t\t\t\t\tthat.rgba = Color.nameToRgb(input) || Color.hexToRgb(input);\n  \t\t\t\t\t\t}\n  \t\t\t\t\t}\n  \t\t}\n\n  \t\tif (r === undefined) ;\n\n\n  \t\telse if (Array.isArray(r)) {\n  \t\t\t\tthis.rgba = r;\n  \t\t\t}\n\n  \t\t\telse if (b === undefined) {\n  \t\t\t\t\tvar color = r && '' + r;\n  \t\t\t\t\tif (color) {\n  \t\t\t\t\t\tparseString(color.toLowerCase());\n  \t\t\t\t\t}\n  \t\t\t\t} else {\n  \t\t\t\t\tthis.rgba = [r, g, b, a === undefined ? 1 : a];\n  \t\t\t\t}\n  \t}\n\n\n  \tcreateClass(Color, [{\n  \t\tkey: 'printRGB',\n  \t\tvalue: function printRGB(alpha) {\n  \t\t\tvar rgb = alpha ? this.rgba : this.rgba.slice(0, 3),\n  \t\t\t    vals = rgb.map(function (x, i) {\n  \t\t\t\treturn printNum(x, i === 3 ? 3 : 0);\n  \t\t\t});\n\n  \t\t\treturn alpha ? 'rgba(' + vals + ')' : 'rgb(' + vals + ')';\n  \t\t}\n  \t}, {\n  \t\tkey: 'printHSL',\n  \t\tvalue: function printHSL(alpha) {\n  \t\t\tvar mults = [360, 100, 100, 1],\n  \t\t\t    suff = ['', '%', '%', ''];\n\n  \t\t\tvar hsl = alpha ? this.hsla : this.hsla.slice(0, 3),\n\n  \t\t\tvals = hsl.map(function (x, i) {\n  \t\t\t\treturn printNum(x * mults[i], i === 3 ? 3 : 1) + suff[i];\n  \t\t\t});\n\n  \t\t\treturn alpha ? 'hsla(' + vals + ')' : 'hsl(' + vals + ')';\n  \t\t}\n  \t}, {\n  \t\tkey: 'printHex',\n  \t\tvalue: function printHex(alpha) {\n  \t\t\tvar hex = this.hex;\n  \t\t\treturn alpha ? hex : hex.substring(0, 7);\n  \t\t}\n\n\n\n  \t}, {\n  \t\tkey: 'rgba',\n  \t\tget: function get$$1() {\n  \t\t\tif (this._rgba) {\n  \t\t\t\treturn this._rgba;\n  \t\t\t}\n  \t\t\tif (!this._hsla) {\n  \t\t\t\tthrow new Error('No color is set');\n  \t\t\t}\n\n  \t\t\treturn this._rgba = Color.hslToRgb(this._hsla);\n  \t\t},\n  \t\tset: function set$$1(rgb) {\n  \t\t\tif (rgb.length === 3) {\n  \t\t\t\trgb[3] = 1;\n  \t\t\t}\n\n  \t\t\tthis._rgba = rgb;\n  \t\t\tthis._hsla = null;\n  \t\t}\n  \t}, {\n  \t\tkey: 'rgbString',\n  \t\tget: function get$$1() {\n  \t\t\treturn this.printRGB();\n  \t\t}\n  \t}, {\n  \t\tkey: 'rgbaString',\n  \t\tget: function get$$1() {\n  \t\t\treturn this.printRGB(true);\n  \t\t}\n\n\n  \t}, {\n  \t\tkey: 'hsla',\n  \t\tget: function get$$1() {\n  \t\t\tif (this._hsla) {\n  \t\t\t\treturn this._hsla;\n  \t\t\t}\n  \t\t\tif (!this._rgba) {\n  \t\t\t\tthrow new Error('No color is set');\n  \t\t\t}\n\n  \t\t\treturn this._hsla = Color.rgbToHsl(this._rgba);\n  \t\t},\n  \t\tset: function set$$1(hsl) {\n  \t\t\tif (hsl.length === 3) {\n  \t\t\t\thsl[3] = 1;\n  \t\t\t}\n\n  \t\t\tthis._hsla = hsl;\n  \t\t\tthis._rgba = null;\n  \t\t}\n  \t}, {\n  \t\tkey: 'hslString',\n  \t\tget: function get$$1() {\n  \t\t\treturn this.printHSL();\n  \t\t}\n  \t}, {\n  \t\tkey: 'hslaString',\n  \t\tget: function get$$1() {\n  \t\t\treturn this.printHSL(true);\n  \t\t}\n\n\n  \t}, {\n  \t\tkey: 'hex',\n  \t\tget: function get$$1() {\n  \t\t\tvar rgb = this.rgba,\n  \t\t\t    hex = rgb.map(function (x, i) {\n  \t\t\t\treturn i < 3 ? x.toString(16) : Math.round(x * 255).toString(16);\n  \t\t\t});\n\n  \t\t\treturn '#' + hex.map(function (x) {\n  \t\t\t\treturn x.padStart(2, '0');\n  \t\t\t}).join('');\n  \t\t},\n  \t\tset: function set$$1(hex) {\n  \t\t\tthis.rgba = Color.hexToRgb(hex);\n  \t\t}\n  \t}], [{\n  \t\tkey: 'hexToRgb',\n  \t\tvalue: function hexToRgb(input) {\n  \t\t\tvar hex = (input.startsWith('#') ? input.slice(1) : input).replace(/^(\\w{3})$/, '$1F') \n  \t\t\t.replace(/^(\\w)(\\w)(\\w)(\\w)$/, '$1$1$2$2$3$3$4$4') \n  \t\t\t.replace(/^(\\w{6})$/, '$1FF'); \n\n  \t\t\tif (!hex.match(/^([0-9a-fA-F]{8})$/)) {\n  \t\t\t\tthrow new Error('Unknown hex color; ' + input);\n  \t\t\t}\n\n  \t\t\tvar rgba = hex.match(/^(\\w\\w)(\\w\\w)(\\w\\w)(\\w\\w)$/).slice(1) \n  \t\t\t.map(function (x) {\n  \t\t\t\treturn parseInt(x, 16);\n  \t\t\t}); \n\n  \t\t\trgba[3] = rgba[3] / 255;\n  \t\t\treturn rgba;\n  \t\t}\n\n\n  \t}, {\n  \t\tkey: 'nameToRgb',\n  \t\tvalue: function nameToRgb(input) {\n  \t\t\tvar hex = colorNames[input];\n  \t\t\tif (hex) {\n  \t\t\t\treturn Color.hexToRgb(hex);\n  \t\t\t}\n  \t\t}\n\n\n  \t}, {\n  \t\tkey: 'rgbToHsl',\n  \t\tvalue: function rgbToHsl(_ref) {\n  \t\t\tvar _ref2 = slicedToArray(_ref, 4),\n  \t\t\t    r = _ref2[0],\n  \t\t\t    g = _ref2[1],\n  \t\t\t    b = _ref2[2],\n  \t\t\t    a = _ref2[3];\n\n  \t\t\tr /= 255;\n  \t\t\tg /= 255;\n  \t\t\tb /= 255;\n\n  \t\t\tvar max = Math.max(r, g, b),\n  \t\t\t    min = Math.min(r, g, b);\n  \t\t\tvar h = void 0,\n  \t\t\t    s = void 0,\n  \t\t\t    l = (max + min) / 2;\n\n  \t\t\tif (max === min) {\n  \t\t\t\th = s = 0; \n  \t\t\t} else {\n  \t\t\t\tvar d = max - min;\n  \t\t\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n  \t\t\t\tswitch (max) {\n  \t\t\t\t\tcase r:\n  \t\t\t\t\t\th = (g - b) / d + (g < b ? 6 : 0);break;\n  \t\t\t\t\tcase g:\n  \t\t\t\t\t\th = (b - r) / d + 2;break;\n  \t\t\t\t\tcase b:\n  \t\t\t\t\t\th = (r - g) / d + 4;break;\n  \t\t\t\t}\n\n  \t\t\t\th /= 6;\n  \t\t\t}\n\n  \t\t\treturn [h, s, l, a];\n  \t\t}\n\n\n  \t}, {\n  \t\tkey: 'hslToRgb',\n  \t\tvalue: function hslToRgb(_ref3) {\n  \t\t\tvar _ref4 = slicedToArray(_ref3, 4),\n  \t\t\t    h = _ref4[0],\n  \t\t\t    s = _ref4[1],\n  \t\t\t    l = _ref4[2],\n  \t\t\t    a = _ref4[3];\n\n  \t\t\tvar r = void 0,\n  \t\t\t    g = void 0,\n  \t\t\t    b = void 0;\n\n  \t\t\tif (s === 0) {\n  \t\t\t\tr = g = b = l; \n  \t\t\t} else {\n  \t\t\t\tvar hue2rgb = function hue2rgb(p, q, t) {\n  \t\t\t\t\tif (t < 0) t += 1;\n  \t\t\t\t\tif (t > 1) t -= 1;\n  \t\t\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n  \t\t\t\t\tif (t < 1 / 2) return q;\n  \t\t\t\t\tif (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  \t\t\t\t\treturn p;\n  \t\t\t\t};\n\n  \t\t\t\tvar q = l < 0.5 ? l * (1 + s) : l + s - l * s,\n  \t\t\t\t    p = 2 * l - q;\n\n  \t\t\t\tr = hue2rgb(p, q, h + 1 / 3);\n  \t\t\t\tg = hue2rgb(p, q, h);\n  \t\t\t\tb = hue2rgb(p, q, h - 1 / 3);\n  \t\t\t}\n\n  \t\t\tvar rgba = [r * 255, g * 255, b * 255].map(Math.round);\n  \t\t\trgba[3] = a;\n\n  \t\t\treturn rgba;\n  \t\t}\n  \t}]);\n  \treturn Color;\n  }();\n\n  var root = window;\n\n  function dragTracker(options) {\n\n\n      var ep = Element.prototype;\n      if (!ep.matches) ep.matches = ep.msMatchesSelector || ep.webkitMatchesSelector;\n      if (!ep.closest) ep.closest = function (s) {\n          var node = this;\n          do {\n              if (node.matches(s)) return node;\n              node = node.tagName === 'svg' ? node.parentNode : node.parentElement;\n          } while (node);\n\n          return null;\n      };\n\n      options = options || {};\n      var container = options.container || document.documentElement,\n          selector = options.selector,\n          callback = options.callback || console.log,\n          callbackStart = options.callbackDragStart,\n          callbackEnd = options.callbackDragEnd,\n\n      callbackClick = options.callbackClick,\n          propagate = options.propagateEvents,\n          roundCoords = options.roundCoords !== false,\n          dragOutside = options.dragOutside !== false,\n\n      handleOffset = options.handleOffset || options.handleOffset !== false;\n      var offsetToCenter = null;\n      switch (handleOffset) {\n          case 'center':\n              offsetToCenter = true;break;\n          case 'topleft':\n          case 'top-left':\n              offsetToCenter = false;break;\n      }\n\n      var dragState = void 0;\n\n      function getMousePos(e, elm, offset, stayWithin) {\n          var x = e.clientX,\n              y = e.clientY;\n\n          function respectBounds(value, min, max) {\n              return Math.max(min, Math.min(value, max));\n          }\n\n          if (elm) {\n              var bounds = elm.getBoundingClientRect();\n              x -= bounds.left;\n              y -= bounds.top;\n\n              if (offset) {\n                  x -= offset[0];\n                  y -= offset[1];\n              }\n              if (stayWithin) {\n                  x = respectBounds(x, 0, bounds.width);\n                  y = respectBounds(y, 0, bounds.height);\n              }\n\n              if (elm !== container) {\n                  var center = offsetToCenter !== null ? offsetToCenter\n                  : elm.nodeName === 'circle' || elm.nodeName === 'ellipse';\n\n                  if (center) {\n                      x -= bounds.width / 2;\n                      y -= bounds.height / 2;\n                  }\n              }\n          }\n          return roundCoords ? [Math.round(x), Math.round(y)] : [x, y];\n      }\n\n      function stopEvent(e) {\n          e.preventDefault();\n          if (!propagate) {\n              e.stopPropagation();\n          }\n      }\n\n      function onDown(e) {\n          var target = void 0;\n          if (selector) {\n              target = selector instanceof Element ? selector.contains(e.target) ? selector : null : e.target.closest(selector);\n          } else {\n              target = {};\n          }\n\n          if (target) {\n              stopEvent(e);\n\n              var mouseOffset = selector && handleOffset ? getMousePos(e, target) : [0, 0],\n                  startPos = getMousePos(e, container, mouseOffset);\n              dragState = {\n                  target: target,\n                  mouseOffset: mouseOffset,\n                  startPos: startPos,\n                  actuallyDragged: false\n              };\n\n              if (callbackStart) {\n                  callbackStart(target, startPos);\n              }\n          }\n      }\n\n      function onMove(e) {\n          if (!dragState) {\n              return;\n          }\n          stopEvent(e);\n\n          var start = dragState.startPos,\n              pos = getMousePos(e, container, dragState.mouseOffset, !dragOutside);\n\n          dragState.actuallyDragged = dragState.actuallyDragged || start[0] !== pos[0] || start[1] !== pos[1];\n\n          callback(dragState.target, pos, start);\n      }\n\n      function onEnd(e, cancelled) {\n          if (!dragState) {\n              return;\n          }\n\n          if (callbackEnd || callbackClick) {\n              var isClick = !dragState.actuallyDragged,\n                  pos = isClick ? dragState.startPos : getMousePos(e, container, dragState.mouseOffset, !dragOutside);\n\n              if (callbackClick && isClick && !cancelled) {\n                  callbackClick(dragState.target, pos);\n              }\n              if (callbackEnd) {\n                  callbackEnd(dragState.target, pos, dragState.startPos, cancelled || isClick && callbackClick);\n              }\n          }\n          dragState = null;\n      }\n\n\n      addEvent(container, 'mousedown', function (e) {\n          if (isLeftButton(e)) {\n              onDown(e);\n          } else {\n              onEnd(e, true);\n          }\n      });\n      addEvent(container, 'touchstart', function (e) {\n          return relayTouch(e, onDown);\n      });\n\n      addEvent(root, 'mousemove', function (e) {\n          if (!dragState) {\n              return;\n          }\n\n          if (isLeftButton(e)) {\n              onMove(e);\n          }\n          else {\n                  onEnd(e);\n              }\n      });\n      addEvent(root, 'touchmove', function (e) {\n          return relayTouch(e, onMove);\n      });\n\n      addEvent(container, 'mouseup', function (e) {\n          if (dragState && !isLeftButton(e)) {\n              onEnd(e);\n          }\n      });\n      function onTouchEnd(e, cancelled) {\n          onEnd(tweakTouch(e), cancelled);\n      }\n      addEvent(container, 'touchend', function (e) {\n          return onTouchEnd(e);\n      });\n      addEvent(container, 'touchcancel', function (e) {\n          return onTouchEnd(e, true);\n      });\n\n      function addEvent(target, type, handler) {\n          target.addEventListener(type, handler);\n      }\n      function isLeftButton(e) {\n          return e.buttons !== undefined ? e.buttons === 1 :\n          e.which === 1;\n      }\n      function relayTouch(e, handler) {\n          if (e.touches.length !== 1) {\n              onEnd(e, true);return;\n          }\n\n          handler(tweakTouch(e));\n      }\n      function tweakTouch(e) {\n          var touch = e.targetTouches[0];\n          if (!touch) {\n              touch = e.changedTouches[0];\n          }\n\n          touch.preventDefault = e.preventDefault.bind(e);\n          touch.stopPropagation = e.stopPropagation.bind(e);\n          return touch;\n      }\n  }\n\n\n  var BG_TRANSP = 'url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' width=\\'2\\' height=\\'2\\'%3E%3Cpath d=\\'M1,0H0V1H2V2H1\\' fill=\\'lightgrey\\'/%3E%3C/svg%3E\")';\n  var HUES = 360;\n  var EVENT_KEY = 'keydown',\n  EVENT_CLICK_OUTSIDE = 'mousedown',\n      EVENT_TAB_MOVE = 'focusin';\n\n  function parseHTML(htmlString) {\n      var div = document.createElement('div');\n      div.innerHTML = htmlString;\n      return div.firstElementChild;\n  }\n\n  function $(selector, context) {\n      return (context || document).querySelector(selector);\n  }\n\n  function addEvent(target, type, handler) {\n      target.addEventListener(type, handler, false);\n  }\n  function stopEvent(e) {\n      e.preventDefault();\n      e.stopPropagation();\n  }\n  function onKey(target, keys, handler, stop) {\n      addEvent(target, EVENT_KEY, function (e) {\n          if (keys.indexOf(e.key) >= 0) {\n              if (stop) {\n                  stopEvent(e);\n              }\n              handler(e);\n          }\n      });\n  }\n\n  var _style = document.createElement('style');\n  _style.textContent = '.picker_wrapper.no_alpha .picker_alpha{display:none}.picker_wrapper.no_editor .picker_editor{position:absolute;z-index:-1;opacity:0}.layout_default.picker_wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;font-size:10px;width:25em;padding:.5em}.layout_default.picker_wrapper input,.layout_default.picker_wrapper button{font-size:1rem}.layout_default.picker_wrapper>*{margin:.5em}.layout_default.picker_wrapper::before{content:\\'\\';display:block;width:100%;height:0;-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.layout_default .picker_slider,.layout_default .picker_selector{padding:1em}.layout_default .picker_hue{width:100%}.layout_default .picker_sl{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.layout_default .picker_sl::before{content:\\'\\';display:block;padding-bottom:100%}.layout_default .picker_editor{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1;width:6rem}.layout_default .picker_editor input{width:calc(100% + 2px);height:calc(100% + 2px)}.layout_default .picker_sample{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1;-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.layout_default .picker_done{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.picker_wrapper{-webkit-box-sizing:border-box;box-sizing:border-box;background:#f2f2f2;-webkit-box-shadow:0 0 0 1px silver;box-shadow:0 0 0 1px silver;cursor:default;font-family:sans-serif;color:#444;pointer-events:auto}.picker_wrapper:focus{outline:none}.picker_wrapper button,.picker_wrapper input{margin:-1px}.picker_selector{position:absolute;z-index:1;display:block;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);border:2px solid white;border-radius:100%;-webkit-box-shadow:0 0 3px 1px #67b9ff;box-shadow:0 0 3px 1px #67b9ff;background:currentColor;cursor:pointer}.picker_slider .picker_selector{border-radius:2px}.picker_hue{position:relative;background-image:-webkit-gradient(linear, left top, right top, from(red), color-stop(yellow), color-stop(lime), color-stop(cyan), color-stop(blue), color-stop(magenta), to(red));background-image:linear-gradient(90deg, red, yellow, lime, cyan, blue, magenta, red);-webkit-box-shadow:0 0 0 1px silver;box-shadow:0 0 0 1px silver}.picker_sl{position:relative;-webkit-box-shadow:0 0 0 1px silver;box-shadow:0 0 0 1px silver;background-image:-webkit-gradient(linear, left top, left bottom, from(white), color-stop(50%, rgba(255,255,255,0))),-webkit-gradient(linear, left bottom, left top, from(black), color-stop(50%, rgba(0,0,0,0))),-webkit-gradient(linear, left top, right top, from(gray), to(rgba(128,128,128,0)));background-image:linear-gradient(180deg, white, rgba(255,255,255,0) 50%),linear-gradient(0deg, black, rgba(0,0,0,0) 50%),linear-gradient(90deg, gray, rgba(128,128,128,0))}.picker_alpha,.picker_sample{position:relative;background:url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' width=\\'2\\' height=\\'2\\'%3E%3Cpath d=\\'M1,0H0V1H2V2H1\\' fill=\\'lightgrey\\'/%3E%3C/svg%3E\") left top/contain white;-webkit-box-shadow:0 0 0 1px silver;box-shadow:0 0 0 1px silver}.picker_alpha .picker_selector,.picker_sample .picker_selector{background:none}.picker_editor input{-webkit-box-sizing:border-box;box-sizing:border-box;font-family:monospace;padding:.1em .2em}.picker_sample::before{content:\\'\\';position:absolute;display:block;width:100%;height:100%;background:currentColor}.picker_done button{-webkit-box-sizing:border-box;box-sizing:border-box;padding:.2em .5em;cursor:pointer}.picker_arrow{position:absolute;z-index:-1}.picker_wrapper.popup{position:absolute;z-index:2;margin:1.5em}.picker_wrapper.popup,.picker_wrapper.popup .picker_arrow::before,.picker_wrapper.popup .picker_arrow::after{background:#f2f2f2;-webkit-box-shadow:0 0 10px 1px rgba(0,0,0,0.4);box-shadow:0 0 10px 1px rgba(0,0,0,0.4)}.picker_wrapper.popup .picker_arrow{width:3em;height:3em;margin:0}.picker_wrapper.popup .picker_arrow::before,.picker_wrapper.popup .picker_arrow::after{content:\"\";display:block;position:absolute;top:0;left:0;z-index:-99}.picker_wrapper.popup .picker_arrow::before{width:100%;height:100%;-webkit-transform:skew(45deg);transform:skew(45deg);-webkit-transform-origin:0 100%;transform-origin:0 100%}.picker_wrapper.popup .picker_arrow::after{width:150%;height:150%;-webkit-box-shadow:none;box-shadow:none}.popup.popup_top{bottom:100%;left:0}.popup.popup_top .picker_arrow{bottom:0;left:0;-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}.popup.popup_bottom{top:100%;left:0}.popup.popup_bottom .picker_arrow{top:0;left:0;-webkit-transform:rotate(90deg) scale(1, -1);transform:rotate(90deg) scale(1, -1)}.popup.popup_left{top:0;right:100%}.popup.popup_left .picker_arrow{top:0;right:0;-webkit-transform:scale(-1, 1);transform:scale(-1, 1)}.popup.popup_right{top:0;left:100%}.popup.popup_right .picker_arrow{top:0;left:0}';\n  document.documentElement.firstElementChild \n  .appendChild(_style);\n\n  var Picker = function () {\n\n\n      function Picker(options) {\n          var _this = this;\n\n          classCallCheck(this, Picker);\n\n\n          this.settings = {\n              popup: 'right',\n              layout: 'default',\n              alpha: true,\n              editor: true,\n              editorFormat: 'hex'\n          };\n\n          this._openProxy = function (e) {\n              return _this.openHandler(e);\n          };\n\n          this.onChange = null;\n          this.onDone = null;\n          this.onOpen = null;\n          this.onClose = null;\n\n          this.setOptions(options);\n      }\n\n\n\n      createClass(Picker, [{\n          key: 'setOptions',\n          value: function setOptions(options) {\n              if (!options) {\n                  return;\n              }\n              var settings = this.settings;\n\n              function transfer(source, target, skipKeys) {\n                  for (var key in source) {\n                      if (skipKeys && skipKeys.indexOf(key) >= 0) {\n                          continue;\n                      }\n\n                      target[key] = source[key];\n                  }\n              }\n\n              if (options instanceof HTMLElement) {\n                  settings.parent = options;\n              } else {\n\n\n                  if (settings.parent && options.parent && settings.parent !== options.parent) {\n                      settings.parent.removeEventListener('click', this._openProxy, false);\n                      this._popupInited = false;\n                  }\n\n                  transfer(options, settings );\n\n                  if (options.onChange) {\n                      this.onChange = options.onChange;\n                  }\n                  if (options.onDone) {\n                      this.onDone = options.onDone;\n                  }\n                  if (options.onOpen) {\n                      this.onOpen = options.onOpen;\n                  }\n                  if (options.onClose) {\n                      this.onClose = options.onClose;\n                  }\n\n                  var col = options.color || options.colour;\n                  if (col) {\n                      this._setColor(col);\n                  }\n              }\n\n              var parent = settings.parent;\n              if (parent && settings.popup && !this._popupInited) {\n\n                  addEvent(parent, 'click', this._openProxy);\n\n                  onKey(parent, [' ', 'Spacebar', 'Enter'], this._openProxy );\n\n\n                  this._popupInited = true;\n              } else if (options.parent && !settings.popup) {\n                  this.show();\n              }\n          }\n\n\n      }, {\n          key: 'openHandler',\n          value: function openHandler(e) {\n              if (this.show()) {\n                  e && e.preventDefault();\n\n                  this.settings.parent.style.pointerEvents = 'none';\n\n                  var toFocus = e && e.type === EVENT_KEY ? this._domEdit : this.domElement;\n                  setTimeout(function () {\n                      return toFocus.focus();\n                  }, 100);\n\n                  if (this.onOpen) {\n                      this.onOpen(this.colour);\n                  }\n              }\n          }\n\n\n      }, {\n          key: 'closeHandler',\n          value: function closeHandler(e) {\n              var event = e && e.type;\n              var doHide = false;\n\n              if (!e) {\n                  doHide = true;\n              }\n              else {\n                      if (event === 'click' || event === EVENT_KEY) {\n                          stopEvent(e);\n                      }\n\n                      doHide = true;\n                  }\n\n              if (doHide && this.hide()) {\n                  this.settings.parent.style.pointerEvents = '';\n\n                  if (event !== EVENT_CLICK_OUTSIDE) {\n                      this.settings.parent.focus();\n                  }\n\n                  if (this.onClose) {\n                      this.onClose(this.colour);\n                  }\n              }\n          }\n\n\n      }, {\n          key: 'movePopup',\n          value: function movePopup(options, open) {\n              this.closeHandler();\n\n              this.setOptions(options);\n              if (open) {\n                  this.openHandler();\n              }\n          }\n\n\n      }, {\n          key: 'setColor',\n          value: function setColor(color, silent) {\n              this._setColor(color, { silent: silent });\n          }\n      }, {\n          key: '_setColor',\n          value: function _setColor(color, flags) {\n              if (typeof color === 'string') {\n                  color = color.trim();\n              }\n              if (!color) {\n                  return;\n              }\n\n              flags = flags || {};\n              var c = void 0;\n              try {\n                  c = new Color(color);\n              } catch (ex) {\n                  if (flags.failSilently) {\n                      return;\n                  }\n                  throw ex;\n              }\n\n              if (!this.settings.alpha) {\n                  var hsla = c.hsla;\n                  hsla[3] = 1;\n                  c.hsla = hsla;\n              }\n              this.colour = this.color = c;\n              this._setHSLA(null, null, null, null, flags);\n          }\n\n      }, {\n          key: 'setColour',\n          value: function setColour(colour, silent) {\n              this.setColor(colour, silent);\n          }\n\n\n      }, {\n          key: 'show',\n          value: function show() {\n              var parent = this.settings.parent;\n              if (!parent) {\n                  return false;\n              }\n\n              if (this.domElement) {\n                  var toggled = this._toggleDOM(true);\n\n                  this._setPosition();\n\n                  return toggled;\n              }\n\n              var html = this.settings.template || '<div class=\"picker_wrapper\" tabindex=\"-1\"><div class=\"picker_arrow\"></div><div class=\"picker_hue picker_slider\"><div class=\"picker_selector\"></div></div><div class=\"picker_sl\"><div class=\"picker_selector\"></div></div><div class=\"picker_alpha picker_slider\"><div class=\"picker_selector\"></div></div><div class=\"picker_editor\"><input aria-label=\"Type a color name or hex value\"/></div><div class=\"picker_sample\"></div><div class=\"picker_done\"><button>Ok</button></div></div>';\n              var wrapper = parseHTML(html);\n\n              this.domElement = wrapper;\n              this._domH = $('.picker_hue', wrapper);\n              this._domSL = $('.picker_sl', wrapper);\n              this._domA = $('.picker_alpha', wrapper);\n              this._domEdit = $('.picker_editor input', wrapper);\n              this._domSample = $('.picker_sample', wrapper);\n              this._domOkay = $('.picker_done button', wrapper);\n\n              wrapper.classList.add('layout_' + this.settings.layout);\n              if (!this.settings.alpha) {\n                  wrapper.classList.add('no_alpha');\n              }\n              if (!this.settings.editor) {\n                  wrapper.classList.add('no_editor');\n              }\n              this._ifPopup(function () {\n                  return wrapper.classList.add('popup');\n              });\n\n              this._setPosition();\n\n              if (this.colour) {\n                  this._updateUI();\n              } else {\n                  this._setColor('#0cf');\n              }\n              this._bindEvents();\n\n              return true;\n          }\n\n\n      }, {\n          key: 'hide',\n          value: function hide() {\n              return this._toggleDOM(false);\n          }\n\n\n      }, {\n          key: '_bindEvents',\n          value: function _bindEvents() {\n              var _this2 = this;\n\n              var that = this,\n                  dom = this.domElement;\n\n              addEvent(dom, 'click', function (e) {\n                  return e.preventDefault();\n              });\n\n\n              function createDragConfig(container, callbackRelative) {\n\n                  function relayDrag(_, pos) {\n                      var relX = pos[0] / container.clientWidth,\n                          relY = pos[1] / container.clientHeight;\n                      callbackRelative(relX, relY);\n                  }\n\n                  var config = {\n                      container: container,\n                      dragOutside: false,\n                      callback: relayDrag,\n                      callbackDragStart: relayDrag,\n                      propagateEvents: true\n                  };\n                  return config;\n              }\n\n              dragTracker(createDragConfig(this._domH, function (x, y) {\n                  return that._setHSLA(x);\n              }));\n\n              dragTracker(createDragConfig(this._domSL, function (x, y) {\n                  return that._setHSLA(null, x, 1 - y);\n              }));\n\n              if (this.settings.alpha) {\n                  dragTracker(createDragConfig(this._domA, function (x, y) {\n                      return that._setHSLA(null, null, null, 1 - y);\n                  }));\n              }\n\n\n              var editInput = this._domEdit;\n{\n                  addEvent(editInput, 'input', function (e) {\n                      that._setColor(this.value, { fromEditor: true, failSilently: true });\n                  });\n                  addEvent(editInput, 'focus', function (e) {\n                      var input = this;\n                      if (input.selectionStart === input.selectionEnd) {\n                          input.select();\n                      }\n                  });\n              }\n\n\n              var onDoneProxy = function onDoneProxy(e) {\n                  _this2._ifPopup(function () {\n                      return _this2.closeHandler(e);\n                  });\n                  if (_this2.onDone) {\n                      _this2.onDone(_this2.colour);\n                  }\n              };\n\n              this._ifPopup(function () {\n                  var popupCloseProxy = function popupCloseProxy(e) {\n                      return _this2.closeHandler(e);\n                  };\n\n                  addEvent(window, EVENT_CLICK_OUTSIDE, popupCloseProxy);\n                  addEvent(window, EVENT_TAB_MOVE, popupCloseProxy);\n                  onKey(dom, ['Esc', 'Escape'], popupCloseProxy);\n\n                  addEvent(dom, EVENT_CLICK_OUTSIDE, stopEvent);\n                  addEvent(dom, EVENT_TAB_MOVE, stopEvent);\n\n                  addEvent(_this2._domEdit, EVENT_CLICK_OUTSIDE, function (e) {\n                      return _this2._domEdit.focus();\n                  });\n              });\n\n              addEvent(this._domOkay, 'click', onDoneProxy);\n              onKey(dom, ['Enter'], onDoneProxy);\n          }\n\n\n      }, {\n          key: '_setPosition',\n          value: function _setPosition() {\n              var parent = this.settings.parent,\n                  elm = this.domElement;\n\n              if (parent !== elm.parentNode) {\n                  parent.appendChild(elm);\n              }\n\n              this._ifPopup(function (popup) {\n\n                  if (getComputedStyle(parent).position === 'static') {\n                      parent.style.position = 'relative';\n                  }\n\n                  var cssClass = popup === true ? 'popup_right' : 'popup_' + popup;\n\n                  ['popup_top', 'popup_bottom', 'popup_left', 'popup_right'].forEach(function (c) {\n                      if (c === cssClass) {\n                          elm.classList.add(c);\n                      } else {\n                          elm.classList.remove(c);\n                      }\n                  });\n\n                  elm.classList.add(cssClass);\n              });\n          }\n\n\n      }, {\n          key: '_setHSLA',\n          value: function _setHSLA(h, s, l, a, flags) {\n              flags = flags || {};\n\n              var col = this.colour,\n                  hsla = col.hsla;\n\n              [h, s, l, a].forEach(function (x, i) {\n                  if (x || x === 0) {\n                      hsla[i] = x;\n                  }\n              });\n              col.hsla = hsla;\n\n              this._updateUI(flags);\n\n              if (this.onChange && !flags.silent) {\n                  this.onChange(col);\n              }\n          }\n      }, {\n          key: '_updateUI',\n          value: function _updateUI(flags) {\n              if (!this.domElement) {\n                  return;\n              }\n              flags = flags || {};\n\n              var col = this.colour,\n                  hsl = col.hsla,\n                  cssHue = 'hsl(' + hsl[0] * HUES + ', 100%, 50%)',\n                  cssHSL = col.hslString,\n                  cssHSLA = col.hslaString;\n\n              var uiH = this._domH,\n                  uiSL = this._domSL,\n                  uiA = this._domA,\n                  thumbH = $('.picker_selector', uiH),\n                  thumbSL = $('.picker_selector', uiSL),\n                  thumbA = $('.picker_selector', uiA);\n\n              function posX(parent, child, relX) {\n                  child.style.left = relX * 100 + '%'; \n              }\n              function posY(parent, child, relY) {\n                  child.style.top = relY * 100 + '%'; \n              }\n\n\n              posX(uiH, thumbH, hsl[0]);\n\n              this._domSL.style.backgroundColor = this._domH.style.color = cssHue;\n\n\n              posX(uiSL, thumbSL, hsl[1]);\n              posY(uiSL, thumbSL, 1 - hsl[2]);\n\n              uiSL.style.color = cssHSL;\n\n\n              posY(uiA, thumbA, 1 - hsl[3]);\n\n              var opaque = cssHSL,\n                  transp = opaque.replace('hsl', 'hsla').replace(')', ', 0)'),\n                  bg = 'linear-gradient(' + [opaque, transp] + ')';\n\n              this._domA.style.backgroundImage = bg + ', ' + BG_TRANSP;\n\n\n              if (!flags.fromEditor) {\n                  var format = this.settings.editorFormat,\n                      alpha = this.settings.alpha;\n\n                  var value = void 0;\n                  switch (format) {\n                      case 'rgb':\n                          value = col.printRGB(alpha);break;\n                      case 'hsl':\n                          value = col.printHSL(alpha);break;\n                      default:\n                          value = col.printHex(alpha);\n                  }\n                  this._domEdit.value = value;\n              }\n\n\n              this._domSample.style.color = cssHSLA;\n          }\n      }, {\n          key: '_ifPopup',\n          value: function _ifPopup(actionIf, actionElse) {\n              if (this.settings.parent && this.settings.popup) {\n                  actionIf && actionIf(this.settings.popup);\n              } else {\n                  actionElse && actionElse();\n              }\n          }\n      }, {\n          key: '_toggleDOM',\n          value: function _toggleDOM(toVisible) {\n              var dom = this.domElement;\n              if (!dom) {\n                  return false;\n              }\n\n              var displayStyle = toVisible ? '' : 'none',\n                  toggle = dom.style.display !== displayStyle;\n\n              if (toggle) {\n                  dom.style.display = displayStyle;\n              }\n              return toggle;\n          }\n\n\n\n      }], [{\n          key: 'StyleElement',\n          get: function get$$1() {\n              return _style;\n          }\n      }]);\n      return Picker;\n  }();\n\n  return Picker;\n\n})));\n"]}