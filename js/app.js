!function(){return function t(e,i,s){function n(r,a){if(!i[r]){if(!e[r]){var h="function"==typeof require&&require;if(!a&&h)return h(r,!0);if(o)return o(r,!0);var l=new Error("Cannot find module '"+r+"'");throw l.code="MODULE_NOT_FOUND",l}var c=i[r]={exports:{}};e[r][0].call(c.exports,function(t){return n(e[r][1][t]||t)},c,c.exports,t,e,i,s)}return i[r].exports}for(var o="function"==typeof require&&require,r=0;r<s.length;r++)n(s[r]);return n}}()({1:[function(t,e,i){e.exports="#version 300 es\n// particle.frag\n\nprecision highp float;\n\nout vec4 FragColor;\n\nin vec4 color;\n\nvoid main(void) {\n  FragColor = color;\n}\n"},{}],2:[function(t,e,i){e.exports="#version 300 es\n// particle.vert\n\nlayout(location = 0) in vec4 a_position;\n\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_viewMatrix;\nuniform vec4  u_color;\nuniform float u_pointSize;\n\nout vec4 color;\n\nvoid main(void) {\n  color = u_color;\n  // gl_Position = u_projectionMatrix * u_viewMatrix * vec4(a_position.x, 0.0, 0.0, 1.0);\n  gl_Position  = u_projectionMatrix * u_viewMatrix * vec4(a_position.xyz, 1.0);\n  gl_PointSize = u_pointSize;\n}\n"},{}],3:[function(t,e,i){e.exports="#version 310 es\n// particle compute shader\n\nlayout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;\n\nlayout(std430, binding = 0) buffer Pos {\n  vec4 positions[];\n}\npos;\n\nlayout(std430, binding = 1) buffer Vel {\n  vec4 velocities[];\n}\nvel;\n\nuniform uint uiInit;\nuniform uint uiParticleCount;\nuniform vec3  v3BoundingBox;\nuniform float fDeltaTime;\nuniform float fGravity;\nuniform uint uiForce;\nuniform vec3  v3ForcePostion;\nuniform float fForce;\n\nvoid init(uint threadIndex) {\n  // calc the cubic root of particle count\n\n  float n = pow(float(uiParticleCount), (1.0 / 3.0));\n\n  uint  uiN          = uint(n);\n  float fthreadIndex = float(threadIndex);\n\n  float dx = v3BoundingBox.x / (n + 1.0);\n  float dy = v3BoundingBox.y / (n + 1.0);\n  float dz = v3BoundingBox.z / (n + 1.0);\n\n  uint modX = threadIndex % uiN;\n  uint modY = (threadIndex / uiN) % uiN;\n  uint modZ = (threadIndex / (uiN * uiN)) % uiN;\n\n  float px = float(modX) * dx + dx - (v3BoundingBox.x / 2.0);\n  float py = float(modY) * dy + dy - (v3BoundingBox.y / 2.0);\n  float pz = float(modZ) * dz + dz - (v3BoundingBox.z / 2.0);\n\n  // Semi-random velocities\n  float vx = cos(1234.0 * fthreadIndex);\n  float vy = sin(1234.0 * fthreadIndex);\n  float vz = cos(1234.0 * fthreadIndex);\n\n  // Save position and velocity\n  pos.positions[threadIndex].x = px;\n  pos.positions[threadIndex].y = py;\n  pos.positions[threadIndex].z = pz;\n\n  vel.velocities[threadIndex].x = vx;\n  vel.velocities[threadIndex].y = vy;\n  vel.velocities[threadIndex].z = vz;\n}\n\nvoid main() {\n  uint threadIndex = gl_GlobalInvocationID.x;\n\n  if (uiInit == 1u) {\n    init(threadIndex);\n    return;\n  }\n\n  vec3 position = pos.positions[threadIndex].xyz;\n  vec3 velocity = vel.velocities[threadIndex].xyz;\n\n  // Update Particle positions\n  position += velocity * fDeltaTime;\n\n  // Add in fGravity\n  velocity.y -= fGravity * fDeltaTime;\n\n  vec3 v3BB_half = v3BoundingBox / 2.0;\n\n  // Edge Collision Detection\n  if (position.x < -v3BB_half.x) {  // LEFT\n    position.x = -2.0 * v3BB_half.x - position.x;\n    velocity.x *= -0.9;\n  } else if (position.x > v3BB_half.x) {  // RIGHT\n    position.x = 2.0 * v3BB_half.x - position.x;\n    velocity.x *= -0.9;\n  }\n\n  if (position.y < -v3BB_half.y) {  // BOTTOM\n    position.y = -2.0 * v3BB_half.y - position.y;\n    velocity.y *= -0.45;  // if its on the bottom we extra dampen\n    velocity.x *= 0.9;\n  } else if (position.y > v3BB_half.y) {  // TOP\n    position.y = 2.0 * v3BB_half.y - position.y;\n    velocity.y *= -0.9;\n  }\n\n  if (position.z < -v3BB_half.z) {  // FRONT\n    position.z = -2.0 * v3BB_half.z - position.z;\n    velocity.z *= -0.9;\n  } else if (position.z > v3BB_half.z) {  // BACK\n    position.z = 2.0 * v3BB_half.z - position.z;\n    velocity.z *= -0.9;\n  }\n\n  // include force\n  if (uiForce != 0u) {\n    vec3  d    = v3ForcePostion - position;\n    float dist = sqrt(d.x * d.x + d.y * d.y + d.z * d.z);\n    if (dist < 1.0) {\n      dist = 1.0;  // This line prevents anything that is really close from\n                   // getting a huge force\n    }\n\n    velocity += d / dist * fForce / dist;\n  }\n\n  // update the arrays with our newly computed values\n  pos.positions[threadIndex].xyz  = position;\n  vel.velocities[threadIndex].xyz = velocity;\n}\n"},{}],4:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});const s=t("@fortawesome/fontawesome-svg-core"),n=t("@fortawesome/free-solid-svg-icons"),o=t("jquery"),r=t("./particleEngine");document.addEventListener("DOMContentLoaded",()=>{s.library.add(n.faBars,n.faTimesCircle),s.dom.watch();const t=new r.ParticleEngine("renderCanvas");if(!t.supportsWebGL2WithCompute()){const t="https://www.khronos.org/registry/webgl/specs/latest/2.0-compute/",e="https://groups.google.com/a/chromium.org/d/topic/blink-dev/bPD47wqY-r8/discussion",i="https://github.com/9ballsyndrome/WebGL_Compute_shader";o(document.body).html(`\n      <div id="noWebGL2WithCompute">\n        Your browser does not support WebGL 2.0 Compute Shader<br>\n        You need a browser like Chrome Canary or Edge Canary<br>\n        <br>\n        <br>\n        To setup this browser you need some flags:\n        <ul>\n          <li>\n            <p><code>--enable-webgl2-compute-context</code><br>\n            Enable WebGL Compute shader, WebGL2ComputeRenderingContext<br>\n            Or you can enable this flag via about://flags/ if using the corresponding version, choose "WebGL 2.0 Compute"</p>\n          </li>\n          <li>\n            <p><code>--use-angle=gl</code><br>\n            Run ANGLE with OpenGL backend because Shader Storage Buffer Object is now on implementing and there are some use cases which do not work well on D3D backend yet<br>\n            Some demos in this page need this flag<br>\n            Or you can enable this flag via about://flags/, choose "Choose ANGLE graphics backend"</p>\n          </li>\n          <li>\n            <p><code>--use-cmd-decoder=passthrough</code><br>\n            In some environments, it could run well only after adding this flag. So try this if could not work with above two flags</p>\n          </li>\n        </ul>\n\n        <br>\n        Additional information:<br>\n        <ul>\n          <li><a href="${t}">WebGL 2.0 Compute Specification</a></li>\n          <li><a href="${e}">Google Groups discussion</a></li>\n          <li><a href="${i}">WebGL 2.0 Compute shader Demos</a></li>\n        </ul>\n      </div>\n    `)}t.createScene()&&t.startRender()})},{"./particleEngine":7,"@fortawesome/fontawesome-svg-core":"@fortawesome/fontawesome-svg-core","@fortawesome/free-solid-svg-icons":"@fortawesome/free-solid-svg-icons",jquery:"jquery"}],5:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});const s=t("three");t("THREE.LineMaterial"),t("THREE.LineSegmentsGeometry"),t("THREE.WireframeGeometry2"),t("THREE.Wireframe");i.BoundingBox=class{constructor(t,e,i,n){const o=t.x/2,r=t.y/2,a=t.z/2,h=new s.Vector3(o,-r,a),l=new s.Vector3(o,r,a),c=new s.Vector3(-o,r,a),_=new s.Vector3(-o,-r,a),g=new s.Vector3(-o,-r,-a),d=new s.Vector3(-o,r,-a),u=new s.Vector3(o,r,-a),f=new s.Vector3(o,-r,-a);this._lineMaterial=new s.LineMaterial({color:16777215,linewidth:3});const p=new s.LineGeometry,m=[h.x,h.y,h.z,l.x,l.y,l.z,l.x,l.y,l.z,c.x,c.y,c.z,c.x,c.y,c.z,_.x,_.y,_.z,_.x,_.y,_.z,h.x,h.y,h.z,_.x,_.y,_.z,c.x,c.y,c.z,c.x,c.y,c.z,d.x,d.y,d.z,d.x,d.y,d.z,g.x,g.y,g.z,g.x,g.y,g.z,_.x,_.y,_.z,h.x,h.y,h.z,f.x,f.y,f.z,f.x,f.y,f.z,u.x,u.y,u.z,u.x,u.y,u.z,l.x,l.y,l.z,l.x,l.y,l.z,h.x,h.y,h.z,f.x,f.y,f.z,g.x,g.y,g.z,g.x,g.y,g.z,d.x,d.y,d.z,d.x,d.y,d.z,u.x,u.y,u.z,u.x,u.y,u.z,f.x,f.y,f.z];p.setPositions(m);const x=new s.Line2(p,this._lineMaterial);x.computeLineDistances(),e.add(x),this.resize(i,n)}resize(t,e){this._lineMaterial.resolution.set(t,e)}}},{"THREE.LineMaterial":"THREE.LineMaterial","THREE.LineSegmentsGeometry":"THREE.LineSegmentsGeometry","THREE.Wireframe":"THREE.Wireframe","THREE.WireframeGeometry2":"THREE.WireframeGeometry2",three:"three"}],6:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});const s=t("three");t("THREE.LineMaterial"),t("THREE.LineSegmentsGeometry"),t("THREE.LineGeometry"),t("THREE.LineSegments2"),t("THREE.Line2");i.CrossHair=class{constructor(t,e,i,n,o,r){this._leftPressed=!1,this._rightPressed=!1,this._forwardPressed=!1,this._backPressed=!1,this._upPressed=!1,this._downPressed=!1,this._movementSpeed=.1,this._settingsObject=n,this._halfBounding=e.clone().multiplyScalar(.5),this._negativeHalfBounding=this._halfBounding.clone().multiplyScalar(-1),this._crossHair=new s.Object3D,i.add(this._crossHair),this._xAxisMat=new s.LineMaterial({color:16711680,linewidth:2}),this._yAxisMat=new s.LineMaterial({color:65280,linewidth:2}),this._zAxisMat=new s.LineMaterial({color:255,linewidth:2}),this.resize(o,r);const a=new s.LineGeometry;a.setPositions([-t.x/2,0,0,t.x/2,0,0]);const h=new s.LineGeometry;h.setPositions([0,-t.y/2,0,0,t.y/2,0]);const l=new s.LineGeometry;l.setPositions([0,0,-t.z/2,0,0,t.z/2]),this._crossHair.add(new s.Line2(a,this._xAxisMat)),this._crossHair.add(new s.Line2(h,this._yAxisMat)),this._crossHair.add(new s.Line2(l,this._zAxisMat)),document.addEventListener("keydown",t=>{" "===t.key&&(this._settingsObject.forceActive=!0,this._xAxisMat.linewidth=this._yAxisMat.linewidth=this._zAxisMat.linewidth=5),"a"===t.key&&(this._leftPressed=!0),"s"===t.key&&(this._backPressed=!0),"d"===t.key&&(this._rightPressed=!0),"w"===t.key&&(this._forwardPressed=!0),"PageUp"===t.key&&(this._upPressed=!0),"PageDown"===t.key&&(this._downPressed=!0)}),document.addEventListener("keyup",t=>{" "===t.key&&(this._settingsObject.forceActive=!1,this._xAxisMat.linewidth=this._yAxisMat.linewidth=this._zAxisMat.linewidth=2),"a"===t.key&&(this._leftPressed=!1),"s"===t.key&&(this._backPressed=!1),"d"===t.key&&(this._rightPressed=!1),"w"===t.key&&(this._forwardPressed=!1),"PageUp"===t.key&&(this._upPressed=!1),"PageDown"===t.key&&(this._downPressed=!1)})}update(){const t=this._settingsObject.forcePosition.clone();this._leftPressed&&(t.x-=this._movementSpeed),this._rightPressed&&(t.x+=this._movementSpeed),this._forwardPressed&&(t.z-=this._movementSpeed),this._backPressed&&(t.z+=this._movementSpeed),this._upPressed&&(t.y+=this._movementSpeed),this._downPressed&&(t.y-=this._movementSpeed),t.x>=this._negativeHalfBounding.x-.001&&t.x<=this._halfBounding.x+.001&&t.y>=this._negativeHalfBounding.y-.001&&t.y<=this._halfBounding.y+.001&&t.z>=this._negativeHalfBounding.z-.001&&t.z<=this._halfBounding.z+.001&&(this._crossHair.position.copy(t),this._settingsObject.forcePosition.copy(t))}resize(t,e){this._xAxisMat.resolution.set(t,e),this._yAxisMat.resolution.set(t,e),this._zAxisMat.resolution.set(t,e)}}},{"THREE.Line2":"THREE.Line2","THREE.LineGeometry":"THREE.LineGeometry","THREE.LineMaterial":"THREE.LineMaterial","THREE.LineSegments2":"THREE.LineSegments2","THREE.LineSegmentsGeometry":"THREE.LineSegmentsGeometry",three:"three"}],7:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});const s=t("three");window.THREE=s;const n=t("./boundingBox"),o=t("./crossHair"),r=t("./particleRenderer"),a=t("./settingsGui");t("THREE.TrackballControls");i.ParticleEngine=class{constructor(t){this._boundingBoxDimension=new s.Vector3(8,5,5),this._elapsed=0,this._canvas=document.getElementById(t),this._gl=this._canvas.getContext("webgl2-compute",{antialias:!0})}supportsWebGL2WithCompute(){return!!this._gl}createScene(){this._settingsGui=new a.SettingsGui;const t=this._canvas.clientWidth,e=this._canvas.clientHeight;return this._scene=new s.Scene,this._camera=new s.PerspectiveCamera(45,t/e,.1,100),this._renderer=new s.WebGLRenderer({canvas:this._canvas,context:this._gl}),this._renderer.setPixelRatio(window.devicePixelRatio),this._renderer.setClearColor(0,0),this._renderer.setSize(t,e,!1),this._boundingBox=new n.BoundingBox(this._boundingBoxDimension,this._scene,t,e),this._crossHair=new o.CrossHair(new s.Vector3(1,1,1),this._boundingBoxDimension,this._scene,this._settingsGui.getSettings(),t,e),this._camera.position.z=10,this._controls=new s.TrackballControls(this._camera,this._canvas),this._controls.rotateSpeed=2.5,this._controls.zoomSpeed=2.5,this._controls.panSpeed=.8,this._controls.noZoom=!1,this._controls.noPan=!0,this._controls.staticMoving=!0,this._controls.dynamicDampingFactor=.3,this._controls.keys=[65,83,68],this._particleRender=new r.ParticleRenderer(this._gl,this._camera,this._settingsGui.getSettings(),this._boundingBoxDimension),this._particleRender.init()}startRender(){window.addEventListener("resize",()=>{const t=this._canvas.clientWidth,e=this._canvas.clientHeight;this.resize(t,e)}),this.animate(0)}resize(t,e){this._camera.aspect=t/e,this._camera.updateProjectionMatrix(),this._renderer.setSize(t,e,!1),this._boundingBox.resize(t,e),this._crossHair.resize(t,e)}animate(t){window.requestAnimationFrame(t=>{this.animate(t)});const e=window.performance.now(),i=e-this._elapsed;this._elapsed=e,this._controls.update(),this._crossHair.update(),this._settingsGui.updateFrames(i),this._renderer.render(this._scene,this._camera),this._particleRender.update(t/1e3),this._renderer.state.reset()}}},{"./boundingBox":5,"./crossHair":6,"./particleRenderer":8,"./settingsGui":9,"THREE.TrackballControls":"THREE.TrackballControls",three:"three"}],8:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});i.ParticleRenderer=class{constructor(t,e,i,s){this._particleCount=0,this._lastTime=0,this._gl=t,this._threeCamera=e,this._settingsObject=i,this._boundingBox=s}init(){this._logComputeThings();const e=t("../shaders/particle_compute.comp"),i=this._gl.createShader(this._gl.COMPUTE_SHADER);if(this._gl.shaderSource(i,e),this._gl.compileShader(i),!this._gl.getShaderParameter(i,this._gl.COMPILE_STATUS))return console.error(this._gl.getShaderInfoLog(i)),!1;if(this._computeProgram=this._gl.createProgram(),this._gl.attachShader(this._computeProgram,i),this._gl.linkProgram(this._computeProgram),!this._gl.getProgramParameter(this._computeProgram,this._gl.LINK_STATUS))return console.error(this._gl.getProgramInfoLog(this._computeProgram)),!1;this._initLoc=this._gl.getUniformLocation(this._computeProgram,"uiInit"),this._particleCountLoc=this._gl.getUniformLocation(this._computeProgram,"uiParticleCount"),this._boundingBoxLoc=this._gl.getUniformLocation(this._computeProgram,"v3BoundingBox"),this._deltaTimeLoc=this._gl.getUniformLocation(this._computeProgram,"fDeltaTime"),this._gravityLoc=this._gl.getUniformLocation(this._computeProgram,"fGravity"),this._forceOnLoc=this._gl.getUniformLocation(this._computeProgram,"uiForce"),this._forcePositionsloc=this._gl.getUniformLocation(this._computeProgram,"v3ForcePostion"),this._forceLoc=this._gl.getUniformLocation(this._computeProgram,"fForce"),this._vao=this._gl.createVertexArray(),this._posBuffer=this._gl.createBuffer(),this._velBuffer=this._gl.createBuffer();const s=t("../shaders/particle.vert"),n=this._gl.createShader(this._gl.VERTEX_SHADER);if(this._gl.shaderSource(n,s),this._gl.compileShader(n),!this._gl.getShaderParameter(n,this._gl.COMPILE_STATUS))return console.log(this._gl.getShaderInfoLog(n)),!1;const o=t("../shaders/particle.frag"),r=this._gl.createShader(this._gl.FRAGMENT_SHADER);return this._gl.shaderSource(r,o),this._gl.compileShader(r),this._gl.getShaderParameter(r,this._gl.COMPILE_STATUS)?(this._shadingProgram=this._gl.createProgram(),this._gl.attachShader(this._shadingProgram,n),this._gl.attachShader(this._shadingProgram,r),this._gl.linkProgram(this._shadingProgram),this._gl.getProgramParameter(this._shadingProgram,this._gl.LINK_STATUS)?(this._gl.bindVertexArray(this._vao),this._gl.bindBuffer(this._gl.ARRAY_BUFFER,this._posBuffer),this._gl.enableVertexAttribArray(0),this._gl.vertexAttribPointer(0,4,this._gl.FLOAT,!1,0,0),this._projectionMatrixLoc=this._gl.getUniformLocation(this._shadingProgram,"u_projectionMatrix"),this._viewMatrixLoc=this._gl.getUniformLocation(this._shadingProgram,"u_viewMatrix"),this._colorLoc=this._gl.getUniformLocation(this._shadingProgram,"u_color"),this._pointSizeLoc=this._gl.getUniformLocation(this._shadingProgram,"u_pointSize"),this._gl.bindVertexArray(null),this._gl.enable(this._gl.BLEND),this._gl.blendFunc(this._gl.SRC_ALPHA,this._gl.ONE),!0):(console.error(this._gl.getProgramInfoLog(this._shadingProgram)),!1)):(console.log(this._gl.getShaderInfoLog(r)),!1)}update(t){const e=t-this._lastTime;this._lastTime=t;const i=this._resizeBuffers()?1:0;this._gl.useProgram(this._computeProgram),this._gl.uniform1ui(this._initLoc,i),this._gl.uniform1ui(this._particleCountLoc,this._particleCount),this._gl.uniform3fv(this._boundingBoxLoc,this._boundingBox.toArray()),this._gl.uniform1f(this._deltaTimeLoc,e),this._gl.uniform1f(this._gravityLoc,this._settingsObject.gravity),this._gl.uniform1ui(this._forceOnLoc,this._settingsObject.forceActive?1:0),this._gl.uniform3fv(this._forcePositionsloc,this._settingsObject.forcePosition.toArray()),this._gl.uniform1f(this._forceLoc,this._settingsObject.force),this._gl.dispatchCompute(this._dispatchGroups,1,1),this._gl.memoryBarrier(this._gl.VERTEX_ATTRIB_ARRAY_BARRIER_BIT),this._gl.useProgram(this._shadingProgram),this._gl.bindVertexArray(this._vao),this._gl.uniformMatrix4fv(this._projectionMatrixLoc,!1,this._threeCamera.projectionMatrix.toArray()),this._gl.uniformMatrix4fv(this._viewMatrixLoc,!1,this._threeCamera.matrixWorldInverse.toArray()),this._gl.uniform4fv(this._colorLoc,this._settingsObject.color.toArray()),this._gl.uniform1f(this._pointSizeLoc,this._settingsObject.particleSize),this._gl.drawArrays(this._gl.POINTS,0,this._particleCount),this._gl.bindVertexArray(null)}_logComputeThings(){const t=[],e=[];for(let i=0;i<3;i++)t.push(this._gl.getIndexedParameter(this._gl.MAX_COMPUTE_WORK_GROUP_COUNT,i)),e.push(this._gl.getIndexedParameter(this._gl.MAX_COMPUTE_WORK_GROUP_SIZE,i));console.log(`max global (total) work group sizes ${t.join()}`),console.log(`max local (in one shader) work group sizes ${e.join()}`),console.log(`max local work group invocations: ${this._gl.getParameter(this._gl.MAX_COMPUTE_WORK_GROUP_INVOCATIONS)}`)}_resizeBuffers(){const t=Math.pow(this._settingsObject.particlesPerDimension,3);return t!==this._particleCount&&(this._particleCount=t,this._dispatchGroups=Math.trunc(this._particleCount/1024)+1,this._gl.bindBuffer(this._gl.SHADER_STORAGE_BUFFER,this._posBuffer),this._gl.bufferData(this._gl.SHADER_STORAGE_BUFFER,new Float32Array(4*this._particleCount),this._gl.DYNAMIC_COPY),this._gl.bindBufferBase(this._gl.SHADER_STORAGE_BUFFER,0,this._posBuffer),this._gl.bindBuffer(this._gl.SHADER_STORAGE_BUFFER,this._velBuffer),this._gl.bufferData(this._gl.SHADER_STORAGE_BUFFER,new Float32Array(4*this._particleCount),this._gl.DYNAMIC_COPY),this._gl.bindBufferBase(this._gl.SHADER_STORAGE_BUFFER,1,this._velBuffer),!0)}_randomInit(){const t=new Float32Array(4*this._particleCount),e=Math.pow(this._particleCount,1/3),i=this._boundingBox.x/(e+1),s=this._boundingBox.y/(e+1),n=this._boundingBox.z/(e+1);for(let o=0;o<this._particleCount;o++){const r=o%e*i+i-this._boundingBox.x/2,a=Math.trunc(o/e%e)*s+s-this._boundingBox.y/2,h=Math.trunc(o/Math.pow(e,2)%e)*n+n-this._boundingBox.z/2;let l=4*o;t[l]=r,t[++l]=a,t[++l]=h,t[++l]=0}return t}}},{"../shaders/particle.frag":1,"../shaders/particle.vert":2,"../shaders/particle_compute.comp":3}],9:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});const s=t("jquery"),n=t("three"),o=t("vanilla-picker");i.SettingsGui=class{constructor(){this._settingsButton=s("#settingsButton"),this._settingsPanel=s("#settings"),this._particleCountSlider=this._settingsPanel.find("#particleCount"),this._particleCountText=this._settingsPanel.find("#particleCountText"),this._gravitySlider=this._settingsPanel.find("#gravity"),this._gravityText=this._settingsPanel.find("#gravityText"),this._particleSizeSlider=this._settingsPanel.find("#particleSize"),this._particleSizeText=this._settingsPanel.find("#particleSizeText"),this._forceSlider=this._settingsPanel.find("#force"),this._forceText=this._settingsPanel.find("#forceText"),this._perf=this._settingsPanel.find("#perf"),this._totalParticle=this._settingsPanel.find("#totalParticle"),this._colorPicker=new o({parent:this._settingsPanel.find("#colorPicker")[0],popup:!1,alpha:!0,editor:!1,color:"#ff0000",onChange:t=>{const e=t.rgba;this._settings&&this._settings.color.set(e[0]/255,e[1]/255,e[2]/255,e[3])}}),this._settingsButton.on("click",()=>{const t=this._settingsButton.find("[data-fa-i2svg]");this._settingsPanel.toggleClass("visible"),this._settingsButton.toggleClass("moved"),t.toggleClass("fa-bars"),t.toggleClass("fa-times-circle")}),this._settingsPanel.find("#btnSetDefault").on("click",()=>{this.setDefault()}),this._particleCountSlider.on("input change",()=>{this._settings.particlesPerDimension=this._particleCountSlider.val(),this.updateGUI()}),this._gravitySlider.on("input change",()=>{this._settings.gravity=this._gravitySlider.val(),this.updateGUI()}),this._particleSizeSlider.on("input change",()=>{this._settings.particleSize=this._particleSizeSlider.val(),this.updateGUI()}),this._forceSlider.on("input change",()=>{this._settings.force=this._forceSlider.val(),this.updateGUI()}),this.setDefault()}getSettings(){return this._settings}updateFrames(t){this._perf.html(`${t.toFixed(2)} (${(1e3/t).toFixed(1)} FPS)`)}setDefault(){this._settings?(this._settings.color.set(1,0,0,1),this._settings.force=.1,this._settings.forceActive=!1,this._settings.forcePosition.set(0,0,0),this._settings.gravity=.98,this._settings.particleSize=1,this._settings.particlesPerDimension=50):this._settings={color:new n.Vector4(1,0,0,1),force:.1,forceActive:!1,forcePosition:new n.Vector3,gravity:.98,particleSize:1,particlesPerDimension:50},this.updateGUI()}updateGUI(){this._particleCountSlider.val(this._settings.particlesPerDimension),this._particleCountText.html(this._settings.particlesPerDimension.toString()),this._totalParticle.html(Math.pow(this._settings.particlesPerDimension,3).toLocaleString()),this._gravitySlider.val(this._settings.gravity),this._gravityText.html(this._settings.gravity.toString()),this._particleSizeSlider.val(this._settings.particleSize),this._particleSizeText.html(this._settings.particleSize.toString()),this._forceSlider.val(this._settings.force),this._forceText.html(this._settings.force.toString());const t=this._settings.color.toArray();t[0]*=255,t[1]*=255,t[2]*=255,this._colorPicker.setColor(t,!0)}}},{jquery:"jquery",three:"three","vanilla-picker":"vanilla-picker"}]},{},[4]);
//# sourceMappingURL=app.js.map
