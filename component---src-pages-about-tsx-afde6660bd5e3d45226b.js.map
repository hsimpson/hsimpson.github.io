{"version":3,"sources":["webpack:///./src/pages/about.tsx","webpack:///./src/components/seo.tsx"],"names":["useStyles","makeStyles","_theme","createStyles","root","padding","flexGrow","fontSize","centerimg","display","justifyContent","largeimg","width","height","link","color","textDecoration","AboutPage","author","useSiteMetadata","classes","title","className","src","to","SEO","description","lang","meta","siteMetadata","metaDescription","defaultTitle","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps"],"mappings":"6FAAA,oHAQMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,OACTC,SAAU,EACVC,SAAU,QAGZC,UAAW,CACTC,QAAS,OACTC,eAAgB,UAElBC,SAAU,CACRC,MAAO,QACPC,OAAQ,SAEVC,KAAM,CACJC,MAAO,UACPC,eAAgB,mBAChB,UAAW,CACTD,MAAO,iBAwCAE,UAlCG,WAA0B,IAClCC,EAAWC,cAAXD,OACFE,EAAUpB,IAEhB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKqB,MAAM,UACX,yBAAKC,UAAWF,EAAQhB,MACtB,wCACA,yBAAKkB,UAAWF,EAAQZ,WACtB,kBAAC,IAAD,CAAQc,UAAWF,EAAQT,SAAUY,IAAI,oBAE3C,yCAAeL,EAAf,4DACA,iLAIA,yHAC8F,IAC5F,kBAAC,IAAD,CAAMI,UAAWF,EAAQN,KAAMU,GAAE,aAAjC,cAZJ,oCAiBE,4BACE,8GACA,mGACA,mG,kCC7DV,iDAYA,SAASC,EAAT,GAAqE,IAAtDC,EAAsD,EAAtDA,YAAaC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,KAAMP,EAA6B,EAA7BA,MAChCQ,EAAeV,cAEfW,EAAkBJ,GAAeG,EAAaH,YAC9CK,EAAeF,EAAaR,MAElC,OACE,kBAAC,IAAD,CACEW,eAAgB,CACdL,QAEFN,MAAOA,EACPY,cAAeF,EAAe,QAAQA,EAAiB,KACvDH,KAAM,CACJ,CACEM,KAAM,cACNC,QAASL,GAEX,CACEM,SAAU,WACVD,QAASd,GAEX,CACEe,SAAU,iBACVD,QAASL,GAEX,CACEM,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,SAASN,aAAA,EAAAA,EAAcX,SAAU,IAEnC,CACEgB,KAAM,gBACNC,QAASd,GAEX,CACEa,KAAM,sBACNC,QAASL,IAEXO,OAAOT,KAKfH,EAAIa,aAAe,CACjBX,KAAM,KACNC,KAAM,GACNF,YAAa,IAUAD","file":"component---src-pages-about-tsx-afde6660bd5e3d45226b.js","sourcesContent":["import { Avatar } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { useSiteMetadata } from '../hooks/useSiteMetaData';\n\nconst useStyles = makeStyles((_theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '16px',\n      flexGrow: 1,\n      fontSize: '1rem',\n      // '& p': {},\n    },\n    centerimg: {\n      display: 'flex',\n      justifyContent: 'center',\n    },\n    largeimg: {\n      width: '200px',\n      height: '200px',\n    },\n    link: {\n      color: '#8ab4f8',\n      textDecoration: 'underline dotted',\n      '&:hover': {\n        color: '#d2603a',\n      },\n    },\n  })\n);\n\nconst AboutPage = (): React.ReactElement => {\n  const { author } = useSiteMetadata();\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      <SEO title=\"About\" />\n      <div className={classes.root}>\n        <h1>About me</h1>\n        <div className={classes.centerimg}>\n          <Avatar className={classes.largeimg} src=\"/images/me.jpg\"></Avatar>\n        </div>\n        <p>My name is {author}, I am from Gersthofen a small city in Bavaria, Germany.</p>\n        <p>\n          At my daily job I lead a development team, we are developing frontend web applications, web components and\n          mobile applications for iOS and Android\n        </p>\n        <p>\n          In my freetime I do graphics programming for the web, with WebGL and WebGPU. See some of my{' '}\n          <Link className={classes.link} to={`/projects`}>\n            projects.\n          </Link>\n        </p>\n        Technologies used in my projects:\n        <ul>\n          <li>Languages: TypeScript, JavaScript, C++, GLSL, Python, Java, Swift, SCSS, HTML5</li>\n          <li>Web frameworks and libraries: React, Express, Node, WebGL, Three.js</li>\n          <li>Other libs and tech: Docker, Vulkan, OpenGL, Augmented Reality</li>\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default AboutPage;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useSiteMetadata } from '../hooks/useSiteMetaData';\n\nfunction SEO({ description, lang, meta, title }): React.ReactElement {\n  const siteMetadata = useSiteMetadata();\n\n  const metaDescription = description || siteMetadata.description;\n  const defaultTitle = siteMetadata.title;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: siteMetadata?.author || '',\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}